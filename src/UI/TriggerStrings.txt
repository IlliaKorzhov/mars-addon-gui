[TriggerEventStrings]
MapInitializationEvent=Map Initialization
MapInitializationEvent="Map initialization"

TriggerRegisterDeathEvent=Destructible Dies
TriggerRegisterDeathEvent=~Destructible," dies"
TriggerRegisterDeathEventHint=Use 'Event Response - Dying Destructible' to refer to the destructible that is dying.

TriggerRegisterDestDeathInRegionEvent=Destructible Within Rect Dies
TriggerRegisterDestDeathInRegionEvent="A destructible within ",~Rect," dies"
TriggerRegisterDestDeathInRegionEventHint=Only the first 64 destructibles within the rect when this event is registered are monitored for death.  It is best to use this event for rects containing only a few destructibles.

TriggerRegisterDialogEventBJ=Dialog Button Click
TriggerRegisterDialogEventBJ="A dialog button is clicked for ",~Dialog

TriggerRegisterGameStateEventTimeOfDay=Time Of Day
TriggerRegisterGameStateEventTimeOfDay="The in-game time of day becomes ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

TriggerRegisterVariableEvent=Value Of Real Variable
TriggerRegisterVariableEvent=~Variable," becomes ",~Operation," ",~Value
TriggerRegisterVariableEventHint=This only works for non-array variables of type 'Real'.

TriggerRegisterGameLoadedEventBJ=Game Load
TriggerRegisterGameLoadedEventBJ="A saved game is loaded"
TriggerRegisterGameLoadedEventBJHint=This fires immediately after the saved game is finished loading.

TriggerRegisterGameSavedEventBJ=Game Save
TriggerRegisterGameSavedEventBJ="The game is about to be saved"
TriggerRegisterGameSavedEventBJHint=This fires immediately before the game is saved.

TriggerRegisterShowSkillEventBJ=Hero Abilities Button Clicked
TriggerRegisterShowSkillEventBJ="The 'Hero Abilities' button is clicked"
TriggerRegisterShowSkillEventBJHint=This event should only be used in single-player maps.

TriggerRegisterBuildSubmenuEventBJ=Build Structure Button Clicked
TriggerRegisterBuildSubmenuEventBJ="The 'Build Structure' button is clicked"
TriggerRegisterBuildSubmenuEventBJHint=This event should only be used in single-player maps.

TriggerRegisterGameEvent=Tournament Event
TriggerRegisterGameEvent="The tournament game must end ",~Event Type
TriggerRegisterGameEventHint=This event only occurs during automated tournament games on Battle.net.

TriggerRegisterPlayerChatEvent=Chat Message
TriggerRegisterPlayerChatEvent=~Player," types a chat message containing ",~Text," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Use 'Event Response - Entered/Matched Chat Message' to refer to the chat message that was entered/matched.  Use 'Event Response - Triggering Player' to refer to the player who typed the message.

TriggerRegisterPlayerEventEndCinematic=Cinematic Skipped
TriggerRegisterPlayerEventEndCinematic=~Player," skips a cinematic sequence"
TriggerRegisterPlayerEventEndCinematicHint=This event occurs whenever the player presses the 'Escape' key (regardless of whether or not they are viewing a cinematic).

TriggerRegisterPlayerSelectionEventBJ=Selection Event
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," a unit"
TriggerRegisterPlayerSelectionEventBJHint=Use 'Event Response - Triggering Unit' to refer to the unit being selected or deselected.

TriggerRegisterPlayerKeyEventBJ=Keyboard Event
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," the ",~Key," key"

TriggerRegisterPlayerStateEvent=Properties
TriggerRegisterPlayerStateEvent=~Player,"'s ",~Property," becomes ",~Operation," ",~Value

TriggerRegisterPlayerEventAllianceChanged=Alliance Change (Any)
TriggerRegisterPlayerEventAllianceChanged=~Player," changes alliance settings"

TriggerRegisterPlayerAllianceChange=Alliance Change (Specific)
TriggerRegisterPlayerAllianceChange=~Player," changes ",~Alliance Type," settings"

TriggerRegisterPlayerEventVictory=Victory
TriggerRegisterPlayerEventVictory=~Player," leaves the game with a victory"

TriggerRegisterPlayerEventDefeat=Defeat
TriggerRegisterPlayerEventDefeat=~Player," leaves the game with a defeat"

TriggerRegisterPlayerEventLeave=Leaves Game
TriggerRegisterPlayerEventLeave=~Player," leaves the game"
TriggerRegisterPlayerEventLeaveHint=This event occurs regardless of how the player left the game.

TriggerRegisterTimerEventSingle=Time Elapsed
TriggerRegisterTimerEventSingle="Elapsed game time is ",~Time," seconds"

TriggerRegisterTimerEventPeriodic=Periodic Event
TriggerRegisterTimerEventPeriodic="Every ",~Time," seconds of game time"

TriggerRegisterTimerExpireEventBJ=Timer Expires
TriggerRegisterTimerExpireEventBJ=~Timer," expires"
TriggerRegisterTimerExpireEventBJHint=A timer expires when it reaches 0.  Repeating timers expire every time they reach 0.  Use 'Event Response - Expiring Timer' to refer to the timer that is expiring.

TriggerRegisterUnitEvent=Specific Unit Event
TriggerRegisterUnitEvent=~Unit," ",~Event

TriggerRegisterPlayerUnitEventSimple=Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="A unit owned by ",~Player," ",~Event

TriggerRegisterAnyUnitEventBJ=Generic Unit Event
TriggerRegisterAnyUnitEventBJ="A unit ",~Event

TriggerRegisterEnterRectSimple=Unit Enters Rect
TriggerRegisterEnterRectSimple="A unit enters ",~Rect
TriggerRegisterEnterRectSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the rect.

TriggerRegisterLeaveRectSimple=Unit Leaves Rect
TriggerRegisterLeaveRectSimple="A unit leaves ",~Rect
TriggerRegisterLeaveRectSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the rect.

TriggerRegisterUnitInRangeSimple=Unit Within Range
TriggerRegisterUnitInRangeSimple="A unit comes within ",~Range," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Use 'Event Response - Triggering Unit' to refer to the unit that is entering within range.

TriggerRegisterUnitLifeEvent=Life
TriggerRegisterUnitLifeEvent=~Unit,"'s life becomes ",~Operation," ",~Value

TriggerRegisterUnitManaEvent=Mana
TriggerRegisterUnitManaEvent=~Unit,"'s mana becomes ",~Operation," ",~Value

TriggerRegisterTrackableHitEvent=Trackable is Clicked
TriggerRegisterTrackableHitEvent=~Trackable," is clicked"
TriggerRegisterTrackableHitEventHint=[UMSWE]

TriggerRegisterTrackableTrackEvent=Cursor is Moved over Trackable
TriggerRegisterTrackableTrackEvent="The cursor is moved over ",~Trackable
TriggerRegisterTrackableTrackEventHint=[UMSWE]

TriggerRegisterPlayerUnitEvent=Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Adds a condtion to the event [UMSWE]

TriggerRegisterEnterRegionSimple=Unit Enters Region
TriggerRegisterEnterRegionSimple="A unit enters ",~Region
TriggerRegisterEnterRegionSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the region [UMSWE]

TriggerRegisterEnterRegion=A Unit Enters Region (Conditional)
TriggerRegisterEnterRegion="A unit enters ",~Region," and matches ",~Condition
TriggerRegisterEnterRegionHint=Better than 'Unit Enters Rect' because you can get the Triggering Region. Use Entering Unit to match [UMSWE]

TriggerRegisterLeaveRegionSimple=Unit Leaves Region
TriggerRegisterLeaveRegionSimple="A unit leaves ",~Region
TriggerRegisterLeaveRegionSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the region [UMSWE]

TriggerRegisterLeaveRegion=A Unit Leaves Region (Conditional)
TriggerRegisterLeaveRegion="A unit leaves ",~Region," and matches ",~Condition
TriggerRegisterLeaveRegionHint=Better than 'Unit Leaves Rect' because you can get the Triggering Region. Use Leaving Unit to match [UMSWE]

TriggerRegisterUnitStateEvent=Unit State Event
TriggerRegisterUnitStateEvent=~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=[UMSWE]

TriggerRegisterPlayerEvent=Advanced Player Event
TriggerRegisterPlayerEvent=~Player," ",~PlayerOptionEvent


[TriggerConditionStrings]
OperatorCompareBoolean=Boolean Comparison
OperatorCompareBoolean=~Value," ",~Operator," ",~Value

OperatorCompareAbilityId=Ability Comparison
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value

OperatorCompareBuffId=Buff Comparison
OperatorCompareBuffId=~Value," ",~Operator," ",~Value

OperatorCompareDestructible=Destructible Comparison
OperatorCompareDestructible=~Value," ",~Operator," ",~Value

OperatorCompareDestructableCode=Destructible-Type Comparison
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value

OperatorCompareButton=Dialog Button Comparison
OperatorCompareButton=~Value," ",~Operator," ",~Value

OperatorCompareGameDifficulty=Game Difficulty Comparison
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareGameSpeed=Game Speed Comparison
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value

OperatorCompareHeroSkill=Hero Skill Comparison
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value

OperatorCompareInteger=Integer Comparison
OperatorCompareInteger=~Value," ",~Operator," ",~Value

OperatorCompareItem=Item Comparison
OperatorCompareItem=~Value," ",~Operator," ",~Value

OperatorCompareItemType=Item-Class Comparison
OperatorCompareItemType=~Value," ",~Operator," ",~Value

OperatorCompareItemCode=Item-Type Comparison
OperatorCompareItemCode=~Value," ",~Operator," ",~Value

OperatorCompareMeleeDifficulty=Melee AI Comparison
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareOrderCode=Order Comparison
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value

OperatorComparePlayer=Player Comparison
OperatorComparePlayer=~Value," ",~Operator," ",~Value

OperatorComparePlayerColor=Player Color Comparison
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value

OperatorComparePlayerControl=Player Controller Comparison
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value

OperatorComparePlayerSlotStatus=Player Slot Status Comparison
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value

OperatorCompareRace=Race Comparison
OperatorCompareRace=~Value," ",~Operator," ",~Value

OperatorCompareReal=Real Comparison
OperatorCompareReal=~Value," ",~Operator," ",~Value

OperatorCompareString=String Comparison
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint=For two strings to be equal, they must be of equal length and content.

OperatorCompareTechCode=Tech-Type Comparison
OperatorCompareTechCode=~Value," ",~Operator," ",~Value

OperatorCompareTerrainType=Terrain Type Comparison
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value

OperatorCompareTrigger=Trigger Comparison
OperatorCompareTrigger=~Value," ",~Operator," ",~Value

OperatorCompareUnit=Unit Comparison
OperatorCompareUnit=~Value," ",~Operator," ",~Value

OperatorCompareUnitCode=Unit-Type Comparison
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value

GetBooleanAnd=And
GetBooleanAnd=~Condition 1," and ",~Condition 2

GetBooleanOr=Or
GetBooleanOr=~Condition 1," or ",~Condition 2

AndMultiple=And, Multiple Conditions
AndMultiple="And - All (Conditions) are true"
AndMultipleHint=Add conditions to this function in the main display.

OrMultiple=Or, Multiple Conditions
OrMultiple="Or - Any (Conditions) are true"
OrMultipleHint=Add conditions to this function in the main display.

OperatorCompareEventId=Trigger Event Id Comparison
OperatorCompareEventId=~Value," ",~Operator," ",~Value
OperatorCompareEventIdHint=[UMSWE]

OperatorCompareTrackable=Trackable Comparison
OperatorCompareTrackable=~Value," ",~Operator," ",~Value
OperatorCompareTrackableHint=[UMSWE]

OperatorCompareUbersplat=Ubersplat Comparison
OperatorCompareUbersplat=~Value," ",~Operator," ",~Value
OperatorCompareUbersplatHint=[UMSWE]

OperatorCompareImage=Image Comparison
OperatorCompareImage=~Value," ",~Operator," ",~Value
OperatorCompareImageHint=[UMSWE]

OperatorCompareLightning=Lightning Comparison
OperatorCompareLightning=~Value," ",~Operator," ",~Value
OperatorCompareLightningHint=[UMSWE]

OperatorCompareTriggerAction=Trigger Action Comparison
OperatorCompareTriggerAction=~Value," ",~Operator," ",~Value
OperatorCompareTriggerActionHint=[UMSWE]

OperatorCompareTriggerCondition=Trigger Condition Comparison
OperatorCompareTriggerCondition=~Value," ",~Operator," ",~Value
OperatorCompareTriggerConditionHint=[UMSWE]

OperatorComparePlayerState=Playerstate Comparison
OperatorComparePlayerState=~Value," ",~Operator," ",~Value
OperatorComparePlayerStateHint=[UMSWE]

OperatorCompareUnitState=Unitstate Comparison
OperatorCompareUnitState=~Value," ",~Operator," ",~Value

OperatorCompareRegion=Region Comparison
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint=[UMSWE]

OperatorCompareGameState=Gamestate Comparison
OperatorCompareGameState=~Value," ",~Operator," ",~Value
OperatorCompareGameStateHint=[UMSWE]

 =Custom Script
 ="(",~Script Code,")"
 Hint=[UMSWE]

OperatorCompareMultiboardItem=Multiboard Item Comparison
OperatorCompareMultiboardItem=~Value," ",~Operator," ",~Value
OperatorCompareMultiboardItemHint=Just here for COMPATIBILITY reasons. Multiboard items should not be used. [UMSWE]


[TriggerActionStrings]

SetMapName=SetMapName
SetMapName="SetMapName(","string ",,~name,")"
SetMapNameHint="[NATIVE]  nothing SetMapName (string name)"


SetMapDescription=SetMapDescription
SetMapDescription="SetMapDescription(","string ",,~description,")"
SetMapDescriptionHint="[NATIVE]  nothing SetMapDescription (string description)"


SetTeams=SetTeams
SetTeams="SetTeams(","integer ",,~teamcount,")"
SetTeamsHint="[NATIVE]  nothing SetTeams (integer teamcount)"


SetPlayers=SetPlayers
SetPlayers="SetPlayers(","integer ",,~playercount,")"
SetPlayersHint="[NATIVE]  nothing SetPlayers (integer playercount)"


DefineStartLocation=DefineStartLocation
DefineStartLocation="DefineStartLocation(","integer ",,~whichStartLoc,", ","real ",,~x,", ","real ",,~y,")"
DefineStartLocationHint="[NATIVE]  nothing DefineStartLocation (integer whichStartLoc, real x, real y)"


DefineStartLocationLoc=DefineStartLocationLoc
DefineStartLocationLoc="DefineStartLocationLoc(","integer ",,~whichStartLoc,", ","location ",,~whichLocation,")"
DefineStartLocationLocHint="[NATIVE]  nothing DefineStartLocationLoc (integer whichStartLoc, location whichLocation)"


SetStartLocPrioCount=SetStartLocPrioCount
SetStartLocPrioCount="SetStartLocPrioCount(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotCount,")"
SetStartLocPrioCountHint="[NATIVE]  nothing SetStartLocPrioCount (integer whichStartLoc, integer prioSlotCount)"


SetStartLocPrio=SetStartLocPrio
SetStartLocPrio="SetStartLocPrio(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotIndex,", ","integer ",,~otherStartLocIndex,", ","startlocprio ",,~priority,")"
SetStartLocPrioHint="[NATIVE]  nothing SetStartLocPrio (integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority)"


SetGameTypeSupported=SetGameTypeSupported
SetGameTypeSupported="SetGameTypeSupported(","gametype ",,~whichGameType,", ","boolean ",,~value,")"
SetGameTypeSupportedHint="[NATIVE]  nothing SetGameTypeSupported (gametype whichGameType, boolean value)"


SetGamePlacement=SetGamePlacement
SetGamePlacement="SetGamePlacement(","placement ",,~whichPlacementType,")"
SetGamePlacementHint="[NATIVE]  nothing SetGamePlacement (placement whichPlacementType)"


SetGameDifficulty=SetGameDifficulty
SetGameDifficulty="SetGameDifficulty(","gamedifficulty ",,~whichdifficulty,")"
SetGameDifficultyHint="[NATIVE]  nothing SetGameDifficulty (gamedifficulty whichdifficulty)"


SetResourceDensity=SetResourceDensity
SetResourceDensity="SetResourceDensity(","mapdensity ",,~whichdensity,")"
SetResourceDensityHint="[NATIVE]  nothing SetResourceDensity (mapdensity whichdensity)"


SetCreatureDensity=SetCreatureDensity
SetCreatureDensity="SetCreatureDensity(","mapdensity ",,~whichdensity,")"
SetCreatureDensityHint="[NATIVE]  nothing SetCreatureDensity (mapdensity whichdensity)"


SetPlayerTeam=SetPlayerTeam
SetPlayerTeam="SetPlayerTeam(","player ",,~whichPlayer,", ","integer ",,~whichTeam,")"
SetPlayerTeamHint="[NATIVE]  nothing SetPlayerTeam (player whichPlayer, integer whichTeam)"


SetPlayerStartLocation=SetPlayerStartLocation
SetPlayerStartLocation="SetPlayerStartLocation(","player ",,~whichPlayer,", ","integer ",,~startLocIndex,")"
SetPlayerStartLocationHint="[NATIVE]  nothing SetPlayerStartLocation (player whichPlayer, integer startLocIndex)"


ForcePlayerStartLocation=ForcePlayerStartLocation
ForcePlayerStartLocation="ForcePlayerStartLocation(","player ",,~whichPlayer,", ","integer ",,~startLocIndex,")"
ForcePlayerStartLocationHint="[NATIVE]  nothing ForcePlayerStartLocation (player whichPlayer, integer startLocIndex)"


SetPlayerColor=SetPlayerColor
SetPlayerColor="SetPlayerColor(","player ",,~whichPlayer,", ","playercolor ",,~color,")"
SetPlayerColorHint="[NATIVE]  nothing SetPlayerColor (player whichPlayer, playercolor color)"


SetPlayerAlliance=SetPlayerAlliance
SetPlayerAlliance="SetPlayerAlliance(","player ",,~sourcePlayer,", ","player ",,~otherPlayer,", ","alliancetype ",,~whichAllianceSetting,", ","boolean ",,~value,")"
SetPlayerAllianceHint="[NATIVE]  nothing SetPlayerAlliance (player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value)"


SetPlayerTaxRate=SetPlayerTaxRate
SetPlayerTaxRate="SetPlayerTaxRate(","player ",,~sourcePlayer,", ","player ",,~otherPlayer,", ","playerstate ",,~whichResource,", ","integer ",,~rate,")"
SetPlayerTaxRateHint="[NATIVE]  nothing SetPlayerTaxRate (player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate)"


SetPlayerRacePreference=SetPlayerRacePreference
SetPlayerRacePreference="SetPlayerRacePreference(","player ",,~whichPlayer,", ","racepreference ",,~whichRacePreference,")"
SetPlayerRacePreferenceHint="[NATIVE]  nothing SetPlayerRacePreference (player whichPlayer, racepreference whichRacePreference)"


SetPlayerRaceSelectable=SetPlayerRaceSelectable
SetPlayerRaceSelectable="SetPlayerRaceSelectable(","player ",,~whichPlayer,", ","boolean ",,~value,")"
SetPlayerRaceSelectableHint="[NATIVE]  nothing SetPlayerRaceSelectable (player whichPlayer, boolean value)"


SetPlayerController=SetPlayerController
SetPlayerController="SetPlayerController(","player ",,~whichPlayer,", ","mapcontrol ",,~controlType,")"
SetPlayerControllerHint="[NATIVE]  nothing SetPlayerController (player whichPlayer, mapcontrol controlType)"


SetPlayerOnScoreScreen=SetPlayerOnScoreScreen
SetPlayerOnScoreScreen="SetPlayerOnScoreScreen(","player ",,~whichPlayer,", ","boolean ",,~flag,")"
SetPlayerOnScoreScreenHint="[NATIVE]  nothing SetPlayerOnScoreScreen (player whichPlayer, boolean flag)"


CreateTimer=CreateTimer
CreateTimer="CreateTimer(",")"
CreateTimerHint="[NATIVE]  timer CreateTimer ()"


TimerGetElapsed=TimerGetElapsed
TimerGetElapsed="TimerGetElapsed(","timer ",,~whichTimer,")"
TimerGetElapsedHint="[NATIVE]  real TimerGetElapsed (timer whichTimer)"


TimerGetRemaining=TimerGetRemaining
TimerGetRemaining="TimerGetRemaining(","timer ",,~whichTimer,")"
TimerGetRemainingHint="[NATIVE]  real TimerGetRemaining (timer whichTimer)"


TimerGetTimeout=TimerGetTimeout
TimerGetTimeout="TimerGetTimeout(","timer ",,~whichTimer,")"
TimerGetTimeoutHint="[NATIVE]  real TimerGetTimeout (timer whichTimer)"


PauseTimer=PauseTimer
PauseTimer="PauseTimer(","timer ",,~whichTimer,")"
PauseTimerHint="[NATIVE]  nothing PauseTimer (timer whichTimer)"


ResumeTimer=ResumeTimer
ResumeTimer="ResumeTimer(","timer ",,~whichTimer,")"
ResumeTimerHint="[NATIVE]  nothing ResumeTimer (timer whichTimer)"


CreateGroup=CreateGroup
CreateGroup="CreateGroup(",")"
CreateGroupHint="[NATIVE]  group CreateGroup ()"


GroupAddUnit=GroupAddUnit
GroupAddUnit="GroupAddUnit(","group ",,~whichGroup,", ","unit ",,~whichUnit,")"
GroupAddUnitHint="[NATIVE]  nothing GroupAddUnit (group whichGroup, unit whichUnit)"


GroupRemoveUnit=GroupRemoveUnit
GroupRemoveUnit="GroupRemoveUnit(","group ",,~whichGroup,", ","unit ",,~whichUnit,")"
GroupRemoveUnitHint="[NATIVE]  nothing GroupRemoveUnit (group whichGroup, unit whichUnit)"


GroupEnumUnitsInRange=GroupEnumUnitsInRange
GroupEnumUnitsInRange="GroupEnumUnitsInRange(","group ",,~whichGroup,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
GroupEnumUnitsInRangeHint="[NATIVE]  nothing GroupEnumUnitsInRange (group whichGroup, real x, real y, real radius, boolexpr filter)"


GroupEnumUnitsInRangeCounted=GroupEnumUnitsInRangeCounted
GroupEnumUnitsInRangeCounted="GroupEnumUnitsInRangeCounted(","group ",,~whichGroup,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","integer ",,~countLimit,")"
GroupEnumUnitsInRangeCountedHint="[NATIVE]  nothing GroupEnumUnitsInRangeCounted (group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit)"


GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(","group ",,~whichGroup,", ","string ",,~order,", ","real ",,~x,", ","real ",,~y,")"
GroupPointOrderHint="[NATIVE]  boolean GroupPointOrder (group whichGroup, string order, real x, real y)"


GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(","group ",,~whichGroup,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,")"
GroupPointOrderByIdHint="[NATIVE]  boolean GroupPointOrderById (group whichGroup, integer order, real x, real y)"


FirstOfGroup=FirstOfGroup
FirstOfGroup="FirstOfGroup(","group ",,~whichGroup,")"
FirstOfGroupHint="[NATIVE]  unit FirstOfGroup (group whichGroup)"


CreateForce=CreateForce
CreateForce="CreateForce(",")"
CreateForceHint="[NATIVE]  force CreateForce ()"


ForceAddPlayer=ForceAddPlayer
ForceAddPlayer="ForceAddPlayer(","force ",,~whichForce,", ","player ",,~whichPlayer,")"
ForceAddPlayerHint="[NATIVE]  nothing ForceAddPlayer (force whichForce, player whichPlayer)"


ForceRemovePlayer=ForceRemovePlayer
ForceRemovePlayer="ForceRemovePlayer(","force ",,~whichForce,", ","player ",,~whichPlayer,")"
ForceRemovePlayerHint="[NATIVE]  nothing ForceRemovePlayer (force whichForce, player whichPlayer)"


ForceEnumPlayers=ForceEnumPlayers
ForceEnumPlayers="ForceEnumPlayers(","force ",,~whichForce,", ","boolexpr ",,~filter,")"
ForceEnumPlayersHint="[NATIVE]  nothing ForceEnumPlayers (force whichForce, boolexpr filter)"


ForceEnumPlayersCounted=ForceEnumPlayersCounted
ForceEnumPlayersCounted="ForceEnumPlayersCounted(","force ",,~whichForce,", ","boolexpr ",,~filter,", ","integer ",,~countLimit,")"
ForceEnumPlayersCountedHint="[NATIVE]  nothing ForceEnumPlayersCounted (force whichForce, boolexpr filter, integer countLimit)"


ForceEnumAllies=ForceEnumAllies
ForceEnumAllies="ForceEnumAllies(","force ",,~whichForce,", ","player ",,~whichPlayer,", ","boolexpr ",,~filter,")"
ForceEnumAlliesHint="[NATIVE]  nothing ForceEnumAllies (force whichForce, player whichPlayer, boolexpr filter)"


ForceEnumEnemies=ForceEnumEnemies
ForceEnumEnemies="ForceEnumEnemies(","force ",,~whichForce,", ","player ",,~whichPlayer,", ","boolexpr ",,~filter,")"
ForceEnumEnemiesHint="[NATIVE]  nothing ForceEnumEnemies (force whichForce, player whichPlayer, boolexpr filter)"


Rect=Rect
Rect="Rect(","real ",,~minx,", ","real ",,~miny,", ","real ",,~maxx,", ","real ",,~maxy,")"
RectHint="[NATIVE]  rect Rect (real minx, real miny, real maxx, real maxy)"


RectFromLoc=RectFromLoc
RectFromLoc="RectFromLoc(","location ",,~min,", ","location ",,~max,")"
RectFromLocHint="[NATIVE]  rect RectFromLoc (location min, location max)"


SetRect=SetRect
SetRect="SetRect(","rect ",,~whichRect,", ","real ",,~minx,", ","real ",,~miny,", ","real ",,~maxx,", ","real ",,~maxy,")"
SetRectHint="[NATIVE]  nothing SetRect (rect whichRect, real minx, real miny, real maxx, real maxy)"


SetRectFromLoc=SetRectFromLoc
SetRectFromLoc="SetRectFromLoc(","rect ",,~whichRect,", ","location ",,~min,", ","location ",,~max,")"
SetRectFromLocHint="[NATIVE]  nothing SetRectFromLoc (rect whichRect, location min, location max)"


CreateRegion=CreateRegion
CreateRegion="CreateRegion(",")"
CreateRegionHint="[NATIVE]  region CreateRegion ()"


Location=Location
Location="Location(","real ",,~x,", ","real ",,~y,")"
LocationHint="[NATIVE]  location Location (real x, real y)"


CreateTrigger=CreateTrigger
CreateTrigger="CreateTrigger(",")"
CreateTriggerHint="[NATIVE]  trigger CreateTrigger ()"


TriggerWaitOnSleeps=TriggerWaitOnSleeps
TriggerWaitOnSleeps="TriggerWaitOnSleeps(","trigger ",,~whichTrigger,", ","boolean ",,~flag,")"
TriggerWaitOnSleepsHint="[NATIVE]  nothing TriggerWaitOnSleeps (trigger whichTrigger, boolean flag)"


And=And
And="And(","boolexpr ",,~operandA,", ","boolexpr ",,~operandB,")"
AndHint="[NATIVE]  boolexpr And (boolexpr operandA, boolexpr operandB)"


Or=Or
Or="Or(","boolexpr ",,~operandA,", ","boolexpr ",,~operandB,")"
OrHint="[NATIVE]  boolexpr Or (boolexpr operandA, boolexpr operandB)"


Not=Not
Not="Not(","boolexpr ",,~operand,")"
NotHint="[NATIVE]  boolexpr Not (boolexpr operand)"


Condition=Condition
Condition="Condition(","code ",,~func,")"
ConditionHint="[NATIVE]  conditionfunc Condition (code func)"


DestroyCondition=DestroyCondition
DestroyCondition="DestroyCondition(","conditionfunc ",,~c,")"
DestroyConditionHint="[NATIVE]  nothing DestroyCondition (conditionfunc c)"


Filter=Filter
Filter="Filter(","code ",,~func,")"
FilterHint="[NATIVE]  filterfunc Filter (code func)"


DestroyFilter=DestroyFilter
DestroyFilter="DestroyFilter(","filterfunc ",,~f,")"
DestroyFilterHint="[NATIVE]  nothing DestroyFilter (filterfunc f)"


DestroyBoolExpr=DestroyBoolExpr
DestroyBoolExpr="DestroyBoolExpr(","boolexpr ",,~e,")"
DestroyBoolExprHint="[NATIVE]  nothing DestroyBoolExpr (boolexpr e)"


TriggerRegisterVariableEvent=TriggerRegisterVariableEvent
TriggerRegisterVariableEvent="TriggerRegisterVariableEvent(","trigger ",,~whichTrigger,", ","string ",,~varName,", ","limitop ",,~opcode,", ","real ",,~limitval,")"
TriggerRegisterVariableEventHint="[NATIVE]  event TriggerRegisterVariableEvent (trigger whichTrigger, string varName, limitop opcode, real limitval)"


TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(","trigger ",,~whichTrigger,", ","real ",,~timeout,", ","boolean ",,~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE]  event TriggerRegisterTimerEvent (trigger whichTrigger, real timeout, boolean periodic)"


TriggerRegisterTimerExpireEvent=TriggerRegisterTimerExpireEvent
TriggerRegisterTimerExpireEvent="TriggerRegisterTimerExpireEvent(","trigger ",,~whichTrigger,", ","timer ",,~t,")"
TriggerRegisterTimerExpireEventHint="[NATIVE]  event TriggerRegisterTimerExpireEvent (trigger whichTrigger, timer t)"


TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(","trigger ",,~whichTrigger,", ","gamestate ",,~whichState,", ","limitop ",,~opcode,", ","real ",,~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE]  event TriggerRegisterGameStateEvent (trigger whichTrigger, gamestate whichState, limitop opcode, real limitval)"


TriggerRegisterDialogEvent=TriggerRegisterDialogEvent
TriggerRegisterDialogEvent="TriggerRegisterDialogEvent(","trigger ",,~whichTrigger,", ","dialog ",,~whichDialog,")"
TriggerRegisterDialogEventHint="[NATIVE]  event TriggerRegisterDialogEvent (trigger whichTrigger, dialog whichDialog)"


TriggerRegisterDialogButtonEvent=TriggerRegisterDialogButtonEvent
TriggerRegisterDialogButtonEvent="TriggerRegisterDialogButtonEvent(","trigger ",,~whichTrigger,", ","button ",,~whichButton,")"
TriggerRegisterDialogButtonEventHint="[NATIVE]  event TriggerRegisterDialogButtonEvent (trigger whichTrigger, button whichButton)"


TriggerRegisterGameEvent=TriggerRegisterGameEvent
TriggerRegisterGameEvent="TriggerRegisterGameEvent(","trigger ",,~whichTrigger,", ","gameevent ",,~whichGameEvent,")"
TriggerRegisterGameEventHint="[NATIVE]  event TriggerRegisterGameEvent (trigger whichTrigger, gameevent whichGameEvent)"


TriggerRegisterEnterRegion=TriggerRegisterEnterRegion
TriggerRegisterEnterRegion="TriggerRegisterEnterRegion(","trigger ",,~whichTrigger,", ","region ",,~whichRegion,", ","boolexpr ",,~filter,")"
TriggerRegisterEnterRegionHint="[NATIVE]  event TriggerRegisterEnterRegion (trigger whichTrigger, region whichRegion, boolexpr filter)"


TriggerRegisterLeaveRegion=TriggerRegisterLeaveRegion
TriggerRegisterLeaveRegion="TriggerRegisterLeaveRegion(","trigger ",,~whichTrigger,", ","region ",,~whichRegion,", ","boolexpr ",,~filter,")"
TriggerRegisterLeaveRegionHint="[NATIVE]  event TriggerRegisterLeaveRegion (trigger whichTrigger, region whichRegion, boolexpr filter)"


TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(","trigger ",,~whichTrigger,", ","trackable ",,~t,")"
TriggerRegisterTrackableHitEventHint="[NATIVE]  event TriggerRegisterTrackableHitEvent (trigger whichTrigger, trackable t)"


TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(","trigger ",,~whichTrigger,", ","trackable ",,~t,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE]  event TriggerRegisterTrackableTrackEvent (trigger whichTrigger, trackable t)"


TriggerRegisterPlayerEvent=TriggerRegisterPlayerEvent
TriggerRegisterPlayerEvent="TriggerRegisterPlayerEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","playerevent ",,~whichPlayerEvent,")"
TriggerRegisterPlayerEventHint="[NATIVE]  event TriggerRegisterPlayerEvent (trigger whichTrigger, player whichPlayer, playerevent whichPlayerEvent)"


TriggerRegisterPlayerUnitEvent=TriggerRegisterPlayerUnitEvent
TriggerRegisterPlayerUnitEvent="TriggerRegisterPlayerUnitEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","playerunitevent ",,~whichPlayerUnitEvent,", ","boolexpr ",,~filter,")"
TriggerRegisterPlayerUnitEventHint="[NATIVE]  event TriggerRegisterPlayerUnitEvent (trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter)"


TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","alliancetype ",,~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE]  event TriggerRegisterPlayerAllianceChange (trigger whichTrigger, player whichPlayer, alliancetype whichAlliance)"


TriggerRegisterPlayerStateEvent=TriggerRegisterPlayerStateEvent
TriggerRegisterPlayerStateEvent="TriggerRegisterPlayerStateEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","playerstate ",,~whichState,", ","limitop ",,~opcode,", ","real ",,~limitval,")"
TriggerRegisterPlayerStateEventHint="[NATIVE]  event TriggerRegisterPlayerStateEvent (trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval)"


TriggerRegisterPlayerChatEvent=TriggerRegisterPlayerChatEvent
TriggerRegisterPlayerChatEvent="TriggerRegisterPlayerChatEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","string ",,~chatMessageToDetect,", ","boolean ",,~exactMatchOnly,")"
TriggerRegisterPlayerChatEventHint="[NATIVE]  event TriggerRegisterPlayerChatEvent (trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly)"


TriggerRegisterDeathEvent=TriggerRegisterDeathEvent
TriggerRegisterDeathEvent="TriggerRegisterDeathEvent(","trigger ",,~whichTrigger,", ","widget ",,~whichWidget,")"
TriggerRegisterDeathEventHint="[NATIVE]  event TriggerRegisterDeathEvent (trigger whichTrigger, widget whichWidget)"


TriggerRegisterUnitStateEvent=TriggerRegisterUnitStateEvent
TriggerRegisterUnitStateEvent="TriggerRegisterUnitStateEvent(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","unitstate ",,~whichState,", ","limitop ",,~opcode,", ","real ",,~limitval,")"
TriggerRegisterUnitStateEventHint="[NATIVE]  event TriggerRegisterUnitStateEvent (trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval)"


TriggerRegisterUnitEvent=TriggerRegisterUnitEvent
TriggerRegisterUnitEvent="TriggerRegisterUnitEvent(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","unitevent ",,~whichEvent,")"
TriggerRegisterUnitEventHint="[NATIVE]  event TriggerRegisterUnitEvent (trigger whichTrigger, unit whichUnit, unitevent whichEvent)"


TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","unitevent ",,~whichEvent,", ","boolexpr ",,~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE]  event TriggerRegisterFilterUnitEvent (trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter)"


TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","real ",,~range,", ","boolexpr ",,~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE]  event TriggerRegisterUnitInRange (trigger whichTrigger, unit whichUnit, real range, boolexpr filter)"


TriggerWaitForSound=TriggerWaitForSound
TriggerWaitForSound="TriggerWaitForSound(","sound ",,~whichSound,", ","real ",,~offset,")"
TriggerWaitForSoundHint="[NATIVE]  nothing TriggerWaitForSound (sound whichSound, real offset)"


TriggerEvaluate=TriggerEvaluate
TriggerEvaluate="TriggerEvaluate(","trigger ",,~whichTrigger,")"
TriggerEvaluateHint="[NATIVE]  boolean TriggerEvaluate (trigger whichTrigger)"


TriggerExecuteWait=TriggerExecuteWait
TriggerExecuteWait="TriggerExecuteWait(","trigger ",,~whichTrigger,")"
TriggerExecuteWaitHint="[NATIVE]  nothing TriggerExecuteWait (trigger whichTrigger)"


TriggerSyncStart=TriggerSyncStart
TriggerSyncStart="TriggerSyncStart(",")"
TriggerSyncStartHint="[NATIVE]  nothing TriggerSyncStart ()"


TriggerSyncReady=TriggerSyncReady
TriggerSyncReady="TriggerSyncReady(",")"
TriggerSyncReadyHint="[NATIVE]  nothing TriggerSyncReady ()"


SetWidgetLife=SetWidgetLife
SetWidgetLife="SetWidgetLife(","widget ",,~whichWidget,", ","real ",,~newLife,")"
SetWidgetLifeHint="[NATIVE]  nothing SetWidgetLife (widget whichWidget, real newLife)"


CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDestructableHint="[NATIVE]  destructable CreateDestructable (integer objectid, real x, real y, real face, real scale, integer variation)"


CreateDestructableZ=CreateDestructableZ
CreateDestructableZ="CreateDestructableZ(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDestructableZHint="[NATIVE]  destructable CreateDestructableZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)"


CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDeadDestructableHint="[NATIVE]  destructable CreateDeadDestructable (integer objectid, real x, real y, real face, real scale, integer variation)"


CreateDeadDestructableZ=CreateDeadDestructableZ
CreateDeadDestructableZ="CreateDeadDestructableZ(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDeadDestructableZHint="[NATIVE]  destructable CreateDeadDestructableZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)"


SetDestructableInvulnerable=SetDestructableInvulnerable
SetDestructableInvulnerable="SetDestructableInvulnerable(","destructable ",,~d,", ","boolean ",,~flag,")"
SetDestructableInvulnerableHint="[NATIVE]  nothing SetDestructableInvulnerable (destructable d, boolean flag)"


EnumDestructablesInRect=EnumDestructablesInRect
EnumDestructablesInRect="EnumDestructablesInRect(","rect ",,~r,", ","boolexpr ",,~filter,", ","code ",,~actionFunc,")"
EnumDestructablesInRectHint="[NATIVE]  nothing EnumDestructablesInRect (rect r, boolexpr filter, code actionFunc)"


SetDestructableMaxLife=SetDestructableMaxLife
SetDestructableMaxLife="SetDestructableMaxLife(","destructable ",,~d,", ","real ",,~max,")"
SetDestructableMaxLifeHint="[NATIVE]  nothing SetDestructableMaxLife (destructable d, real max)"


QueueDestructableAnimation=QueueDestructableAnimation
QueueDestructableAnimation="QueueDestructableAnimation(","destructable ",,~d,", ","string ",,~whichAnimation,")"
QueueDestructableAnimationHint="[NATIVE]  nothing QueueDestructableAnimation (destructable d, string whichAnimation)"


SetDestructableAnimation=SetDestructableAnimation
SetDestructableAnimation="SetDestructableAnimation(","destructable ",,~d,", ","string ",,~whichAnimation,")"
SetDestructableAnimationHint="[NATIVE]  nothing SetDestructableAnimation (destructable d, string whichAnimation)"


SetDestructableAnimationSpeed=SetDestructableAnimationSpeed
SetDestructableAnimationSpeed="SetDestructableAnimationSpeed(","destructable ",,~d,", ","real ",,~speedFactor,")"
SetDestructableAnimationSpeedHint="[NATIVE]  nothing SetDestructableAnimationSpeed (destructable d, real speedFactor)"


ShowDestructable=ShowDestructable
ShowDestructable="ShowDestructable(","destructable ",,~d,", ","boolean ",,~flag,")"
ShowDestructableHint="[NATIVE]  nothing ShowDestructable (destructable d, boolean flag)"


CreateItem=CreateItem
CreateItem="CreateItem(","integer ",,~itemid,", ","real ",,~x,", ","real ",,~y,")"
CreateItemHint="[NATIVE]  item CreateItem (integer itemid, real x, real y)"


SetItemPosition=SetItemPosition
SetItemPosition="SetItemPosition(","item ",,~i,", ","real ",,~x,", ","real ",,~y,")"
SetItemPositionHint="[NATIVE]  nothing SetItemPosition (item i, real x, real y)"


SetItemDropOnDeath=SetItemDropOnDeath
SetItemDropOnDeath="SetItemDropOnDeath(","item ",,~whichItem,", ","boolean ",,~flag,")"
SetItemDropOnDeathHint="[NATIVE]  nothing SetItemDropOnDeath (item whichItem, boolean flag)"


SetItemDroppable=SetItemDroppable
SetItemDroppable="SetItemDroppable(","item ",,~i,", ","boolean ",,~flag,")"
SetItemDroppableHint="[NATIVE]  nothing SetItemDroppable (item i, boolean flag)"


SetItemPlayer=SetItemPlayer
SetItemPlayer="SetItemPlayer(","item ",,~whichItem,", ","player ",,~whichPlayer,", ","boolean ",,~changeColor,")"
SetItemPlayerHint="[NATIVE]  nothing SetItemPlayer (item whichItem, player whichPlayer, boolean changeColor)"


SetItemInvulnerable=SetItemInvulnerable
SetItemInvulnerable="SetItemInvulnerable(","item ",,~whichItem,", ","boolean ",,~flag,")"
SetItemInvulnerableHint="[NATIVE]  nothing SetItemInvulnerable (item whichItem, boolean flag)"


SetItemVisible=SetItemVisible
SetItemVisible="SetItemVisible(","item ",,~whichItem,", ","boolean ",,~show,")"
SetItemVisibleHint="[NATIVE]  nothing SetItemVisible (item whichItem, boolean show)"


SetItemDropID=SetItemDropID
SetItemDropID="SetItemDropID(","item ",,~whichItem,", ","integer ",,~unitId,")"
SetItemDropIDHint="[NATIVE]  nothing SetItemDropID (item whichItem, integer unitId)"


CreateUnit=CreateUnit
CreateUnit="CreateUnit(","player ",,~id,", ","integer ",,~unitid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateUnitHint="[NATIVE]  unit CreateUnit (player id, integer unitid, real x, real y, real face)"


CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(","player ",,~whichPlayer,", ","string ",,~unitname,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateUnitByNameHint="[NATIVE]  unit CreateUnitByName (player whichPlayer, string unitname, real x, real y, real face)"


CreateUnitAtLoc=CreateUnitAtLoc
CreateUnitAtLoc="CreateUnitAtLoc(","player ",,~id,", ","integer ",,~unitid,", ","location ",,~whichLocation,", ","real ",,~face,")"
CreateUnitAtLocHint="[NATIVE]  unit CreateUnitAtLoc (player id, integer unitid, location whichLocation, real face)"


CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(","player ",,~id,", ","string ",,~unitname,", ","location ",,~whichLocation,", ","real ",,~face,")"
CreateUnitAtLocByNameHint="[NATIVE]  unit CreateUnitAtLocByName (player id, string unitname, location whichLocation, real face)"


CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(","player ",,~whichPlayer,", ","integer ",,~unitid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateCorpseHint="[NATIVE]  unit CreateCorpse (player whichPlayer, integer unitid, real x, real y, real face)"


ShowUnit=ShowUnit
ShowUnit="ShowUnit(","unit ",,~whichUnit,", ","boolean ",,~show,")"
ShowUnitHint="[NATIVE]  nothing ShowUnit (unit whichUnit, boolean show)"


SetUnitState=SetUnitState
SetUnitState="SetUnitState(","unit ",,~whichUnit,", ","unitstate ",,~whichUnitState,", ","real ",,~newVal,")"
SetUnitStateHint="[NATIVE]  nothing SetUnitState (unit whichUnit, unitstate whichUnitState, real newVal)"


SetUnitX=SetUnitX
SetUnitX="SetUnitX(","unit ",,~whichUnit,", ","real ",,~newX,")"
SetUnitXHint="[NATIVE]  nothing SetUnitX (unit whichUnit, real newX)"


SetUnitY=SetUnitY
SetUnitY="SetUnitY(","unit ",,~whichUnit,", ","real ",,~newY,")"
SetUnitYHint="[NATIVE]  nothing SetUnitY (unit whichUnit, real newY)"


SetUnitPosition=SetUnitPosition
SetUnitPosition="SetUnitPosition(","unit ",,~whichUnit,", ","real ",,~newX,", ","real ",,~newY,")"
SetUnitPositionHint="[NATIVE]  nothing SetUnitPosition (unit whichUnit, real newX, real newY)"


SetUnitFacing=SetUnitFacing
SetUnitFacing="SetUnitFacing(","unit ",,~whichUnit,", ","real ",,~facingAngle,")"
SetUnitFacingHint="[NATIVE]  nothing SetUnitFacing (unit whichUnit, real facingAngle)"


SetUnitFlyHeight=SetUnitFlyHeight
SetUnitFlyHeight="SetUnitFlyHeight(","unit ",,~whichUnit,", ","real ",,~newHeight,", ","real ",,~rate,")"
SetUnitFlyHeightHint="[NATIVE]  nothing SetUnitFlyHeight (unit whichUnit, real newHeight, real rate)"


SetUnitTurnSpeed=SetUnitTurnSpeed
SetUnitTurnSpeed="SetUnitTurnSpeed(","unit ",,~whichUnit,", ","real ",,~newTurnSpeed,")"
SetUnitTurnSpeedHint="[NATIVE]  nothing SetUnitTurnSpeed (unit whichUnit, real newTurnSpeed)"


SetUnitPropWindow=SetUnitPropWindow
SetUnitPropWindow="SetUnitPropWindow(","unit ",,~whichUnit,", ","real ",,~newPropWindowAngle,")"
SetUnitPropWindowHint="[NATIVE]  nothing SetUnitPropWindow (unit whichUnit, real newPropWindowAngle)"


SetUnitAcquireRange=SetUnitAcquireRange
SetUnitAcquireRange="SetUnitAcquireRange(","unit ",,~whichUnit,", ","real ",,~newAcquireRange,")"
SetUnitAcquireRangeHint="[NATIVE]  nothing SetUnitAcquireRange (unit whichUnit, real newAcquireRange)"


SetUnitCreepGuard=SetUnitCreepGuard
SetUnitCreepGuard="SetUnitCreepGuard(","unit ",,~whichUnit,", ","boolean ",,~creepGuard,")"
SetUnitCreepGuardHint="[NATIVE]  nothing SetUnitCreepGuard (unit whichUnit, boolean creepGuard)"


SetUnitScale=SetUnitScale
SetUnitScale="SetUnitScale(","unit ",,~whichUnit,", ","real ",,~scaleX,", ","real ",,~scaleY,", ","real ",,~scaleZ,")"
SetUnitScaleHint="[NATIVE]  nothing SetUnitScale (unit whichUnit, real scaleX, real scaleY, real scaleZ)"


SetUnitTimeScale=SetUnitTimeScale
SetUnitTimeScale="SetUnitTimeScale(","unit ",,~whichUnit,", ","real ",,~timeScale,")"
SetUnitTimeScaleHint="[NATIVE]  nothing SetUnitTimeScale (unit whichUnit, real timeScale)"


SetUnitBlendTime=SetUnitBlendTime
SetUnitBlendTime="SetUnitBlendTime(","unit ",,~whichUnit,", ","real ",,~blendTime,")"
SetUnitBlendTimeHint="[NATIVE]  nothing SetUnitBlendTime (unit whichUnit, real blendTime)"


SetUnitVertexColor=SetUnitVertexColor
SetUnitVertexColor="SetUnitVertexColor(","unit ",,~whichUnit,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetUnitVertexColorHint="[NATIVE]  nothing SetUnitVertexColor (unit whichUnit, integer red, integer green, integer blue, integer alpha)"


QueueUnitAnimation=QueueUnitAnimation
QueueUnitAnimation="QueueUnitAnimation(","unit ",,~whichUnit,", ","string ",,~whichAnimation,")"
QueueUnitAnimationHint="[NATIVE]  nothing QueueUnitAnimation (unit whichUnit, string whichAnimation)"


AddUnitAnimationProperties=AddUnitAnimationProperties
AddUnitAnimationProperties="AddUnitAnimationProperties(","unit ",,~whichUnit,", ","string ",,~animProperties,", ","boolean ",,~add,")"
AddUnitAnimationPropertiesHint="[NATIVE]  nothing AddUnitAnimationProperties (unit whichUnit, string animProperties, boolean add)"


SetUnitRescuable=SetUnitRescuable
SetUnitRescuable="SetUnitRescuable(","unit ",,~whichUnit,", ","player ",,~byWhichPlayer,", ","boolean ",,~flag,")"
SetUnitRescuableHint="[NATIVE]  nothing SetUnitRescuable (unit whichUnit, player byWhichPlayer, boolean flag)"


UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(","unit ",,~whichHero,", ","integer ",,~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE]  boolean UnitStripHeroLevel (unit whichHero, integer howManyLevels)"


UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(","unit ",,~whichHero,", ","integer ",,~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE]  boolean UnitModifySkillPoints (unit whichHero, integer skillPointDelta)"


AddHeroXP=AddHeroXP
AddHeroXP="AddHeroXP(","unit ",,~whichHero,", ","integer ",,~xpToAdd,", ","boolean ",,~showEyeCandy,")"
AddHeroXPHint="[NATIVE]  nothing AddHeroXP (unit whichHero, integer xpToAdd, boolean showEyeCandy)"


SuspendHeroXP=SuspendHeroXP
SuspendHeroXP="SuspendHeroXP(","unit ",,~whichHero,", ","boolean ",,~flag,")"
SuspendHeroXPHint="[NATIVE]  nothing SuspendHeroXP (unit whichHero, boolean flag)"


DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,")"
DecUnitAbilityLevelHint="[NATIVE]  integer DecUnitAbilityLevel (unit whichUnit, integer abilcode)"


IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,")"
IncUnitAbilityLevelHint="[NATIVE]  integer IncUnitAbilityLevel (unit whichUnit, integer abilcode)"


SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,", ","integer ",,~level,")"
SetUnitAbilityLevelHint="[NATIVE]  integer SetUnitAbilityLevel (unit whichUnit, integer abilcode, integer level)"


ReviveHero=ReviveHero
ReviveHero="ReviveHero(","unit ",,~whichHero,", ","real ",,~x,", ","real ",,~y,", ","boolean ",,~doEyecandy,")"
ReviveHeroHint="[NATIVE]  boolean ReviveHero (unit whichHero, real x, real y, boolean doEyecandy)"


SetUnitExploded=SetUnitExploded
SetUnitExploded="SetUnitExploded(","unit ",,~whichUnit,", ","boolean ",,~exploded,")"
SetUnitExplodedHint="[NATIVE]  nothing SetUnitExploded (unit whichUnit, boolean exploded)"


PauseUnit=PauseUnit
PauseUnit="PauseUnit(","unit ",,~whichUnit,", ","boolean ",,~flag,")"
PauseUnitHint="[NATIVE]  nothing PauseUnit (unit whichUnit, boolean flag)"


SelectUnit=SelectUnit
SelectUnit="SelectUnit(","unit ",,~whichUnit,", ","boolean ",,~flag,")"
SelectUnitHint="[NATIVE]  nothing SelectUnit (unit whichUnit, boolean flag)"


SetUnitPointValueByType=SetUnitPointValueByType
SetUnitPointValueByType="SetUnitPointValueByType(","integer ",,~unitType,", ","integer ",,~newPointValue,")"
SetUnitPointValueByTypeHint="[UjAPI]  nothing SetUnitPointValueByType (integer unitType, integer newPointValue)"


UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(","unit ",,~whichUnit,", ","item ",,~whichItem,")"
UnitAddItemHint="[NATIVE]  boolean UnitAddItem (unit whichUnit, item whichItem)"


UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(","unit ",,~whichUnit,", ","integer ",,~itemId,")"
UnitAddItemByIdHint="[NATIVE]  item UnitAddItemById (unit whichUnit, integer itemId)"


UnitRemoveItem=UnitRemoveItem
UnitRemoveItem="UnitRemoveItem(","unit ",,~whichUnit,", ","item ",,~whichItem,")"
UnitRemoveItemHint="[NATIVE]  nothing UnitRemoveItem (unit whichUnit, item whichItem)"


UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(","unit ",,~whichUnit,", ","integer ",,~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE]  item UnitRemoveItemFromSlot (unit whichUnit, integer itemSlot)"


UnitHasItem=UnitHasItem
UnitHasItem="UnitHasItem(","unit ",,~whichUnit,", ","item ",,~whichItem,")"
UnitHasItemHint="[NATIVE]  boolean UnitHasItem (unit whichUnit, item whichItem)"


UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(","unit ",,~whichUnit,", ","integer ",,~itemSlot,")"
UnitItemInSlotHint="[NATIVE]  item UnitItemInSlot (unit whichUnit, integer itemSlot)"


UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(","unit ",,~whichUnit,")"
UnitInventorySizeHint="[NATIVE]  integer UnitInventorySize (unit whichUnit)"


UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,")"
UnitDropItemPointHint="[NATIVE]  boolean UnitDropItemPoint (unit whichUnit, item whichItem, real x, real y)"


UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","integer ",,~slot,")"
UnitDropItemSlotHint="[NATIVE]  boolean UnitDropItemSlot (unit whichUnit, item whichItem, integer slot)"


UnitDropItemTarget=UnitDropItemTarget
UnitDropItemTarget="UnitDropItemTarget(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","widget ",,~target,")"
UnitDropItemTargetHint="[NATIVE]  boolean UnitDropItemTarget (unit whichUnit, item whichItem, widget target)"


UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,")"
UnitUseItemPointHint="[NATIVE]  boolean UnitUseItemPoint (unit whichUnit, item whichItem, real x, real y)"


SetUnitUseFood=SetUnitUseFood
SetUnitUseFood="SetUnitUseFood(","unit ",,~whichUnit,", ","boolean ",,~useFood,")"
SetUnitUseFoodHint="[NATIVE]  nothing SetUnitUseFood (unit whichUnit, boolean useFood)"


UnitShareVision=UnitShareVision
UnitShareVision="UnitShareVision(","unit ",,~whichUnit,", ","player ",,~whichPlayer,", ","boolean ",,~share,")"
UnitShareVisionHint="[NATIVE]  nothing UnitShareVision (unit whichUnit, player whichPlayer, boolean share)"


UnitSuspendDecay=UnitSuspendDecay
UnitSuspendDecay="UnitSuspendDecay(","unit ",,~whichUnit,", ","boolean ",,~suspend,")"
UnitSuspendDecayHint="[NATIVE]  nothing UnitSuspendDecay (unit whichUnit, boolean suspend)"


UnitAddType=UnitAddType
UnitAddType="UnitAddType(","unit ",,~whichUnit,", ","unittype ",,~whichUnitType,")"
UnitAddTypeHint="[NATIVE]  boolean UnitAddType (unit whichUnit, unittype whichUnitType)"


UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(","unit ",,~whichUnit,", ","unittype ",,~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE]  boolean UnitRemoveType (unit whichUnit, unittype whichUnitType)"


UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,")"
UnitAddAbilityHint="[NATIVE]  boolean UnitAddAbility (unit whichUnit, integer abilCode)"


UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,")"
UnitRemoveAbilityHint="[NATIVE]  boolean UnitRemoveAbility (unit whichUnit, integer abilCode)"


UnitMakeAbilityPermanent=UnitMakeAbilityPermanent
UnitMakeAbilityPermanent="UnitMakeAbilityPermanent(","unit ",,~whichUnit,", ","boolean ",,~permanent,", ","integer ",,~abilCode,")"
UnitMakeAbilityPermanentHint="[NATIVE]  boolean UnitMakeAbilityPermanent (unit whichUnit, boolean permanent, integer abilCode)"


UnitRemoveBuffs=UnitRemoveBuffs
UnitRemoveBuffs="UnitRemoveBuffs(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,")"
UnitRemoveBuffsHint="[NATIVE]  nothing UnitRemoveBuffs (unit whichUnit, boolean removePositive, boolean removeNegative)"


UnitRemoveBuffsEx=UnitRemoveBuffsEx
UnitRemoveBuffsEx="UnitRemoveBuffsEx(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,", ","boolean ",,~magic,", ","boolean ",,~physical,", ","boolean ",,~timedLife,", ","boolean ",,~aura,", ","boolean ",,~autoDispel,")"
UnitRemoveBuffsExHint="[NATIVE]  nothing UnitRemoveBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)"


UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,", ","boolean ",,~magic,", ","boolean ",,~physical,", ","boolean ",,~timedLife,", ","boolean ",,~aura,", ","boolean ",,~autoDispel,")"
UnitHasBuffsExHint="[NATIVE]  boolean UnitHasBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)"


UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,", ","boolean ",,~magic,", ","boolean ",,~physical,", ","boolean ",,~timedLife,", ","boolean ",,~aura,", ","boolean ",,~autoDispel,")"
UnitCountBuffsExHint="[NATIVE]  integer UnitCountBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)"


UnitAddSleep=UnitAddSleep
UnitAddSleep="UnitAddSleep(","unit ",,~whichUnit,", ","boolean ",,~add,")"
UnitAddSleepHint="[NATIVE]  nothing UnitAddSleep (unit whichUnit, boolean add)"


UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(","unit ",,~whichUnit,")"
UnitCanSleepHint="[NATIVE]  boolean UnitCanSleep (unit whichUnit)"


UnitCanSleepPerm=UnitCanSleepPerm
UnitCanSleepPerm="UnitCanSleepPerm(","unit ",,~whichUnit,")"
UnitCanSleepPermHint="[NATIVE]  boolean UnitCanSleepPerm (unit whichUnit)"


UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(","unit ",,~whichUnit,")"
UnitIsSleepingHint="[NATIVE]  boolean UnitIsSleeping (unit whichUnit)"


UnitWakeUp=UnitWakeUp
UnitWakeUp="UnitWakeUp(","unit ",,~whichUnit,")"
UnitWakeUpHint="[NATIVE]  nothing UnitWakeUp (unit whichUnit)"


UnitPauseTimedLife=UnitPauseTimedLife
UnitPauseTimedLife="UnitPauseTimedLife(","unit ",,~whichUnit,", ","boolean ",,~flag,")"
UnitPauseTimedLifeHint="[NATIVE]  nothing UnitPauseTimedLife (unit whichUnit, boolean flag)"


UnitSetUsesAltIcon=UnitSetUsesAltIcon
UnitSetUsesAltIcon="UnitSetUsesAltIcon(","unit ",,~whichUnit,", ","boolean ",,~flag,")"
UnitSetUsesAltIconHint="[NATIVE]  nothing UnitSetUsesAltIcon (unit whichUnit, boolean flag)"


UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(","unit ",,~whichUnit,", ","real ",,~delay,", ","real ",,~radius,", ","real ",,~x,", ","real ",,~y,", ","real ",,~amount,", ","boolean ",,~attack,", ","boolean ",,~ranged,", ","attacktype ",,~attackType,", ","damagetype ",,~damageType,", ","weapontype ",,~weaponType,")"
UnitDamagePointHint="[NATIVE]  boolean UnitDamagePoint (unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)"


UnitDamageTarget=UnitDamageTarget
UnitDamageTarget="UnitDamageTarget(","unit ",,~whichUnit,", ","widget ",,~target,", ","real ",,~amount,", ","boolean ",,~attack,", ","boolean ",,~ranged,", ","attacktype ",,~attackType,", ","damagetype ",,~damageType,", ","weapontype ",,~weaponType,")"
UnitDamageTargetHint="[NATIVE]  boolean UnitDamageTarget (unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)"


AddResourceAmount=AddResourceAmount
AddResourceAmount="AddResourceAmount(","unit ",,~whichUnit,", ","integer ",,~amount,")"
AddResourceAmountHint="[NATIVE]  nothing AddResourceAmount (unit whichUnit, integer amount)"


WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(","unit ",,~waygate,")"
WaygateGetDestinationXHint="[NATIVE]  real WaygateGetDestinationX (unit waygate)"


WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(","unit ",,~waygate,")"
WaygateGetDestinationYHint="[NATIVE]  real WaygateGetDestinationY (unit waygate)"


WaygateSetDestination=WaygateSetDestination
WaygateSetDestination="WaygateSetDestination(","unit ",,~waygate,", ","real ",,~x,", ","real ",,~y,")"
WaygateSetDestinationHint="[NATIVE]  nothing WaygateSetDestination (unit waygate, real x, real y)"


WaygateActivate=WaygateActivate
WaygateActivate="WaygateActivate(","unit ",,~waygate,", ","boolean ",,~activate,")"
WaygateActivateHint="[NATIVE]  nothing WaygateActivate (unit waygate, boolean activate)"


WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(","unit ",,~waygate,")"
WaygateIsActiveHint="[NATIVE]  boolean WaygateIsActive (unit waygate)"


RemoveItemFromStock=RemoveItemFromStock
RemoveItemFromStock="RemoveItemFromStock(","unit ",,~whichUnit,", ","integer ",,~itemId,")"
RemoveItemFromStockHint="[NATIVE]  nothing RemoveItemFromStock (unit whichUnit, integer itemId)"


RemoveUnitFromStock=RemoveUnitFromStock
RemoveUnitFromStock="RemoveUnitFromStock(","unit ",,~whichUnit,", ","integer ",,~unitId,")"
RemoveUnitFromStockHint="[NATIVE]  nothing RemoveUnitFromStock (unit whichUnit, integer unitId)"


Player=Player
Player="Player(","integer ",,~number,")"
PlayerHint="[NATIVE]  player Player (integer number)"


SetPlayerHandicap=SetPlayerHandicap
SetPlayerHandicap="SetPlayerHandicap(","player ",,~whichPlayer,", ","real ",,~handicap,")"
SetPlayerHandicapHint="[NATIVE]  nothing SetPlayerHandicap (player whichPlayer, real handicap)"


SetPlayerHandicapXP=SetPlayerHandicapXP
SetPlayerHandicapXP="SetPlayerHandicapXP(","player ",,~whichPlayer,", ","real ",,~handicap,")"
SetPlayerHandicapXPHint="[NATIVE]  nothing SetPlayerHandicapXP (player whichPlayer, real handicap)"


AddPlayerTechResearched=AddPlayerTechResearched
AddPlayerTechResearched="AddPlayerTechResearched(","player ",,~whichPlayer,", ","integer ",,~techid,", ","integer ",,~levels,")"
AddPlayerTechResearchedHint="[NATIVE]  nothing AddPlayerTechResearched (player whichPlayer, integer techid, integer levels)"


SetPlayerTechResearched=SetPlayerTechResearched
SetPlayerTechResearched="SetPlayerTechResearched(","player ",,~whichPlayer,", ","integer ",,~techid,", ","integer ",,~setToLevel,")"
SetPlayerTechResearchedHint="[NATIVE]  nothing SetPlayerTechResearched (player whichPlayer, integer techid, integer setToLevel)"


SetPlayerUnitsOwner=SetPlayerUnitsOwner
SetPlayerUnitsOwner="SetPlayerUnitsOwner(","player ",,~whichPlayer,", ","integer ",,~newOwner,")"
SetPlayerUnitsOwnerHint="[NATIVE]  nothing SetPlayerUnitsOwner (player whichPlayer, integer newOwner)"


CripplePlayer=CripplePlayer
CripplePlayer="CripplePlayer(","player ",,~whichPlayer,", ","force ",,~toWhichPlayers,", ","boolean ",,~flag,")"
CripplePlayerHint="[NATIVE]  nothing CripplePlayer (player whichPlayer, force toWhichPlayers, boolean flag)"


SetPlayerAbilityAvailable=SetPlayerAbilityAvailable
SetPlayerAbilityAvailable="SetPlayerAbilityAvailable(","player ",,~whichPlayer,", ","integer ",,~abilid,", ","boolean ",,~avail,")"
SetPlayerAbilityAvailableHint="[NATIVE]  nothing SetPlayerAbilityAvailable (player whichPlayer, integer abilid, boolean avail)"


RemovePlayer=RemovePlayer
RemovePlayer="RemovePlayer(","player ",,~whichPlayer,", ","playergameresult ",,~gameResult,")"
RemovePlayerHint="[NATIVE]  nothing RemovePlayer (player whichPlayer, playergameresult gameResult)"


CachePlayerHeroData=CachePlayerHeroData
CachePlayerHeroData="CachePlayerHeroData(","player ",,~whichPlayer,")"
CachePlayerHeroDataHint="[NATIVE]  nothing CachePlayerHeroData (player whichPlayer)"


SetFogStateRect=SetFogStateRect
SetFogStateRect="SetFogStateRect(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","rect ",,~where,", ","boolean ",,~useSharedVision,")"
SetFogStateRectHint="[NATIVE]  nothing SetFogStateRect (player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision)"


SetFogStateRadius=SetFogStateRadius
SetFogStateRadius="SetFogStateRadius(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","real ",,~centerX,", ","real ",,~centerY,", ","real ",,~radius,", ","boolean ",,~useSharedVision,")"
SetFogStateRadiusHint="[NATIVE]  nothing SetFogStateRadius (player forWhichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision)"


SetFogStateRadiusLoc=SetFogStateRadiusLoc
SetFogStateRadiusLoc="SetFogStateRadiusLoc(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","location ",,~center,", ","real ",,~radius,", ","boolean ",,~useSharedVision,")"
SetFogStateRadiusLocHint="[NATIVE]  nothing SetFogStateRadiusLoc (player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision)"


FogMaskEnable=FogMaskEnable
FogMaskEnable="FogMaskEnable(","boolean ",,~enable,")"
FogMaskEnableHint="[NATIVE]  nothing FogMaskEnable (boolean enable)"


FogEnable=FogEnable
FogEnable="FogEnable(","boolean ",,~enable,")"
FogEnableHint="[NATIVE]  nothing FogEnable (boolean enable)"


CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","rect ",,~where,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRectHint="[NATIVE]  fogmodifier CreateFogModifierRect (player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision, boolean afterUnits)"


CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","real ",,~centerX,", ","real ",,~centerY,", ","real ",,~radius,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE]  fogmodifier CreateFogModifierRadius (player forWhichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits)"


CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","location ",,~center,", ","real ",,~radius,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE]  fogmodifier CreateFogModifierRadiusLoc (player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits)"


VersionGet=VersionGet
VersionGet="VersionGet(",")"
VersionGetHint="[NATIVE]  version VersionGet ()"


VersionCompatible=VersionCompatible
VersionCompatible="VersionCompatible(","version ",,~whichVersion,")"
VersionCompatibleHint="[NATIVE]  boolean VersionCompatible (version whichVersion)"


VersionSupported=VersionSupported
VersionSupported="VersionSupported(","version ",,~whichVersion,")"
VersionSupportedHint="[NATIVE]  boolean VersionSupported (version whichVersion)"


ReloadGame=ReloadGame
ReloadGame="ReloadGame(",")"
ReloadGameHint="[NATIVE]  nothing ReloadGame ()"


SetCampaignMenuRace=SetCampaignMenuRace
SetCampaignMenuRace="SetCampaignMenuRace(","race ",,~r,")"
SetCampaignMenuRaceHint="[NATIVE]  nothing SetCampaignMenuRace (race r)"


SetCampaignMenuRaceEx=SetCampaignMenuRaceEx
SetCampaignMenuRaceEx="SetCampaignMenuRaceEx(","integer ",,~campaignIndex,")"
SetCampaignMenuRaceExHint="[NATIVE]  nothing SetCampaignMenuRaceEx (integer campaignIndex)"


ForceCampaignSelectScreen=ForceCampaignSelectScreen
ForceCampaignSelectScreen="ForceCampaignSelectScreen(",")"
ForceCampaignSelectScreenHint="[NATIVE]  nothing ForceCampaignSelectScreen ()"


LoadGame=LoadGame
LoadGame="LoadGame(","string ",,~saveFileName,", ","boolean ",,~doScoreScreen,")"
LoadGameHint="[NATIVE]  nothing LoadGame (string saveFileName, boolean doScoreScreen)"


SaveGame=SaveGame
SaveGame="SaveGame(","string ",,~saveFileName,")"
SaveGameHint="[NATIVE]  nothing SaveGame (string saveFileName)"


RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(","string ",,~sourceDirName,", ","string ",,~destDirName,")"
RenameSaveDirectoryHint="[NATIVE]  boolean RenameSaveDirectory (string sourceDirName, string destDirName)"


RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(","string ",,~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE]  boolean RemoveSaveDirectory (string sourceDirName)"


CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(","string ",,~sourceSaveName,", ","string ",,~destSaveName,")"
CopySaveGameHint="[NATIVE]  boolean CopySaveGame (string sourceSaveName, string destSaveName)"


SaveGameExists=SaveGameExists
SaveGameExists="SaveGameExists(","string ",,~saveName,")"
SaveGameExistsHint="[NATIVE]  boolean SaveGameExists (string saveName)"


SetFloatGameState=SetFloatGameState
SetFloatGameState="SetFloatGameState(","fgamestate ",,~whichFloatGameState,", ","real ",,~value,")"
SetFloatGameStateHint="[NATIVE]  nothing SetFloatGameState (fgamestate whichFloatGameState, real value)"


SetTutorialCleared=SetTutorialCleared
SetTutorialCleared="SetTutorialCleared(","boolean ",,~cleared,")"
SetTutorialClearedHint="[NATIVE]  nothing SetTutorialCleared (boolean cleared)"


SetMissionAvailable=SetMissionAvailable
SetMissionAvailable="SetMissionAvailable(","integer ",,~campaignNumber,", ","integer ",,~missionNumber,", ","boolean ",,~available,")"
SetMissionAvailableHint="[NATIVE]  nothing SetMissionAvailable (integer campaignNumber, integer missionNumber, boolean available)"


SetCampaignAvailable=SetCampaignAvailable
SetCampaignAvailable="SetCampaignAvailable(","integer ",,~campaignNumber,", ","boolean ",,~available,")"
SetCampaignAvailableHint="[NATIVE]  nothing SetCampaignAvailable (integer campaignNumber, boolean available)"


SetOpCinematicAvailable=SetOpCinematicAvailable
SetOpCinematicAvailable="SetOpCinematicAvailable(","integer ",,~campaignNumber,", ","boolean ",,~available,")"
SetOpCinematicAvailableHint="[NATIVE]  nothing SetOpCinematicAvailable (integer campaignNumber, boolean available)"


SetEdCinematicAvailable=SetEdCinematicAvailable
SetEdCinematicAvailable="SetEdCinematicAvailable(","integer ",,~campaignNumber,", ","boolean ",,~available,")"
SetEdCinematicAvailableHint="[NATIVE]  nothing SetEdCinematicAvailable (integer campaignNumber, boolean available)"


SetDefaultDifficulty=SetDefaultDifficulty
SetDefaultDifficulty="SetDefaultDifficulty(","gamedifficulty ",,~g,")"
SetDefaultDifficultyHint="[NATIVE]  nothing SetDefaultDifficulty (gamedifficulty g)"


SetCustomCampaignButtonVisible=SetCustomCampaignButtonVisible
SetCustomCampaignButtonVisible="SetCustomCampaignButtonVisible(","integer ",,~whichButton,", ","boolean ",,~visible,")"
SetCustomCampaignButtonVisibleHint="[NATIVE]  nothing SetCustomCampaignButtonVisible (integer whichButton, boolean visible)"


DialogCreate=DialogCreate
DialogCreate="DialogCreate(",")"
DialogCreateHint="[NATIVE]  dialog DialogCreate ()"


DialogClear=DialogClear
DialogClear="DialogClear(","dialog ",,~whichDialog,")"
DialogClearHint="[NATIVE]  nothing DialogClear (dialog whichDialog)"


DialogSetMessage=DialogSetMessage
DialogSetMessage="DialogSetMessage(","dialog ",,~whichDialog,", ","string ",,~messageText,")"
DialogSetMessageHint="[NATIVE]  nothing DialogSetMessage (dialog whichDialog, string messageText)"


DialogDisplay=DialogDisplay
DialogDisplay="DialogDisplay(","player ",,~whichPlayer,", ","dialog ",,~whichDialog,", ","boolean ",,~flag,")"
DialogDisplayHint="[NATIVE]  nothing DialogDisplay (player whichPlayer, dialog whichDialog, boolean flag)"


InitGameCache=InitGameCache
InitGameCache="InitGameCache(","string ",,~campaignFile,")"
InitGameCacheHint="[NATIVE]  gamecache InitGameCache (string campaignFile)"


SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(","gamecache ",,~whichCache,")"
SaveGameCacheHint="[NATIVE]  boolean SaveGameCache (gamecache whichCache)"


StoreInteger=StoreInteger
StoreInteger="StoreInteger(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","integer ",,~value,")"
StoreIntegerHint="[NATIVE]  nothing StoreInteger (gamecache cache, string missionKey, string key, integer value)"


StoreReal=StoreReal
StoreReal="StoreReal(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","real ",,~value,")"
StoreRealHint="[NATIVE]  nothing StoreReal (gamecache cache, string missionKey, string key, real value)"


StoreBoolean=StoreBoolean
StoreBoolean="StoreBoolean(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","boolean ",,~value,")"
StoreBooleanHint="[NATIVE]  nothing StoreBoolean (gamecache cache, string missionKey, string key, boolean value)"


StoreUnit=StoreUnit
StoreUnit="StoreUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","unit ",,~whichUnit,")"
StoreUnitHint="[NATIVE]  boolean StoreUnit (gamecache cache, string missionKey, string key, unit whichUnit)"


SyncStoredInteger=SyncStoredInteger
SyncStoredInteger="SyncStoredInteger(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
SyncStoredIntegerHint="[NATIVE]  nothing SyncStoredInteger (gamecache cache, string missionKey, string key)"


SyncStoredReal=SyncStoredReal
SyncStoredReal="SyncStoredReal(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
SyncStoredRealHint="[NATIVE]  nothing SyncStoredReal (gamecache cache, string missionKey, string key)"


SyncStoredBoolean=SyncStoredBoolean
SyncStoredBoolean="SyncStoredBoolean(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
SyncStoredBooleanHint="[NATIVE]  nothing SyncStoredBoolean (gamecache cache, string missionKey, string key)"


SyncStoredUnit=SyncStoredUnit
SyncStoredUnit="SyncStoredUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
SyncStoredUnitHint="[NATIVE]  nothing SyncStoredUnit (gamecache cache, string missionKey, string key)"


HaveStoredInteger=HaveStoredInteger
HaveStoredInteger="HaveStoredInteger(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
HaveStoredIntegerHint="[NATIVE]  boolean HaveStoredInteger (gamecache cache, string missionKey, string key)"


HaveStoredReal=HaveStoredReal
HaveStoredReal="HaveStoredReal(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
HaveStoredRealHint="[NATIVE]  boolean HaveStoredReal (gamecache cache, string missionKey, string key)"


HaveStoredBoolean=HaveStoredBoolean
HaveStoredBoolean="HaveStoredBoolean(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
HaveStoredBooleanHint="[NATIVE]  boolean HaveStoredBoolean (gamecache cache, string missionKey, string key)"


HaveStoredUnit=HaveStoredUnit
HaveStoredUnit="HaveStoredUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
HaveStoredUnitHint="[NATIVE]  boolean HaveStoredUnit (gamecache cache, string missionKey, string key)"


FlushGameCache=FlushGameCache
FlushGameCache="FlushGameCache(","gamecache ",,~cache,")"
FlushGameCacheHint="[NATIVE]  nothing FlushGameCache (gamecache cache)"


FlushStoredMission=FlushStoredMission
FlushStoredMission="FlushStoredMission(","gamecache ",,~cache,", ","string ",,~missionKey,")"
FlushStoredMissionHint="[NATIVE]  nothing FlushStoredMission (gamecache cache, string missionKey)"


RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","player ",,~forWhichPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
RestoreUnitHint="[NATIVE]  unit RestoreUnit (gamecache cache, string missionKey, string key, player forWhichPlayer, real x, real y, real facing)"


InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE]  hashtable InitHashtable ()"


SaveInteger=SaveInteger
SaveInteger="SaveInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","integer ",,~value,")"
SaveIntegerHint="[NATIVE]  nothing SaveInteger (hashtable table, integer parentKey, integer childKey, integer value)"


SaveReal=SaveReal
SaveReal="SaveReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","real ",,~value,")"
SaveRealHint="[NATIVE]  nothing SaveReal (hashtable table, integer parentKey, integer childKey, real value)"


SaveBoolean=SaveBoolean
SaveBoolean="SaveBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","boolean ",,~value,")"
SaveBooleanHint="[NATIVE]  nothing SaveBoolean (hashtable table, integer parentKey, integer childKey, boolean value)"


SaveStr=SaveStr
SaveStr="SaveStr(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","string ",,~value,")"
SaveStrHint="[NATIVE]  boolean SaveStr (hashtable table, integer parentKey, integer childKey, string value)"


SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","player ",,~whichPlayer,")"
SavePlayerHandleHint="[NATIVE]  boolean SavePlayerHandle (hashtable table, integer parentKey, integer childKey, player whichPlayer)"


SaveWidgetHandle=SaveWidgetHandle
SaveWidgetHandle="SaveWidgetHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","widget ",,~whichWidget,")"
SaveWidgetHandleHint="[NATIVE]  boolean SaveWidgetHandle (hashtable table, integer parentKey, integer childKey, widget whichWidget)"


SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","destructable ",,~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE]  boolean SaveDestructableHandle (hashtable table, integer parentKey, integer childKey, destructable whichDestructable)"


SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","item ",,~whichItem,")"
SaveItemHandleHint="[NATIVE]  boolean SaveItemHandle (hashtable table, integer parentKey, integer childKey, item whichItem)"


SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","unit ",,~whichUnit,")"
SaveUnitHandleHint="[NATIVE]  boolean SaveUnitHandle (hashtable table, integer parentKey, integer childKey, unit whichUnit)"


SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","ability ",,~whichAbility,")"
SaveAbilityHandleHint="[NATIVE]  boolean SaveAbilityHandle (hashtable table, integer parentKey, integer childKey, ability whichAbility)"


SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","timer ",,~whichTimer,")"
SaveTimerHandleHint="[NATIVE]  boolean SaveTimerHandle (hashtable table, integer parentKey, integer childKey, timer whichTimer)"


SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","trigger ",,~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE]  boolean SaveTriggerHandle (hashtable table, integer parentKey, integer childKey, trigger whichTrigger)"


SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","triggercondition ",,~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE]  boolean SaveTriggerConditionHandle (hashtable table, integer parentKey, integer childKey, triggercondition whichTriggercondition)"


SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","triggeraction ",,~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE]  boolean SaveTriggerActionHandle (hashtable table, integer parentKey, integer childKey, triggeraction whichTriggeraction)"


SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","event ",,~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE]  boolean SaveTriggerEventHandle (hashtable table, integer parentKey, integer childKey, event whichEvent)"


SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","force ",,~whichForce,")"
SaveForceHandleHint="[NATIVE]  boolean SaveForceHandle (hashtable table, integer parentKey, integer childKey, force whichForce)"


SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","group ",,~whichGroup,")"
SaveGroupHandleHint="[NATIVE]  boolean SaveGroupHandle (hashtable table, integer parentKey, integer childKey, group whichGroup)"


SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","location ",,~whichLocation,")"
SaveLocationHandleHint="[NATIVE]  boolean SaveLocationHandle (hashtable table, integer parentKey, integer childKey, location whichLocation)"


SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","rect ",,~whichRect,")"
SaveRectHandleHint="[NATIVE]  boolean SaveRectHandle (hashtable table, integer parentKey, integer childKey, rect whichRect)"


SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","boolexpr ",,~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE]  boolean SaveBooleanExprHandle (hashtable table, integer parentKey, integer childKey, boolexpr whichBoolexpr)"


SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","sound ",,~whichSound,")"
SaveSoundHandleHint="[NATIVE]  boolean SaveSoundHandle (hashtable table, integer parentKey, integer childKey, sound whichSound)"


SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","effect ",,~whichEffect,")"
SaveEffectHandleHint="[NATIVE]  boolean SaveEffectHandle (hashtable table, integer parentKey, integer childKey, effect whichEffect)"


SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","unitpool ",,~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE]  boolean SaveUnitPoolHandle (hashtable table, integer parentKey, integer childKey, unitpool whichUnitpool)"


SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","itempool ",,~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE]  boolean SaveItemPoolHandle (hashtable table, integer parentKey, integer childKey, itempool whichItempool)"


SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","quest ",,~whichQuest,")"
SaveQuestHandleHint="[NATIVE]  boolean SaveQuestHandle (hashtable table, integer parentKey, integer childKey, quest whichQuest)"


SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","questitem ",,~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE]  boolean SaveQuestItemHandle (hashtable table, integer parentKey, integer childKey, questitem whichQuestitem)"


SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","defeatcondition ",,~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE]  boolean SaveDefeatConditionHandle (hashtable table, integer parentKey, integer childKey, defeatcondition whichDefeatcondition)"


SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","timerdialog ",,~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE]  boolean SaveTimerDialogHandle (hashtable table, integer parentKey, integer childKey, timerdialog whichTimerdialog)"


SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","leaderboard ",,~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE]  boolean SaveLeaderboardHandle (hashtable table, integer parentKey, integer childKey, leaderboard whichLeaderboard)"


SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","multiboard ",,~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE]  boolean SaveMultiboardHandle (hashtable table, integer parentKey, integer childKey, multiboard whichMultiboard)"


SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","multiboarditem ",,~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE]  boolean SaveMultiboardItemHandle (hashtable table, integer parentKey, integer childKey, multiboarditem whichMultiboarditem)"


SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","trackable ",,~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE]  boolean SaveTrackableHandle (hashtable table, integer parentKey, integer childKey, trackable whichTrackable)"


SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","dialog ",,~whichDialog,")"
SaveDialogHandleHint="[NATIVE]  boolean SaveDialogHandle (hashtable table, integer parentKey, integer childKey, dialog whichDialog)"


SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","button ",,~whichButton,")"
SaveButtonHandleHint="[NATIVE]  boolean SaveButtonHandle (hashtable table, integer parentKey, integer childKey, button whichButton)"


SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","texttag ",,~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE]  boolean SaveTextTagHandle (hashtable table, integer parentKey, integer childKey, texttag whichTexttag)"


SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","lightning ",,~whichLightning,")"
SaveLightningHandleHint="[NATIVE]  boolean SaveLightningHandle (hashtable table, integer parentKey, integer childKey, lightning whichLightning)"


SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","image ",,~whichImage,")"
SaveImageHandleHint="[NATIVE]  boolean SaveImageHandle (hashtable table, integer parentKey, integer childKey, image whichImage)"


SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","ubersplat ",,~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE]  boolean SaveUbersplatHandle (hashtable table, integer parentKey, integer childKey, ubersplat whichUbersplat)"


SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","region ",,~whichRegion,")"
SaveRegionHandleHint="[NATIVE]  boolean SaveRegionHandle (hashtable table, integer parentKey, integer childKey, region whichRegion)"


SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","fogstate ",,~whichFogState,")"
SaveFogStateHandleHint="[NATIVE]  boolean SaveFogStateHandle (hashtable table, integer parentKey, integer childKey, fogstate whichFogState)"


SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","fogmodifier ",,~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE]  boolean SaveFogModifierHandle (hashtable table, integer parentKey, integer childKey, fogmodifier whichFogModifier)"


SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","agent ",,~whichAgent,")"
SaveAgentHandleHint="[NATIVE]  boolean SaveAgentHandle (hashtable table, integer parentKey, integer childKey, agent whichAgent)"


SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","hashtable ",,~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE]  boolean SaveHashtableHandle (hashtable table, integer parentKey, integer childKey, hashtable whichHashtable)"


LoadInteger=LoadInteger
LoadInteger="LoadInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadIntegerHint="[NATIVE]  integer LoadInteger (hashtable table, integer parentKey, integer childKey)"


LoadReal=LoadReal
LoadReal="LoadReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRealHint="[NATIVE]  real LoadReal (hashtable table, integer parentKey, integer childKey)"


LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBooleanHint="[NATIVE]  boolean LoadBoolean (hashtable table, integer parentKey, integer childKey)"


LoadStr=LoadStr
LoadStr="LoadStr(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadStrHint="[NATIVE]  string LoadStr (hashtable table, integer parentKey, integer childKey)"


LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadPlayerHandleHint="[NATIVE]  player LoadPlayerHandle (hashtable table, integer parentKey, integer childKey)"


LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWidgetHandleHint="[NATIVE]  widget LoadWidgetHandle (hashtable table, integer parentKey, integer childKey)"


LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDestructableHandleHint="[NATIVE]  destructable LoadDestructableHandle (hashtable table, integer parentKey, integer childKey)"


LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadItemHandleHint="[NATIVE]  item LoadItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUnitHandleHint="[NATIVE]  unit LoadUnitHandle (hashtable table, integer parentKey, integer childKey)"


LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadAbilityHandleHint="[NATIVE]  ability LoadAbilityHandle (hashtable table, integer parentKey, integer childKey)"


LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTimerHandleHint="[NATIVE]  timer LoadTimerHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerHandleHint="[NATIVE]  trigger LoadTriggerHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE]  triggercondition LoadTriggerConditionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerActionHandleHint="[NATIVE]  triggeraction LoadTriggerActionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerEventHandleHint="[NATIVE]  event LoadTriggerEventHandle (hashtable table, integer parentKey, integer childKey)"


LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadForceHandleHint="[NATIVE]  force LoadForceHandle (hashtable table, integer parentKey, integer childKey)"


LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadGroupHandleHint="[NATIVE]  group LoadGroupHandle (hashtable table, integer parentKey, integer childKey)"


LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLocationHandleHint="[NATIVE]  location LoadLocationHandle (hashtable table, integer parentKey, integer childKey)"


LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRectHandleHint="[NATIVE]  rect LoadRectHandle (hashtable table, integer parentKey, integer childKey)"


LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBooleanExprHandleHint="[NATIVE]  boolexpr LoadBooleanExprHandle (hashtable table, integer parentKey, integer childKey)"


LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadSoundHandleHint="[NATIVE]  sound LoadSoundHandle (hashtable table, integer parentKey, integer childKey)"


LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadEffectHandleHint="[NATIVE]  effect LoadEffectHandle (hashtable table, integer parentKey, integer childKey)"


LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUnitPoolHandleHint="[NATIVE]  unitpool LoadUnitPoolHandle (hashtable table, integer parentKey, integer childKey)"


LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadItemPoolHandleHint="[NATIVE]  itempool LoadItemPoolHandle (hashtable table, integer parentKey, integer childKey)"


LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadQuestHandleHint="[NATIVE]  quest LoadQuestHandle (hashtable table, integer parentKey, integer childKey)"


LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadQuestItemHandleHint="[NATIVE]  questitem LoadQuestItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE]  defeatcondition LoadDefeatConditionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTimerDialogHandleHint="[NATIVE]  timerdialog LoadTimerDialogHandle (hashtable table, integer parentKey, integer childKey)"


LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLeaderboardHandleHint="[NATIVE]  leaderboard LoadLeaderboardHandle (hashtable table, integer parentKey, integer childKey)"


LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadMultiboardHandleHint="[NATIVE]  multiboard LoadMultiboardHandle (hashtable table, integer parentKey, integer childKey)"


LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE]  multiboarditem LoadMultiboardItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTrackableHandleHint="[NATIVE]  trackable LoadTrackableHandle (hashtable table, integer parentKey, integer childKey)"


LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDialogHandleHint="[NATIVE]  dialog LoadDialogHandle (hashtable table, integer parentKey, integer childKey)"


LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadButtonHandleHint="[NATIVE]  button LoadButtonHandle (hashtable table, integer parentKey, integer childKey)"


LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTextTagHandleHint="[NATIVE]  texttag LoadTextTagHandle (hashtable table, integer parentKey, integer childKey)"


LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLightningHandleHint="[NATIVE]  lightning LoadLightningHandle (hashtable table, integer parentKey, integer childKey)"


LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadImageHandleHint="[NATIVE]  image LoadImageHandle (hashtable table, integer parentKey, integer childKey)"


LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUbersplatHandleHint="[NATIVE]  ubersplat LoadUbersplatHandle (hashtable table, integer parentKey, integer childKey)"


LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRegionHandleHint="[NATIVE]  region LoadRegionHandle (hashtable table, integer parentKey, integer childKey)"


LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFogStateHandleHint="[NATIVE]  fogstate LoadFogStateHandle (hashtable table, integer parentKey, integer childKey)"


LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFogModifierHandleHint="[NATIVE]  fogmodifier LoadFogModifierHandle (hashtable table, integer parentKey, integer childKey)"


LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHashtableHandleHint="[NATIVE]  hashtable LoadHashtableHandle (hashtable table, integer parentKey, integer childKey)"


HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedIntegerHint="[NATIVE]  boolean HaveSavedInteger (hashtable table, integer parentKey, integer childKey)"


HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedRealHint="[NATIVE]  boolean HaveSavedReal (hashtable table, integer parentKey, integer childKey)"


HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedBooleanHint="[NATIVE]  boolean HaveSavedBoolean (hashtable table, integer parentKey, integer childKey)"


HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedHandleHint="[NATIVE]  boolean HaveSavedHandle (hashtable table, integer parentKey, integer childKey)"


RemoveSavedInteger=RemoveSavedInteger
RemoveSavedInteger="RemoveSavedInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
RemoveSavedIntegerHint="[NATIVE]  nothing RemoveSavedInteger (hashtable table, integer parentKey, integer childKey)"


RemoveSavedReal=RemoveSavedReal
RemoveSavedReal="RemoveSavedReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
RemoveSavedRealHint="[NATIVE]  nothing RemoveSavedReal (hashtable table, integer parentKey, integer childKey)"


RemoveSavedBoolean=RemoveSavedBoolean
RemoveSavedBoolean="RemoveSavedBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
RemoveSavedBooleanHint="[NATIVE]  nothing RemoveSavedBoolean (hashtable table, integer parentKey, integer childKey)"


RemoveSavedHandle=RemoveSavedHandle
RemoveSavedHandle="RemoveSavedHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
RemoveSavedHandleHint="[NATIVE]  nothing RemoveSavedHandle (hashtable table, integer parentKey, integer childKey)"


FlushParentHashtable=FlushParentHashtable
FlushParentHashtable="FlushParentHashtable(","hashtable ",,~table,")"
FlushParentHashtableHint="[NATIVE]  nothing FlushParentHashtable (hashtable table)"


FlushChildHashtable=FlushChildHashtable
FlushChildHashtable="FlushChildHashtable(","hashtable ",,~table,", ","integer ",,~parentKey,")"
FlushChildHashtableHint="[NATIVE]  nothing FlushChildHashtable (hashtable table, integer parentKey)"


CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE]  unitpool CreateUnitPool ()"


DestroyUnitPool=DestroyUnitPool
DestroyUnitPool="DestroyUnitPool(","unitpool ",,~whichPool,")"
DestroyUnitPoolHint="[NATIVE]  nothing DestroyUnitPool (unitpool whichPool)"


UnitPoolAddUnitType=UnitPoolAddUnitType
UnitPoolAddUnitType="UnitPoolAddUnitType(","unitpool ",,~whichPool,", ","integer ",,~unitId,", ","real ",,~weight,")"
UnitPoolAddUnitTypeHint="[NATIVE]  nothing UnitPoolAddUnitType (unitpool whichPool, integer unitId, real weight)"


UnitPoolRemoveUnitType=UnitPoolRemoveUnitType
UnitPoolRemoveUnitType="UnitPoolRemoveUnitType(","unitpool ",,~whichPool,", ","integer ",,~unitId,")"
UnitPoolRemoveUnitTypeHint="[NATIVE]  nothing UnitPoolRemoveUnitType (unitpool whichPool, integer unitId)"


PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(","unitpool ",,~whichPool,", ","player ",,~forWhichPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
PlaceRandomUnitHint="[NATIVE]  unit PlaceRandomUnit (unitpool whichPool, player forWhichPlayer, real x, real y, real facing)"


CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE]  itempool CreateItemPool ()"


DestroyItemPool=DestroyItemPool
DestroyItemPool="DestroyItemPool(","itempool ",,~whichItemPool,")"
DestroyItemPoolHint="[NATIVE]  nothing DestroyItemPool (itempool whichItemPool)"


ItemPoolAddItemType=ItemPoolAddItemType
ItemPoolAddItemType="ItemPoolAddItemType(","itempool ",,~whichItemPool,", ","integer ",,~itemId,", ","real ",,~weight,")"
ItemPoolAddItemTypeHint="[NATIVE]  nothing ItemPoolAddItemType (itempool whichItemPool, integer itemId, real weight)"


ItemPoolRemoveItemType=ItemPoolRemoveItemType
ItemPoolRemoveItemType="ItemPoolRemoveItemType(","itempool ",,~whichItemPool,", ","integer ",,~itemId,")"
ItemPoolRemoveItemTypeHint="[NATIVE]  nothing ItemPoolRemoveItemType (itempool whichItemPool, integer itemId)"


PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(","itempool ",,~whichItemPool,", ","real ",,~x,", ","real ",,~y,")"
PlaceRandomItemHint="[NATIVE]  item PlaceRandomItem (itempool whichItemPool, real x, real y)"


ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(","integer ",,~level,")"
ChooseRandomCreepHint="[NATIVE]  integer ChooseRandomCreep (integer level)"


ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE]  integer ChooseRandomNPBuilding ()"


ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(","integer ",,~level,")"
ChooseRandomItemHint="[NATIVE]  integer ChooseRandomItem (integer level)"


ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(","itemtype ",,~whichType,", ","integer ",,~level,")"
ChooseRandomItemExHint="[NATIVE]  integer ChooseRandomItemEx (itemtype whichType, integer level)"


SetRandomSeed=SetRandomSeed
SetRandomSeed="SetRandomSeed(","integer ",,~seed,")"
SetRandomSeedHint="[NATIVE]  nothing SetRandomSeed (integer seed)"


SetTerrainFog=SetTerrainFog
SetTerrainFog="SetTerrainFog(","real ",,~a,", ","real ",,~b,", ","real ",,~c,", ","real ",,~d,", ","real ",,~e,")"
SetTerrainFogHint="[NATIVE]  nothing SetTerrainFog (real a, real b, real c, real d, real e)"


ResetTerrainFog=ResetTerrainFog
ResetTerrainFog="ResetTerrainFog(",")"
ResetTerrainFogHint="[NATIVE]  nothing ResetTerrainFog ()"


SetUnitFog=SetUnitFog
SetUnitFog="SetUnitFog(","real ",,~a,", ","real ",,~b,", ","real ",,~c,", ","real ",,~d,", ","real ",,~e,")"
SetUnitFogHint="[NATIVE]  nothing SetUnitFog (real a, real b, real c, real d, real e)"


SetTerrainFogEx=SetTerrainFogEx
SetTerrainFogEx="SetTerrainFogEx(","integer ",,~style,", ","real ",,~zstart,", ","real ",,~zend,", ","real ",,~density,", ","real ",,~red,", ","real ",,~green,", ","real ",,~blue,")"
SetTerrainFogExHint="[NATIVE]  nothing SetTerrainFogEx (integer style, real zstart, real zend, real density, real red, real green, real blue)"


DisplayTimedTextFromPlayer=DisplayTimedTextFromPlayer
DisplayTimedTextFromPlayer="DisplayTimedTextFromPlayer(","player ",,~toPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~duration,", ","string ",,~message,")"
DisplayTimedTextFromPlayerHint="[NATIVE]  nothing DisplayTimedTextFromPlayer (player toPlayer, real x, real y, real duration, string message)"


ClearTextMessages=ClearTextMessages
ClearTextMessages="ClearTextMessages(",")"
ClearTextMessagesHint="[NATIVE]  nothing ClearTextMessages ()"


SetDayNightModels=SetDayNightModels
SetDayNightModels="SetDayNightModels(","string ",,~terrainDNCFile,", ","string ",,~unitDNCFile,")"
SetDayNightModelsHint="[NATIVE]  nothing SetDayNightModels (string terrainDNCFile, string unitDNCFile)"


EnableUserControl=EnableUserControl
EnableUserControl="EnableUserControl(","boolean ",,~b,")"
EnableUserControlHint="[NATIVE]  nothing EnableUserControl (boolean b)"


SuspendTimeOfDay=SuspendTimeOfDay
SuspendTimeOfDay="SuspendTimeOfDay(","boolean ",,~b,")"
SuspendTimeOfDayHint="[NATIVE]  nothing SuspendTimeOfDay (boolean b)"


SetTimeOfDayScale=SetTimeOfDayScale
SetTimeOfDayScale="SetTimeOfDayScale(","real ",,~r,")"
SetTimeOfDayScaleHint="[NATIVE]  nothing SetTimeOfDayScale (real r)"


ShowInterface=ShowInterface
ShowInterface="ShowInterface(","boolean ",,~flag,", ","real ",,~fadeDuration,")"
ShowInterfaceHint="[NATIVE]  nothing ShowInterface (boolean flag, real fadeDuration)"


PauseGame=PauseGame
PauseGame="PauseGame(","boolean ",,~flag,")"
PauseGameHint="[NATIVE]  nothing PauseGame (boolean flag)"


UnitAddIndicator=UnitAddIndicator
UnitAddIndicator="UnitAddIndicator(","unit ",,~whichUnit,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
UnitAddIndicatorHint="[NATIVE]  nothing UnitAddIndicator (unit whichUnit, integer red, integer green, integer blue, integer alpha)"


AddIndicator=AddIndicator
AddIndicator="AddIndicator(","widget ",,~whichWidget,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
AddIndicatorHint="[NATIVE]  nothing AddIndicator (widget whichWidget, integer red, integer green, integer blue, integer alpha)"


PingMinimap=PingMinimap
PingMinimap="PingMinimap(","real ",,~x,", ","real ",,~y,", ","real ",,~duration,")"
PingMinimapHint="[NATIVE]  nothing PingMinimap (real x, real y, real duration)"


PingMinimapEx=PingMinimapEx
PingMinimapEx="PingMinimapEx(","real ",,~x,", ","real ",,~y,", ","real ",,~duration,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","boolean ",,~extraEffects,")"
PingMinimapExHint="[NATIVE]  nothing PingMinimapEx (real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects)"


EnableOcclusion=EnableOcclusion
EnableOcclusion="EnableOcclusion(","boolean ",,~flag,")"
EnableOcclusionHint="[NATIVE]  nothing EnableOcclusion (boolean flag)"


SetIntroShotText=SetIntroShotText
SetIntroShotText="SetIntroShotText(","string ",,~introText,")"
SetIntroShotTextHint="[NATIVE]  nothing SetIntroShotText (string introText)"


SetIntroShotModel=SetIntroShotModel
SetIntroShotModel="SetIntroShotModel(","string ",,~introModelPath,")"
SetIntroShotModelHint="[NATIVE]  nothing SetIntroShotModel (string introModelPath)"


EnableWorldFogBoundary=EnableWorldFogBoundary
EnableWorldFogBoundary="EnableWorldFogBoundary(","boolean ",,~b,")"
EnableWorldFogBoundaryHint="[NATIVE]  nothing EnableWorldFogBoundary (boolean b)"


PlayModelCinematic=PlayModelCinematic
PlayModelCinematic="PlayModelCinematic(","string ",,~modelName,")"
PlayModelCinematicHint="[NATIVE]  nothing PlayModelCinematic (string modelName)"


ForceUIKey=ForceUIKey
ForceUIKey="ForceUIKey(","string ",,~key,")"
ForceUIKeyHint="[NATIVE]  nothing ForceUIKey (string key)"


ForceUICancel=ForceUICancel
ForceUICancel="ForceUICancel(",")"
ForceUICancelHint="[NATIVE]  nothing ForceUICancel ()"


DisplayLoadDialog=DisplayLoadDialog
DisplayLoadDialog="DisplayLoadDialog(",")"
DisplayLoadDialogHint="[NATIVE]  nothing DisplayLoadDialog ()"


CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE]  texttag CreateTextTag ()"


DestroyTextTag=DestroyTextTag
DestroyTextTag="DestroyTextTag(","texttag ",,~t,")"
DestroyTextTagHint="[NATIVE]  nothing DestroyTextTag (texttag t)"


SetTextTagText=SetTextTagText
SetTextTagText="SetTextTagText(","texttag ",,~t,", ","string ",,~s,", ","real ",,~height,")"
SetTextTagTextHint="[NATIVE]  nothing SetTextTagText (texttag t, string s, real height)"


SetTextTagPos=SetTextTagPos
SetTextTagPos="SetTextTagPos(","texttag ",,~t,", ","real ",,~x,", ","real ",,~y,", ","real ",,~heightOffset,")"
SetTextTagPosHint="[NATIVE]  nothing SetTextTagPos (texttag t, real x, real y, real heightOffset)"


SetTextTagPosUnit=SetTextTagPosUnit
SetTextTagPosUnit="SetTextTagPosUnit(","texttag ",,~t,", ","unit ",,~whichUnit,", ","real ",,~heightOffset,")"
SetTextTagPosUnitHint="[NATIVE]  nothing SetTextTagPosUnit (texttag t, unit whichUnit, real heightOffset)"


SetTextTagColor=SetTextTagColor
SetTextTagColor="SetTextTagColor(","texttag ",,~t,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetTextTagColorHint="[NATIVE]  nothing SetTextTagColor (texttag t, integer red, integer green, integer blue, integer alpha)"


SetTextTagVelocity=SetTextTagVelocity
SetTextTagVelocity="SetTextTagVelocity(","texttag ",,~t,", ","real ",,~xvel,", ","real ",,~yvel,")"
SetTextTagVelocityHint="[NATIVE]  nothing SetTextTagVelocity (texttag t, real xvel, real yvel)"


SetTextTagVisibility=SetTextTagVisibility
SetTextTagVisibility="SetTextTagVisibility(","texttag ",,~t,", ","boolean ",,~flag,")"
SetTextTagVisibilityHint="[NATIVE]  nothing SetTextTagVisibility (texttag t, boolean flag)"


SetTextTagSuspended=SetTextTagSuspended
SetTextTagSuspended="SetTextTagSuspended(","texttag ",,~t,", ","boolean ",,~flag,")"
SetTextTagSuspendedHint="[NATIVE]  nothing SetTextTagSuspended (texttag t, boolean flag)"


SetTextTagPermanent=SetTextTagPermanent
SetTextTagPermanent="SetTextTagPermanent(","texttag ",,~t,", ","boolean ",,~flag,")"
SetTextTagPermanentHint="[NATIVE]  nothing SetTextTagPermanent (texttag t, boolean flag)"


SetTextTagAge=SetTextTagAge
SetTextTagAge="SetTextTagAge(","texttag ",,~t,", ","real ",,~age,")"
SetTextTagAgeHint="[NATIVE]  nothing SetTextTagAge (texttag t, real age)"


SetTextTagLifespan=SetTextTagLifespan
SetTextTagLifespan="SetTextTagLifespan(","texttag ",,~t,", ","real ",,~lifespan,")"
SetTextTagLifespanHint="[NATIVE]  nothing SetTextTagLifespan (texttag t, real lifespan)"


SetTextTagFadepoint=SetTextTagFadepoint
SetTextTagFadepoint="SetTextTagFadepoint(","texttag ",,~t,", ","real ",,~fadepoint,")"
SetTextTagFadepointHint="[NATIVE]  nothing SetTextTagFadepoint (texttag t, real fadepoint)"


CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE]  quest CreateQuest ()"


DestroyQuest=DestroyQuest
DestroyQuest="DestroyQuest(","quest ",,~whichQuest,")"
DestroyQuestHint="[NATIVE]  nothing DestroyQuest (quest whichQuest)"


QuestSetTitle=QuestSetTitle
QuestSetTitle="QuestSetTitle(","quest ",,~whichQuest,", ","string ",,~title,")"
QuestSetTitleHint="[NATIVE]  nothing QuestSetTitle (quest whichQuest, string title)"


QuestSetDescription=QuestSetDescription
QuestSetDescription="QuestSetDescription(","quest ",,~whichQuest,", ","string ",,~description,")"
QuestSetDescriptionHint="[NATIVE]  nothing QuestSetDescription (quest whichQuest, string description)"


QuestSetIconPath=QuestSetIconPath
QuestSetIconPath="QuestSetIconPath(","quest ",,~whichQuest,", ","string ",,~iconPath,")"
QuestSetIconPathHint="[NATIVE]  nothing QuestSetIconPath (quest whichQuest, string iconPath)"


QuestSetRequired=QuestSetRequired
QuestSetRequired="QuestSetRequired(","quest ",,~whichQuest,", ","boolean ",,~required,")"
QuestSetRequiredHint="[NATIVE]  nothing QuestSetRequired (quest whichQuest, boolean required)"


QuestSetCompleted=QuestSetCompleted
QuestSetCompleted="QuestSetCompleted(","quest ",,~whichQuest,", ","boolean ",,~completed,")"
QuestSetCompletedHint="[NATIVE]  nothing QuestSetCompleted (quest whichQuest, boolean completed)"


QuestSetDiscovered=QuestSetDiscovered
QuestSetDiscovered="QuestSetDiscovered(","quest ",,~whichQuest,", ","boolean ",,~discovered,")"
QuestSetDiscoveredHint="[NATIVE]  nothing QuestSetDiscovered (quest whichQuest, boolean discovered)"


QuestSetFailed=QuestSetFailed
QuestSetFailed="QuestSetFailed(","quest ",,~whichQuest,", ","boolean ",,~failed,")"
QuestSetFailedHint="[NATIVE]  nothing QuestSetFailed (quest whichQuest, boolean failed)"


QuestSetEnabled=QuestSetEnabled
QuestSetEnabled="QuestSetEnabled(","quest ",,~whichQuest,", ","boolean ",,~enabled,")"
QuestSetEnabledHint="[NATIVE]  nothing QuestSetEnabled (quest whichQuest, boolean enabled)"


QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(","quest ",,~whichQuest,")"
QuestCreateItemHint="[NATIVE]  questitem QuestCreateItem (quest whichQuest)"


QuestItemSetDescription=QuestItemSetDescription
QuestItemSetDescription="QuestItemSetDescription(","questitem ",,~whichQuestItem,", ","string ",,~description,")"
QuestItemSetDescriptionHint="[NATIVE]  nothing QuestItemSetDescription (questitem whichQuestItem, string description)"


QuestItemSetCompleted=QuestItemSetCompleted
QuestItemSetCompleted="QuestItemSetCompleted(","questitem ",,~whichQuestItem,", ","boolean ",,~completed,")"
QuestItemSetCompletedHint="[NATIVE]  nothing QuestItemSetCompleted (questitem whichQuestItem, boolean completed)"


CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE]  defeatcondition CreateDefeatCondition ()"


DestroyDefeatCondition=DestroyDefeatCondition
DestroyDefeatCondition="DestroyDefeatCondition(","defeatcondition ",,~whichCondition,")"
DestroyDefeatConditionHint="[NATIVE]  nothing DestroyDefeatCondition (defeatcondition whichCondition)"


DefeatConditionSetDescription=DefeatConditionSetDescription
DefeatConditionSetDescription="DefeatConditionSetDescription(","defeatcondition ",,~whichCondition,", ","string ",,~description,")"
DefeatConditionSetDescriptionHint="[NATIVE]  nothing DefeatConditionSetDescription (defeatcondition whichCondition, string description)"


FlashQuestDialogButton=FlashQuestDialogButton
FlashQuestDialogButton="FlashQuestDialogButton(",")"
FlashQuestDialogButtonHint="[NATIVE]  nothing FlashQuestDialogButton ()"


ForceQuestDialogUpdate=ForceQuestDialogUpdate
ForceQuestDialogUpdate="ForceQuestDialogUpdate(",")"
ForceQuestDialogUpdateHint="[NATIVE]  nothing ForceQuestDialogUpdate ()"


CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(","timer ",,~t,")"
CreateTimerDialogHint="[NATIVE]  timerdialog CreateTimerDialog (timer t)"


DestroyTimerDialog=DestroyTimerDialog
DestroyTimerDialog="DestroyTimerDialog(","timerdialog ",,~whichDialog,")"
DestroyTimerDialogHint="[NATIVE]  nothing DestroyTimerDialog (timerdialog whichDialog)"


TimerDialogSetTitle=TimerDialogSetTitle
TimerDialogSetTitle="TimerDialogSetTitle(","timerdialog ",,~whichDialog,", ","string ",,~title,")"
TimerDialogSetTitleHint="[NATIVE]  nothing TimerDialogSetTitle (timerdialog whichDialog, string title)"


TimerDialogSetTitleColor=TimerDialogSetTitleColor
TimerDialogSetTitleColor="TimerDialogSetTitleColor(","timerdialog ",,~whichDialog,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
TimerDialogSetTitleColorHint="[NATIVE]  nothing TimerDialogSetTitleColor (timerdialog whichDialog, integer red, integer green, integer blue, integer alpha)"


TimerDialogSetTimeColor=TimerDialogSetTimeColor
TimerDialogSetTimeColor="TimerDialogSetTimeColor(","timerdialog ",,~whichDialog,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
TimerDialogSetTimeColorHint="[NATIVE]  nothing TimerDialogSetTimeColor (timerdialog whichDialog, integer red, integer green, integer blue, integer alpha)"


TimerDialogSetSpeed=TimerDialogSetSpeed
TimerDialogSetSpeed="TimerDialogSetSpeed(","timerdialog ",,~whichDialog,", ","real ",,~speedMultFactor,")"
TimerDialogSetSpeedHint="[NATIVE]  nothing TimerDialogSetSpeed (timerdialog whichDialog, real speedMultFactor)"


TimerDialogDisplay=TimerDialogDisplay
TimerDialogDisplay="TimerDialogDisplay(","timerdialog ",,~whichDialog,", ","boolean ",,~display,")"
TimerDialogDisplayHint="[NATIVE]  nothing TimerDialogDisplay (timerdialog whichDialog, boolean display)"


TimerDialogSetRealTimeRemaining=TimerDialogSetRealTimeRemaining
TimerDialogSetRealTimeRemaining="TimerDialogSetRealTimeRemaining(","timerdialog ",,~whichDialog,", ","real ",,~timeRemaining,")"
TimerDialogSetRealTimeRemainingHint="[NATIVE]  nothing TimerDialogSetRealTimeRemaining (timerdialog whichDialog, real timeRemaining)"


CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE]  leaderboard CreateLeaderboard ()"


DestroyLeaderboard=DestroyLeaderboard
DestroyLeaderboard="DestroyLeaderboard(","leaderboard ",,~lb,")"
DestroyLeaderboardHint="[NATIVE]  nothing DestroyLeaderboard (leaderboard lb)"


LeaderboardDisplay=LeaderboardDisplay
LeaderboardDisplay="LeaderboardDisplay(","leaderboard ",,~lb,", ","boolean ",,~show,")"
LeaderboardDisplayHint="[NATIVE]  nothing LeaderboardDisplay (leaderboard lb, boolean show)"


LeaderboardGetItemCount=LeaderboardGetItemCount
LeaderboardGetItemCount="LeaderboardGetItemCount(","leaderboard ",,~lb,")"
LeaderboardGetItemCountHint="[NATIVE]  integer LeaderboardGetItemCount (leaderboard lb)"


LeaderboardSetSizeByItemCount=LeaderboardSetSizeByItemCount
LeaderboardSetSizeByItemCount="LeaderboardSetSizeByItemCount(","leaderboard ",,~lb,", ","integer ",,~count,")"
LeaderboardSetSizeByItemCountHint="[NATIVE]  nothing LeaderboardSetSizeByItemCount (leaderboard lb, integer count)"


LeaderboardAddItem=LeaderboardAddItem
LeaderboardAddItem="LeaderboardAddItem(","leaderboard ",,~lb,", ","string ",,~label,", ","integer ",,~value,", ","player ",,~p,")"
LeaderboardAddItemHint="[NATIVE]  nothing LeaderboardAddItem (leaderboard lb, string label, integer value, player p)"


LeaderboardRemoveItem=LeaderboardRemoveItem
LeaderboardRemoveItem="LeaderboardRemoveItem(","leaderboard ",,~lb,", ","integer ",,~index,")"
LeaderboardRemoveItemHint="[NATIVE]  nothing LeaderboardRemoveItem (leaderboard lb, integer index)"


LeaderboardRemovePlayerItem=LeaderboardRemovePlayerItem
LeaderboardRemovePlayerItem="LeaderboardRemovePlayerItem(","leaderboard ",,~lb,", ","player ",,~p,")"
LeaderboardRemovePlayerItemHint="[NATIVE]  nothing LeaderboardRemovePlayerItem (leaderboard lb, player p)"


LeaderboardClear=LeaderboardClear
LeaderboardClear="LeaderboardClear(","leaderboard ",,~lb,")"
LeaderboardClearHint="[NATIVE]  nothing LeaderboardClear (leaderboard lb)"


LeaderboardSortItemsByValue=LeaderboardSortItemsByValue
LeaderboardSortItemsByValue="LeaderboardSortItemsByValue(","leaderboard ",,~lb,", ","boolean ",,~ascending,")"
LeaderboardSortItemsByValueHint="[NATIVE]  nothing LeaderboardSortItemsByValue (leaderboard lb, boolean ascending)"


LeaderboardSortItemsByPlayer=LeaderboardSortItemsByPlayer
LeaderboardSortItemsByPlayer="LeaderboardSortItemsByPlayer(","leaderboard ",,~lb,", ","boolean ",,~ascending,")"
LeaderboardSortItemsByPlayerHint="[NATIVE]  nothing LeaderboardSortItemsByPlayer (leaderboard lb, boolean ascending)"


LeaderboardSortItemsByLabel=LeaderboardSortItemsByLabel
LeaderboardSortItemsByLabel="LeaderboardSortItemsByLabel(","leaderboard ",,~lb,", ","boolean ",,~ascending,")"
LeaderboardSortItemsByLabelHint="[NATIVE]  nothing LeaderboardSortItemsByLabel (leaderboard lb, boolean ascending)"


LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(","leaderboard ",,~lb,", ","player ",,~p,")"
LeaderboardHasPlayerItemHint="[NATIVE]  boolean LeaderboardHasPlayerItem (leaderboard lb, player p)"


LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(","leaderboard ",,~lb,", ","player ",,~p,")"
LeaderboardGetPlayerIndexHint="[NATIVE]  integer LeaderboardGetPlayerIndex (leaderboard lb, player p)"


LeaderboardSetLabel=LeaderboardSetLabel
LeaderboardSetLabel="LeaderboardSetLabel(","leaderboard ",,~lb,", ","string ",,~label,")"
LeaderboardSetLabelHint="[NATIVE]  nothing LeaderboardSetLabel (leaderboard lb, string label)"


LeaderboardGetLabelText=LeaderboardGetLabelText
LeaderboardGetLabelText="LeaderboardGetLabelText(","leaderboard ",,~lb,")"
LeaderboardGetLabelTextHint="[NATIVE]  string LeaderboardGetLabelText (leaderboard lb)"


PlayerSetLeaderboard=PlayerSetLeaderboard
PlayerSetLeaderboard="PlayerSetLeaderboard(","player ",,~toPlayer,", ","leaderboard ",,~lb,")"
PlayerSetLeaderboardHint="[NATIVE]  nothing PlayerSetLeaderboard (player toPlayer, leaderboard lb)"


PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(","player ",,~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE]  leaderboard PlayerGetLeaderboard (player toPlayer)"


LeaderboardSetLabelColor=LeaderboardSetLabelColor
LeaderboardSetLabelColor="LeaderboardSetLabelColor(","leaderboard ",,~lb,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
LeaderboardSetLabelColorHint="[NATIVE]  nothing LeaderboardSetLabelColor (leaderboard lb, integer red, integer green, integer blue, integer alpha)"


LeaderboardSetValueColor=LeaderboardSetValueColor
LeaderboardSetValueColor="LeaderboardSetValueColor(","leaderboard ",,~lb,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
LeaderboardSetValueColorHint="[NATIVE]  nothing LeaderboardSetValueColor (leaderboard lb, integer red, integer green, integer blue, integer alpha)"


LeaderboardSetStyle=LeaderboardSetStyle
LeaderboardSetStyle="LeaderboardSetStyle(","leaderboard ",,~lb,", ","boolean ",,~showLabel,", ","boolean ",,~showNames,", ","boolean ",,~showValues,", ","boolean ",,~showIcons,")"
LeaderboardSetStyleHint="[NATIVE]  nothing LeaderboardSetStyle (leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons)"


LeaderboardSetItemValue=LeaderboardSetItemValue
LeaderboardSetItemValue="LeaderboardSetItemValue(","leaderboard ",,~lb,", ","integer ",,~whichItem,", ","integer ",,~val,")"
LeaderboardSetItemValueHint="[NATIVE]  nothing LeaderboardSetItemValue (leaderboard lb, integer whichItem, integer val)"


LeaderboardSetItemLabel=LeaderboardSetItemLabel
LeaderboardSetItemLabel="LeaderboardSetItemLabel(","leaderboard ",,~lb,", ","integer ",,~whichItem,", ","string ",,~val,")"
LeaderboardSetItemLabelHint="[NATIVE]  nothing LeaderboardSetItemLabel (leaderboard lb, integer whichItem, string val)"


LeaderboardSetItemStyle=LeaderboardSetItemStyle
LeaderboardSetItemStyle="LeaderboardSetItemStyle(","leaderboard ",,~lb,", ","integer ",,~whichItem,", ","boolean ",,~showLabel,", ","boolean ",,~showValue,", ","boolean ",,~showIcon,")"
LeaderboardSetItemStyleHint="[NATIVE]  nothing LeaderboardSetItemStyle (leaderboard lb, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon)"


LeaderboardSetItemLabelColor=LeaderboardSetItemLabelColor
LeaderboardSetItemLabelColor="LeaderboardSetItemLabelColor(","leaderboard ",,~lb,", ","integer ",,~whichItem,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
LeaderboardSetItemLabelColorHint="[NATIVE]  nothing LeaderboardSetItemLabelColor (leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha)"


LeaderboardSetItemValueColor=LeaderboardSetItemValueColor
LeaderboardSetItemValueColor="LeaderboardSetItemValueColor(","leaderboard ",,~lb,", ","integer ",,~whichItem,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
LeaderboardSetItemValueColorHint="[NATIVE]  nothing LeaderboardSetItemValueColor (leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha)"


CreateMultiboard=CreateMultiboard
CreateMultiboard="CreateMultiboard(",")"
CreateMultiboardHint="[NATIVE]  multiboard CreateMultiboard ()"


MultiboardGetTitleText=MultiboardGetTitleText
MultiboardGetTitleText="MultiboardGetTitleText(","multiboard ",,~lb,")"
MultiboardGetTitleTextHint="[NATIVE]  string MultiboardGetTitleText (multiboard lb)"


MultiboardGetRowCount=MultiboardGetRowCount
MultiboardGetRowCount="MultiboardGetRowCount(","multiboard ",,~lb,")"
MultiboardGetRowCountHint="[NATIVE]  integer MultiboardGetRowCount (multiboard lb)"


MultiboardGetColumnCount=MultiboardGetColumnCount
MultiboardGetColumnCount="MultiboardGetColumnCount(","multiboard ",,~lb,")"
MultiboardGetColumnCountHint="[NATIVE]  integer MultiboardGetColumnCount (multiboard lb)"


MultiboardGetItem=MultiboardGetItem
MultiboardGetItem="MultiboardGetItem(","multiboard ",,~lb,", ","integer ",,~row,", ","integer ",,~column,")"
MultiboardGetItemHint="[NATIVE]  multiboarditem MultiboardGetItem (multiboard lb, integer row, integer column)"


MultiboardSuppressDisplay=MultiboardSuppressDisplay
MultiboardSuppressDisplay="MultiboardSuppressDisplay(","boolean ",,~flag,")"
MultiboardSuppressDisplayHint="[NATIVE]  nothing MultiboardSuppressDisplay (boolean flag)"


SetCameraPosition=SetCameraPosition
SetCameraPosition="SetCameraPosition(","real ",,~x,", ","real ",,~y,")"
SetCameraPositionHint="[NATIVE]  nothing SetCameraPosition (real x, real y)"


SetCameraQuickPosition=SetCameraQuickPosition
SetCameraQuickPosition="SetCameraQuickPosition(","real ",,~x,", ","real ",,~y,")"
SetCameraQuickPositionHint="[NATIVE]  nothing SetCameraQuickPosition (real x, real y)"


SetCameraBounds=SetCameraBounds
SetCameraBounds="SetCameraBounds(","real ",,~x1,", ","real ",,~y1,", ","real ",,~x2,", ","real ",,~y2,", ","real ",,~x3,", ","real ",,~y3,", ","real ",,~x4,", ","real ",,~y4,")"
SetCameraBoundsHint="[NATIVE]  nothing SetCameraBounds (real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4)"


StopCamera=StopCamera
StopCamera="StopCamera(",")"
StopCameraHint="[NATIVE]  nothing StopCamera ()"


SetCinematicCamera=SetCinematicCamera
SetCinematicCamera="SetCinematicCamera(","string ",,~cameraModelFile,")"
SetCinematicCameraHint="[NATIVE]  nothing SetCinematicCamera (string cameraModelFile)"


SetCameraRotateMode=SetCameraRotateMode
SetCameraRotateMode="SetCameraRotateMode(","real ",,~x,", ","real ",,~y,", ","real ",,~radiansToSweep,", ","real ",,~duration,")"
SetCameraRotateModeHint="[NATIVE]  nothing SetCameraRotateMode (real x, real y, real radiansToSweep, real duration)"


SetCameraField=SetCameraField
SetCameraField="SetCameraField(","camerafield ",,~whichField,", ","real ",,~value,", ","real ",,~duration,")"
SetCameraFieldHint="[NATIVE]  nothing SetCameraField (camerafield whichField, real value, real duration)"


AdjustCameraField=AdjustCameraField
AdjustCameraField="AdjustCameraField(","camerafield ",,~whichField,", ","real ",,~offset,", ","real ",,~duration,")"
AdjustCameraFieldHint="[NATIVE]  nothing AdjustCameraField (camerafield whichField, real offset, real duration)"


SetCameraTargetController=SetCameraTargetController
SetCameraTargetController="SetCameraTargetController(","unit ",,~whichUnit,", ","real ",,~xoffset,", ","real ",,~yoffset,", ","boolean ",,~inheritOrientation,")"
SetCameraTargetControllerHint="[NATIVE]  nothing SetCameraTargetController (unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation)"


SetCameraOrientController=SetCameraOrientController
SetCameraOrientController="SetCameraOrientController(","unit ",,~whichUnit,", ","real ",,~xoffset,", ","real ",,~yoffset,")"
SetCameraOrientControllerHint="[NATIVE]  nothing SetCameraOrientController (unit whichUnit, real xoffset, real yoffset)"


CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE]  camerasetup CreateCameraSetup ()"


CameraSetupSetField=CameraSetupSetField
CameraSetupSetField="CameraSetupSetField(","camerasetup ",,~whichSetup,", ","camerafield ",,~whichField,", ","real ",,~value,", ","real ",,~duration,")"
CameraSetupSetFieldHint="[NATIVE]  nothing CameraSetupSetField (camerasetup whichSetup, camerafield whichField, real value, real duration)"


CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(","camerasetup ",,~whichSetup,", ","camerafield ",,~whichField,")"
CameraSetupGetFieldHint="[NATIVE]  real CameraSetupGetField (camerasetup whichSetup, camerafield whichField)"


CameraSetupSetDestPosition=CameraSetupSetDestPosition
CameraSetupSetDestPosition="CameraSetupSetDestPosition(","camerasetup ",,~whichSetup,", ","real ",,~x,", ","real ",,~y,", ","real ",,~duration,")"
CameraSetupSetDestPositionHint="[NATIVE]  nothing CameraSetupSetDestPosition (camerasetup whichSetup, real x, real y, real duration)"


CameraSetupGetDestPositionLoc=CameraSetupGetDestPositionLoc
CameraSetupGetDestPositionLoc="CameraSetupGetDestPositionLoc(","camerasetup ",,~whichSetup,")"
CameraSetupGetDestPositionLocHint="[NATIVE]  location CameraSetupGetDestPositionLoc (camerasetup whichSetup)"


CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(","camerasetup ",,~whichSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE]  real CameraSetupGetDestPositionX (camerasetup whichSetup)"


CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(","camerasetup ",,~whichSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE]  real CameraSetupGetDestPositionY (camerasetup whichSetup)"


CameraSetupApply=CameraSetupApply
CameraSetupApply="CameraSetupApply(","camerasetup ",,~whichSetup,", ","boolean ",,~doPan,", ","boolean ",,~panTimed,")"
CameraSetupApplyHint="[NATIVE]  nothing CameraSetupApply (camerasetup whichSetup, boolean doPan, boolean panTimed)"


CameraSetupApplyWithZ=CameraSetupApplyWithZ
CameraSetupApplyWithZ="CameraSetupApplyWithZ(","camerasetup ",,~whichSetup,", ","real ",,~zDestOffset,")"
CameraSetupApplyWithZHint="[NATIVE]  nothing CameraSetupApplyWithZ (camerasetup whichSetup, real zDestOffset)"


CameraSetupApplyForceDuration=CameraSetupApplyForceDuration
CameraSetupApplyForceDuration="CameraSetupApplyForceDuration(","camerasetup ",,~whichSetup,", ","boolean ",,~doPan,", ","real ",,~forceDuration,")"
CameraSetupApplyForceDurationHint="[NATIVE]  nothing CameraSetupApplyForceDuration (camerasetup whichSetup, boolean doPan, real forceDuration)"


CameraSetupApplyForceDurationWithZ=CameraSetupApplyForceDurationWithZ
CameraSetupApplyForceDurationWithZ="CameraSetupApplyForceDurationWithZ(","camerasetup ",,~whichSetup,", ","real ",,~zDestOffset,", ","real ",,~forceDuration,")"
CameraSetupApplyForceDurationWithZHint="[NATIVE]  nothing CameraSetupApplyForceDurationWithZ (camerasetup whichSetup, real zDestOffset, real forceDuration)"


CameraSetTargetNoise=CameraSetTargetNoise
CameraSetTargetNoise="CameraSetTargetNoise(","real ",,~mag,", ","real ",,~velocity,")"
CameraSetTargetNoiseHint="[NATIVE]  nothing CameraSetTargetNoise (real mag, real velocity)"


CameraSetSourceNoise=CameraSetSourceNoise
CameraSetSourceNoise="CameraSetSourceNoise(","real ",,~mag,", ","real ",,~velocity,")"
CameraSetSourceNoiseHint="[NATIVE]  nothing CameraSetSourceNoise (real mag, real velocity)"


CameraSetTargetNoiseEx=CameraSetTargetNoiseEx
CameraSetTargetNoiseEx="CameraSetTargetNoiseEx(","real ",,~mag,", ","real ",,~velocity,", ","boolean ",,~vertOnly,")"
CameraSetTargetNoiseExHint="[NATIVE]  nothing CameraSetTargetNoiseEx (real mag, real velocity, boolean vertOnly)"


CameraSetSourceNoiseEx=CameraSetSourceNoiseEx
CameraSetSourceNoiseEx="CameraSetSourceNoiseEx(","real ",,~mag,", ","real ",,~velocity,", ","boolean ",,~vertOnly,")"
CameraSetSourceNoiseExHint="[NATIVE]  nothing CameraSetSourceNoiseEx (real mag, real velocity, boolean vertOnly)"


CameraSetSmoothingFactor=CameraSetSmoothingFactor
CameraSetSmoothingFactor="CameraSetSmoothingFactor(","real ",,~factor,")"
CameraSetSmoothingFactorHint="[NATIVE]  nothing CameraSetSmoothingFactor (real factor)"


SetCineFilterTexture=SetCineFilterTexture
SetCineFilterTexture="SetCineFilterTexture(","string ",,~filename,")"
SetCineFilterTextureHint="[NATIVE]  nothing SetCineFilterTexture (string filename)"


SetCineFilterBlendMode=SetCineFilterBlendMode
SetCineFilterBlendMode="SetCineFilterBlendMode(","blendmode ",,~whichMode,")"
SetCineFilterBlendModeHint="[NATIVE]  nothing SetCineFilterBlendMode (blendmode whichMode)"


SetCineFilterTexMapFlags=SetCineFilterTexMapFlags
SetCineFilterTexMapFlags="SetCineFilterTexMapFlags(","texmapflags ",,~whichFlags,")"
SetCineFilterTexMapFlagsHint="[NATIVE]  nothing SetCineFilterTexMapFlags (texmapflags whichFlags)"


SetCineFilterStartUV=SetCineFilterStartUV
SetCineFilterStartUV="SetCineFilterStartUV(","real ",,~minu,", ","real ",,~minv,", ","real ",,~maxu,", ","real ",,~maxv,")"
SetCineFilterStartUVHint="[NATIVE]  nothing SetCineFilterStartUV (real minu, real minv, real maxu, real maxv)"


SetCineFilterEndUV=SetCineFilterEndUV
SetCineFilterEndUV="SetCineFilterEndUV(","real ",,~minu,", ","real ",,~minv,", ","real ",,~maxu,", ","real ",,~maxv,")"
SetCineFilterEndUVHint="[NATIVE]  nothing SetCineFilterEndUV (real minu, real minv, real maxu, real maxv)"


SetCineFilterStartColor=SetCineFilterStartColor
SetCineFilterStartColor="SetCineFilterStartColor(","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetCineFilterStartColorHint="[NATIVE]  nothing SetCineFilterStartColor (integer red, integer green, integer blue, integer alpha)"


SetCineFilterEndColor=SetCineFilterEndColor
SetCineFilterEndColor="SetCineFilterEndColor(","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetCineFilterEndColorHint="[NATIVE]  nothing SetCineFilterEndColor (integer red, integer green, integer blue, integer alpha)"


SetCineFilterDuration=SetCineFilterDuration
SetCineFilterDuration="SetCineFilterDuration(","real ",,~duration,")"
SetCineFilterDurationHint="[NATIVE]  nothing SetCineFilterDuration (real duration)"


DisplayCineFilter=DisplayCineFilter
DisplayCineFilter="DisplayCineFilter(","boolean ",,~flag,")"
DisplayCineFilterHint="[NATIVE]  nothing DisplayCineFilter (boolean flag)"


SetCinematicScene=SetCinematicScene
SetCinematicScene="SetCinematicScene(","integer ",,~portraitUnitId,", ","playercolor ",,~color,", ","string ",,~speakerTitle,", ","string ",,~text,", ","real ",,~sceneDuration,", ","real ",,~voiceoverDuration,")"
SetCinematicSceneHint="[NATIVE]  nothing SetCinematicScene (integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration)"


EndCinematicScene=EndCinematicScene
EndCinematicScene="EndCinematicScene(",")"
EndCinematicSceneHint="[NATIVE]  nothing EndCinematicScene ()"


ForceCinematicSubtitles=ForceCinematicSubtitles
ForceCinematicSubtitles="ForceCinematicSubtitles(","boolean ",,~flag,")"
ForceCinematicSubtitlesHint="[NATIVE]  nothing ForceCinematicSubtitles (boolean flag)"


NewSoundEnvironment=NewSoundEnvironment
NewSoundEnvironment="NewSoundEnvironment(","string ",,~environmentName,")"
NewSoundEnvironmentHint="[NATIVE]  nothing NewSoundEnvironment (string environmentName)"


CreateSound=CreateSound
CreateSound="CreateSound(","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~eaxSetting,")"
CreateSoundHint="[NATIVE]  sound CreateSound (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting)"


CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE]  sound CreateSoundFilenameWithLabel (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName)"


CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(","string ",,~soundLabel,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE]  sound CreateSoundFromLabel (string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate)"


CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(","string ",,~soundLabel,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE]  sound CreateMIDISound (string soundLabel, integer fadeInRate, integer fadeOutRate)"


SetSoundParamsFromLabel=SetSoundParamsFromLabel
SetSoundParamsFromLabel="SetSoundParamsFromLabel(","sound ",,~soundHandle,", ","string ",,~soundLabel,")"
SetSoundParamsFromLabelHint="[NATIVE]  nothing SetSoundParamsFromLabel (sound soundHandle, string soundLabel)"


SetSoundDistanceCutoff=SetSoundDistanceCutoff
SetSoundDistanceCutoff="SetSoundDistanceCutoff(","sound ",,~soundHandle,", ","real ",,~cutoff,")"
SetSoundDistanceCutoffHint="[NATIVE]  nothing SetSoundDistanceCutoff (sound soundHandle, real cutoff)"


SetSoundChannel=SetSoundChannel
SetSoundChannel="SetSoundChannel(","sound ",,~soundHandle,", ","integer ",,~channel,")"
SetSoundChannelHint="[NATIVE]  nothing SetSoundChannel (sound soundHandle, integer channel)"


SetSoundVolume=SetSoundVolume
SetSoundVolume="SetSoundVolume(","sound ",,~soundHandle,", ","integer ",,~volume,")"
SetSoundVolumeHint="[NATIVE]  nothing SetSoundVolume (sound soundHandle, integer volume)"


SetSoundPitch=SetSoundPitch
SetSoundPitch="SetSoundPitch(","sound ",,~soundHandle,", ","real ",,~pitch,")"
SetSoundPitchHint="[NATIVE]  nothing SetSoundPitch (sound soundHandle, real pitch)"


SetSoundPlayPosition=SetSoundPlayPosition
SetSoundPlayPosition="SetSoundPlayPosition(","sound ",,~soundHandle,", ","integer ",,~millisecs,")"
SetSoundPlayPositionHint="[NATIVE]  nothing SetSoundPlayPosition (sound soundHandle, integer millisecs)"


SetSoundConeAngles=SetSoundConeAngles
SetSoundConeAngles="SetSoundConeAngles(","sound ",,~soundHandle,", ","real ",,~inside,", ","real ",,~outside,", ","integer ",,~outsideVolume,")"
SetSoundConeAnglesHint="[NATIVE]  nothing SetSoundConeAngles (sound soundHandle, real inside, real outside, integer outsideVolume)"


SetSoundConeOrientation=SetSoundConeOrientation
SetSoundConeOrientation="SetSoundConeOrientation(","sound ",,~soundHandle,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSoundConeOrientationHint="[NATIVE]  nothing SetSoundConeOrientation (sound soundHandle, real x, real y, real z)"


SetSoundPosition=SetSoundPosition
SetSoundPosition="SetSoundPosition(","sound ",,~soundHandle,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSoundPositionHint="[NATIVE]  nothing SetSoundPosition (sound soundHandle, real x, real y, real z)"


SetSoundVelocity=SetSoundVelocity
SetSoundVelocity="SetSoundVelocity(","sound ",,~soundHandle,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSoundVelocityHint="[NATIVE]  nothing SetSoundVelocity (sound soundHandle, real x, real y, real z)"


StartSound=StartSound
StartSound="StartSound(","sound ",,~soundHandle,")"
StartSoundHint="[NATIVE]  nothing StartSound (sound soundHandle)"


StopSound=StopSound
StopSound="StopSound(","sound ",,~soundHandle,", ","boolean ",,~killWhenDone,", ","boolean ",,~fadeOut,")"
StopSoundHint="[NATIVE]  nothing StopSound (sound soundHandle, boolean killWhenDone, boolean fadeOut)"


KillSoundWhenDone=KillSoundWhenDone
KillSoundWhenDone="KillSoundWhenDone(","sound ",,~soundHandle,")"
KillSoundWhenDoneHint="[NATIVE]  nothing KillSoundWhenDone (sound soundHandle)"


SetMapMusic=SetMapMusic
SetMapMusic="SetMapMusic(","string ",,~musicName,", ","boolean ",,~random,", ","integer ",,~index,")"
SetMapMusicHint="[NATIVE]  nothing SetMapMusic (string musicName, boolean random, integer index)"


ClearMapMusic=ClearMapMusic
ClearMapMusic="ClearMapMusic(",")"
ClearMapMusicHint="[NATIVE]  nothing ClearMapMusic ()"


PlayMusic=PlayMusic
PlayMusic="PlayMusic(","string ",,~musicName,")"
PlayMusicHint="[NATIVE]  nothing PlayMusic (string musicName)"


PlayMusicEx=PlayMusicEx
PlayMusicEx="PlayMusicEx(","string ",,~musicName,", ","integer ",,~frommsecs,", ","integer ",,~fadeinmsecs,")"
PlayMusicExHint="[NATIVE]  nothing PlayMusicEx (string musicName, integer frommsecs, integer fadeinmsecs)"


StopMusic=StopMusic
StopMusic="StopMusic(","boolean ",,~fadeOut,")"
StopMusicHint="[NATIVE]  nothing StopMusic (boolean fadeOut)"


ResumeMusic=ResumeMusic
ResumeMusic="ResumeMusic(",")"
ResumeMusicHint="[NATIVE]  nothing ResumeMusic ()"


PlayThematicMusic=PlayThematicMusic
PlayThematicMusic="PlayThematicMusic(","string ",,~musicFileName,")"
PlayThematicMusicHint="[NATIVE]  nothing PlayThematicMusic (string musicFileName)"


PlayThematicMusicEx=PlayThematicMusicEx
PlayThematicMusicEx="PlayThematicMusicEx(","string ",,~musicFileName,", ","integer ",,~frommsecs,")"
PlayThematicMusicExHint="[NATIVE]  nothing PlayThematicMusicEx (string musicFileName, integer frommsecs)"


EndThematicMusic=EndThematicMusic
EndThematicMusic="EndThematicMusic(",")"
EndThematicMusicHint="[NATIVE]  nothing EndThematicMusic ()"


SetMusicVolume=SetMusicVolume
SetMusicVolume="SetMusicVolume(","integer ",,~volume,")"
SetMusicVolumeHint="[NATIVE]  nothing SetMusicVolume (integer volume)"


SetMusicPlayPosition=SetMusicPlayPosition
SetMusicPlayPosition="SetMusicPlayPosition(","integer ",,~millisecs,")"
SetMusicPlayPositionHint="[NATIVE]  nothing SetMusicPlayPosition (integer millisecs)"


SetThematicMusicPlayPosition=SetThematicMusicPlayPosition
SetThematicMusicPlayPosition="SetThematicMusicPlayPosition(","integer ",,~millisecs,")"
SetThematicMusicPlayPositionHint="[NATIVE]  nothing SetThematicMusicPlayPosition (integer millisecs)"


SetSoundDuration=SetSoundDuration
SetSoundDuration="SetSoundDuration(","sound ",,~soundHandle,", ","integer ",,~duration,")"
SetSoundDurationHint="[NATIVE]  nothing SetSoundDuration (sound soundHandle, integer duration)"


VolumeGroupSetVolume=VolumeGroupSetVolume
VolumeGroupSetVolume="VolumeGroupSetVolume(","volumegroup ",,~vgroup,", ","real ",,~scale,")"
VolumeGroupSetVolumeHint="[NATIVE]  nothing VolumeGroupSetVolume (volumegroup vgroup, real scale)"


VolumeGroupReset=VolumeGroupReset
VolumeGroupReset="VolumeGroupReset(",")"
VolumeGroupResetHint="[NATIVE]  nothing VolumeGroupReset ()"


RegisterStackedSound=RegisterStackedSound
RegisterStackedSound="RegisterStackedSound(","sound ",,~soundHandle,", ","boolean ",,~byPosition,", ","real ",,~rectwidth,", ","real ",,~rectheight,")"
RegisterStackedSoundHint="[NATIVE]  nothing RegisterStackedSound (sound soundHandle, boolean byPosition, real rectwidth, real rectheight)"


UnregisterStackedSound=UnregisterStackedSound
UnregisterStackedSound="UnregisterStackedSound(","sound ",,~soundHandle,", ","boolean ",,~byPosition,", ","real ",,~rectwidth,", ","real ",,~rectheight,")"
UnregisterStackedSoundHint="[NATIVE]  nothing UnregisterStackedSound (sound soundHandle, boolean byPosition, real rectwidth, real rectheight)"


AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(","rect ",,~where,", ","integer ",,~effectID,")"
AddWeatherEffectHint="[NATIVE]  weathereffect AddWeatherEffect (rect where, integer effectID)"


RemoveWeatherEffect=RemoveWeatherEffect
RemoveWeatherEffect="RemoveWeatherEffect(","weathereffect ",,~whichEffect,")"
RemoveWeatherEffectHint="[NATIVE]  nothing RemoveWeatherEffect (weathereffect whichEffect)"


TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~duration,", ","boolean ",,~permanent,")"
TerrainDeformCraterHint="[NATIVE]  terraindeformation TerrainDeformCrater (real x, real y, real radius, real depth, integer duration, boolean permanent)"


TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~duration,", ","integer ",,~count,", ","real ",,~spaceWaves,", ","real ",,~timeWaves,", ","real ",,~radiusStartPct,", ","boolean ",,~limitNeg,")"
TerrainDeformRippleHint="[NATIVE]  terraindeformation TerrainDeformRipple (real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg)"


TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(","real ",,~x,", ","real ",,~y,", ","real ",,~dirX,", ","real ",,~dirY,", ","real ",,~distance,", ","real ",,~speed,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~trailTime,", ","integer ",,~count,")"
TerrainDeformWaveHint="[NATIVE]  terraindeformation TerrainDeformWave (real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count)"


TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~minDelta,", ","real ",,~maxDelta,", ","integer ",,~duration,", ","integer ",,~updateInterval,")"
TerrainDeformRandomHint="[NATIVE]  terraindeformation TerrainDeformRandom (real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval)"


TerrainDeformStop=TerrainDeformStop
TerrainDeformStop="TerrainDeformStop(","terraindeformation ",,~deformation,", ","integer ",,~duration,")"
TerrainDeformStopHint="[NATIVE]  nothing TerrainDeformStop (terraindeformation deformation, integer duration)"


AddSpecialEffect=AddSpecialEffect
AddSpecialEffect="AddSpecialEffect(","string ",,~modelName,", ","real ",,~x,", ","real ",,~y,")"
AddSpecialEffectHint="[NATIVE]  effect AddSpecialEffect (string modelName, real x, real y)"


AddSpecialEffectLoc=AddSpecialEffectLoc
AddSpecialEffectLoc="AddSpecialEffectLoc(","string ",,~modelName,", ","location ",,~where,")"
AddSpecialEffectLocHint="[NATIVE]  effect AddSpecialEffectLoc (string modelName, location where)"


AddSpecialEffectTarget=AddSpecialEffectTarget
AddSpecialEffectTarget="AddSpecialEffectTarget(","string ",,~modelName,", ","widget ",,~targetWidget,", ","string ",,~attachPointName,")"
AddSpecialEffectTargetHint="[NATIVE]  effect AddSpecialEffectTarget (string modelName, widget targetWidget, string attachPointName)"


DestroyEffect=DestroyEffect
DestroyEffect="DestroyEffect(","effect ",,~whichEffect,")"
DestroyEffectHint="[NATIVE]  nothing DestroyEffect (effect whichEffect)"


AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(","string ",,~abilityString,", ","effecttype ",,~t,", ","real ",,~x,", ","real ",,~y,")"
AddSpellEffectHint="[NATIVE]  effect AddSpellEffect (string abilityString, effecttype t, real x, real y)"


AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(","string ",,~abilityString,", ","effecttype ",,~t,", ","location ",,~where,")"
AddSpellEffectLocHint="[NATIVE]  effect AddSpellEffectLoc (string abilityString, effecttype t, location where)"


AddSpellEffectById=AddSpellEffectById
AddSpellEffectById="AddSpellEffectById(","integer ",,~abilCode,", ","effecttype ",,~t,", ","real ",,~x,", ","real ",,~y,")"
AddSpellEffectByIdHint="[NATIVE]  effect AddSpellEffectById (integer abilCode, effecttype t, real x, real y)"


AddSpellEffectTarget=AddSpellEffectTarget
AddSpellEffectTarget="AddSpellEffectTarget(","string ",,~modelName,", ","effecttype ",,~t,", ","widget ",,~targetWidget,", ","string ",,~attachPoint,")"
AddSpellEffectTargetHint="[NATIVE]  effect AddSpellEffectTarget (string modelName, effecttype t, widget targetWidget, string attachPoint)"


AddLightning=AddLightning
AddLightning="AddLightning(","string ",,~codeName,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~x2,", ","real ",,~y2,")"
AddLightningHint="[NATIVE]  lightning AddLightning (string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2)"


DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(","lightning ",,~whichBolt,")"
DestroyLightningHint="[NATIVE]  boolean DestroyLightning (lightning whichBolt)"


MoveLightning=MoveLightning
MoveLightning="MoveLightning(","lightning ",,~whichBolt,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~x2,", ","real ",,~y2,")"
MoveLightningHint="[NATIVE]  boolean MoveLightning (lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2)"


SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(","lightning ",,~whichBolt,", ","real ",,~r,", ","real ",,~g,", ","real ",,~b,", ","real ",,~a,")"
SetLightningColorHint="[NATIVE]  boolean SetLightningColor (lightning whichBolt, real r, real g, real b, real a)"


SetWaterBaseColor=SetWaterBaseColor
SetWaterBaseColor="SetWaterBaseColor(","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetWaterBaseColorHint="[NATIVE]  nothing SetWaterBaseColor (integer red, integer green, integer blue, integer alpha)"


SetTerrainType=SetTerrainType
SetTerrainType="SetTerrainType(","real ",,~x,", ","real ",,~y,", ","integer ",,~terrainType,", ","integer ",,~variation,", ","integer ",,~area,", ","integer ",,~shape,")"
SetTerrainTypeHint="[NATIVE]  nothing SetTerrainType (real x, real y, integer terrainType, integer variation, integer area, integer shape)"


SetTerrainPathable=SetTerrainPathable
SetTerrainPathable="SetTerrainPathable(","real ",,~x,", ","real ",,~y,", ","pathingtype ",,~t,", ","boolean ",,~flag,")"
SetTerrainPathableHint="[NATIVE]  nothing SetTerrainPathable (real x, real y, pathingtype t, boolean flag)"


CreateImage=CreateImage
CreateImage="CreateImage(","string ",,~file,", ","real ",,~sizeX,", ","real ",,~sizeY,", ","real ",,~sizeZ,", ","real ",,~posX,", ","real ",,~posY,", ","real ",,~posZ,", ","real ",,~originX,", ","real ",,~originY,", ","real ",,~originZ,", ","integer ",,~imageType,")"
CreateImageHint="[NATIVE]  image CreateImage (string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType)"


ShowImage=ShowImage
ShowImage="ShowImage(","image ",,~whichImage,", ","boolean ",,~flag,")"
ShowImageHint="[NATIVE]  nothing ShowImage (image whichImage, boolean flag)"


SetImagePosition=SetImagePosition
SetImagePosition="SetImagePosition(","image ",,~whichImage,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetImagePositionHint="[NATIVE]  nothing SetImagePosition (image whichImage, real x, real y, real z)"


SetImageColor=SetImageColor
SetImageColor="SetImageColor(","image ",,~whichImage,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetImageColorHint="[NATIVE]  nothing SetImageColor (image whichImage, integer red, integer green, integer blue, integer alpha)"


CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(","real ",,~x,", ","real ",,~y,", ","string ",,~name,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,", ","boolean ",,~forcePaused,", ","boolean ",,~noBirthTime,")"
CreateUbersplatHint="[NATIVE]  ubersplat CreateUbersplat (real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime)"


ShowUbersplat=ShowUbersplat
ShowUbersplat="ShowUbersplat(","ubersplat ",,~whichSplat,", ","boolean ",,~flag,")"
ShowUbersplatHint="[NATIVE]  nothing ShowUbersplat (ubersplat whichSplat, boolean flag)"


SetBlight=SetBlight
SetBlight="SetBlight(","player ",,~whichPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolean ",,~addBlight,")"
SetBlightHint="[NATIVE]  nothing SetBlight (player whichPlayer, real x, real y, real radius, boolean addBlight)"


SetBlightRect=SetBlightRect
SetBlightRect="SetBlightRect(","player ",,~whichPlayer,", ","rect ",,~r,", ","boolean ",,~addBlight,")"
SetBlightRectHint="[NATIVE]  nothing SetBlightRect (player whichPlayer, rect r, boolean addBlight)"


SetBlightPoint=SetBlightPoint
SetBlightPoint="SetBlightPoint(","player ",,~whichPlayer,", ","real ",,~x,", ","real ",,~y,", ","boolean ",,~addBlight,")"
SetBlightPointHint="[NATIVE]  nothing SetBlightPoint (player whichPlayer, real x, real y, boolean addBlight)"


SetBlightLoc=SetBlightLoc
SetBlightLoc="SetBlightLoc(","player ",,~whichPlayer,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolean ",,~addBlight,")"
SetBlightLocHint="[NATIVE]  nothing SetBlightLoc (player whichPlayer, location whichLocation, real radius, boolean addBlight)"


CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(","player ",,~id,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateBlightedGoldmineHint="[NATIVE]  unit CreateBlightedGoldmine (player id, real x, real y, real face)"


SetDoodadAnimation=SetDoodadAnimation
SetDoodadAnimation="SetDoodadAnimation(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","integer ",,~doodadID,", ","boolean ",,~nearestOnly,", ","string ",,~animName,", ","boolean ",,~animRandom,")"
SetDoodadAnimationHint="[NATIVE]  nothing SetDoodadAnimation (real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom)"


SetDoodadAnimationRect=SetDoodadAnimationRect
SetDoodadAnimationRect="SetDoodadAnimationRect(","rect ",,~r,", ","integer ",,~doodadID,", ","string ",,~animName,", ","boolean ",,~animRandom,")"
SetDoodadAnimationRectHint="[NATIVE]  nothing SetDoodadAnimationRect (rect r, integer doodadID, string animName, boolean animRandom)"


PauseCompAI=PauseCompAI
PauseCompAI="PauseCompAI(","player ",,~p,", ","boolean ",,~pause,")"
PauseCompAIHint="[NATIVE]  nothing PauseCompAI (player p, boolean pause)"


Cheat=Cheat
Cheat="Cheat(","string ",,~cheatStr,")"
CheatHint="[NATIVE]  nothing Cheat (string cheatStr)"


PreloadStart=PreloadStart
PreloadStart="PreloadStart(",")"
PreloadStartHint="[NATIVE]  nothing PreloadStart ()"


PreloadRefresh=PreloadRefresh
PreloadRefresh="PreloadRefresh(",")"
PreloadRefreshHint="[NATIVE]  nothing PreloadRefresh ()"


PreloadEndEx=PreloadEndEx
PreloadEndEx="PreloadEndEx(",")"
PreloadEndExHint="[NATIVE]  nothing PreloadEndEx ()"


PreloadGenClear=PreloadGenClear
PreloadGenClear="PreloadGenClear(",")"
PreloadGenClearHint="[NATIVE]  nothing PreloadGenClear ()"


PreloadGenStart=PreloadGenStart
PreloadGenStart="PreloadGenStart(",")"
PreloadGenStartHint="[NATIVE]  nothing PreloadGenStart ()"


PreloadGenEnd=PreloadGenEnd
PreloadGenEnd="PreloadGenEnd(","string ",,~filename,")"
PreloadGenEndHint="[NATIVE]  nothing PreloadGenEnd (string filename)"


RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(","string ",,~parentScriptFile,", ","string ",,~helperScriptFile,", ","string ",,~jassScriptFile,")"
RunJassScriptExHint="[UjAPI]  jassthread RunJassScriptEx (string parentScriptFile, string helperScriptFile, string jassScriptFile)"


RunJassScript=RunJassScript
RunJassScript="RunJassScript(","string ",,~helperScriptFile,", ","string ",,~jassScriptFile,")"
RunJassScriptHint="[UjAPI]  jassthread RunJassScript (string helperScriptFile, string jassScriptFile)"


RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(","string ",,~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI]  jassthread RunJassScriptSimple (string jassScriptFile)"


StopJassThread=StopJassThread
StopJassThread="StopJassThread(","jassthread ",,~thread,")"
StopJassThreadHint="[UjAPI]  boolean StopJassThread (jassthread thread)"


SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(","jassthread ",,~thread,", ","string ",,~variableName,", ","integer ",,~value,")"
SetJassGlobalIntegerHint="[UjAPI]  boolean SetJassGlobalInteger (jassthread thread, string variableName, integer value)"


SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(","jassthread ",,~thread,", ","string ",,~variableName,", ","real ",,~value,")"
SetJassGlobalRealHint="[UjAPI]  boolean SetJassGlobalReal (jassthread thread, string variableName, real value)"


SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(","jassthread ",,~thread,", ","string ",,~variableName,", ","handle ",,~value,")"
SetJassGlobalHandleHint="[UjAPI]  boolean SetJassGlobalHandle (jassthread thread, string variableName, handle value)"


SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(","jassthread ",,~thread,", ","string ",,~variableName,", ","boolean ",,~value,")"
SetJassGlobalBooleanHint="[UjAPI]  boolean SetJassGlobalBoolean (jassthread thread, string variableName, boolean value)"


SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(","string ",,~variableName,", ","integer ",,~value,")"
SetJassLocalIntegerHint="[UjAPI]  boolean SetJassLocalInteger (string variableName, integer value)"


SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(","string ",,~variableName,", ","real ",,~value,")"
SetJassLocalRealHint="[UjAPI]  boolean SetJassLocalReal (string variableName, real value)"


SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(","string ",,~variableName,", ","handle ",,~value,")"
SetJassLocalHandleHint="[UjAPI]  boolean SetJassLocalHandle (string variableName, handle value)"


SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(","string ",,~variableName,", ","boolean ",,~value,")"
SetJassLocalBooleanHint="[UjAPI]  boolean SetJassLocalBoolean (string variableName, boolean value)"


EnableOperationLimit=EnableOperationLimit
EnableOperationLimit="EnableOperationLimit(","boolean ",,~enable,")"
EnableOperationLimitHint="[UjAPI]  nothing EnableOperationLimit (boolean enable)"


SetOperationLimit=SetOperationLimit
SetOperationLimit="SetOperationLimit(","integer ",,~opLimit,")"
SetOperationLimitHint="[UjAPI]  nothing SetOperationLimit (integer opLimit)"


ExecuteCode=ExecuteCode
ExecuteCode="ExecuteCode(","code ",,~c,")"
ExecuteCodeHint="[UjAPI]  nothing ExecuteCode (code c)"


ExecuteFuncEx=ExecuteFuncEx
ExecuteFuncEx="ExecuteFuncEx(","string ",,~funcName,")"
ExecuteFuncExHint="[UjAPI]  nothing ExecuteFuncEx (string funcName)"


ConsoleEnable=ConsoleEnable
ConsoleEnable="ConsoleEnable(","boolean ",,~enable,")"
ConsoleEnableHint="[UjAPI]  nothing ConsoleEnable (boolean enable)"


ConsolePrint=ConsolePrint
ConsolePrint="ConsolePrint(","string ",,~s,")"
ConsolePrintHint="[UjAPI]  nothing ConsolePrint (string s)"


ConsolePause=ConsolePause
ConsolePause="ConsolePause(","string ",,~s,")"
ConsolePauseHint="[UjAPI]  nothing ConsolePause (string s)"


TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(","string ",,~filePath,")"
TextFileOpenHint="[UjAPI]  textfilehandle TextFileOpen (string filePath)"


TextFileExists=TextFileExists
TextFileExists="TextFileExists(","string ",,~filePath,")"
TextFileExistsHint="[UjAPI]  boolean TextFileExists (string filePath)"


TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(","string ",,~filePath,")"
TextFileGetSizeByPathHint="[UjAPI]  integer TextFileGetSizeByPath (string filePath)"


TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(","textfilehandle ",,~whichTextFile,")"
TextFileGetSizeHint="[UjAPI]  integer TextFileGetSize (textfilehandle whichTextFile)"


TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(","textfilehandle ",,~whichTextFile,")"
TextFileGetPathHint="[UjAPI]  string TextFileGetPath (textfilehandle whichTextFile)"


TextFileClose=TextFileClose
TextFileClose="TextFileClose(","textfilehandle ",,~whichTextFile,")"
TextFileCloseHint="[UjAPI]  nothing TextFileClose (textfilehandle whichTextFile)"


TextFileClear=TextFileClear
TextFileClear="TextFileClear(","textfilehandle ",,~whichTextFile,")"
TextFileClearHint="[UjAPI]  nothing TextFileClear (textfilehandle whichTextFile)"


TextFileDelete=TextFileDelete
TextFileDelete="TextFileDelete(","textfilehandle ",,~whichTextFile,")"
TextFileDeleteHint="[UjAPI]  nothing TextFileDelete (textfilehandle whichTextFile)"


TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(","textfilehandle ",,~whichTextFile,")"
TextFileCountLinesHint="[UjAPI]  integer TextFileCountLines (textfilehandle whichTextFile)"


TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(","textfilehandle ",,~whichTextFile,", ","integer ",,~lineNumber,")"
TextFileReadLineHint="[UjAPI]  string TextFileReadLine (textfilehandle whichTextFile, integer lineNumber)"


TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(","textfilehandle ",,~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI]  string TextFileReadAllLines (textfilehandle whichTextFile)"


TextFileRead=TextFileRead
TextFileRead="TextFileRead(","textfilehandle ",,~whichTextFile,")"
TextFileReadHint="[UjAPI]  string TextFileRead (textfilehandle whichTextFile)"


TextFileWriteLine=TextFileWriteLine
TextFileWriteLine="TextFileWriteLine(","textfilehandle ",,~whichTextFile,", ","string ",,~text,")"
TextFileWriteLineHint="[UjAPI]  nothing TextFileWriteLine (textfilehandle whichTextFile, string text)"


SetVisionMax=SetVisionMax
SetVisionMax="SetVisionMax(","real ",,~value,")"
SetVisionMaxHint="[UjAPI]  nothing SetVisionMax (real value)"


SetAttackSpeedMinBonus=SetAttackSpeedMinBonus
SetAttackSpeedMinBonus="SetAttackSpeedMinBonus(","real ",,~value,")"
SetAttackSpeedMinBonusHint="[UjAPI]  nothing SetAttackSpeedMinBonus (real value)"


SetAttackSpeedMaxBonus=SetAttackSpeedMaxBonus
SetAttackSpeedMaxBonus="SetAttackSpeedMaxBonus(","real ",,~value,")"
SetAttackSpeedMaxBonusHint="[UjAPI]  nothing SetAttackSpeedMaxBonus (real value)"


SetMoveSpeedMinAllowed=SetMoveSpeedMinAllowed
SetMoveSpeedMinAllowed="SetMoveSpeedMinAllowed(","real ",,~value,")"
SetMoveSpeedMinAllowedHint="[UjAPI]  nothing SetMoveSpeedMinAllowed (real value)"


SetMoveSpeedMaxAllowed=SetMoveSpeedMaxAllowed
SetMoveSpeedMaxAllowed="SetMoveSpeedMaxAllowed(","real ",,~value,")"
SetMoveSpeedMaxAllowedHint="[UjAPI]  nothing SetMoveSpeedMaxAllowed (real value)"


EnableSelection=EnableSelection
EnableSelection="EnableSelection(","boolean ",,~enable,")"
EnableSelectionHint="[UjAPI]  nothing EnableSelection (boolean enable)"


EnableSelectionCircle=EnableSelectionCircle
EnableSelectionCircle="EnableSelectionCircle(","boolean ",,~enable,")"
EnableSelectionCircleHint="[UjAPI]  nothing EnableSelectionCircle (boolean enable)"


EnableTargetIndicator=EnableTargetIndicator
EnableTargetIndicator="EnableTargetIndicator(","boolean ",,~enable,")"
EnableTargetIndicatorHint="[UjAPI]  nothing EnableTargetIndicator (boolean enable)"


EnableRenderStage=EnableRenderStage
EnableRenderStage="EnableRenderStage(","renderstage ",,~renderStage,", ","boolean ",,~enable,")"
EnableRenderStageHint="[UjAPI]  nothing EnableRenderStage (renderstage renderStage, boolean enable)"


EnableStatbar=EnableStatbar
EnableStatbar="EnableStatbar(","boolean ",,~enable,")"
EnableStatbarHint="[UjAPI]  nothing EnableStatbar (boolean enable)"


SetMapFogZ=SetMapFogZ
SetMapFogZ="SetMapFogZ(","real ",,~z,")"
SetMapFogZHint="[UjAPI]  nothing SetMapFogZ (real z)"


SetMapFogColour=SetMapFogColour
SetMapFogColour="SetMapFogColour(","integer ",,~colour,")"
SetMapFogColourHint="[UjAPI]  nothing SetMapFogColour (integer colour)"


TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(","trigger ",,~whichTrigger,")"
TriggerCountEventsHint="[UjAPI]  integer TriggerCountEvents (trigger whichTrigger)"


TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(","trigger ",,~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI]  integer TriggerCountConditions (trigger whichTrigger)"


TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(","trigger ",,~whichTrigger,")"
TriggerCountActionsHint="[UjAPI]  integer TriggerCountActions (trigger whichTrigger)"


TriggerRemoveEvent=TriggerRemoveEvent
TriggerRemoveEvent="TriggerRemoveEvent(","trigger ",,~whichTrigger,", ","event ",,~whichEvent,")"
TriggerRemoveEventHint="[UjAPI]  nothing TriggerRemoveEvent (trigger whichTrigger, event whichEvent)"


TriggerRemoveEventId=TriggerRemoveEventId
TriggerRemoveEventId="TriggerRemoveEventId(","trigger ",,~whichTrigger,", ","eventid ",,~whichEventId,", ","boolean ",,~removeAllOccurences,")"
TriggerRemoveEventIdHint="[UjAPI]  nothing TriggerRemoveEventId (trigger whichTrigger, eventid whichEventId, boolean removeAllOccurences)"


TriggerClearEvents=TriggerClearEvents
TriggerClearEvents="TriggerClearEvents(","trigger ",,~whichTrigger,")"
TriggerClearEventsHint="[UjAPI]  nothing TriggerClearEvents (trigger whichTrigger)"


TriggerClear=TriggerClear
TriggerClear="TriggerClear(","trigger ",,~whichTrigger,")"
TriggerClearHint="[UjAPI]  nothing TriggerClear (trigger whichTrigger)"


RemoveSound=RemoveSound
RemoveSound="RemoveSound(","sound ",,~whichSound,")"
RemoveSoundHint="[UjAPI]  nothing RemoveSound (sound whichSound)"


ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(","sound ",,~whichSound,", ","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~eaxSetting,")"
ReplaceSoundHint="[UjAPI]  sound ReplaceSound (sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting)"


ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(","sound ",,~whichSound,", ","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI]  sound ReplaceSoundWithLabel (sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName)"


ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(","sound ",,~whichSound,", ","string ",,~soundLabel,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI]  sound ReplaceSoundFromLabel (sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate)"


ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(","sound ",,~whichSound,", ","string ",,~soundLabel,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI]  sound ReplaceMIDISound (sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate)"


BenchmarkStart=BenchmarkStart
BenchmarkStart="BenchmarkStart(",")"
BenchmarkStartHint="[UjAPI]  nothing BenchmarkStart ()"


BenchmarkEnd=BenchmarkEnd
BenchmarkEnd="BenchmarkEnd(",")"
BenchmarkEndHint="[UjAPI]  nothing BenchmarkEnd ()"


BenchmarkReset=BenchmarkReset
BenchmarkReset="BenchmarkReset(",")"
BenchmarkResetHint="[UjAPI]  nothing BenchmarkReset ()"


BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(","integer ",,~benchType,")"
BenchmarkGetElapsedHint="[UjAPI]  string BenchmarkGetElapsed (integer benchType)"


SetScreenFieldOfView=SetScreenFieldOfView
SetScreenFieldOfView="SetScreenFieldOfView(","real ",,~fov,")"
SetScreenFieldOfViewHint="[UjAPI]  nothing SetScreenFieldOfView (real fov)"


SetWidescreenState=SetWidescreenState
SetWidescreenState="SetWidescreenState(","boolean ",,~flag,")"
SetWidescreenStateHint="[UjAPI]  nothing SetWidescreenState (boolean flag)"


SetCursorEnabled=SetCursorEnabled
SetCursorEnabled="SetCursorEnabled(","boolean ",,~enable,")"
SetCursorEnabledHint="[UjAPI]  nothing SetCursorEnabled (boolean enable)"


SetCursorAnimationLocked=SetCursorAnimationLocked
SetCursorAnimationLocked="SetCursorAnimationLocked(","boolean ",,~isLock,")"
SetCursorAnimationLockedHint="[UjAPI]  nothing SetCursorAnimationLocked (boolean isLock)"


SetMouseScreenX=SetMouseScreenX
SetMouseScreenX="SetMouseScreenX(","real ",,~x,")"
SetMouseScreenXHint="[UjAPI]  nothing SetMouseScreenX (real x)"


SetMouseScreenY=SetMouseScreenY
SetMouseScreenY="SetMouseScreenY(","real ",,~y,")"
SetMouseScreenYHint="[UjAPI]  nothing SetMouseScreenY (real y)"


SetMouseScreenPosition=SetMouseScreenPosition
SetMouseScreenPosition="SetMouseScreenPosition(","real ",,~x,", ","real ",,~y,")"
SetMouseScreenPositionHint="[UjAPI]  nothing SetMouseScreenPosition (real x, real y)"


SetMouseScreenPixelX=SetMouseScreenPixelX
SetMouseScreenPixelX="SetMouseScreenPixelX(","integer ",,~x,")"
SetMouseScreenPixelXHint="[UjAPI]  nothing SetMouseScreenPixelX (integer x)"


SetMouseScreenPixelY=SetMouseScreenPixelY
SetMouseScreenPixelY="SetMouseScreenPixelY(","integer ",,~y,")"
SetMouseScreenPixelYHint="[UjAPI]  nothing SetMouseScreenPixelY (integer y)"


SetMouseScreenPixelPosition=SetMouseScreenPixelPosition
SetMouseScreenPixelPosition="SetMouseScreenPixelPosition(","integer ",,~x,", ","integer ",,~y,")"
SetMouseScreenPixelPositionHint="[UjAPI]  nothing SetMouseScreenPixelPosition (integer x, integer y)"


DisplayWarningMessage=DisplayWarningMessage
DisplayWarningMessage="DisplayWarningMessage(","player ",,~toPlayer,", ","string ",,~message,")"
DisplayWarningMessageHint="[UjAPI]  nothing DisplayWarningMessage (player toPlayer, string message)"


DisplayTimedWarningMessage=DisplayTimedWarningMessage
DisplayTimedWarningMessage="DisplayTimedWarningMessage(","player ",,~toPlayer,", ","real ",,~duration,", ","string ",,~message,")"
DisplayTimedWarningMessageHint="[UjAPI]  nothing DisplayTimedWarningMessage (player toPlayer, real duration, string message)"


DisplayChatMessageEx=DisplayChatMessageEx
DisplayChatMessageEx="DisplayChatMessageEx(","player ",,~whichPlayer,", ","integer ",,~recipient,", ","real ",,~duration,", ","boolean ",,~addToLog,", ","string ",,~message,")"
DisplayChatMessageExHint="[UjAPI]  nothing DisplayChatMessageEx (player whichPlayer, integer recipient, real duration, boolean addToLog, string message)"


DisplayChatMessage=DisplayChatMessage
DisplayChatMessage="DisplayChatMessage(","player ",,~whichPlayer,", ","integer ",,~recipient,", ","string ",,~message,")"
DisplayChatMessageHint="[UjAPI]  nothing DisplayChatMessage (player whichPlayer, integer recipient, string message)"


DisplayTimedChatMessage=DisplayTimedChatMessage
DisplayTimedChatMessage="DisplayTimedChatMessage(","player ",,~whichPlayer,", ","integer ",,~recipient,", ","real ",,~duration,", ","string ",,~message,")"
DisplayTimedChatMessageHint="[UjAPI]  nothing DisplayTimedChatMessage (player whichPlayer, integer recipient, real duration, string message)"


EnumHandlesOfType=EnumHandlesOfType
EnumHandlesOfType="EnumHandlesOfType(","integer ",,~handleBaseTypeId,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumHandlesOfTypeHint="[UjAPI]  nothing EnumHandlesOfType (integer handleBaseTypeId, boolexpr filter, code handlerFunc)"


DestroyQuestItem=DestroyQuestItem
DestroyQuestItem="DestroyQuestItem(","questitem ",,~whichQuestItem,")"
DestroyQuestItemHint="[UjAPI]  nothing DestroyQuestItem (questitem whichQuestItem)"


AntiHackEnable=AntiHackEnable
AntiHackEnable="AntiHackEnable(","boolean ",,~enable,")"
AntiHackEnableHint="[UjAPI]  nothing AntiHackEnable (boolean enable)"


AntiHackEnableProcessCheck=AntiHackEnableProcessCheck
AntiHackEnableProcessCheck="AntiHackEnableProcessCheck(","boolean ",,~enable,")"
AntiHackEnableProcessCheckHint="[UjAPI]  nothing AntiHackEnableProcessCheck (boolean enable)"


AntiHackEnableModuleCheck=AntiHackEnableModuleCheck
AntiHackEnableModuleCheck="AntiHackEnableModuleCheck(","boolean ",,~enable,")"
AntiHackEnableModuleCheckHint="[UjAPI]  nothing AntiHackEnableModuleCheck (boolean enable)"


AntiHackEnableKick=AntiHackEnableKick
AntiHackEnableKick="AntiHackEnableKick(","boolean ",,~enable,")"
AntiHackEnableKickHint="[UjAPI]  nothing AntiHackEnableKick (boolean enable)"


AntiHackEnableEx=AntiHackEnableEx
AntiHackEnableEx="AntiHackEnableEx(","boolean ",,~enable,", ","boolean ",,~isModuleCheck,", ","boolean ",,~isProcessCheck,")"
AntiHackEnableExHint="[UjAPI]  nothing AntiHackEnableEx (boolean enable, boolean isModuleCheck, boolean isProcessCheck)"


SaveHandle=SaveHandle
SaveHandle="SaveHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","handle ",,~whichHandle,")"
SaveHandleHint="[UjAPI]  boolean SaveHandle (hashtable table, integer parentKey, integer childKey, handle whichHandle)"


SaveCode=SaveCode
SaveCode="SaveCode(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","code ",,~whichCode,")"
SaveCodeHint="[UjAPI]  boolean SaveCode (hashtable table, integer parentKey, integer childKey, code whichCode)"


SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","attacktype ",,~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI]  boolean SaveAttackTypeHandle (hashtable table, integer parentKey, integer childKey, attacktype whichAttackType)"


SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","damagetype ",,~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI]  boolean SaveDamageTypeHandle (hashtable table, integer parentKey, integer childKey, damagetype whichDamageType)"


SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","weapontype ",,~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI]  boolean SaveWeaponTypeHandle (hashtable table, integer parentKey, integer childKey, weapontype whichWeaponType)"


SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","buff ",,~whichBuff,")"
SaveBuffHandleHint="[UjAPI]  boolean SaveBuffHandle (hashtable table, integer parentKey, integer childKey, buff whichBuff)"


SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","sprite ",,~whichsprite,")"
SaveSpriteHandleHint="[UjAPI]  boolean SaveSpriteHandle (hashtable table, integer parentKey, integer childKey, sprite whichsprite)"


SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","war3image ",,~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI]  boolean SaveWar3ImageHandle (hashtable table, integer parentKey, integer childKey, war3image whichWar3Image)"


SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","doodad ",,~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI]  boolean SaveDoodadHandle (hashtable table, integer parentKey, integer childKey, doodad whichDoodad)"


SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","textfilehandle ",,~whichFile,")"
SaveTextFileHandleHint="[UjAPI]  boolean SaveTextFileHandle (hashtable table, integer parentKey, integer childKey, textfilehandle whichFile)"


SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","projectile ",,~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI]  boolean SaveProjectileHandle (hashtable table, integer parentKey, integer childKey, projectile whichProjectile)"


SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","framehandle ",,~whichFrame,")"
SaveFrameHandleHint="[UjAPI]  boolean SaveFrameHandle (hashtable table, integer parentKey, integer childKey, framehandle whichFrame)"


SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","handlelist ",,~whichHandleList,")"
SaveHandleListHint="[UjAPI]  boolean SaveHandleList (hashtable table, integer parentKey, integer childKey, handlelist whichHandleList)"


LoadHandle=LoadHandle
LoadHandle="LoadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHandleHint="[UjAPI]  handle LoadHandle (hashtable table, integer parentKey, integer childKey)"


LoadCode=LoadCode
LoadCode="LoadCode(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadCodeHint="[UjAPI]  code LoadCode (hashtable table, integer parentKey, integer childKey)"


LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadAttackTypeHandleHint="[UjAPI]  attacktype LoadAttackTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDamageTypeHandleHint="[UjAPI]  damagetype LoadDamageTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI]  weapontype LoadWeaponTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBuffHandleHint="[UjAPI]  buff LoadBuffHandle (hashtable table, integer parentKey, integer childKey)"


LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadSpriteHandleHint="[UjAPI]  sprite LoadSpriteHandle (hashtable table, integer parentKey, integer childKey)"


LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWar3ImageHandleHint="[UjAPI]  war3image LoadWar3ImageHandle (hashtable table, integer parentKey, integer childKey)"


LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDoodadHandleHint="[UjAPI]  doodad LoadDoodadHandle (hashtable table, integer parentKey, integer childKey)"


LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTextFileHandleHint="[UjAPI]  textfilehandle LoadTextFileHandle (hashtable table, integer parentKey, integer childKey)"


LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadProjectileHandleHint="[UjAPI]  projectile LoadProjectileHandle (hashtable table, integer parentKey, integer childKey)"


LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFrameHandleHint="[UjAPI]  framehandle LoadFrameHandle (hashtable table, integer parentKey, integer childKey)"


LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHandleListHint="[UjAPI]  handlelist LoadHandleList (hashtable table, integer parentKey, integer childKey)"


ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(","force ",,~whichForce,", ","player ",,~whichPlayer,")"
ForceHasPlayerHint="[UjAPI]  boolean ForceHasPlayer (force whichForce, player whichPlayer)"


ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(","force ",,~whichForce,")"
ForceCountPlayersHint="[UjAPI]  integer ForceCountPlayers (force whichForce)"


SetFogModifierForPlayer=SetFogModifierForPlayer
SetFogModifierForPlayer="SetFogModifierForPlayer(","fogmodifier ",,~whichFogModifier,", ","player ",,~forWhichPlayer,")"
SetFogModifierForPlayerHint="[UjAPI]  nothing SetFogModifierForPlayer (fogmodifier whichFogModifier, player forWhichPlayer)"


SetFogModifierFogState=SetFogModifierFogState
SetFogModifierFogState="SetFogModifierFogState(","fogmodifier ",,~whichFogModifier,", ","fogstate ",,~whichState,", ","boolean ",,~isSet,")"
SetFogModifierFogStateHint="[UjAPI]  nothing SetFogModifierFogState (fogmodifier whichFogModifier, fogstate whichState, boolean isSet)"


SetFogModifierX=SetFogModifierX
SetFogModifierX="SetFogModifierX(","fogmodifier ",,~whichFogModifier,", ","real ",,~x,")"
SetFogModifierXHint="[UjAPI]  nothing SetFogModifierX (fogmodifier whichFogModifier, real x)"


SetFogModifierY=SetFogModifierY
SetFogModifierY="SetFogModifierY(","fogmodifier ",,~whichFogModifier,", ","real ",,~y,")"
SetFogModifierYHint="[UjAPI]  nothing SetFogModifierY (fogmodifier whichFogModifier, real y)"


SetFogModifierZ=SetFogModifierZ
SetFogModifierZ="SetFogModifierZ(","fogmodifier ",,~whichFogModifier,", ","real ",,~z,")"
SetFogModifierZHint="[UjAPI]  nothing SetFogModifierZ (fogmodifier whichFogModifier, real z)"


SetFogModifierRadius=SetFogModifierRadius
SetFogModifierRadius="SetFogModifierRadius(","fogmodifier ",,~whichFogModifier,", ","real ",,~radius,")"
SetFogModifierRadiusHint="[UjAPI]  nothing SetFogModifierRadius (fogmodifier whichFogModifier, real radius)"


SetFogModifierRadiusEx=SetFogModifierRadiusEx
SetFogModifierRadiusEx="SetFogModifierRadiusEx(","fogmodifier ",,~whichFogModifier,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,")"
SetFogModifierRadiusExHint="[UjAPI]  nothing SetFogModifierRadiusEx (fogmodifier whichFogModifier, real x, real y, real radius)"


SetFogModifierPosition=SetFogModifierPosition
SetFogModifierPosition="SetFogModifierPosition(","fogmodifier ",,~whichFogModifier,", ","real ",,~x,", ","real ",,~y,")"
SetFogModifierPositionHint="[UjAPI]  nothing SetFogModifierPosition (fogmodifier whichFogModifier, real x, real y)"


SetFogModifierPositionWithZ=SetFogModifierPositionWithZ
SetFogModifierPositionWithZ="SetFogModifierPositionWithZ(","fogmodifier ",,~whichFogModifier,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetFogModifierPositionWithZHint="[UjAPI]  nothing SetFogModifierPositionWithZ (fogmodifier whichFogModifier, real x, real y, real z)"


SetFogModifierPositionLoc=SetFogModifierPositionLoc
SetFogModifierPositionLoc="SetFogModifierPositionLoc(","fogmodifier ",,~whichFogModifier,", ","location ",,~whichLocation,")"
SetFogModifierPositionLocHint="[UjAPI]  nothing SetFogModifierPositionLoc (fogmodifier whichFogModifier, location whichLocation)"


SetFogModifierRect=SetFogModifierRect
SetFogModifierRect="SetFogModifierRect(","fogmodifier ",,~whichFogModifier,", ","rect ",,~where,")"
SetFogModifierRectHint="[UjAPI]  nothing SetFogModifierRect (fogmodifier whichFogModifier, rect where)"


SetFogModifierRectEx=SetFogModifierRectEx
SetFogModifierRectEx="SetFogModifierRectEx(","fogmodifier ",,~whichFogModifier,", ","real ",,~minX,", ","real ",,~minY,", ","real ",,~maxX,", ","real ",,~maxY,")"
SetFogModifierRectExHint="[UjAPI]  nothing SetFogModifierRectEx (fogmodifier whichFogModifier, real minX, real minY, real maxX, real maxY)"


GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(","group ",,~whichGroup,")"
GroupGetCountHint="[UjAPI]  integer GroupGetCount (group whichGroup)"


GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(","group ",,~whichGroup,", ","unit ",,~whichUnit,")"
GroupContainsUnitHint="[UjAPI]  boolean GroupContainsUnit (group whichGroup, unit whichUnit)"


GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(","group ",,~whichGroup,", ","integer ",,~index,")"
GroupGetUnitByIndexHint="[UjAPI]  unit GroupGetUnitByIndex (group whichGroup, integer index)"


GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(","group ",,~whichGroup,")"
GroupForEachUnitHint="[UjAPI]  unit GroupForEachUnit (group whichGroup)"


GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(","group ",,~destGroup,", ","group ",,~sourceGroup,")"
GroupAddGroupExHint="[UjAPI]  integer GroupAddGroupEx (group destGroup, group sourceGroup)"


GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(","group ",,~destGroup,", ","group ",,~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI]  integer GroupRemoveGroupEx (group destGroup, group sourceGroup)"


SetTradeSource=SetTradeSource
SetTradeSource="SetTradeSource(","player ",,~whichPlayer,")"
SetTradeSourceHint="[UjAPI]  nothing SetTradeSource (player whichPlayer)"


SetTradeTarget=SetTradeTarget
SetTradeTarget="SetTradeTarget(","player ",,~whichPlayer,")"
SetTradeTargetHint="[UjAPI]  nothing SetTradeTarget (player whichPlayer)"


SetTradeGold=SetTradeGold
SetTradeGold="SetTradeGold(","integer ",,~amount,")"
SetTradeGoldHint="[UjAPI]  nothing SetTradeGold (integer amount)"


SetTradeLumber=SetTradeLumber
SetTradeLumber="SetTradeLumber(","integer ",,~amount,")"
SetTradeLumberHint="[UjAPI]  nothing SetTradeLumber (integer amount)"


SetTradeState=SetTradeState
SetTradeState="SetTradeState(","tradestate ",,~whichTradeState,", ","boolean ",,~isSet,")"
SetTradeStateHint="[UjAPI]  nothing SetTradeState (tradestate whichTradeState, boolean isSet)"


TradePlayerResources=TradePlayerResources
TradePlayerResources="TradePlayerResources(","player ",,~fromPlayer,", ","player ",,~toPlayer,", ","integer ",,~gold,", ","integer ",,~lumber,")"
TradePlayerResourcesHint="[UjAPI]  nothing TradePlayerResources (player fromPlayer, player toPlayer, integer gold, integer lumber)"


HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI]  handlelist HandleListCreate ()"


HandleListDestroy=HandleListDestroy
HandleListDestroy="HandleListDestroy(","handlelist ",,~whichHandleList,")"
HandleListDestroyHint="[UjAPI]  nothing HandleListDestroy (handlelist whichHandleList)"


HandleListAddHandle=HandleListAddHandle
HandleListAddHandle="HandleListAddHandle(","handlelist ",,~whichHandleList,", ","handle ",,~whichHandle,")"
HandleListAddHandleHint="[UjAPI]  nothing HandleListAddHandle (handlelist whichHandleList, handle whichHandle)"


HandleListRemoveHandle=HandleListRemoveHandle
HandleListRemoveHandle="HandleListRemoveHandle(","handlelist ",,~whichHandleList,", ","handle ",,~whichHandle,")"
HandleListRemoveHandleHint="[UjAPI]  nothing HandleListRemoveHandle (handlelist whichHandleList, handle whichHandle)"


HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(","handlelist ",,~destHandleList,", ","handlelist ",,~sourceHandleList,")"
HandleListAddListHint="[UjAPI]  integer HandleListAddList (handlelist destHandleList, handlelist sourceHandleList)"


HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(","handlelist ",,~destHandleList,", ","handlelist ",,~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI]  integer HandleListRemoveList (handlelist destHandleList, handlelist sourceHandleList)"


HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(","handlelist ",,~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI]  integer HandleListRemoveEmpty (handlelist whichHandleList)"


HandleListClear=HandleListClear
HandleListClear="HandleListClear(","handlelist ",,~whichHandleList,")"
HandleListClearHint="[UjAPI]  nothing HandleListClear (handlelist whichHandleList)"


HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(","handlelist ",,~whichHandleList,", ","handle ",,~whichHandle,")"
HandleListContainsHandleHint="[UjAPI]  boolean HandleListContainsHandle (handlelist whichHandleList, handle whichHandle)"


HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(","handlelist ",,~whichHandleList,", ","integer ",,~typeId,")"
HandleListContainsTypeIdHint="[UjAPI]  boolean HandleListContainsTypeId (handlelist whichHandleList, integer typeId)"


HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(","handlelist ",,~whichHandleList,")"
HandleListGetCountHint="[UjAPI]  integer HandleListGetCount (handlelist whichHandleList)"


HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,")"
HandleListGetCountExHint="[UjAPI]  integer HandleListGetCountEx (handlelist whichHandleList, integer handleTypeId)"


HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(","handlelist ",,~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI]  integer HandleListGetAgentCount (handlelist whichHandleList)"


HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(","handlelist ",,~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI]  integer HandleListGetWidgetCount (handlelist whichHandleList)"


HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(","handlelist ",,~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI]  integer HandleListGetUnitCount (handlelist whichHandleList)"


HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(","handlelist ",,~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI]  integer HandleListGetItemCount (handlelist whichHandleList)"


HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(","handlelist ",,~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI]  integer HandleListGetDestructableCount (handlelist whichHandleList)"


HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(","handlelist ",,~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI]  integer HandleListGetDoodadCount (handlelist whichHandleList)"


HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(","handlelist ",,~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI]  integer HandleListGetAbilityCount (handlelist whichHandleList)"


HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(","handlelist ",,~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI]  integer HandleListGetBuffCount (handlelist whichHandleList)"


HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(","handlelist ",,~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI]  integer HandleListGetSpriteCount (handlelist whichHandleList)"


HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(","handlelist ",,~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI]  integer HandleListGetEffectCount (handlelist whichHandleList)"


HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(","handlelist ",,~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI]  integer HandleListGetProjectileCount (handlelist whichHandleList)"


HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(","handlelist ",,~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI]  integer HandleListGetFrameCount (handlelist whichHandleList)"


HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(","handlelist ",,~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI]  integer HandleListGetOrderCount (handlelist whichHandleList)"


HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetHandleByIndexHint="[UjAPI]  handle HandleListGetHandleByIndex (handlelist whichHandleList, integer index)"


HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","integer ",,~index,")"
HandleListGetHandleByIndexExHint="[UjAPI]  handle HandleListGetHandleByIndexEx (handlelist whichHandleList, integer handleTypeId, integer index)"


HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(","handlelist ",,~whichHandleList,", ","integer ",,~typeId,", ","integer ",,~index,")"
HandleListGetHandleByIdHint="[UjAPI]  handle HandleListGetHandleById (handlelist whichHandleList, integer typeId, integer index)"


HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetAgentByIndexHint="[UjAPI]  agent HandleListGetAgentByIndex (handlelist whichHandleList, integer index)"


HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetWidgetByIndexHint="[UjAPI]  widget HandleListGetWidgetByIndex (handlelist whichHandleList, integer index)"


HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetUnitByIndexHint="[UjAPI]  unit HandleListGetUnitByIndex (handlelist whichHandleList, integer index)"


HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetItemByIndexHint="[UjAPI]  item HandleListGetItemByIndex (handlelist whichHandleList, integer index)"


HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetDestructableByIndexHint="[UjAPI]  destructable HandleListGetDestructableByIndex (handlelist whichHandleList, integer index)"


HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetDoodadByIndexHint="[UjAPI]  doodad HandleListGetDoodadByIndex (handlelist whichHandleList, integer index)"


HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetAbilityByIndexHint="[UjAPI]  ability HandleListGetAbilityByIndex (handlelist whichHandleList, integer index)"


HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetBuffByIndexHint="[UjAPI]  buff HandleListGetBuffByIndex (handlelist whichHandleList, integer index)"


HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetSpriteByIndexHint="[UjAPI]  sprite HandleListGetSpriteByIndex (handlelist whichHandleList, integer index)"


HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetEffectByIndexHint="[UjAPI]  effect HandleListGetEffectByIndex (handlelist whichHandleList, integer index)"


HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetProjectileByIndexHint="[UjAPI]  projectile HandleListGetProjectileByIndex (handlelist whichHandleList, integer index)"


HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetFrameByIndexHint="[UjAPI]  framehandle HandleListGetFrameByIndex (handlelist whichHandleList, integer index)"


HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetOrderByIndexHint="[UjAPI]  orderhandle HandleListGetOrderByIndex (handlelist whichHandleList, integer index)"


HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI]  handle HandleListGetFilterHandle ()"


HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI]  agent HandleListGetFilterAgent ()"


HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI]  widget HandleListGetFilterWidget ()"


HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI]  unit HandleListGetFilterUnit ()"


HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI]  item HandleListGetFilterItem ()"


HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI]  destructable HandleListGetFilterDestructable ()"


HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI]  doodad HandleListGetFilterDoodad ()"


HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI]  ability HandleListGetFilterAbility ()"


HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI]  buff HandleListGetFilterBuff ()"


HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI]  sprite HandleListGetFilterSprite ()"


HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI]  effect HandleListGetFilterEffect ()"


HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI]  projectile HandleListGetFilterProjectile ()"


HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI]  framehandle HandleListGetFilterFrame ()"


HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI]  orderhandle HandleListGetFilterOrder ()"


HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI]  handle HandleListGetEnumHandle ()"


HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI]  agent HandleListGetEnumAgent ()"


HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI]  widget HandleListGetEnumWidget ()"


HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI]  unit HandleListGetEnumUnit ()"


HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI]  item HandleListGetEnumItem ()"


HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI]  destructable HandleListGetEnumDestructable ()"


HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI]  doodad HandleListGetEnumDoodad ()"


HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI]  ability HandleListGetEnumAbility ()"


HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI]  buff HandleListGetEnumBuff ()"


HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI]  sprite HandleListGetEnumSprite ()"


HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI]  effect HandleListGetEnumEffect ()"


HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI]  projectile HandleListGetEnumProjectile ()"


HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI]  framehandle HandleListGetEnumFrame ()"


HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI]  orderhandle HandleListGetEnumOrder ()"


HandleListEnumInRange=HandleListEnumInRange
HandleListEnumInRange="HandleListEnumInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumInRangeHint="[UjAPI]  nothing HandleListEnumInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumInRangeEx=HandleListEnumInRangeEx
HandleListEnumInRangeEx="HandleListEnumInRangeEx(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","integer ",,~handleTypeId,", ","boolexpr ",,~filter,")"
HandleListEnumInRangeExHint="[UjAPI]  nothing HandleListEnumInRangeEx (handlelist whichHandleList, real x, real y, real radius, integer handleTypeId, boolexpr filter)"


HandleListEnumAgentsInRange=HandleListEnumAgentsInRange
HandleListEnumAgentsInRange="HandleListEnumAgentsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumAgentsInRangeHint="[UjAPI]  nothing HandleListEnumAgentsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumWidgetsInRange=HandleListEnumWidgetsInRange
HandleListEnumWidgetsInRange="HandleListEnumWidgetsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumWidgetsInRangeHint="[UjAPI]  nothing HandleListEnumWidgetsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumUnitsInRange=HandleListEnumUnitsInRange
HandleListEnumUnitsInRange="HandleListEnumUnitsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumUnitsInRangeHint="[UjAPI]  nothing HandleListEnumUnitsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumItemsInRange=HandleListEnumItemsInRange
HandleListEnumItemsInRange="HandleListEnumItemsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumItemsInRangeHint="[UjAPI]  nothing HandleListEnumItemsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumDestructablesInRange=HandleListEnumDestructablesInRange
HandleListEnumDestructablesInRange="HandleListEnumDestructablesInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumDestructablesInRangeHint="[UjAPI]  nothing HandleListEnumDestructablesInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumDoodadsInRange=HandleListEnumDoodadsInRange
HandleListEnumDoodadsInRange="HandleListEnumDoodadsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumDoodadsInRangeHint="[UjAPI]  nothing HandleListEnumDoodadsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumEffectsInRange=HandleListEnumEffectsInRange
HandleListEnumEffectsInRange="HandleListEnumEffectsInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumEffectsInRangeHint="[UjAPI]  nothing HandleListEnumEffectsInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumProjectilesInRange=HandleListEnumProjectilesInRange
HandleListEnumProjectilesInRange="HandleListEnumProjectilesInRange(","handlelist ",,~whichHandleList,", ","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumProjectilesInRangeHint="[UjAPI]  nothing HandleListEnumProjectilesInRange (handlelist whichHandleList, real x, real y, real radius, boolexpr filter)"


HandleListEnumInRangeOfLoc=HandleListEnumInRangeOfLoc
HandleListEnumInRangeOfLoc="HandleListEnumInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumInRangeOfLocHint="[UjAPI]  nothing HandleListEnumInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumInRangeOfLocEx=HandleListEnumInRangeOfLocEx
HandleListEnumInRangeOfLocEx="HandleListEnumInRangeOfLocEx(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","integer ",,~handleTypeId,", ","boolexpr ",,~filter,")"
HandleListEnumInRangeOfLocExHint="[UjAPI]  nothing HandleListEnumInRangeOfLocEx (handlelist whichHandleList, location whichLocation, real radius, integer handleTypeId, boolexpr filter)"


HandleListEnumAgentsInRangeOfLoc=HandleListEnumAgentsInRangeOfLoc
HandleListEnumAgentsInRangeOfLoc="HandleListEnumAgentsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumAgentsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumAgentsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumWidgetsInRangeOfLoc=HandleListEnumWidgetsInRangeOfLoc
HandleListEnumWidgetsInRangeOfLoc="HandleListEnumWidgetsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumWidgetsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumWidgetsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumUnitsInRangeOfLoc=HandleListEnumUnitsInRangeOfLoc
HandleListEnumUnitsInRangeOfLoc="HandleListEnumUnitsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumUnitsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumUnitsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumItemsInRangeOfLoc=HandleListEnumItemsInRangeOfLoc
HandleListEnumItemsInRangeOfLoc="HandleListEnumItemsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumItemsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumItemsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumDestructablesInRangeOfLoc=HandleListEnumDestructablesInRangeOfLoc
HandleListEnumDestructablesInRangeOfLoc="HandleListEnumDestructablesInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumDestructablesInRangeOfLocHint="[UjAPI]  nothing HandleListEnumDestructablesInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumDoodadsInRangeOfLoc=HandleListEnumDoodadsInRangeOfLoc
HandleListEnumDoodadsInRangeOfLoc="HandleListEnumDoodadsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumDoodadsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumDoodadsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumEffectsInRangeOfLoc=HandleListEnumEffectsInRangeOfLoc
HandleListEnumEffectsInRangeOfLoc="HandleListEnumEffectsInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumEffectsInRangeOfLocHint="[UjAPI]  nothing HandleListEnumEffectsInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumProjectilesInRangeOfLoc=HandleListEnumProjectilesInRangeOfLoc
HandleListEnumProjectilesInRangeOfLoc="HandleListEnumProjectilesInRangeOfLoc(","handlelist ",,~whichHandleList,", ","location ",,~whichLocation,", ","real ",,~radius,", ","boolexpr ",,~filter,")"
HandleListEnumProjectilesInRangeOfLocHint="[UjAPI]  nothing HandleListEnumProjectilesInRangeOfLoc (handlelist whichHandleList, location whichLocation, real radius, boolexpr filter)"


HandleListEnumInRect=HandleListEnumInRect
HandleListEnumInRect="HandleListEnumInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumInRectHint="[UjAPI]  nothing HandleListEnumInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumInRectEx=HandleListEnumInRectEx
HandleListEnumInRectEx="HandleListEnumInRectEx(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","integer ",,~handleTypeId,", ","boolexpr ",,~filter,")"
HandleListEnumInRectExHint="[UjAPI]  nothing HandleListEnumInRectEx (handlelist whichHandleList, rect whichRect, integer handleTypeId, boolexpr filter)"


HandleListEnumAgentsInRect=HandleListEnumAgentsInRect
HandleListEnumAgentsInRect="HandleListEnumAgentsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumAgentsInRectHint="[UjAPI]  nothing HandleListEnumAgentsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumWidgetsInRect=HandleListEnumWidgetsInRect
HandleListEnumWidgetsInRect="HandleListEnumWidgetsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumWidgetsInRectHint="[UjAPI]  nothing HandleListEnumWidgetsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumUnitsInRect=HandleListEnumUnitsInRect
HandleListEnumUnitsInRect="HandleListEnumUnitsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumUnitsInRectHint="[UjAPI]  nothing HandleListEnumUnitsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumItemsInRect=HandleListEnumItemsInRect
HandleListEnumItemsInRect="HandleListEnumItemsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumItemsInRectHint="[UjAPI]  nothing HandleListEnumItemsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumDestructablesInRect=HandleListEnumDestructablesInRect
HandleListEnumDestructablesInRect="HandleListEnumDestructablesInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumDestructablesInRectHint="[UjAPI]  nothing HandleListEnumDestructablesInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumDoodadsInRect=HandleListEnumDoodadsInRect
HandleListEnumDoodadsInRect="HandleListEnumDoodadsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumDoodadsInRectHint="[UjAPI]  nothing HandleListEnumDoodadsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumEffectsInRect=HandleListEnumEffectsInRect
HandleListEnumEffectsInRect="HandleListEnumEffectsInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumEffectsInRectHint="[UjAPI]  nothing HandleListEnumEffectsInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumProjectilesInRect=HandleListEnumProjectilesInRect
HandleListEnumProjectilesInRect="HandleListEnumProjectilesInRect(","handlelist ",,~whichHandleList,", ","rect ",,~whichRect,", ","boolexpr ",,~filter,")"
HandleListEnumProjectilesInRectHint="[UjAPI]  nothing HandleListEnumProjectilesInRect (handlelist whichHandleList, rect whichRect, boolexpr filter)"


HandleListEnumById=HandleListEnumById
HandleListEnumById="HandleListEnumById(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","boolexpr ",,~filter,")"
HandleListEnumByIdHint="[UjAPI]  nothing HandleListEnumById (handlelist whichHandleList, integer handleTypeId, boolexpr filter)"


HandleListEnumByIdEx=HandleListEnumByIdEx
HandleListEnumByIdEx="HandleListEnumByIdEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","integer ",,~typeId,", ","boolexpr ",,~filter,")"
HandleListEnumByIdExHint="[UjAPI]  nothing HandleListEnumByIdEx (handlelist whichHandleList, integer handleTypeId, integer typeId, boolexpr filter)"


HandleListEnumUnitAbilities=HandleListEnumUnitAbilities
HandleListEnumUnitAbilities="HandleListEnumUnitAbilities(","handlelist ",,~whichHandleList,", ","unit ",,~whichUnit,", ","boolexpr ",,~filter,")"
HandleListEnumUnitAbilitiesHint="[UjAPI]  nothing HandleListEnumUnitAbilities (handlelist whichHandleList, unit whichUnit, boolexpr filter)"


HandleListEnumUnitBuffs=HandleListEnumUnitBuffs
HandleListEnumUnitBuffs="HandleListEnumUnitBuffs(","handlelist ",,~whichHandleList,", ","unit ",,~whichUnit,", ","boolexpr ",,~filter,")"
HandleListEnumUnitBuffsHint="[UjAPI]  nothing HandleListEnumUnitBuffs (handlelist whichHandleList, unit whichUnit, boolexpr filter)"


HandleListEnumUnitOrders=HandleListEnumUnitOrders
HandleListEnumUnitOrders="HandleListEnumUnitOrders(","handlelist ",,~whichHandleList,", ","unit ",,~whichUnit,", ","boolexpr ",,~filter,")"
HandleListEnumUnitOrdersHint="[UjAPI]  nothing HandleListEnumUnitOrders (handlelist whichHandleList, unit whichUnit, boolexpr filter)"


HandleListForEach=HandleListForEach
HandleListForEach="HandleListForEach(","handlelist ",,~whichHandleList,", ","code ",,~c,")"
HandleListForEachHint="[UjAPI]  nothing HandleListForEach (handlelist whichHandleList, code c)"


HandleListForEachById=HandleListForEachById
HandleListForEachById="HandleListForEachById(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","code ",,~c,")"
HandleListForEachByIdHint="[UjAPI]  nothing HandleListForEachById (handlelist whichHandleList, integer handleTypeId, code c)"


HandleListForEachByIdEx=HandleListForEachByIdEx
HandleListForEachByIdEx="HandleListForEachByIdEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","integer ",,~typeId,", ","code ",,~c,")"
HandleListForEachByIdExHint="[UjAPI]  nothing HandleListForEachByIdEx (handlelist whichHandleList, integer handleTypeId, integer typeId, code c)"


SetTextTagX=SetTextTagX
SetTextTagX="SetTextTagX(","texttag ",,~whichTextTag,", ","real ",,~x,")"
SetTextTagXHint="[UjAPI]  nothing SetTextTagX (texttag whichTextTag, real x)"


SetTextTagY=SetTextTagY
SetTextTagY="SetTextTagY(","texttag ",,~whichTextTag,", ","real ",,~y,")"
SetTextTagYHint="[UjAPI]  nothing SetTextTagY (texttag whichTextTag, real y)"


SetTextTagZ=SetTextTagZ
SetTextTagZ="SetTextTagZ(","texttag ",,~whichTextTag,", ","real ",,~z,")"
SetTextTagZHint="[UjAPI]  nothing SetTextTagZ (texttag whichTextTag, real z)"


SetTextTagHeight=SetTextTagHeight
SetTextTagHeight="SetTextTagHeight(","texttag ",,~whichTextTag,", ","real ",,~height,")"
SetTextTagHeightHint="[UjAPI]  nothing SetTextTagHeight (texttag whichTextTag, real height)"


SetTextTagPositionLoc=SetTextTagPositionLoc
SetTextTagPositionLoc="SetTextTagPositionLoc(","texttag ",,~whichTextTag,", ","location ",,~whichLocation,")"
SetTextTagPositionLocHint="[UjAPI]  nothing SetTextTagPositionLoc (texttag whichTextTag, location whichLocation)"


SetTextTagAlpha=SetTextTagAlpha
SetTextTagAlpha="SetTextTagAlpha(","texttag ",,~whichTextTag,", ","integer ",,~alpha,")"
SetTextTagAlphaHint="[UjAPI]  nothing SetTextTagAlpha (texttag whichTextTag, integer alpha)"


SetTextTagVelocityX=SetTextTagVelocityX
SetTextTagVelocityX="SetTextTagVelocityX(","texttag ",,~whichTextTag,", ","real ",,~velX,")"
SetTextTagVelocityXHint="[UjAPI]  nothing SetTextTagVelocityX (texttag whichTextTag, real velX)"


SetTextTagVelocityY=SetTextTagVelocityY
SetTextTagVelocityY="SetTextTagVelocityY(","texttag ",,~whichTextTag,", ","real ",,~velY,")"
SetTextTagVelocityYHint="[UjAPI]  nothing SetTextTagVelocityY (texttag whichTextTag, real velY)"


SetTextTagVelocityZ=SetTextTagVelocityZ
SetTextTagVelocityZ="SetTextTagVelocityZ(","texttag ",,~whichTextTag,", ","real ",,~velZ,")"
SetTextTagVelocityZHint="[UjAPI]  nothing SetTextTagVelocityZ (texttag whichTextTag, real velZ)"


SetTextTagShadowColour=SetTextTagShadowColour
SetTextTagShadowColour="SetTextTagShadowColour(","texttag ",,~whichTextTag,", ","integer ",,~colour,")"
SetTextTagShadowColourHint="[UjAPI]  nothing SetTextTagShadowColour (texttag whichTextTag, integer colour)"


SetTextTagShadowAlpha=SetTextTagShadowAlpha
SetTextTagShadowAlpha="SetTextTagShadowAlpha(","texttag ",,~whichTextTag,", ","integer ",,~alpha,")"
SetTextTagShadowAlphaHint="[UjAPI]  nothing SetTextTagShadowAlpha (texttag whichTextTag, integer alpha)"


SetLightningSourceX=SetLightningSourceX
SetLightningSourceX="SetLightningSourceX(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningSourceXHint="[UjAPI]  nothing SetLightningSourceX (lightning whichBolt, real value)"


SetLightningSourceY=SetLightningSourceY
SetLightningSourceY="SetLightningSourceY(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningSourceYHint="[UjAPI]  nothing SetLightningSourceY (lightning whichBolt, real value)"


SetLightningSourceZ=SetLightningSourceZ
SetLightningSourceZ="SetLightningSourceZ(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningSourceZHint="[UjAPI]  nothing SetLightningSourceZ (lightning whichBolt, real value)"


SetLightningSourcePositionLoc=SetLightningSourcePositionLoc
SetLightningSourcePositionLoc="SetLightningSourcePositionLoc(","lightning ",,~whichBolt,", ","location ",,~whichLocation,")"
SetLightningSourcePositionLocHint="[UjAPI]  nothing SetLightningSourcePositionLoc (lightning whichBolt, location whichLocation)"


SetLightningTargetX=SetLightningTargetX
SetLightningTargetX="SetLightningTargetX(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningTargetXHint="[UjAPI]  nothing SetLightningTargetX (lightning whichBolt, real value)"


SetLightningTargetY=SetLightningTargetY
SetLightningTargetY="SetLightningTargetY(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningTargetYHint="[UjAPI]  nothing SetLightningTargetY (lightning whichBolt, real value)"


SetLightningTargetZ=SetLightningTargetZ
SetLightningTargetZ="SetLightningTargetZ(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningTargetZHint="[UjAPI]  nothing SetLightningTargetZ (lightning whichBolt, real value)"


SetLightningTargetPositionLoc=SetLightningTargetPositionLoc
SetLightningTargetPositionLoc="SetLightningTargetPositionLoc(","lightning ",,~whichBolt,", ","location ",,~whichLocation,")"
SetLightningTargetPositionLocHint="[UjAPI]  nothing SetLightningTargetPositionLoc (lightning whichBolt, location whichLocation)"


SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(","lightning ",,~whichBolt,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetLightningColourHint="[UjAPI]  boolean SetLightningColour (lightning whichBolt, integer red, integer green, integer blue, integer alpha)"


SetLightningLength=SetLightningLength
SetLightningLength="SetLightningLength(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningLengthHint="[UjAPI]  nothing SetLightningLength (lightning whichBolt, real value)"


SetLightningWidth=SetLightningWidth
SetLightningWidth="SetLightningWidth(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningWidthHint="[UjAPI]  nothing SetLightningWidth (lightning whichBolt, real value)"


SetLightningNoiseScaling=SetLightningNoiseScaling
SetLightningNoiseScaling="SetLightningNoiseScaling(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningNoiseScalingHint="[UjAPI]  nothing SetLightningNoiseScaling (lightning whichBolt, real value)"


SetLightningTextureCoordinates=SetLightningTextureCoordinates
SetLightningTextureCoordinates="SetLightningTextureCoordinates(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningTextureCoordinatesHint="[UjAPI]  nothing SetLightningTextureCoordinates (lightning whichBolt, real value)"


SetLightningDuration=SetLightningDuration
SetLightningDuration="SetLightningDuration(","lightning ",,~whichBolt,", ","real ",,~value,")"
SetLightningDurationHint="[UjAPI]  nothing SetLightningDuration (lightning whichBolt, real value)"


SetLightningTexture=SetLightningTexture
SetLightningTexture="SetLightningTexture(","lightning ",,~whichBolt,", ","string ",,~textureName,")"
SetLightningTextureHint="[UjAPI]  nothing SetLightningTexture (lightning whichBolt, string textureName)"


CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(","string ",,~file,", ","real ",,~sizeX,", ","real ",,~sizeY,", ","real ",,~posX,", ","real ",,~posY,", ","real ",,~posZ,", ","integer ",,~imageType,")"
CreateImageSimpleHint="[UjAPI]  image CreateImageSimple (string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType)"


SetImageX=SetImageX
SetImageX="SetImageX(","image ",,~whichImage,", ","real ",,~sizeX,")"
SetImageXHint="[UjAPI]  nothing SetImageX (image whichImage, real sizeX)"


SetImageY=SetImageY
SetImageY="SetImageY(","image ",,~whichImage,", ","real ",,~sizeY,")"
SetImageYHint="[UjAPI]  nothing SetImageY (image whichImage, real sizeY)"


SetImageZ=SetImageZ
SetImageZ="SetImageZ(","image ",,~whichImage,", ","real ",,~sizeZ,")"
SetImageZHint="[UjAPI]  nothing SetImageZ (image whichImage, real sizeZ)"


SetImagePositionLoc=SetImagePositionLoc
SetImagePositionLoc="SetImagePositionLoc(","image ",,~whichImage,", ","location ",,~whichLocation,")"
SetImagePositionLocHint="[UjAPI]  nothing SetImagePositionLoc (image whichImage, location whichLocation)"


SetImageOriginX=SetImageOriginX
SetImageOriginX="SetImageOriginX(","image ",,~whichImage,", ","real ",,~originX,")"
SetImageOriginXHint="[UjAPI]  nothing SetImageOriginX (image whichImage, real originX)"


SetImageOriginY=SetImageOriginY
SetImageOriginY="SetImageOriginY(","image ",,~whichImage,", ","real ",,~originY,")"
SetImageOriginYHint="[UjAPI]  nothing SetImageOriginY (image whichImage, real originY)"


SetImageOrigin=SetImageOrigin
SetImageOrigin="SetImageOrigin(","image ",,~whichImage,", ","real ",,~origin,")"
SetImageOriginHint="[UjAPI]  nothing SetImageOrigin (image whichImage, real origin)"


SetImageOriginEx=SetImageOriginEx
SetImageOriginEx="SetImageOriginEx(","image ",,~whichImage,", ","real ",,~originX,", ","real ",,~originY,")"
SetImageOriginExHint="[UjAPI]  nothing SetImageOriginEx (image whichImage, real originX, real originY)"


SetImageSizeX=SetImageSizeX
SetImageSizeX="SetImageSizeX(","image ",,~whichImage,", ","real ",,~sizeX,")"
SetImageSizeXHint="[UjAPI]  nothing SetImageSizeX (image whichImage, real sizeX)"


SetImageSizeY=SetImageSizeY
SetImageSizeY="SetImageSizeY(","image ",,~whichImage,", ","real ",,~sizeY,")"
SetImageSizeYHint="[UjAPI]  nothing SetImageSizeY (image whichImage, real sizeY)"


SetImageSize=SetImageSize
SetImageSize="SetImageSize(","image ",,~whichImage,", ","real ",,~size,")"
SetImageSizeHint="[UjAPI]  nothing SetImageSize (image whichImage, real size)"


SetImageSizeEx=SetImageSizeEx
SetImageSizeEx="SetImageSizeEx(","image ",,~whichImage,", ","real ",,~sizeX,", ","real ",,~sizeY,")"
SetImageSizeExHint="[UjAPI]  nothing SetImageSizeEx (image whichImage, real sizeX, real sizeY)"


SetImageTexture=SetImageTexture
SetImageTexture="SetImageTexture(","image ",,~whichImage,", ","string ",,~imagePath,")"
SetImageTextureHint="[UjAPI]  nothing SetImageTexture (image whichImage, string imagePath)"


TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(","timer ",,~whichTimer,")"
TimerIsPausedHint="[UjAPI]  boolean TimerIsPaused (timer whichTimer)"


TimerRestart=TimerRestart
TimerRestart="TimerRestart(","timer ",,~whichTimer,")"
TimerRestartHint="[UjAPI]  nothing TimerRestart (timer whichTimer)"


TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(","timer ",,~whichTimer,")"
TimerIsPeriodicHint="[UjAPI]  boolean TimerIsPeriodic (timer whichTimer)"


TimerSetPeriodic=TimerSetPeriodic
TimerSetPeriodic="TimerSetPeriodic(","timer ",,~whichTimer,", ","boolean ",,~isPeriodic,")"
TimerSetPeriodicHint="[UjAPI]  nothing TimerSetPeriodic (timer whichTimer, boolean isPeriodic)"


TimerSetRemaining=TimerSetRemaining
TimerSetRemaining="TimerSetRemaining(","timer ",,~whichTimer,", ","real ",,~remaining,")"
TimerSetRemainingHint="[UjAPI]  nothing TimerSetRemaining (timer whichTimer, real remaining)"


TimerSetTimeout=TimerSetTimeout
TimerSetTimeout="TimerSetTimeout(","timer ",,~whichTimer,", ","real ",,~timeout,")"
TimerSetTimeoutHint="[UjAPI]  nothing TimerSetTimeout (timer whichTimer, real timeout)"


TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(","timer ",,~whichTimer,")"
TimerGetCallbackHint="[UjAPI]  code TimerGetCallback (timer whichTimer)"


TimerSetCallback=TimerSetCallback
TimerSetCallback="TimerSetCallback(","timer ",,~whichTimer,", ","code ",,~whichFunction,")"
TimerSetCallbackHint="[UjAPI]  nothing TimerSetCallback (timer whichTimer, code whichFunction)"


CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDoodadHint="[UjAPI]  doodad CreateDoodad (integer objectid, real x, real y, real face, real scale, integer variation)"


CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDoodadZHint="[UjAPI]  doodad CreateDoodadZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)"


RemoveDoodad=RemoveDoodad
RemoveDoodad="RemoveDoodad(","doodad ",,~whichDoodad,")"
RemoveDoodadHint="[UjAPI]  nothing RemoveDoodad (doodad whichDoodad)"


SetDoodadColour=SetDoodadColour
SetDoodadColour="SetDoodadColour(","doodad ",,~whichDoodad,", ","integer ",,~colour,")"
SetDoodadColourHint="[UjAPI]  nothing SetDoodadColour (doodad whichDoodad, integer colour)"


SetDoodadVertexColour=SetDoodadVertexColour
SetDoodadVertexColour="SetDoodadVertexColour(","doodad ",,~whichDoodad,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetDoodadVertexColourHint="[UjAPI]  nothing SetDoodadVertexColour (doodad whichDoodad, integer red, integer green, integer blue, integer alpha)"


SetDoodadScale=SetDoodadScale
SetDoodadScale="SetDoodadScale(","doodad ",,~whichDoodad,", ","real ",,~scale,")"
SetDoodadScaleHint="[UjAPI]  nothing SetDoodadScale (doodad whichDoodad, real scale)"


SetDoodadTimeScale=SetDoodadTimeScale
SetDoodadTimeScale="SetDoodadTimeScale(","doodad ",,~whichDoodad,", ","real ",,~timeScale,")"
SetDoodadTimeScaleHint="[UjAPI]  nothing SetDoodadTimeScale (doodad whichDoodad, real timeScale)"


SetDoodadX=SetDoodadX
SetDoodadX="SetDoodadX(","doodad ",,~whichDoodad,", ","real ",,~x,")"
SetDoodadXHint="[UjAPI]  nothing SetDoodadX (doodad whichDoodad, real x)"


SetDoodadY=SetDoodadY
SetDoodadY="SetDoodadY(","doodad ",,~whichDoodad,", ","real ",,~y,")"
SetDoodadYHint="[UjAPI]  nothing SetDoodadY (doodad whichDoodad, real y)"


SetDoodadZ=SetDoodadZ
SetDoodadZ="SetDoodadZ(","doodad ",,~whichDoodad,", ","real ",,~z,")"
SetDoodadZHint="[UjAPI]  nothing SetDoodadZ (doodad whichDoodad, real z)"


SetDoodadPosition=SetDoodadPosition
SetDoodadPosition="SetDoodadPosition(","doodad ",,~whichDoodad,", ","real ",,~x,", ","real ",,~y,")"
SetDoodadPositionHint="[UjAPI]  nothing SetDoodadPosition (doodad whichDoodad, real x, real y)"


SetDoodadPositionWithZ=SetDoodadPositionWithZ
SetDoodadPositionWithZ="SetDoodadPositionWithZ(","doodad ",,~whichDoodad,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetDoodadPositionWithZHint="[UjAPI]  nothing SetDoodadPositionWithZ (doodad whichDoodad, real x, real y, real z)"


SetDoodadPositionLoc=SetDoodadPositionLoc
SetDoodadPositionLoc="SetDoodadPositionLoc(","doodad ",,~whichDoodad,", ","location ",,~whichLocation,")"
SetDoodadPositionLocHint="[UjAPI]  nothing SetDoodadPositionLoc (doodad whichDoodad, location whichLocation)"


SetDoodadMatrixScale=SetDoodadMatrixScale
SetDoodadMatrixScale="SetDoodadMatrixScale(","doodad ",,~whichDoodad,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetDoodadMatrixScaleHint="[UjAPI]  nothing SetDoodadMatrixScale (doodad whichDoodad, real x, real y, real z)"


ResetDoodadMatrix=ResetDoodadMatrix
ResetDoodadMatrix="ResetDoodadMatrix(","doodad ",,~whichDoodad,")"
ResetDoodadMatrixHint="[UjAPI]  nothing ResetDoodadMatrix (doodad whichDoodad)"


SetDoodadOrientationEx=SetDoodadOrientationEx
SetDoodadOrientationEx="SetDoodadOrientationEx(","doodad ",,~whichDoodad,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetDoodadOrientationExHint="[UjAPI]  nothing SetDoodadOrientationEx (doodad whichDoodad, real yaw, real pitch, real roll, integer eulerOrder)"


SetDoodadYaw=SetDoodadYaw
SetDoodadYaw="SetDoodadYaw(","doodad ",,~whichDoodad,", ","real ",,~yaw,")"
SetDoodadYawHint="[UjAPI]  nothing SetDoodadYaw (doodad whichDoodad, real yaw)"


SetDoodadFacing=SetDoodadFacing
SetDoodadFacing="SetDoodadFacing(","doodad ",,~whichDoodad,", ","real ",,~facing,")"
SetDoodadFacingHint="[UjAPI]  nothing SetDoodadFacing (doodad whichDoodad, real facing)"


SetDoodadPitch=SetDoodadPitch
SetDoodadPitch="SetDoodadPitch(","doodad ",,~whichDoodad,", ","real ",,~pitch,")"
SetDoodadPitchHint="[UjAPI]  nothing SetDoodadPitch (doodad whichDoodad, real pitch)"


SetDoodadRoll=SetDoodadRoll
SetDoodadRoll="SetDoodadRoll(","doodad ",,~whichDoodad,", ","real ",,~roll,")"
SetDoodadRollHint="[UjAPI]  nothing SetDoodadRoll (doodad whichDoodad, real roll)"


SetDoodadOrientation=SetDoodadOrientation
SetDoodadOrientation="SetDoodadOrientation(","doodad ",,~whichDoodad,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetDoodadOrientationHint="[UjAPI]  nothing SetDoodadOrientation (doodad whichDoodad, real yaw, real pitch, real roll)"


SetDoodadPlayerColour=SetDoodadPlayerColour
SetDoodadPlayerColour="SetDoodadPlayerColour(","doodad ",,~whichDoodad,", ","playercolor ",,~color,")"
SetDoodadPlayerColourHint="[UjAPI]  nothing SetDoodadPlayerColour (doodad whichDoodad, playercolor color)"


SetDoodadModel=SetDoodadModel
SetDoodadModel="SetDoodadModel(","doodad ",,~whichDoodad,", ","string ",,~modelFile,")"
SetDoodadModelHint="[UjAPI]  nothing SetDoodadModel (doodad whichDoodad, string modelFile)"


SetDoodadModelEx=SetDoodadModelEx
SetDoodadModelEx="SetDoodadModelEx(","doodad ",,~whichDoodad,", ","string ",,~modelFile,", ","integer ",,~playerId,")"
SetDoodadModelExHint="[UjAPI]  nothing SetDoodadModelEx (doodad whichDoodad, string modelFile, integer playerId)"


SetDoodadMaterialTexture=SetDoodadMaterialTexture
SetDoodadMaterialTexture="SetDoodadMaterialTexture(","doodad ",,~whichDoodad,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetDoodadMaterialTextureHint="[UjAPI]  nothing SetDoodadMaterialTexture (doodad whichDoodad, string textureName, integer materialId, integer textureIndex)"


SetDoodadTexture=SetDoodadTexture
SetDoodadTexture="SetDoodadTexture(","doodad ",,~whichDoodad,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetDoodadTextureHint="[UjAPI]  nothing SetDoodadTexture (doodad whichDoodad, string textureName, integer textureIndex)"


SetDoodadReplaceableTexture=SetDoodadReplaceableTexture
SetDoodadReplaceableTexture="SetDoodadReplaceableTexture(","doodad ",,~whichDoodad,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetDoodadReplaceableTextureHint="[UjAPI]  nothing SetDoodadReplaceableTexture (doodad whichDoodad, string textureName, integer textureIndex)"


ShowDoodad=ShowDoodad
ShowDoodad="ShowDoodad(","doodad ",,~whichDoodad,", ","boolean ",,~isShow,")"
ShowDoodadHint="[UjAPI]  nothing ShowDoodad (doodad whichDoodad, boolean isShow)"


SetDoodadAnimationWithRarityByIndex=SetDoodadAnimationWithRarityByIndex
SetDoodadAnimationWithRarityByIndex="SetDoodadAnimationWithRarityByIndex(","doodad ",,~whichDoodad,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetDoodadAnimationWithRarityByIndexHint="[UjAPI]  nothing SetDoodadAnimationWithRarityByIndex (doodad whichDoodad, integer animIndex, raritycontrol rarity)"


SetDoodadAnimationWithRarity=SetDoodadAnimationWithRarity
SetDoodadAnimationWithRarity="SetDoodadAnimationWithRarity(","doodad ",,~whichDoodad,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetDoodadAnimationWithRarityHint="[UjAPI]  nothing SetDoodadAnimationWithRarity (doodad whichDoodad, string animationName, raritycontrol rarity)"


SetDoodadAnimationByIndex=SetDoodadAnimationByIndex
SetDoodadAnimationByIndex="SetDoodadAnimationByIndex(","doodad ",,~whichDoodad,", ","integer ",,~animIndex,")"
SetDoodadAnimationByIndexHint="[UjAPI]  nothing SetDoodadAnimationByIndex (doodad whichDoodad, integer animIndex)"


SetDoodadAnimationEx=SetDoodadAnimationEx
SetDoodadAnimationEx="SetDoodadAnimationEx(","doodad ",,~whichDoodad,", ","string ",,~animationName,")"
SetDoodadAnimationExHint="[UjAPI]  nothing SetDoodadAnimationEx (doodad whichDoodad, string animationName)"


QueueDoodadAnimationByIndex=QueueDoodadAnimationByIndex
QueueDoodadAnimationByIndex="QueueDoodadAnimationByIndex(","doodad ",,~whichDoodad,", ","integer ",,~animIndex,")"
QueueDoodadAnimationByIndexHint="[UjAPI]  nothing QueueDoodadAnimationByIndex (doodad whichDoodad, integer animIndex)"


QueueDoodadAnimation=QueueDoodadAnimation
QueueDoodadAnimation="QueueDoodadAnimation(","doodad ",,~whichDoodad,", ","string ",,~animationName,")"
QueueDoodadAnimationHint="[UjAPI]  nothing QueueDoodadAnimation (doodad whichDoodad, string animationName)"


SetDoodadAnimationOffsetPercent=SetDoodadAnimationOffsetPercent
SetDoodadAnimationOffsetPercent="SetDoodadAnimationOffsetPercent(","doodad ",,~whichDoodad,", ","real ",,~percent,")"
SetDoodadAnimationOffsetPercentHint="[UjAPI]  nothing SetDoodadAnimationOffsetPercent (doodad whichDoodad, real percent)"


EnumDoodadsInRange=EnumDoodadsInRange
EnumDoodadsInRange="EnumDoodadsInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumDoodadsInRangeHint="[UjAPI]  nothing EnumDoodadsInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


EnumDoodadsInRangeEx=EnumDoodadsInRangeEx
EnumDoodadsInRangeEx="EnumDoodadsInRangeEx(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","integer ",,~typeId,", ","boolean ",,~nearestOnly,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumDoodadsInRangeExHint="[UjAPI]  nothing EnumDoodadsInRangeEx (real x, real y, real radius, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc)"


EnumDoodadsInRect=EnumDoodadsInRect
EnumDoodadsInRect="EnumDoodadsInRect(","rect ",,~whichRect,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumDoodadsInRectHint="[UjAPI]  nothing EnumDoodadsInRect (rect whichRect, boolexpr filter, code handlerFunc)"


EnumDoodadsInRectEx=EnumDoodadsInRectEx
EnumDoodadsInRectEx="EnumDoodadsInRectEx(","rect ",,~whichRect,", ","integer ",,~typeId,", ","boolean ",,~nearestOnly,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumDoodadsInRectExHint="[UjAPI]  nothing EnumDoodadsInRectEx (rect whichRect, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc)"


SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(","integer ",,~aid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerFieldById (integer aid, abilityintegerfield whichField, integer value)"


SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(","integer ",,~aid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanFieldById (integer aid, abilitybooleanfield whichField, boolean value)"


SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(","integer ",,~aid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealFieldById (integer aid, abilityrealfield whichField, real value)"


SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(","integer ",,~aid,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerLevelFieldById (integer aid, abilityintegerlevelfield whichField, integer level, integer value)"


SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(","integer ",,~aid,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanLevelFieldById (integer aid, abilitybooleanlevelfield whichField, integer level, boolean value)"


SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(","integer ",,~aid,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealLevelFieldById (integer aid, abilityreallevelfield whichField, integer level, real value)"


SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","integer ",,~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)"


AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value)"


RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value)"


SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","boolean ",,~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)"


AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","real ",,~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, integer index, real value)"


AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, real value)"


RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, real value)"


SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(","ability ",,~whichAbility,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetAbilityIntegerFieldHint="[UjAPI]  boolean SetAbilityIntegerField (ability whichAbility, abilityintegerfield whichField, integer value)"


SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(","ability ",,~whichAbility,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetAbilityBooleanFieldHint="[UjAPI]  boolean SetAbilityBooleanField (ability whichAbility, abilitybooleanfield whichField, boolean value)"


SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(","ability ",,~whichAbility,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetAbilityRealFieldHint="[UjAPI]  boolean SetAbilityRealField (ability whichAbility, abilityrealfield whichField, real value)"


SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(","ability ",,~whichAbility,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI]  boolean SetAbilityIntegerLevelField (ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value)"


SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(","ability ",,~whichAbility,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI]  boolean SetAbilityBooleanLevelField (ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value)"


SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(","ability ",,~whichAbility,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
SetAbilityRealLevelFieldHint="[UjAPI]  boolean SetAbilityRealLevelField (ability whichAbility, abilityreallevelfield whichField, integer level, real value)"


SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","integer ",,~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean SetAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)"


AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean AddAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)"


RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)"


SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","boolean ",,~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean SetAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)"


AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean AddAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","real ",,~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI]  boolean SetAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value)"


AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI]  boolean AddAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)"


RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)"


ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(","ability ",,~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI]  boolean ResetAbilityFieldData (ability whichAbility)"


CreateAbility=CreateAbility
CreateAbility="CreateAbility(","integer ",,~abilCode,")"
CreateAbilityHint="[UjAPI]  ability CreateAbility (integer abilCode)"


SetAbilityOwner=SetAbilityOwner
SetAbilityOwner="SetAbilityOwner(","ability ",,~whichAbility,", ","unit ",,~whichUnit,")"
SetAbilityOwnerHint="[UjAPI]  nothing SetAbilityOwner (ability whichAbility, unit whichUnit)"


SetAbilityOwningAbility=SetAbilityOwningAbility
SetAbilityOwningAbility="SetAbilityOwningAbility(","ability ",,~whichAbility,", ","ability ",,~whichSpellbook,")"
SetAbilityOwningAbilityHint="[UjAPI]  nothing SetAbilityOwningAbility (ability whichAbility, ability whichSpellbook)"


SetAbilityOwningItem=SetAbilityOwningItem
SetAbilityOwningItem="SetAbilityOwningItem(","ability ",,~whichAbility,", ","item ",,~whichItem,")"
SetAbilityOwningItemHint="[UjAPI]  nothing SetAbilityOwningItem (ability whichAbility, item whichItem)"


SetAbilityOrderId=SetAbilityOrderId
SetAbilityOrderId="SetAbilityOrderId(","ability ",,~whichAbility,", ","integer ",,~orderId,")"
SetAbilityOrderIdHint="[UjAPI]  nothing SetAbilityOrderId (ability whichAbility, integer orderId)"


ResetAbilityOrder=ResetAbilityOrder
ResetAbilityOrder="ResetAbilityOrder(","ability ",,~whichAbility,")"
ResetAbilityOrderHint="[UjAPI]  nothing ResetAbilityOrder (ability whichAbility)"


SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(","ability ",,~whichAbility,", ","integer ",,~level,")"
SetAbilityLevelHint="[UjAPI]  integer SetAbilityLevel (ability whichAbility, integer level)"


SetAbilityEnabled=SetAbilityEnabled
SetAbilityEnabled="SetAbilityEnabled(","ability ",,~whichAbility,", ","boolean ",,~enable,")"
SetAbilityEnabledHint="[UjAPI]  nothing SetAbilityEnabled (ability whichAbility, boolean enable)"


ShowAbility=ShowAbility
ShowAbility="ShowAbility(","ability ",,~whichAbility,", ","boolean ",,~show,")"
ShowAbilityHint="[UjAPI]  nothing ShowAbility (ability whichAbility, boolean show)"


SetAbilityEnabledEx=SetAbilityEnabledEx
SetAbilityEnabledEx="SetAbilityEnabledEx(","ability ",,~whichAbility,", ","boolean ",,~enable,")"
SetAbilityEnabledExHint="[UjAPI]  nothing SetAbilityEnabledEx (ability whichAbility, boolean enable)"


SetAbilityCastTime=SetAbilityCastTime
SetAbilityCastTime="SetAbilityCastTime(","ability ",,~whichAbility,", ","real ",,~castTime,")"
SetAbilityCastTimeHint="[UjAPI]  nothing SetAbilityCastTime (ability whichAbility, real castTime)"


SetAbilityCastPoint=SetAbilityCastPoint
SetAbilityCastPoint="SetAbilityCastPoint(","ability ",,~whichAbility,", ","real ",,~castPoint,")"
SetAbilityCastPointHint="[UjAPI]  nothing SetAbilityCastPoint (ability whichAbility, real castPoint)"


SetAbilityBackswing=SetAbilityBackswing
SetAbilityBackswing="SetAbilityBackswing(","ability ",,~whichAbility,", ","real ",,~backswing,")"
SetAbilityBackswingHint="[UjAPI]  nothing SetAbilityBackswing (ability whichAbility, real backswing)"


SetAbilityCooldown=SetAbilityCooldown
SetAbilityCooldown="SetAbilityCooldown(","ability ",,~whichAbility,", ","real ",,~cooldown,")"
SetAbilityCooldownHint="[UjAPI]  nothing SetAbilityCooldown (ability whichAbility, real cooldown)"


SetAbilityRemainingCooldown=SetAbilityRemainingCooldown
SetAbilityRemainingCooldown="SetAbilityRemainingCooldown(","ability ",,~whichAbility,", ","real ",,~cooldown,")"
SetAbilityRemainingCooldownHint="[UjAPI]  nothing SetAbilityRemainingCooldown (ability whichAbility, real cooldown)"


StartAbilityCooldown=StartAbilityCooldown
StartAbilityCooldown="StartAbilityCooldown(","ability ",,~whichAbility,", ","real ",,~cooldown,")"
StartAbilityCooldownHint="[UjAPI]  nothing StartAbilityCooldown (ability whichAbility, real cooldown)"


DisableAbility=DisableAbility
DisableAbility="DisableAbility(","ability ",,~whichAbility,", ","boolean ",,~hide,", ","boolean ",,~disable,")"
DisableAbilityHint="[UjAPI]  nothing DisableAbility (ability whichAbility, boolean hide, boolean disable)"


EnableAbility=EnableAbility
EnableAbility="EnableAbility(","ability ",,~whichAbility,", ","boolean ",,~show,", ","boolean ",,~enable,")"
EnableAbilityHint="[UjAPI]  nothing EnableAbility (ability whichAbility, boolean show, boolean enable)"


CastAbility=CastAbility
CastAbility="CastAbility(","ability ",,~whichAbility,")"
CastAbilityHint="[UjAPI]  boolean CastAbility (ability whichAbility)"


CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(","ability ",,~whichAbility,", ","real ",,~targX,", ","real ",,~targY,")"
CastAbilityGroundHint="[UjAPI]  boolean CastAbilityGround (ability whichAbility, real targX, real targY)"


CastAbilityTarget=CastAbilityTarget
CastAbilityTarget="CastAbilityTarget(","ability ",,~whichAbility,", ","widget ",,~target,")"
CastAbilityTargetHint="[UjAPI]  boolean CastAbilityTarget (ability whichAbility, widget target)"


EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(","unit ",,~whichUnit,", ","boolexpr ",,~whichBoolexpr,", ","code ",,~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI]  boolean EnumUnitAbilities (unit whichUnit, boolexpr whichBoolexpr, code whichCode)"


SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI]  boolean SetBuffBaseIntegerFieldById (integer bid, abilityintegerfield whichField, integer value)"


SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI]  boolean SetBuffBaseBooleanFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI]  boolean SetBuffBaseRealFieldById (integer bid, abilityrealfield whichField, real value)"


SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer index, integer value)"


AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer value)"


RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer value)"


SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, integer index, boolean value)"


AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, integer index, real value)"


AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, real value)"


RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, real value)"


SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBuffIntegerFieldHint="[UjAPI]  boolean SetBuffIntegerField (buff whichBuff, abilityintegerfield whichField, integer value)"


SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBuffBooleanFieldHint="[UjAPI]  boolean SetBuffBooleanField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetBuffRealFieldHint="[UjAPI]  boolean SetBuffRealField (buff whichBuff, abilityrealfield whichField, real value)"


SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI]  boolean SetBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer index, integer value)"


AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI]  boolean AddBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer value)"


RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI]  boolean RemoveBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer value)"


SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI]  boolean SetBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, integer index, boolean value)"


AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI]  boolean AddBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI]  boolean RemoveBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetBuffRealArrayFieldHint="[UjAPI]  boolean SetBuffRealArrayField (buff whichBuff, abilityrealfield whichField, integer index, real value)"


AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
AddBuffRealArrayFieldHint="[UjAPI]  boolean AddBuffRealArrayField (buff whichBuff, abilityrealfield whichField, real value)"


RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI]  boolean RemoveBuffRealArrayField (buff whichBuff, abilityrealfield whichField, real value)"


ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(","buff ",,~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI]  boolean ResetBuffFieldData (buff whichBuff)"


CreateBuff=CreateBuff
CreateBuff="CreateBuff(","integer ",,~buffId,")"
CreateBuffHint="[UjAPI]  buff CreateBuff (integer buffId)"


SetBuffOwner=SetBuffOwner
SetBuffOwner="SetBuffOwner(","buff ",,~whichBuff,", ","unit ",,~whichUnit,")"
SetBuffOwnerHint="[UjAPI]  nothing SetBuffOwner (buff whichBuff, unit whichUnit)"


SetBuffOwningAbility=SetBuffOwningAbility
SetBuffOwningAbility="SetBuffOwningAbility(","buff ",,~whichBuff,", ","ability ",,~whichAbility,")"
SetBuffOwningAbilityHint="[UjAPI]  nothing SetBuffOwningAbility (buff whichBuff, ability whichAbility)"


SetBuffDispellable=SetBuffDispellable
SetBuffDispellable="SetBuffDispellable(","buff ",,~whichBuff,", ","boolean ",,~isSet,")"
SetBuffDispellableHint="[UjAPI]  nothing SetBuffDispellable (buff whichBuff, boolean isSet)"


SetBuffLevel=SetBuffLevel
SetBuffLevel="SetBuffLevel(","buff ",,~whichBuff,", ","integer ",,~level,")"
SetBuffLevelHint="[UjAPI]  nothing SetBuffLevel (buff whichBuff, integer level)"


SetBuffRemainingDuration=SetBuffRemainingDuration
SetBuffRemainingDuration="SetBuffRemainingDuration(","buff ",,~whichBuff,", ","real ",,~duration,")"
SetBuffRemainingDurationHint="[UjAPI]  nothing SetBuffRemainingDuration (buff whichBuff, real duration)"


PauseBuff=PauseBuff
PauseBuff="PauseBuff(","buff ",,~whichBuff,", ","boolean ",,~pause,")"
PauseBuffHint="[UjAPI]  nothing PauseBuff (buff whichBuff, boolean pause)"


RefreshBuff=RefreshBuff
RefreshBuff="RefreshBuff(","buff ",,~whichBuff,")"
RefreshBuffHint="[UjAPI]  nothing RefreshBuff (buff whichBuff)"


EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(","unit ",,~whichUnit,", ","boolexpr ",,~whichBoolexpr,", ","code ",,~whichCode,")"
EnumUnitBuffsHint="[UjAPI]  boolean EnumUnitBuffs (unit whichUnit, boolexpr whichBoolexpr, code whichCode)"


SetWar3ImageVisible=SetWar3ImageVisible
SetWar3ImageVisible="SetWar3ImageVisible(","war3image ",,~whichWar3Image,", ","boolean ",,~visible,")"
SetWar3ImageVisibleHint="[UjAPI]  nothing SetWar3ImageVisible (war3image whichWar3Image, boolean visible)"


SetWar3ImageInvulnerable=SetWar3ImageInvulnerable
SetWar3ImageInvulnerable="SetWar3ImageInvulnerable(","war3image ",,~whichWar3Image,", ","boolean ",,~invulnerable,")"
SetWar3ImageInvulnerableHint="[UjAPI]  nothing SetWar3ImageInvulnerable (war3image whichWar3Image, boolean invulnerable)"


SetWar3ImagePositionLoc=SetWar3ImagePositionLoc
SetWar3ImagePositionLoc="SetWar3ImagePositionLoc(","war3image ",,~whichWar3Image,", ","location ",,~whichLocation,")"
SetWar3ImagePositionLocHint="[UjAPI]  nothing SetWar3ImagePositionLoc (war3image whichWar3Image, location whichLocation)"


SetWar3ImagePosition=SetWar3ImagePosition
SetWar3ImagePosition="SetWar3ImagePosition(","war3image ",,~whichWar3Image,", ","real ",,~x,", ","real ",,~y,")"
SetWar3ImagePositionHint="[UjAPI]  nothing SetWar3ImagePosition (war3image whichWar3Image, real x, real y)"


SetWar3ImagePositionWithZ=SetWar3ImagePositionWithZ
SetWar3ImagePositionWithZ="SetWar3ImagePositionWithZ(","war3image ",,~whichWar3Image,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetWar3ImagePositionWithZHint="[UjAPI]  nothing SetWar3ImagePositionWithZ (war3image whichWar3Image, real x, real y, real z)"


SetWar3ImageX=SetWar3ImageX
SetWar3ImageX="SetWar3ImageX(","war3image ",,~whichWar3Image,", ","real ",,~x,")"
SetWar3ImageXHint="[UjAPI]  nothing SetWar3ImageX (war3image whichWar3Image, real x)"


SetWar3ImageY=SetWar3ImageY
SetWar3ImageY="SetWar3ImageY(","war3image ",,~whichWar3Image,", ","real ",,~y,")"
SetWar3ImageYHint="[UjAPI]  nothing SetWar3ImageY (war3image whichWar3Image, real y)"


SetWar3ImageZ=SetWar3ImageZ
SetWar3ImageZ="SetWar3ImageZ(","war3image ",,~whichWar3Image,", ","real ",,~z,")"
SetWar3ImageZHint="[UjAPI]  nothing SetWar3ImageZ (war3image whichWar3Image, real z)"


ResetWar3ImageZ=ResetWar3ImageZ
ResetWar3ImageZ="ResetWar3ImageZ(","war3image ",,~whichWar3Image,")"
ResetWar3ImageZHint="[UjAPI]  nothing ResetWar3ImageZ (war3image whichWar3Image)"


SetWar3ImageHeight=SetWar3ImageHeight
SetWar3ImageHeight="SetWar3ImageHeight(","war3image ",,~whichWar3Image,", ","real ",,~height,")"
SetWar3ImageHeightHint="[UjAPI]  nothing SetWar3ImageHeight (war3image whichWar3Image, real height)"


SetWar3ImagePlayerColour=SetWar3ImagePlayerColour
SetWar3ImagePlayerColour="SetWar3ImagePlayerColour(","war3image ",,~whichWar3Image,", ","playercolor ",,~color,")"
SetWar3ImagePlayerColourHint="[UjAPI]  nothing SetWar3ImagePlayerColour (war3image whichWar3Image, playercolor color)"


SetWar3ImageVertexColour=SetWar3ImageVertexColour
SetWar3ImageVertexColour="SetWar3ImageVertexColour(","war3image ",,~whichWar3Image,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetWar3ImageVertexColourHint="[UjAPI]  nothing SetWar3ImageVertexColour (war3image whichWar3Image, integer red, integer green, integer blue, integer alpha)"


SetWar3ImageTimeScale=SetWar3ImageTimeScale
SetWar3ImageTimeScale="SetWar3ImageTimeScale(","war3image ",,~whichWar3Image,", ","real ",,~timeScale,")"
SetWar3ImageTimeScaleHint="[UjAPI]  nothing SetWar3ImageTimeScale (war3image whichWar3Image, real timeScale)"


SetWar3ImageScale=SetWar3ImageScale
SetWar3ImageScale="SetWar3ImageScale(","war3image ",,~whichWar3Image,", ","real ",,~scale,")"
SetWar3ImageScaleHint="[UjAPI]  nothing SetWar3ImageScale (war3image whichWar3Image, real scale)"


SetWar3ImageFacing=SetWar3ImageFacing
SetWar3ImageFacing="SetWar3ImageFacing(","war3image ",,~whichWar3Image,", ","real ",,~facing,", ","boolean ",,~isInstant,")"
SetWar3ImageFacingHint="[UjAPI]  nothing SetWar3ImageFacing (war3image whichWar3Image, real facing, boolean isInstant)"


SetWar3ImageMatrixScale=SetWar3ImageMatrixScale
SetWar3ImageMatrixScale="SetWar3ImageMatrixScale(","war3image ",,~whichWar3Image,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetWar3ImageMatrixScaleHint="[UjAPI]  nothing SetWar3ImageMatrixScale (war3image whichWar3Image, real x, real y, real z)"


ResetWar3ImageMatrix=ResetWar3ImageMatrix
ResetWar3ImageMatrix="ResetWar3ImageMatrix(","war3image ",,~whichWar3Image,")"
ResetWar3ImageMatrixHint="[UjAPI]  nothing ResetWar3ImageMatrix (war3image whichWar3Image)"


SetWar3ImageOrientationEx=SetWar3ImageOrientationEx
SetWar3ImageOrientationEx="SetWar3ImageOrientationEx(","war3image ",,~whichWar3Image,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetWar3ImageOrientationExHint="[UjAPI]  nothing SetWar3ImageOrientationEx (war3image whichWar3Image, real yaw, real pitch, real roll, integer eulerOrder)"


SetWar3ImageOrientation=SetWar3ImageOrientation
SetWar3ImageOrientation="SetWar3ImageOrientation(","war3image ",,~whichWar3Image,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetWar3ImageOrientationHint="[UjAPI]  nothing SetWar3ImageOrientation (war3image whichWar3Image, real yaw, real pitch, real roll)"


SetWar3ImageYaw=SetWar3ImageYaw
SetWar3ImageYaw="SetWar3ImageYaw(","war3image ",,~whichWar3Image,", ","real ",,~yaw,")"
SetWar3ImageYawHint="[UjAPI]  nothing SetWar3ImageYaw (war3image whichWar3Image, real yaw)"


SetWar3ImagePitch=SetWar3ImagePitch
SetWar3ImagePitch="SetWar3ImagePitch(","war3image ",,~whichWar3Image,", ","real ",,~pitch,")"
SetWar3ImagePitchHint="[UjAPI]  nothing SetWar3ImagePitch (war3image whichWar3Image, real pitch)"


SetWar3ImageRoll=SetWar3ImageRoll
SetWar3ImageRoll="SetWar3ImageRoll(","war3image ",,~whichWar3Image,", ","real ",,~roll,")"
SetWar3ImageRollHint="[UjAPI]  nothing SetWar3ImageRoll (war3image whichWar3Image, real roll)"


SetWar3ImageModel=SetWar3ImageModel
SetWar3ImageModel="SetWar3ImageModel(","war3image ",,~whichWar3Image,", ","string ",,~modelFile,")"
SetWar3ImageModelHint="[UjAPI]  nothing SetWar3ImageModel (war3image whichWar3Image, string modelFile)"


SetWar3ImageModelEx=SetWar3ImageModelEx
SetWar3ImageModelEx="SetWar3ImageModelEx(","war3image ",,~whichWar3Image,", ","string ",,~modelFile,", ","integer ",,~playerId,")"
SetWar3ImageModelExHint="[UjAPI]  nothing SetWar3ImageModelEx (war3image whichWar3Image, string modelFile, integer playerId)"


SetWar3ImageMaterialTexture=SetWar3ImageMaterialTexture
SetWar3ImageMaterialTexture="SetWar3ImageMaterialTexture(","war3image ",,~whichWar3Image,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetWar3ImageMaterialTextureHint="[UjAPI]  nothing SetWar3ImageMaterialTexture (war3image whichWar3Image, string textureName, integer materialId, integer textureIndex)"


SetWar3ImageTexture=SetWar3ImageTexture
SetWar3ImageTexture="SetWar3ImageTexture(","war3image ",,~whichWar3Image,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetWar3ImageTextureHint="[UjAPI]  nothing SetWar3ImageTexture (war3image whichWar3Image, string textureName, integer textureIndex)"


SetWar3ImageReplaceableTexture=SetWar3ImageReplaceableTexture
SetWar3ImageReplaceableTexture="SetWar3ImageReplaceableTexture(","war3image ",,~whichWar3Image,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetWar3ImageReplaceableTextureHint="[UjAPI]  nothing SetWar3ImageReplaceableTexture (war3image whichWar3Image, string textureName, integer textureIndex)"


SetWar3ImageAnimationWithRarityByIndex=SetWar3ImageAnimationWithRarityByIndex
SetWar3ImageAnimationWithRarityByIndex="SetWar3ImageAnimationWithRarityByIndex(","war3image ",,~whichWar3Image,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetWar3ImageAnimationWithRarityByIndexHint="[UjAPI]  nothing SetWar3ImageAnimationWithRarityByIndex (war3image whichWar3Image, integer animIndex, raritycontrol rarity)"


SetWar3ImageAnimationWithRarity=SetWar3ImageAnimationWithRarity
SetWar3ImageAnimationWithRarity="SetWar3ImageAnimationWithRarity(","war3image ",,~whichWar3Image,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetWar3ImageAnimationWithRarityHint="[UjAPI]  nothing SetWar3ImageAnimationWithRarity (war3image whichWar3Image, string animationName, raritycontrol rarity)"


SetWar3ImageAnimationByIndex=SetWar3ImageAnimationByIndex
SetWar3ImageAnimationByIndex="SetWar3ImageAnimationByIndex(","war3image ",,~whichWar3Image,", ","integer ",,~animIndex,")"
SetWar3ImageAnimationByIndexHint="[UjAPI]  nothing SetWar3ImageAnimationByIndex (war3image whichWar3Image, integer animIndex)"


SetWar3ImageAnimation=SetWar3ImageAnimation
SetWar3ImageAnimation="SetWar3ImageAnimation(","war3image ",,~whichWar3Image,", ","string ",,~animationName,")"
SetWar3ImageAnimationHint="[UjAPI]  nothing SetWar3ImageAnimation (war3image whichWar3Image, string animationName)"


QueueWar3ImageAnimationByIndex=QueueWar3ImageAnimationByIndex
QueueWar3ImageAnimationByIndex="QueueWar3ImageAnimationByIndex(","war3image ",,~whichWar3Image,", ","integer ",,~animIndex,")"
QueueWar3ImageAnimationByIndexHint="[UjAPI]  nothing QueueWar3ImageAnimationByIndex (war3image whichWar3Image, integer animIndex)"


QueueWar3ImageAnimation=QueueWar3ImageAnimation
QueueWar3ImageAnimation="QueueWar3ImageAnimation(","war3image ",,~whichWar3Image,", ","string ",,~animationName,")"
QueueWar3ImageAnimationHint="[UjAPI]  nothing QueueWar3ImageAnimation (war3image whichWar3Image, string animationName)"


SetWar3ImageAnimationOffsetPercent=SetWar3ImageAnimationOffsetPercent
SetWar3ImageAnimationOffsetPercent="SetWar3ImageAnimationOffsetPercent(","war3image ",,~whichWar3Image,", ","real ",,~percent,")"
SetWar3ImageAnimationOffsetPercentHint="[UjAPI]  nothing SetWar3ImageAnimationOffsetPercent (war3image whichWar3Image, real percent)"


CreateSprite=CreateSprite
CreateSprite="CreateSprite(","boolean ",,~isUber,")"
CreateSpriteHint="[UjAPI]  sprite CreateSprite (boolean isUber)"


DetachSprite=DetachSprite
DetachSprite="DetachSprite(","sprite ",,~whichSprite,")"
DetachSpriteHint="[UjAPI]  nothing DetachSprite (sprite whichSprite)"


RemoveSprite=RemoveSprite
RemoveSprite="RemoveSprite(","sprite ",,~whichSprite,")"
RemoveSpriteHint="[UjAPI]  nothing RemoveSprite (sprite whichSprite)"


SetSpritePosition=SetSpritePosition
SetSpritePosition="SetSpritePosition(","sprite ",,~whichSprite,", ","real ",,~x,", ","real ",,~y,")"
SetSpritePositionHint="[UjAPI]  nothing SetSpritePosition (sprite whichSprite, real x, real y)"


SetSpritePositionWithZ=SetSpritePositionWithZ
SetSpritePositionWithZ="SetSpritePositionWithZ(","sprite ",,~whichSprite,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSpritePositionWithZHint="[UjAPI]  nothing SetSpritePositionWithZ (sprite whichSprite, real x, real y, real z)"


SetSpritePositionLoc=SetSpritePositionLoc
SetSpritePositionLoc="SetSpritePositionLoc(","sprite ",,~whichSprite,", ","location ",,~loc,")"
SetSpritePositionLocHint="[UjAPI]  nothing SetSpritePositionLoc (sprite whichSprite, location loc)"


SetSpriteX=SetSpriteX
SetSpriteX="SetSpriteX(","sprite ",,~whichSprite,", ","real ",,~x,")"
SetSpriteXHint="[UjAPI]  nothing SetSpriteX (sprite whichSprite, real x)"


SetSpriteY=SetSpriteY
SetSpriteY="SetSpriteY(","sprite ",,~whichSprite,", ","real ",,~y,")"
SetSpriteYHint="[UjAPI]  nothing SetSpriteY (sprite whichSprite, real y)"


SetSpriteZ=SetSpriteZ
SetSpriteZ="SetSpriteZ(","sprite ",,~whichSprite,", ","real ",,~z,")"
SetSpriteZHint="[UjAPI]  nothing SetSpriteZ (sprite whichSprite, real z)"


SetSpriteHeight=SetSpriteHeight
SetSpriteHeight="SetSpriteHeight(","sprite ",,~whichSprite,", ","real ",,~height,")"
SetSpriteHeightHint="[UjAPI]  nothing SetSpriteHeight (sprite whichSprite, real height)"


SetSpriteScale=SetSpriteScale
SetSpriteScale="SetSpriteScale(","sprite ",,~whichSprite,", ","real ",,~scale,")"
SetSpriteScaleHint="[UjAPI]  nothing SetSpriteScale (sprite whichSprite, real scale)"


SetSpriteTimeScale=SetSpriteTimeScale
SetSpriteTimeScale="SetSpriteTimeScale(","sprite ",,~whichSprite,", ","real ",,~timescale,")"
SetSpriteTimeScaleHint="[UjAPI]  nothing SetSpriteTimeScale (sprite whichSprite, real timescale)"


SetSpritePlayerColour=SetSpritePlayerColour
SetSpritePlayerColour="SetSpritePlayerColour(","sprite ",,~whichSprite,", ","playercolor ",,~color,")"
SetSpritePlayerColourHint="[UjAPI]  nothing SetSpritePlayerColour (sprite whichSprite, playercolor color)"


SetSpriteColour=SetSpriteColour
SetSpriteColour="SetSpriteColour(","sprite ",,~whichSprite,", ","integer ",,~colour,")"
SetSpriteColourHint="[UjAPI]  nothing SetSpriteColour (sprite whichSprite, integer colour)"


SetSpriteAlpha=SetSpriteAlpha
SetSpriteAlpha="SetSpriteAlpha(","sprite ",,~whichSprite,", ","integer ",,~alpha,")"
SetSpriteAlphaHint="[UjAPI]  nothing SetSpriteAlpha (sprite whichSprite, integer alpha)"


SetSpriteVertexColour=SetSpriteVertexColour
SetSpriteVertexColour="SetSpriteVertexColour(","sprite ",,~whichSprite,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetSpriteVertexColourHint="[UjAPI]  nothing SetSpriteVertexColour (sprite whichSprite, integer red, integer green, integer blue, integer alpha)"


SetSpriteMatrixScale=SetSpriteMatrixScale
SetSpriteMatrixScale="SetSpriteMatrixScale(","sprite ",,~whichSprite,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSpriteMatrixScaleHint="[UjAPI]  nothing SetSpriteMatrixScale (sprite whichSprite, real x, real y, real z)"


ResetSpriteMatrix=ResetSpriteMatrix
ResetSpriteMatrix="ResetSpriteMatrix(","sprite ",,~whichSprite,")"
ResetSpriteMatrixHint="[UjAPI]  nothing ResetSpriteMatrix (sprite whichSprite)"


SetSpriteOrientationEx=SetSpriteOrientationEx
SetSpriteOrientationEx="SetSpriteOrientationEx(","sprite ",,~whichSprite,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetSpriteOrientationExHint="[UjAPI]  nothing SetSpriteOrientationEx (sprite whichSprite, real yaw, real pitch, real roll, integer eulerOrder)"


SetSpriteYaw=SetSpriteYaw
SetSpriteYaw="SetSpriteYaw(","sprite ",,~whichSprite,", ","real ",,~yaw,")"
SetSpriteYawHint="[UjAPI]  nothing SetSpriteYaw (sprite whichSprite, real yaw)"


SetSpriteFacing=SetSpriteFacing
SetSpriteFacing="SetSpriteFacing(","sprite ",,~whichSprite,", ","real ",,~facing,")"
SetSpriteFacingHint="[UjAPI]  nothing SetSpriteFacing (sprite whichSprite, real facing)"


SetSpritePitch=SetSpritePitch
SetSpritePitch="SetSpritePitch(","sprite ",,~whichSprite,", ","real ",,~pitch,")"
SetSpritePitchHint="[UjAPI]  nothing SetSpritePitch (sprite whichSprite, real pitch)"


SetSpriteRoll=SetSpriteRoll
SetSpriteRoll="SetSpriteRoll(","sprite ",,~whichSprite,", ","real ",,~roll,")"
SetSpriteRollHint="[UjAPI]  nothing SetSpriteRoll (sprite whichSprite, real roll)"


SetSpriteOrientation=SetSpriteOrientation
SetSpriteOrientation="SetSpriteOrientation(","sprite ",,~whichSprite,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetSpriteOrientationHint="[UjAPI]  nothing SetSpriteOrientation (sprite whichSprite, real yaw, real pitch, real roll)"


SetSpriteMaterialTexture=SetSpriteMaterialTexture
SetSpriteMaterialTexture="SetSpriteMaterialTexture(","sprite ",,~whichSprite,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetSpriteMaterialTextureHint="[UjAPI]  nothing SetSpriteMaterialTexture (sprite whichSprite, string textureName, integer materialId, integer textureIndex)"


SetSpriteTexture=SetSpriteTexture
SetSpriteTexture="SetSpriteTexture(","sprite ",,~whichSprite,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetSpriteTextureHint="[UjAPI]  nothing SetSpriteTexture (sprite whichSprite, string textureName, integer textureIndex)"


SetSpriteReplaceableTexture=SetSpriteReplaceableTexture
SetSpriteReplaceableTexture="SetSpriteReplaceableTexture(","sprite ",,~whichSprite,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetSpriteReplaceableTextureHint="[UjAPI]  nothing SetSpriteReplaceableTexture (sprite whichSprite, string textureName, integer textureIndex)"


SetSpriteModel=SetSpriteModel
SetSpriteModel="SetSpriteModel(","sprite ",,~whichSprite,", ","string ",,~modelName,")"
SetSpriteModelHint="[UjAPI]  nothing SetSpriteModel (sprite whichSprite, string modelName)"


SetSpriteModelEx=SetSpriteModelEx
SetSpriteModelEx="SetSpriteModelEx(","sprite ",,~whichSprite,", ","string ",,~modelName,", ","integer ",,~playerColour,")"
SetSpriteModelExHint="[UjAPI]  nothing SetSpriteModelEx (sprite whichSprite, string modelName, integer playerColour)"


SetSpriteAnimationWithRarityByIndex=SetSpriteAnimationWithRarityByIndex
SetSpriteAnimationWithRarityByIndex="SetSpriteAnimationWithRarityByIndex(","sprite ",,~whichSprite,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetSpriteAnimationWithRarityByIndexHint="[UjAPI]  nothing SetSpriteAnimationWithRarityByIndex (sprite whichSprite, integer animIndex, raritycontrol rarity)"


SetSpriteAnimationWithRarity=SetSpriteAnimationWithRarity
SetSpriteAnimationWithRarity="SetSpriteAnimationWithRarity(","sprite ",,~whichSprite,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetSpriteAnimationWithRarityHint="[UjAPI]  nothing SetSpriteAnimationWithRarity (sprite whichSprite, string animationName, raritycontrol rarity)"


SetSpriteAnimationByIndex=SetSpriteAnimationByIndex
SetSpriteAnimationByIndex="SetSpriteAnimationByIndex(","sprite ",,~whichSprite,", ","integer ",,~animIndex,")"
SetSpriteAnimationByIndexHint="[UjAPI]  nothing SetSpriteAnimationByIndex (sprite whichSprite, integer animIndex)"


SetSpriteAnimation=SetSpriteAnimation
SetSpriteAnimation="SetSpriteAnimation(","sprite ",,~whichSprite,", ","string ",,~animationName,")"
SetSpriteAnimationHint="[UjAPI]  nothing SetSpriteAnimation (sprite whichSprite, string animationName)"


QueueSpriteAnimationByIndex=QueueSpriteAnimationByIndex
QueueSpriteAnimationByIndex="QueueSpriteAnimationByIndex(","sprite ",,~whichSprite,", ","integer ",,~animIndex,")"
QueueSpriteAnimationByIndexHint="[UjAPI]  nothing QueueSpriteAnimationByIndex (sprite whichSprite, integer animIndex)"


QueueSpriteAnimation=QueueSpriteAnimation
QueueSpriteAnimation="QueueSpriteAnimation(","sprite ",,~whichSprite,", ","string ",,~animationName,")"
QueueSpriteAnimationHint="[UjAPI]  nothing QueueSpriteAnimation (sprite whichSprite, string animationName)"


SetSpriteAnimationOffsetPercent=SetSpriteAnimationOffsetPercent
SetSpriteAnimationOffsetPercent="SetSpriteAnimationOffsetPercent(","sprite ",,~whichSprite,", ","real ",,~percent,")"
SetSpriteAnimationOffsetPercentHint="[UjAPI]  nothing SetSpriteAnimationOffsetPercent (sprite whichSprite, real percent)"


SetSpecialEffectVisible=SetSpecialEffectVisible
SetSpecialEffectVisible="SetSpecialEffectVisible(","effect ",,~whichEffect,", ","boolean ",,~visibility,")"
SetSpecialEffectVisibleHint="[UjAPI]  nothing SetSpecialEffectVisible (effect whichEffect, boolean visibility)"


SetSpecialEffectPosition=SetSpecialEffectPosition
SetSpecialEffectPosition="SetSpecialEffectPosition(","effect ",,~whichEffect,", ","real ",,~x,", ","real ",,~y,")"
SetSpecialEffectPositionHint="[UjAPI]  nothing SetSpecialEffectPosition (effect whichEffect, real x, real y)"


SetSpecialEffectPositionWithZ=SetSpecialEffectPositionWithZ
SetSpecialEffectPositionWithZ="SetSpecialEffectPositionWithZ(","effect ",,~whichEffect,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSpecialEffectPositionWithZHint="[UjAPI]  nothing SetSpecialEffectPositionWithZ (effect whichEffect, real x, real y, real z)"


SetSpecialEffectPositionLoc=SetSpecialEffectPositionLoc
SetSpecialEffectPositionLoc="SetSpecialEffectPositionLoc(","effect ",,~whichEffect,", ","location ",,~loc,")"
SetSpecialEffectPositionLocHint="[UjAPI]  nothing SetSpecialEffectPositionLoc (effect whichEffect, location loc)"


SetSpecialEffectX=SetSpecialEffectX
SetSpecialEffectX="SetSpecialEffectX(","effect ",,~whichEffect,", ","real ",,~x,")"
SetSpecialEffectXHint="[UjAPI]  nothing SetSpecialEffectX (effect whichEffect, real x)"


SetSpecialEffectY=SetSpecialEffectY
SetSpecialEffectY="SetSpecialEffectY(","effect ",,~whichEffect,", ","real ",,~y,")"
SetSpecialEffectYHint="[UjAPI]  nothing SetSpecialEffectY (effect whichEffect, real y)"


SetSpecialEffectZ=SetSpecialEffectZ
SetSpecialEffectZ="SetSpecialEffectZ(","effect ",,~whichEffect,", ","real ",,~z,")"
SetSpecialEffectZHint="[UjAPI]  nothing SetSpecialEffectZ (effect whichEffect, real z)"


SetSpecialEffectHeight=SetSpecialEffectHeight
SetSpecialEffectHeight="SetSpecialEffectHeight(","effect ",,~whichEffect,", ","real ",,~height,")"
SetSpecialEffectHeightHint="[UjAPI]  nothing SetSpecialEffectHeight (effect whichEffect, real height)"


SetSpecialEffectScale=SetSpecialEffectScale
SetSpecialEffectScale="SetSpecialEffectScale(","effect ",,~whichEffect,", ","real ",,~scale,")"
SetSpecialEffectScaleHint="[UjAPI]  nothing SetSpecialEffectScale (effect whichEffect, real scale)"


SetSpecialEffectTimeScale=SetSpecialEffectTimeScale
SetSpecialEffectTimeScale="SetSpecialEffectTimeScale(","effect ",,~whichEffect,", ","real ",,~timescale,")"
SetSpecialEffectTimeScaleHint="[UjAPI]  nothing SetSpecialEffectTimeScale (effect whichEffect, real timescale)"


SetSpecialEffectPlayerColour=SetSpecialEffectPlayerColour
SetSpecialEffectPlayerColour="SetSpecialEffectPlayerColour(","effect ",,~whichEffect,", ","playercolor ",,~color,")"
SetSpecialEffectPlayerColourHint="[UjAPI]  nothing SetSpecialEffectPlayerColour (effect whichEffect, playercolor color)"


SetSpecialEffectColour=SetSpecialEffectColour
SetSpecialEffectColour="SetSpecialEffectColour(","effect ",,~whichEffect,", ","integer ",,~colour,")"
SetSpecialEffectColourHint="[UjAPI]  nothing SetSpecialEffectColour (effect whichEffect, integer colour)"


SetSpecialEffectAlpha=SetSpecialEffectAlpha
SetSpecialEffectAlpha="SetSpecialEffectAlpha(","effect ",,~whichEffect,", ","integer ",,~alpha,")"
SetSpecialEffectAlphaHint="[UjAPI]  nothing SetSpecialEffectAlpha (effect whichEffect, integer alpha)"


SetSpecialEffectVertexColour=SetSpecialEffectVertexColour
SetSpecialEffectVertexColour="SetSpecialEffectVertexColour(","effect ",,~whichEffect,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetSpecialEffectVertexColourHint="[UjAPI]  nothing SetSpecialEffectVertexColour (effect whichEffect, integer red, integer green, integer blue, integer alpha)"


SetSpecialEffectMatrixScale=SetSpecialEffectMatrixScale
SetSpecialEffectMatrixScale="SetSpecialEffectMatrixScale(","effect ",,~whichEffect,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetSpecialEffectMatrixScaleHint="[UjAPI]  nothing SetSpecialEffectMatrixScale (effect whichEffect, real x, real y, real z)"


ResetSpecialEffectMatrix=ResetSpecialEffectMatrix
ResetSpecialEffectMatrix="ResetSpecialEffectMatrix(","effect ",,~whichEffect,")"
ResetSpecialEffectMatrixHint="[UjAPI]  nothing ResetSpecialEffectMatrix (effect whichEffect)"


SetSpecialEffectOrientationEx=SetSpecialEffectOrientationEx
SetSpecialEffectOrientationEx="SetSpecialEffectOrientationEx(","effect ",,~whichEffect,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetSpecialEffectOrientationExHint="[UjAPI]  nothing SetSpecialEffectOrientationEx (effect whichEffect, real yaw, real pitch, real roll, integer eulerOrder)"


SetSpecialEffectYaw=SetSpecialEffectYaw
SetSpecialEffectYaw="SetSpecialEffectYaw(","effect ",,~whichEffect,", ","real ",,~yaw,")"
SetSpecialEffectYawHint="[UjAPI]  nothing SetSpecialEffectYaw (effect whichEffect, real yaw)"


SetSpecialEffectFacing=SetSpecialEffectFacing
SetSpecialEffectFacing="SetSpecialEffectFacing(","effect ",,~whichEffect,", ","real ",,~facing,")"
SetSpecialEffectFacingHint="[UjAPI]  nothing SetSpecialEffectFacing (effect whichEffect, real facing)"


SetSpecialEffectPitch=SetSpecialEffectPitch
SetSpecialEffectPitch="SetSpecialEffectPitch(","effect ",,~whichEffect,", ","real ",,~pitch,")"
SetSpecialEffectPitchHint="[UjAPI]  nothing SetSpecialEffectPitch (effect whichEffect, real pitch)"


SetSpecialEffectRoll=SetSpecialEffectRoll
SetSpecialEffectRoll="SetSpecialEffectRoll(","effect ",,~whichEffect,", ","real ",,~roll,")"
SetSpecialEffectRollHint="[UjAPI]  nothing SetSpecialEffectRoll (effect whichEffect, real roll)"


SetSpecialEffectOrientation=SetSpecialEffectOrientation
SetSpecialEffectOrientation="SetSpecialEffectOrientation(","effect ",,~whichEffect,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetSpecialEffectOrientationHint="[UjAPI]  nothing SetSpecialEffectOrientation (effect whichEffect, real yaw, real pitch, real roll)"


SetSpecialEffectMaterialTexture=SetSpecialEffectMaterialTexture
SetSpecialEffectMaterialTexture="SetSpecialEffectMaterialTexture(","effect ",,~whichEffect,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetSpecialEffectMaterialTextureHint="[UjAPI]  nothing SetSpecialEffectMaterialTexture (effect whichEffect, string textureName, integer materialId, integer textureIndex)"


SetSpecialEffectTexture=SetSpecialEffectTexture
SetSpecialEffectTexture="SetSpecialEffectTexture(","effect ",,~whichEffect,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetSpecialEffectTextureHint="[UjAPI]  nothing SetSpecialEffectTexture (effect whichEffect, string textureName, integer textureIndex)"


SetSpecialEffectReplaceableTexture=SetSpecialEffectReplaceableTexture
SetSpecialEffectReplaceableTexture="SetSpecialEffectReplaceableTexture(","effect ",,~whichEffect,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetSpecialEffectReplaceableTextureHint="[UjAPI]  nothing SetSpecialEffectReplaceableTexture (effect whichEffect, string textureName, integer textureIndex)"


SetSpecialEffectModel=SetSpecialEffectModel
SetSpecialEffectModel="SetSpecialEffectModel(","effect ",,~whichEffect,", ","string ",,~modelName,")"
SetSpecialEffectModelHint="[UjAPI]  nothing SetSpecialEffectModel (effect whichEffect, string modelName)"


SetSpecialEffectModelEx=SetSpecialEffectModelEx
SetSpecialEffectModelEx="SetSpecialEffectModelEx(","effect ",,~whichEffect,", ","string ",,~modelName,", ","integer ",,~playerColour,")"
SetSpecialEffectModelExHint="[UjAPI]  nothing SetSpecialEffectModelEx (effect whichEffect, string modelName, integer playerColour)"


SetSpecialEffectAnimationWithRarityByIndex=SetSpecialEffectAnimationWithRarityByIndex
SetSpecialEffectAnimationWithRarityByIndex="SetSpecialEffectAnimationWithRarityByIndex(","effect ",,~whichEffect,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetSpecialEffectAnimationWithRarityByIndexHint="[UjAPI]  nothing SetSpecialEffectAnimationWithRarityByIndex (effect whichEffect, integer animIndex, raritycontrol rarity)"


SetSpecialEffectAnimationWithRarity=SetSpecialEffectAnimationWithRarity
SetSpecialEffectAnimationWithRarity="SetSpecialEffectAnimationWithRarity(","effect ",,~whichEffect,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetSpecialEffectAnimationWithRarityHint="[UjAPI]  nothing SetSpecialEffectAnimationWithRarity (effect whichEffect, string animationName, raritycontrol rarity)"


SetSpecialEffectAnimationByIndex=SetSpecialEffectAnimationByIndex
SetSpecialEffectAnimationByIndex="SetSpecialEffectAnimationByIndex(","effect ",,~whichEffect,", ","integer ",,~animIndex,")"
SetSpecialEffectAnimationByIndexHint="[UjAPI]  nothing SetSpecialEffectAnimationByIndex (effect whichEffect, integer animIndex)"


SetSpecialEffectAnimation=SetSpecialEffectAnimation
SetSpecialEffectAnimation="SetSpecialEffectAnimation(","effect ",,~whichEffect,", ","string ",,~animationName,")"
SetSpecialEffectAnimationHint="[UjAPI]  nothing SetSpecialEffectAnimation (effect whichEffect, string animationName)"


QueueSpecialEffectAnimationByIndex=QueueSpecialEffectAnimationByIndex
QueueSpecialEffectAnimationByIndex="QueueSpecialEffectAnimationByIndex(","effect ",,~whichEffect,", ","integer ",,~animIndex,")"
QueueSpecialEffectAnimationByIndexHint="[UjAPI]  nothing QueueSpecialEffectAnimationByIndex (effect whichEffect, integer animIndex)"


QueueSpecialEffectAnimation=QueueSpecialEffectAnimation
QueueSpecialEffectAnimation="QueueSpecialEffectAnimation(","effect ",,~whichEffect,", ","string ",,~animationName,")"
QueueSpecialEffectAnimationHint="[UjAPI]  nothing QueueSpecialEffectAnimation (effect whichEffect, string animationName)"


SetSpecialEffectAnimationOffsetPercent=SetSpecialEffectAnimationOffsetPercent
SetSpecialEffectAnimationOffsetPercent="SetSpecialEffectAnimationOffsetPercent(","effect ",,~whichEffect,", ","real ",,~percent,")"
SetSpecialEffectAnimationOffsetPercentHint="[UjAPI]  nothing SetSpecialEffectAnimationOffsetPercent (effect whichEffect, real percent)"


EnumSpecialEffectsInRange=EnumSpecialEffectsInRange
EnumSpecialEffectsInRange="EnumSpecialEffectsInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumSpecialEffectsInRangeHint="[UjAPI]  nothing EnumSpecialEffectsInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


SetTrackableVisible=SetTrackableVisible
SetTrackableVisible="SetTrackableVisible(","trackable ",,~whichTrackable,", ","boolean ",,~visibility,")"
SetTrackableVisibleHint="[UjAPI]  nothing SetTrackableVisible (trackable whichTrackable, boolean visibility)"


SetTrackablePosition=SetTrackablePosition
SetTrackablePosition="SetTrackablePosition(","trackable ",,~whichTrackable,", ","real ",,~x,", ","real ",,~y,")"
SetTrackablePositionHint="[UjAPI]  nothing SetTrackablePosition (trackable whichTrackable, real x, real y)"


SetTrackablePositionWithZ=SetTrackablePositionWithZ
SetTrackablePositionWithZ="SetTrackablePositionWithZ(","trackable ",,~whichTrackable,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetTrackablePositionWithZHint="[UjAPI]  nothing SetTrackablePositionWithZ (trackable whichTrackable, real x, real y, real z)"


SetTrackablePositionLoc=SetTrackablePositionLoc
SetTrackablePositionLoc="SetTrackablePositionLoc(","trackable ",,~whichTrackable,", ","location ",,~loc,")"
SetTrackablePositionLocHint="[UjAPI]  nothing SetTrackablePositionLoc (trackable whichTrackable, location loc)"


SetTrackableX=SetTrackableX
SetTrackableX="SetTrackableX(","trackable ",,~whichTrackable,", ","real ",,~x,")"
SetTrackableXHint="[UjAPI]  nothing SetTrackableX (trackable whichTrackable, real x)"


SetTrackableY=SetTrackableY
SetTrackableY="SetTrackableY(","trackable ",,~whichTrackable,", ","real ",,~y,")"
SetTrackableYHint="[UjAPI]  nothing SetTrackableY (trackable whichTrackable, real y)"


SetTrackableZ=SetTrackableZ
SetTrackableZ="SetTrackableZ(","trackable ",,~whichTrackable,", ","real ",,~z,")"
SetTrackableZHint="[UjAPI]  nothing SetTrackableZ (trackable whichTrackable, real z)"


SetTrackableHeight=SetTrackableHeight
SetTrackableHeight="SetTrackableHeight(","trackable ",,~whichTrackable,", ","real ",,~height,")"
SetTrackableHeightHint="[UjAPI]  nothing SetTrackableHeight (trackable whichTrackable, real height)"


SetTrackableScale=SetTrackableScale
SetTrackableScale="SetTrackableScale(","trackable ",,~whichTrackable,", ","real ",,~scale,")"
SetTrackableScaleHint="[UjAPI]  nothing SetTrackableScale (trackable whichTrackable, real scale)"


SetTrackableTimeScale=SetTrackableTimeScale
SetTrackableTimeScale="SetTrackableTimeScale(","trackable ",,~whichTrackable,", ","real ",,~timescale,")"
SetTrackableTimeScaleHint="[UjAPI]  nothing SetTrackableTimeScale (trackable whichTrackable, real timescale)"


SetTrackablePlayerColour=SetTrackablePlayerColour
SetTrackablePlayerColour="SetTrackablePlayerColour(","trackable ",,~whichTrackable,", ","playercolor ",,~color,")"
SetTrackablePlayerColourHint="[UjAPI]  nothing SetTrackablePlayerColour (trackable whichTrackable, playercolor color)"


SetTrackableColour=SetTrackableColour
SetTrackableColour="SetTrackableColour(","trackable ",,~whichTrackable,", ","integer ",,~colour,")"
SetTrackableColourHint="[UjAPI]  nothing SetTrackableColour (trackable whichTrackable, integer colour)"


SetTrackableAlpha=SetTrackableAlpha
SetTrackableAlpha="SetTrackableAlpha(","trackable ",,~whichTrackable,", ","integer ",,~alpha,")"
SetTrackableAlphaHint="[UjAPI]  nothing SetTrackableAlpha (trackable whichTrackable, integer alpha)"


SetTrackableVertexColour=SetTrackableVertexColour
SetTrackableVertexColour="SetTrackableVertexColour(","trackable ",,~whichTrackable,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetTrackableVertexColourHint="[UjAPI]  nothing SetTrackableVertexColour (trackable whichTrackable, integer red, integer green, integer blue, integer alpha)"


SetTrackableEffectMatrixScale=SetTrackableEffectMatrixScale
SetTrackableEffectMatrixScale="SetTrackableEffectMatrixScale(","trackable ",,~whichTrackable,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetTrackableEffectMatrixScaleHint="[UjAPI]  nothing SetTrackableEffectMatrixScale (trackable whichTrackable, real x, real y, real z)"


ResetTrackableMatrix=ResetTrackableMatrix
ResetTrackableMatrix="ResetTrackableMatrix(","trackable ",,~whichTrackable,")"
ResetTrackableMatrixHint="[UjAPI]  nothing ResetTrackableMatrix (trackable whichTrackable)"


SetTrackableOrientationEx=SetTrackableOrientationEx
SetTrackableOrientationEx="SetTrackableOrientationEx(","trackable ",,~whichTrackable,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetTrackableOrientationExHint="[UjAPI]  nothing SetTrackableOrientationEx (trackable whichTrackable, real yaw, real pitch, real roll, integer eulerOrder)"


SetTrackableYaw=SetTrackableYaw
SetTrackableYaw="SetTrackableYaw(","trackable ",,~whichTrackable,", ","real ",,~yaw,")"
SetTrackableYawHint="[UjAPI]  nothing SetTrackableYaw (trackable whichTrackable, real yaw)"


SetTrackableFacing=SetTrackableFacing
SetTrackableFacing="SetTrackableFacing(","trackable ",,~whichTrackable,", ","real ",,~facing,")"
SetTrackableFacingHint="[UjAPI]  nothing SetTrackableFacing (trackable whichTrackable, real facing)"


SetTrackablePitch=SetTrackablePitch
SetTrackablePitch="SetTrackablePitch(","trackable ",,~whichTrackable,", ","real ",,~pitch,")"
SetTrackablePitchHint="[UjAPI]  nothing SetTrackablePitch (trackable whichTrackable, real pitch)"


SetTrackableRoll=SetTrackableRoll
SetTrackableRoll="SetTrackableRoll(","trackable ",,~whichTrackable,", ","real ",,~roll,")"
SetTrackableRollHint="[UjAPI]  nothing SetTrackableRoll (trackable whichTrackable, real roll)"


SetTrackableOrientation=SetTrackableOrientation
SetTrackableOrientation="SetTrackableOrientation(","trackable ",,~whichTrackable,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetTrackableOrientationHint="[UjAPI]  nothing SetTrackableOrientation (trackable whichTrackable, real yaw, real pitch, real roll)"


SetTrackableMaterialTexture=SetTrackableMaterialTexture
SetTrackableMaterialTexture="SetTrackableMaterialTexture(","trackable ",,~whichTrackable,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetTrackableMaterialTextureHint="[UjAPI]  nothing SetTrackableMaterialTexture (trackable whichTrackable, string textureName, integer materialId, integer textureIndex)"


SetTrackableTexture=SetTrackableTexture
SetTrackableTexture="SetTrackableTexture(","trackable ",,~whichTrackable,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetTrackableTextureHint="[UjAPI]  nothing SetTrackableTexture (trackable whichTrackable, string textureName, integer textureIndex)"


SetTrackableReplaceableTexture=SetTrackableReplaceableTexture
SetTrackableReplaceableTexture="SetTrackableReplaceableTexture(","trackable ",,~whichTrackable,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetTrackableReplaceableTextureHint="[UjAPI]  nothing SetTrackableReplaceableTexture (trackable whichTrackable, string textureName, integer textureIndex)"


SetTrackableModel=SetTrackableModel
SetTrackableModel="SetTrackableModel(","trackable ",,~whichTrackable,", ","string ",,~modelName,")"
SetTrackableModelHint="[UjAPI]  nothing SetTrackableModel (trackable whichTrackable, string modelName)"


SetTrackableModelEx=SetTrackableModelEx
SetTrackableModelEx="SetTrackableModelEx(","trackable ",,~whichTrackable,", ","string ",,~modelName,", ","integer ",,~playerColour,")"
SetTrackableModelExHint="[UjAPI]  nothing SetTrackableModelEx (trackable whichTrackable, string modelName, integer playerColour)"


SetTrackableAnimationWithRarityByIndex=SetTrackableAnimationWithRarityByIndex
SetTrackableAnimationWithRarityByIndex="SetTrackableAnimationWithRarityByIndex(","trackable ",,~whichTrackable,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetTrackableAnimationWithRarityByIndexHint="[UjAPI]  nothing SetTrackableAnimationWithRarityByIndex (trackable whichTrackable, integer animIndex, raritycontrol rarity)"


SetTrackableAnimationWithRarity=SetTrackableAnimationWithRarity
SetTrackableAnimationWithRarity="SetTrackableAnimationWithRarity(","trackable ",,~whichTrackable,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetTrackableAnimationWithRarityHint="[UjAPI]  nothing SetTrackableAnimationWithRarity (trackable whichTrackable, string animationName, raritycontrol rarity)"


SetTrackableAnimationByIndex=SetTrackableAnimationByIndex
SetTrackableAnimationByIndex="SetTrackableAnimationByIndex(","trackable ",,~whichTrackable,", ","integer ",,~animIndex,")"
SetTrackableAnimationByIndexHint="[UjAPI]  nothing SetTrackableAnimationByIndex (trackable whichTrackable, integer animIndex)"


SetTrackableAnimation=SetTrackableAnimation
SetTrackableAnimation="SetTrackableAnimation(","trackable ",,~whichTrackable,", ","string ",,~animationName,")"
SetTrackableAnimationHint="[UjAPI]  nothing SetTrackableAnimation (trackable whichTrackable, string animationName)"


QueueTrackableAnimationByIndex=QueueTrackableAnimationByIndex
QueueTrackableAnimationByIndex="QueueTrackableAnimationByIndex(","trackable ",,~whichTrackable,", ","integer ",,~animIndex,")"
QueueTrackableAnimationByIndexHint="[UjAPI]  nothing QueueTrackableAnimationByIndex (trackable whichTrackable, integer animIndex)"


QueueTrackableAnimation=QueueTrackableAnimation
QueueTrackableAnimation="QueueTrackableAnimation(","trackable ",,~whichTrackable,", ","string ",,~animationName,")"
QueueTrackableAnimationHint="[UjAPI]  nothing QueueTrackableAnimation (trackable whichTrackable, string animationName)"


SetTrackableAnimationOffsetPercent=SetTrackableAnimationOffsetPercent
SetTrackableAnimationOffsetPercent="SetTrackableAnimationOffsetPercent(","trackable ",,~whichTrackable,", ","real ",,~percent,")"
SetTrackableAnimationOffsetPercentHint="[UjAPI]  nothing SetTrackableAnimationOffsetPercent (trackable whichTrackable, real percent)"


EnumTrackablesInRange=EnumTrackablesInRange
EnumTrackablesInRange="EnumTrackablesInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumTrackablesInRangeHint="[UjAPI]  nothing EnumTrackablesInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


SetWidgetTipEnabled=SetWidgetTipEnabled
SetWidgetTipEnabled="SetWidgetTipEnabled(","boolean ",,~enable,")"
SetWidgetTipEnabledHint="[UjAPI]  nothing SetWidgetTipEnabled (boolean enable)"


SetWidgetVisible=SetWidgetVisible
SetWidgetVisible="SetWidgetVisible(","widget ",,~whichWidget,", ","boolean ",,~visible,")"
SetWidgetVisibleHint="[UjAPI]  nothing SetWidgetVisible (widget whichWidget, boolean visible)"


SetWidgetInvulnerable=SetWidgetInvulnerable
SetWidgetInvulnerable="SetWidgetInvulnerable(","widget ",,~whichWidget,", ","boolean ",,~invulnerable,")"
SetWidgetInvulnerableHint="[UjAPI]  nothing SetWidgetInvulnerable (widget whichWidget, boolean invulnerable)"


SetWidgetPositionLoc=SetWidgetPositionLoc
SetWidgetPositionLoc="SetWidgetPositionLoc(","widget ",,~whichWidget,", ","location ",,~whichLocation,")"
SetWidgetPositionLocHint="[UjAPI]  nothing SetWidgetPositionLoc (widget whichWidget, location whichLocation)"


SetWidgetPosition=SetWidgetPosition
SetWidgetPosition="SetWidgetPosition(","widget ",,~whichWidget,", ","real ",,~x,", ","real ",,~y,")"
SetWidgetPositionHint="[UjAPI]  nothing SetWidgetPosition (widget whichWidget, real x, real y)"


SetWidgetPositionWithZ=SetWidgetPositionWithZ
SetWidgetPositionWithZ="SetWidgetPositionWithZ(","widget ",,~whichWidget,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetWidgetPositionWithZHint="[UjAPI]  nothing SetWidgetPositionWithZ (widget whichWidget, real x, real y, real z)"


SetWidgetX=SetWidgetX
SetWidgetX="SetWidgetX(","widget ",,~whichWidget,", ","real ",,~x,")"
SetWidgetXHint="[UjAPI]  nothing SetWidgetX (widget whichWidget, real x)"


SetWidgetY=SetWidgetY
SetWidgetY="SetWidgetY(","widget ",,~whichWidget,", ","real ",,~y,")"
SetWidgetYHint="[UjAPI]  nothing SetWidgetY (widget whichWidget, real y)"


SetWidgetZ=SetWidgetZ
SetWidgetZ="SetWidgetZ(","widget ",,~whichWidget,", ","real ",,~z,")"
SetWidgetZHint="[UjAPI]  nothing SetWidgetZ (widget whichWidget, real z)"


ResetWidgetZ=ResetWidgetZ
ResetWidgetZ="ResetWidgetZ(","widget ",,~whichWidget,")"
ResetWidgetZHint="[UjAPI]  nothing ResetWidgetZ (widget whichWidget)"


SetWidgetHeight=SetWidgetHeight
SetWidgetHeight="SetWidgetHeight(","widget ",,~whichWidget,", ","real ",,~height,")"
SetWidgetHeightHint="[UjAPI]  nothing SetWidgetHeight (widget whichWidget, real height)"


SetWidgetPlayerColour=SetWidgetPlayerColour
SetWidgetPlayerColour="SetWidgetPlayerColour(","widget ",,~whichWidget,", ","playercolor ",,~color,")"
SetWidgetPlayerColourHint="[UjAPI]  nothing SetWidgetPlayerColour (widget whichWidget, playercolor color)"


SetWidgetVertexColour=SetWidgetVertexColour
SetWidgetVertexColour="SetWidgetVertexColour(","widget ",,~whichWidget,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetWidgetVertexColourHint="[UjAPI]  nothing SetWidgetVertexColour (widget whichWidget, integer red, integer green, integer blue, integer alpha)"


SetWidgetTimeScale=SetWidgetTimeScale
SetWidgetTimeScale="SetWidgetTimeScale(","widget ",,~whichWidget,", ","real ",,~timeScale,")"
SetWidgetTimeScaleHint="[UjAPI]  nothing SetWidgetTimeScale (widget whichWidget, real timeScale)"


SetWidgetScale=SetWidgetScale
SetWidgetScale="SetWidgetScale(","widget ",,~whichWidget,", ","real ",,~scale,")"
SetWidgetScaleHint="[UjAPI]  nothing SetWidgetScale (widget whichWidget, real scale)"


SetWidgetFacing=SetWidgetFacing
SetWidgetFacing="SetWidgetFacing(","widget ",,~whichWidget,", ","real ",,~facing,", ","boolean ",,~isInstant,")"
SetWidgetFacingHint="[UjAPI]  nothing SetWidgetFacing (widget whichWidget, real facing, boolean isInstant)"


SetWidgetMatrixScale=SetWidgetMatrixScale
SetWidgetMatrixScale="SetWidgetMatrixScale(","widget ",,~whichWidget,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetWidgetMatrixScaleHint="[UjAPI]  nothing SetWidgetMatrixScale (widget whichWidget, real x, real y, real z)"


ResetWidgetMatrix=ResetWidgetMatrix
ResetWidgetMatrix="ResetWidgetMatrix(","widget ",,~whichWidget,")"
ResetWidgetMatrixHint="[UjAPI]  nothing ResetWidgetMatrix (widget whichWidget)"


SetWidgetOrientationEx=SetWidgetOrientationEx
SetWidgetOrientationEx="SetWidgetOrientationEx(","widget ",,~whichWidget,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetWidgetOrientationExHint="[UjAPI]  nothing SetWidgetOrientationEx (widget whichWidget, real yaw, real pitch, real roll, integer eulerOrder)"


SetWidgetOrientation=SetWidgetOrientation
SetWidgetOrientation="SetWidgetOrientation(","widget ",,~whichWidget,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetWidgetOrientationHint="[UjAPI]  nothing SetWidgetOrientation (widget whichWidget, real yaw, real pitch, real roll)"


SetWidgetYaw=SetWidgetYaw
SetWidgetYaw="SetWidgetYaw(","widget ",,~whichWidget,", ","real ",,~yaw,")"
SetWidgetYawHint="[UjAPI]  nothing SetWidgetYaw (widget whichWidget, real yaw)"


SetWidgetPitch=SetWidgetPitch
SetWidgetPitch="SetWidgetPitch(","widget ",,~whichWidget,", ","real ",,~pitch,")"
SetWidgetPitchHint="[UjAPI]  nothing SetWidgetPitch (widget whichWidget, real pitch)"


SetWidgetRoll=SetWidgetRoll
SetWidgetRoll="SetWidgetRoll(","widget ",,~whichWidget,", ","real ",,~roll,")"
SetWidgetRollHint="[UjAPI]  nothing SetWidgetRoll (widget whichWidget, real roll)"


SetWidgetModel=SetWidgetModel
SetWidgetModel="SetWidgetModel(","widget ",,~whichWidget,", ","string ",,~modelFile,")"
SetWidgetModelHint="[UjAPI]  nothing SetWidgetModel (widget whichWidget, string modelFile)"


SetWidgetModelEx=SetWidgetModelEx
SetWidgetModelEx="SetWidgetModelEx(","widget ",,~whichWidget,", ","string ",,~modelFile,", ","integer ",,~playerId,")"
SetWidgetModelExHint="[UjAPI]  nothing SetWidgetModelEx (widget whichWidget, string modelFile, integer playerId)"


SetWidgetMaterialTexture=SetWidgetMaterialTexture
SetWidgetMaterialTexture="SetWidgetMaterialTexture(","widget ",,~whichWidget,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetWidgetMaterialTextureHint="[UjAPI]  nothing SetWidgetMaterialTexture (widget whichWidget, string textureName, integer materialId, integer textureIndex)"


SetWidgetTexture=SetWidgetTexture
SetWidgetTexture="SetWidgetTexture(","widget ",,~whichWidget,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetWidgetTextureHint="[UjAPI]  nothing SetWidgetTexture (widget whichWidget, string textureName, integer textureIndex)"


SetWidgetReplaceableTexture=SetWidgetReplaceableTexture
SetWidgetReplaceableTexture="SetWidgetReplaceableTexture(","widget ",,~whichWidget,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetWidgetReplaceableTextureHint="[UjAPI]  nothing SetWidgetReplaceableTexture (widget whichWidget, string textureName, integer textureIndex)"


SetWidgetAnimationWithRarityByIndex=SetWidgetAnimationWithRarityByIndex
SetWidgetAnimationWithRarityByIndex="SetWidgetAnimationWithRarityByIndex(","widget ",,~whichWidget,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetWidgetAnimationWithRarityByIndexHint="[UjAPI]  nothing SetWidgetAnimationWithRarityByIndex (widget whichWidget, integer animIndex, raritycontrol rarity)"


SetWidgetAnimationWithRarity=SetWidgetAnimationWithRarity
SetWidgetAnimationWithRarity="SetWidgetAnimationWithRarity(","widget ",,~whichWidget,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetWidgetAnimationWithRarityHint="[UjAPI]  nothing SetWidgetAnimationWithRarity (widget whichWidget, string animationName, raritycontrol rarity)"


SetWidgetAnimationByIndex=SetWidgetAnimationByIndex
SetWidgetAnimationByIndex="SetWidgetAnimationByIndex(","widget ",,~whichWidget,", ","integer ",,~animIndex,")"
SetWidgetAnimationByIndexHint="[UjAPI]  nothing SetWidgetAnimationByIndex (widget whichWidget, integer animIndex)"


SetWidgetAnimation=SetWidgetAnimation
SetWidgetAnimation="SetWidgetAnimation(","widget ",,~whichWidget,", ","string ",,~animationName,")"
SetWidgetAnimationHint="[UjAPI]  nothing SetWidgetAnimation (widget whichWidget, string animationName)"


QueueWidgetAnimationByIndex=QueueWidgetAnimationByIndex
QueueWidgetAnimationByIndex="QueueWidgetAnimationByIndex(","widget ",,~whichWidget,", ","integer ",,~animIndex,")"
QueueWidgetAnimationByIndexHint="[UjAPI]  nothing QueueWidgetAnimationByIndex (widget whichWidget, integer animIndex)"


QueueWidgetAnimation=QueueWidgetAnimation
QueueWidgetAnimation="QueueWidgetAnimation(","widget ",,~whichWidget,", ","string ",,~animationName,")"
QueueWidgetAnimationHint="[UjAPI]  nothing QueueWidgetAnimation (widget whichWidget, string animationName)"


SetWidgetAnimationOffsetPercent=SetWidgetAnimationOffsetPercent
SetWidgetAnimationOffsetPercent="SetWidgetAnimationOffsetPercent(","widget ",,~whichWidget,", ","real ",,~percent,")"
SetWidgetAnimationOffsetPercentHint="[UjAPI]  nothing SetWidgetAnimationOffsetPercent (widget whichWidget, real percent)"


TriggerRegisterWidgetEvent=TriggerRegisterWidgetEvent
TriggerRegisterWidgetEvent="TriggerRegisterWidgetEvent(","trigger ",,~whichTrigger,", ","widget ",,~whichWidget,", ","widgetevent ",,~whichWidgetEvent,")"
TriggerRegisterWidgetEventHint="[UjAPI]  event TriggerRegisterWidgetEvent (trigger whichTrigger, widget whichWidget, widgetevent whichWidgetEvent)"


SetDestructableVariation=SetDestructableVariation
SetDestructableVariation="SetDestructableVariation(","destructable ",,~whichDestructable,", ","integer ",,~variation,")"
SetDestructableVariationHint="[UjAPI]  nothing SetDestructableVariation (destructable whichDestructable, integer variation)"


SetDestructableVariationEx=SetDestructableVariationEx
SetDestructableVariationEx="SetDestructableVariationEx(","destructable ",,~whichDestructable,", ","integer ",,~variation,", ","boolean ",,~ignoreStateCheck,")"
SetDestructableVariationExHint="[UjAPI]  nothing SetDestructableVariationEx (destructable whichDestructable, integer variation, boolean ignoreStateCheck)"


SetDestructableBlighted=SetDestructableBlighted
SetDestructableBlighted="SetDestructableBlighted(","destructable ",,~whichDestructable,", ","boolean ",,~flag,")"
SetDestructableBlightedHint="[UjAPI]  nothing SetDestructableBlighted (destructable whichDestructable, boolean flag)"


ResetDestructableZ=ResetDestructableZ
ResetDestructableZ="ResetDestructableZ(","destructable ",,~whichDestructable,")"
ResetDestructableZHint="[UjAPI]  nothing ResetDestructableZ (destructable whichDestructable)"


SetDestructableHeight=SetDestructableHeight
SetDestructableHeight="SetDestructableHeight(","destructable ",,~whichDestructable,", ","real ",,~height,")"
SetDestructableHeightHint="[UjAPI]  nothing SetDestructableHeight (destructable whichDestructable, real height)"


SetDestructablePositionWithZ=SetDestructablePositionWithZ
SetDestructablePositionWithZ="SetDestructablePositionWithZ(","destructable ",,~whichDestructable,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetDestructablePositionWithZHint="[UjAPI]  nothing SetDestructablePositionWithZ (destructable whichDestructable, real x, real y, real z)"


SetDestructablePosition=SetDestructablePosition
SetDestructablePosition="SetDestructablePosition(","destructable ",,~whichDestructable,", ","real ",,~x,", ","real ",,~y,")"
SetDestructablePositionHint="[UjAPI]  nothing SetDestructablePosition (destructable whichDestructable, real x, real y)"


SetDestructablePositionLoc=SetDestructablePositionLoc
SetDestructablePositionLoc="SetDestructablePositionLoc(","destructable ",,~whichDestructable,", ","location ",,~whichLocation,")"
SetDestructablePositionLocHint="[UjAPI]  nothing SetDestructablePositionLoc (destructable whichDestructable, location whichLocation)"


SetDestructableX=SetDestructableX
SetDestructableX="SetDestructableX(","destructable ",,~whichDestructable,", ","real ",,~x,")"
SetDestructableXHint="[UjAPI]  nothing SetDestructableX (destructable whichDestructable, real x)"


SetDestructableY=SetDestructableY
SetDestructableY="SetDestructableY(","destructable ",,~whichDestructable,", ","real ",,~y,")"
SetDestructableYHint="[UjAPI]  nothing SetDestructableY (destructable whichDestructable, real y)"


SetDestructableZ=SetDestructableZ
SetDestructableZ="SetDestructableZ(","destructable ",,~whichDestructable,", ","real ",,~z,")"
SetDestructableZHint="[UjAPI]  nothing SetDestructableZ (destructable whichDestructable, real z)"


SetDestructablePlayerColour=SetDestructablePlayerColour
SetDestructablePlayerColour="SetDestructablePlayerColour(","destructable ",,~whichDestructable,", ","playercolor ",,~color,")"
SetDestructablePlayerColourHint="[UjAPI]  nothing SetDestructablePlayerColour (destructable whichDestructable, playercolor color)"


SetDestructableVertexColour=SetDestructableVertexColour
SetDestructableVertexColour="SetDestructableVertexColour(","destructable ",,~whichDestructable,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetDestructableVertexColourHint="[UjAPI]  nothing SetDestructableVertexColour (destructable whichDestructable, integer red, integer green, integer blue, integer alpha)"


SetDestructableTimeScale=SetDestructableTimeScale
SetDestructableTimeScale="SetDestructableTimeScale(","destructable ",,~whichDestructable,", ","real ",,~timeScale,")"
SetDestructableTimeScaleHint="[UjAPI]  nothing SetDestructableTimeScale (destructable whichDestructable, real timeScale)"


SetDestructableScale=SetDestructableScale
SetDestructableScale="SetDestructableScale(","destructable ",,~whichDestructable,", ","real ",,~scale,")"
SetDestructableScaleHint="[UjAPI]  nothing SetDestructableScale (destructable whichDestructable, real scale)"


SetDestructableFacing=SetDestructableFacing
SetDestructableFacing="SetDestructableFacing(","destructable ",,~whichDestructable,", ","real ",,~facing,", ","boolean ",,~isInstant,")"
SetDestructableFacingHint="[UjAPI]  nothing SetDestructableFacing (destructable whichDestructable, real facing, boolean isInstant)"


SetDestructableMatrixScale=SetDestructableMatrixScale
SetDestructableMatrixScale="SetDestructableMatrixScale(","destructable ",,~whichDestructable,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetDestructableMatrixScaleHint="[UjAPI]  nothing SetDestructableMatrixScale (destructable whichDestructable, real x, real y, real z)"


ResetDestructableMatrix=ResetDestructableMatrix
ResetDestructableMatrix="ResetDestructableMatrix(","destructable ",,~whichDestructable,")"
ResetDestructableMatrixHint="[UjAPI]  nothing ResetDestructableMatrix (destructable whichDestructable)"


SetDestructableOrientationEx=SetDestructableOrientationEx
SetDestructableOrientationEx="SetDestructableOrientationEx(","destructable ",,~whichDestructable,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetDestructableOrientationExHint="[UjAPI]  nothing SetDestructableOrientationEx (destructable whichDestructable, real yaw, real pitch, real roll, integer eulerOrder)"


SetDestructableOrientation=SetDestructableOrientation
SetDestructableOrientation="SetDestructableOrientation(","destructable ",,~whichDestructable,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetDestructableOrientationHint="[UjAPI]  nothing SetDestructableOrientation (destructable whichDestructable, real yaw, real pitch, real roll)"


SetDestructableYaw=SetDestructableYaw
SetDestructableYaw="SetDestructableYaw(","destructable ",,~whichDestructable,", ","real ",,~yaw,")"
SetDestructableYawHint="[UjAPI]  nothing SetDestructableYaw (destructable whichDestructable, real yaw)"


SetDestructablePitch=SetDestructablePitch
SetDestructablePitch="SetDestructablePitch(","destructable ",,~whichDestructable,", ","real ",,~pitch,")"
SetDestructablePitchHint="[UjAPI]  nothing SetDestructablePitch (destructable whichDestructable, real pitch)"


SetDestructableRoll=SetDestructableRoll
SetDestructableRoll="SetDestructableRoll(","destructable ",,~whichDestructable,", ","real ",,~roll,")"
SetDestructableRollHint="[UjAPI]  nothing SetDestructableRoll (destructable whichDestructable, real roll)"


SetDestructableModel=SetDestructableModel
SetDestructableModel="SetDestructableModel(","destructable ",,~whichDestructable,", ","string ",,~modelFile,")"
SetDestructableModelHint="[UjAPI]  nothing SetDestructableModel (destructable whichDestructable, string modelFile)"


SetDestructableModelEx=SetDestructableModelEx
SetDestructableModelEx="SetDestructableModelEx(","destructable ",,~whichDestructable,", ","string ",,~modelFile,", ","integer ",,~playerId,")"
SetDestructableModelExHint="[UjAPI]  nothing SetDestructableModelEx (destructable whichDestructable, string modelFile, integer playerId)"


SetDestructableMaterialTexture=SetDestructableMaterialTexture
SetDestructableMaterialTexture="SetDestructableMaterialTexture(","destructable ",,~whichDestructable,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetDestructableMaterialTextureHint="[UjAPI]  nothing SetDestructableMaterialTexture (destructable whichDestructable, string textureName, integer materialId, integer textureIndex)"


SetDestructableTexture=SetDestructableTexture
SetDestructableTexture="SetDestructableTexture(","destructable ",,~whichDestructable,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetDestructableTextureHint="[UjAPI]  nothing SetDestructableTexture (destructable whichDestructable, string textureName, integer textureIndex)"


SetDestructableReplaceableTexture=SetDestructableReplaceableTexture
SetDestructableReplaceableTexture="SetDestructableReplaceableTexture(","destructable ",,~whichDestructable,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetDestructableReplaceableTextureHint="[UjAPI]  nothing SetDestructableReplaceableTexture (destructable whichDestructable, string textureName, integer textureIndex)"


SetDestructableAnimationWithRarityByIndex=SetDestructableAnimationWithRarityByIndex
SetDestructableAnimationWithRarityByIndex="SetDestructableAnimationWithRarityByIndex(","destructable ",,~whichDestructable,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetDestructableAnimationWithRarityByIndexHint="[UjAPI]  nothing SetDestructableAnimationWithRarityByIndex (destructable whichDestructable, integer animIndex, raritycontrol rarity)"


SetDestructableAnimationWithRarity=SetDestructableAnimationWithRarity
SetDestructableAnimationWithRarity="SetDestructableAnimationWithRarity(","destructable ",,~whichDestructable,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetDestructableAnimationWithRarityHint="[UjAPI]  nothing SetDestructableAnimationWithRarity (destructable whichDestructable, string animationName, raritycontrol rarity)"


SetDestructableAnimationByIndex=SetDestructableAnimationByIndex
SetDestructableAnimationByIndex="SetDestructableAnimationByIndex(","destructable ",,~whichDestructable,", ","integer ",,~animIndex,")"
SetDestructableAnimationByIndexHint="[UjAPI]  nothing SetDestructableAnimationByIndex (destructable whichDestructable, integer animIndex)"


QueueDestructableAnimationByIndex=QueueDestructableAnimationByIndex
QueueDestructableAnimationByIndex="QueueDestructableAnimationByIndex(","destructable ",,~whichDestructable,", ","integer ",,~animIndex,")"
QueueDestructableAnimationByIndexHint="[UjAPI]  nothing QueueDestructableAnimationByIndex (destructable whichDestructable, integer animIndex)"


SetDestructableAnimationOffsetPercent=SetDestructableAnimationOffsetPercent
SetDestructableAnimationOffsetPercent="SetDestructableAnimationOffsetPercent(","destructable ",,~whichDestructable,", ","real ",,~percent,")"
SetDestructableAnimationOffsetPercentHint="[UjAPI]  nothing SetDestructableAnimationOffsetPercent (destructable whichDestructable, real percent)"


EnumDestructablesInRange=EnumDestructablesInRange
EnumDestructablesInRange="EnumDestructablesInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumDestructablesInRangeHint="[UjAPI]  nothing EnumDestructablesInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(","integer ",,~itemId,", ","itemintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI]  boolean SetBaseItemIntegerFieldById (integer itemId, itemintegerfield whichField, integer value)"


SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(","integer ",,~itemId,", ","itembooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI]  boolean SetBaseItemBooleanFieldById (integer itemId, itembooleanfield whichField, boolean value)"


SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(","integer ",,~itemId,", ","itemrealfield ",,~whichField,", ","real ",,~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI]  boolean SetBaseItemRealFieldById (integer itemId, itemrealfield whichField, real value)"


SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(","item ",,~whichItem,", ","itemintegerfield ",,~whichField,", ","integer ",,~value,")"
SetItemIntegerFieldHint="[UjAPI]  boolean SetItemIntegerField (item whichItem, itemintegerfield whichField, integer value)"


SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(","item ",,~whichItem,", ","itembooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetItemBooleanFieldHint="[UjAPI]  boolean SetItemBooleanField (item whichItem, itembooleanfield whichField, boolean value)"


SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(","item ",,~whichItem,", ","itemrealfield ",,~whichField,", ","real ",,~value,")"
SetItemRealFieldHint="[UjAPI]  boolean SetItemRealField (item whichItem, itemrealfield whichField, real value)"


SetItemPositionWithZ=SetItemPositionWithZ
SetItemPositionWithZ="SetItemPositionWithZ(","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetItemPositionWithZHint="[UjAPI]  nothing SetItemPositionWithZ (item whichItem, real x, real y, real z)"


SetItemX=SetItemX
SetItemX="SetItemX(","item ",,~whichItem,", ","real ",,~x,")"
SetItemXHint="[UjAPI]  nothing SetItemX (item whichItem, real x)"


SetItemY=SetItemY
SetItemY="SetItemY(","item ",,~whichItem,", ","real ",,~y,")"
SetItemYHint="[UjAPI]  nothing SetItemY (item whichItem, real y)"


SetItemZ=SetItemZ
SetItemZ="SetItemZ(","item ",,~whichItem,", ","real ",,~z,")"
SetItemZHint="[UjAPI]  nothing SetItemZ (item whichItem, real z)"


ResetItemZ=ResetItemZ
ResetItemZ="ResetItemZ(","item ",,~whichItem,")"
ResetItemZHint="[UjAPI]  nothing ResetItemZ (item whichItem)"


SetItemHeight=SetItemHeight
SetItemHeight="SetItemHeight(","item ",,~whichItem,", ","real ",,~height,")"
SetItemHeightHint="[UjAPI]  nothing SetItemHeight (item whichItem, real height)"


SetItemLife=SetItemLife
SetItemLife="SetItemLife(","item ",,~whichItem,", ","real ",,~life,")"
SetItemLifeHint="[UjAPI]  nothing SetItemLife (item whichItem, real life)"


SetItemMaxLife=SetItemMaxLife
SetItemMaxLife="SetItemMaxLife(","item ",,~whichItem,", ","real ",,~maxLife,")"
SetItemMaxLifeHint="[UjAPI]  nothing SetItemMaxLife (item whichItem, real maxLife)"


ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(","item ",,~whichItem,", ","ability ",,~whichAbility,")"
ItemAddAbilityHint="[UjAPI]  boolean ItemAddAbility (item whichItem, ability whichAbility)"


ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(","item ",,~whichItem,", ","ability ",,~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI]  boolean ItemRemoveAbility (item whichItem, ability whichAbility)"


ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(","item ",,~whichItem,", ","integer ",,~abilCode,")"
ItemAddAbilityByIdHint="[UjAPI]  boolean ItemAddAbilityById (item whichItem, integer abilCode)"


ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(","item ",,~whichItem,", ","integer ",,~abilCode,")"
ItemRemoveAbilityByIdHint="[UjAPI]  boolean ItemRemoveAbilityById (item whichItem, integer abilCode)"


SetItemCooldown=SetItemCooldown
SetItemCooldown="SetItemCooldown(","item ",,~whichItem,", ","real ",,~cooldown,")"
SetItemCooldownHint="[UjAPI]  nothing SetItemCooldown (item whichItem, real cooldown)"


StartItemCooldown=StartItemCooldown
StartItemCooldown="StartItemCooldown(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","real ",,~cooldown,")"
StartItemCooldownHint="[UjAPI]  nothing StartItemCooldown (unit whichUnit, item whichItem, real cooldown)"


SetItemRemainingCooldown=SetItemRemainingCooldown
SetItemRemainingCooldown="SetItemRemainingCooldown(","item ",,~whichItem,", ","real ",,~cooldown,")"
SetItemRemainingCooldownHint="[UjAPI]  nothing SetItemRemainingCooldown (item whichItem, real cooldown)"


SetItemPlayerColour=SetItemPlayerColour
SetItemPlayerColour="SetItemPlayerColour(","item ",,~whichItem,", ","playercolor ",,~color,")"
SetItemPlayerColourHint="[UjAPI]  nothing SetItemPlayerColour (item whichItem, playercolor color)"


SetItemVertexColour=SetItemVertexColour
SetItemVertexColour="SetItemVertexColour(","item ",,~whichItem,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetItemVertexColourHint="[UjAPI]  nothing SetItemVertexColour (item whichItem, integer red, integer green, integer blue, integer alpha)"


SetItemTimeScale=SetItemTimeScale
SetItemTimeScale="SetItemTimeScale(","item ",,~whichItem,", ","real ",,~timeScale,")"
SetItemTimeScaleHint="[UjAPI]  nothing SetItemTimeScale (item whichItem, real timeScale)"


SetItemScale=SetItemScale
SetItemScale="SetItemScale(","item ",,~whichItem,", ","real ",,~scale,")"
SetItemScaleHint="[UjAPI]  nothing SetItemScale (item whichItem, real scale)"


SetItemFacing=SetItemFacing
SetItemFacing="SetItemFacing(","item ",,~whichItem,", ","real ",,~facing,", ","boolean ",,~isInstant,")"
SetItemFacingHint="[UjAPI]  nothing SetItemFacing (item whichItem, real facing, boolean isInstant)"


SetItemMatrixScale=SetItemMatrixScale
SetItemMatrixScale="SetItemMatrixScale(","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetItemMatrixScaleHint="[UjAPI]  nothing SetItemMatrixScale (item whichItem, real x, real y, real z)"


ResetItemMatrix=ResetItemMatrix
ResetItemMatrix="ResetItemMatrix(","item ",,~whichItem,")"
ResetItemMatrixHint="[UjAPI]  nothing ResetItemMatrix (item whichItem)"


SetItemOrientationEx=SetItemOrientationEx
SetItemOrientationEx="SetItemOrientationEx(","item ",,~whichItem,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetItemOrientationExHint="[UjAPI]  nothing SetItemOrientationEx (item whichItem, real yaw, real pitch, real roll, integer eulerOrder)"


SetItemOrientation=SetItemOrientation
SetItemOrientation="SetItemOrientation(","item ",,~whichItem,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetItemOrientationHint="[UjAPI]  nothing SetItemOrientation (item whichItem, real yaw, real pitch, real roll)"


SetItemYaw=SetItemYaw
SetItemYaw="SetItemYaw(","item ",,~whichItem,", ","real ",,~yaw,")"
SetItemYawHint="[UjAPI]  nothing SetItemYaw (item whichItem, real yaw)"


SetItemPitch=SetItemPitch
SetItemPitch="SetItemPitch(","item ",,~whichItem,", ","real ",,~pitch,")"
SetItemPitchHint="[UjAPI]  nothing SetItemPitch (item whichItem, real pitch)"


SetItemRoll=SetItemRoll
SetItemRoll="SetItemRoll(","item ",,~whichItem,", ","real ",,~roll,")"
SetItemRollHint="[UjAPI]  nothing SetItemRoll (item whichItem, real roll)"


SetItemModel=SetItemModel
SetItemModel="SetItemModel(","item ",,~whichItem,", ","string ",,~modelFile,")"
SetItemModelHint="[UjAPI]  nothing SetItemModel (item whichItem, string modelFile)"


SetItemModelEx=SetItemModelEx
SetItemModelEx="SetItemModelEx(","item ",,~whichItem,", ","string ",,~modelFile,", ","integer ",,~playerColourId,")"
SetItemModelExHint="[UjAPI]  nothing SetItemModelEx (item whichItem, string modelFile, integer playerColourId)"


SetItemMaterialTexture=SetItemMaterialTexture
SetItemMaterialTexture="SetItemMaterialTexture(","item ",,~whichItem,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetItemMaterialTextureHint="[UjAPI]  nothing SetItemMaterialTexture (item whichItem, string textureName, integer materialId, integer textureIndex)"


SetItemTexture=SetItemTexture
SetItemTexture="SetItemTexture(","item ",,~whichItem,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetItemTextureHint="[UjAPI]  nothing SetItemTexture (item whichItem, string textureName, integer textureIndex)"


SetItemReplaceableTexture=SetItemReplaceableTexture
SetItemReplaceableTexture="SetItemReplaceableTexture(","item ",,~whichItem,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetItemReplaceableTextureHint="[UjAPI]  nothing SetItemReplaceableTexture (item whichItem, string textureName, integer textureIndex)"


SetItemAnimationWithRarityByIndex=SetItemAnimationWithRarityByIndex
SetItemAnimationWithRarityByIndex="SetItemAnimationWithRarityByIndex(","item ",,~whichItem,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetItemAnimationWithRarityByIndexHint="[UjAPI]  nothing SetItemAnimationWithRarityByIndex (item whichItem, integer animIndex, raritycontrol rarity)"


SetItemAnimationWithRarity=SetItemAnimationWithRarity
SetItemAnimationWithRarity="SetItemAnimationWithRarity(","item ",,~whichItem,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetItemAnimationWithRarityHint="[UjAPI]  nothing SetItemAnimationWithRarity (item whichItem, string animationName, raritycontrol rarity)"


SetItemAnimationByIndex=SetItemAnimationByIndex
SetItemAnimationByIndex="SetItemAnimationByIndex(","item ",,~whichItem,", ","integer ",,~animIndex,")"
SetItemAnimationByIndexHint="[UjAPI]  nothing SetItemAnimationByIndex (item whichItem, integer animIndex)"


SetItemAnimation=SetItemAnimation
SetItemAnimation="SetItemAnimation(","item ",,~whichItem,", ","string ",,~animationName,")"
SetItemAnimationHint="[UjAPI]  nothing SetItemAnimation (item whichItem, string animationName)"


QueueItemAnimationByIndex=QueueItemAnimationByIndex
QueueItemAnimationByIndex="QueueItemAnimationByIndex(","item ",,~whichItem,", ","integer ",,~animIndex,")"
QueueItemAnimationByIndexHint="[UjAPI]  nothing QueueItemAnimationByIndex (item whichItem, integer animIndex)"


QueueItemAnimation=QueueItemAnimation
QueueItemAnimation="QueueItemAnimation(","item ",,~whichItem,", ","string ",,~animationName,")"
QueueItemAnimationHint="[UjAPI]  nothing QueueItemAnimation (item whichItem, string animationName)"


SetItemAnimationOffsetPercent=SetItemAnimationOffsetPercent
SetItemAnimationOffsetPercent="SetItemAnimationOffsetPercent(","item ",,~whichItem,", ","real ",,~percent,")"
SetItemAnimationOffsetPercentHint="[UjAPI]  nothing SetItemAnimationOffsetPercent (item whichItem, real percent)"


EnumItemsInRange=EnumItemsInRange
EnumItemsInRange="EnumItemsInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumItemsInRangeHint="[UjAPI]  nothing EnumItemsInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(","integer ",,~unitTypeId,", ","unitintegerfield ",,~whichField,", ","integer ",,~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI]  boolean SetUnitBaseIntegerFieldById (integer unitTypeId, unitintegerfield whichField, integer value)"


SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(","integer ",,~unitTypeId,", ","unitbooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI]  boolean SetUnitBaseBooleanFieldById (integer unitTypeId, unitbooleanfield whichField, boolean value)"


SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(","integer ",,~unitTypeId,", ","unitrealfield ",,~whichField,", ","real ",,~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI]  boolean SetUnitBaseRealFieldById (integer unitTypeId, unitrealfield whichField, real value)"


SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(","integer ",,~unitTypeId,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponIntegerFieldById (integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value)"


SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(","integer ",,~unitTypeId,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponBooleanFieldById (integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value)"


SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(","integer ",,~unitTypeId,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponRealFieldById (integer unitTypeId, unitweaponrealfield whichField, integer index, real value)"


SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(","unit ",,~whichUnit,", ","unitintegerfield ",,~whichField,", ","integer ",,~value,")"
SetUnitIntegerFieldHint="[UjAPI]  boolean SetUnitIntegerField (unit whichUnit, unitintegerfield whichField, integer value)"


SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(","unit ",,~whichUnit,", ","unitbooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetUnitBooleanFieldHint="[UjAPI]  boolean SetUnitBooleanField (unit whichUnit, unitbooleanfield whichField, boolean value)"


SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(","unit ",,~whichUnit,", ","unitrealfield ",,~whichField,", ","real ",,~value,")"
SetUnitRealFieldHint="[UjAPI]  boolean SetUnitRealField (unit whichUnit, unitrealfield whichField, real value)"


SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(","unit ",,~whichUnit,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI]  boolean SetUnitWeaponIntegerField (unit whichUnit, unitweaponintegerfield whichField, integer index, integer value)"


SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(","unit ",,~whichUnit,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI]  boolean SetUnitWeaponBooleanField (unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value)"


SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(","unit ",,~whichUnit,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetUnitWeaponRealFieldHint="[UjAPI]  boolean SetUnitWeaponRealField (unit whichUnit, unitweaponrealfield whichField, integer index, real value)"


SetUnitPositionEx=SetUnitPositionEx
SetUnitPositionEx="SetUnitPositionEx(","unit ",,~whichUnit,", ","boolean ",,~breakOrder,", ","boolean ",,~checkPathing,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetUnitPositionExHint="[UjAPI]  nothing SetUnitPositionEx (unit whichUnit, boolean breakOrder, boolean checkPathing, real x, real y, real z)"


SetUnitPositionWithZ=SetUnitPositionWithZ
SetUnitPositionWithZ="SetUnitPositionWithZ(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetUnitPositionWithZHint="[UjAPI]  nothing SetUnitPositionWithZ (unit whichUnit, real x, real y, real z)"


SetUnitZ=SetUnitZ
SetUnitZ="SetUnitZ(","unit ",,~whichUnit,", ","real ",,~z,")"
SetUnitZHint="[UjAPI]  nothing SetUnitZ (unit whichUnit, real z)"


ResetUnitZ=ResetUnitZ
ResetUnitZ="ResetUnitZ(","unit ",,~whichUnit,")"
ResetUnitZHint="[UjAPI]  nothing ResetUnitZ (unit whichUnit)"


SetUnitHeight=SetUnitHeight
SetUnitHeight="SetUnitHeight(","unit ",,~whichUnit,", ","real ",,~height,")"
SetUnitHeightHint="[UjAPI]  nothing SetUnitHeight (unit whichUnit, real height)"


SetUnitTypeId=SetUnitTypeId
SetUnitTypeId="SetUnitTypeId(","unit ",,~whichUnit,", ","integer ",,~newId,")"
SetUnitTypeIdHint="[UjAPI]  nothing SetUnitTypeId (unit whichUnit, integer newId)"


UnitEnableInventory=UnitEnableInventory
UnitEnableInventory="UnitEnableInventory(","unit ",,~whichUnit,", ","boolean ",,~enable,", ","boolean ",,~ignoreErrorMessages,")"
UnitEnableInventoryHint="[UjAPI]  nothing UnitEnableInventory (unit whichUnit, boolean enable, boolean ignoreErrorMessages)"


UnitEnableMovement=UnitEnableMovement
UnitEnableMovement="UnitEnableMovement(","unit ",,~whichUnit,", ","boolean ",,~enable,", ","boolean ",,~fullDisable,")"
UnitEnableMovementHint="[UjAPI]  nothing UnitEnableMovement (unit whichUnit, boolean enable, boolean fullDisable)"


UnitEnableAttack=UnitEnableAttack
UnitEnableAttack="UnitEnableAttack(","unit ",,~whichUnit,", ","boolean ",,~enable,", ","boolean ",,~extraFlag,")"
UnitEnableAttackHint="[UjAPI]  nothing UnitEnableAttack (unit whichUnit, boolean enable, boolean extraFlag)"


RedrawUnit=RedrawUnit
RedrawUnit="RedrawUnit(","unit ",,~whichUnit,")"
RedrawUnitHint="[UjAPI]  nothing RedrawUnit (unit whichUnit)"


UpdateUnitInfoBar=UpdateUnitInfoBar
UpdateUnitInfoBar="UpdateUnitInfoBar(","unit ",,~whichUnit,")"
UpdateUnitInfoBarHint="[UjAPI]  nothing UpdateUnitInfoBar (unit whichUnit)"


UnitUnapplyUpgrades=UnitUnapplyUpgrades
UnitUnapplyUpgrades="UnitUnapplyUpgrades(","unit ",,~whichUnit,")"
UnitUnapplyUpgradesHint="[UjAPI]  nothing UnitUnapplyUpgrades (unit whichUnit)"


UnitApplyUpgrades=UnitApplyUpgrades
UnitApplyUpgrades="UnitApplyUpgrades(","unit ",,~whichUnit,")"
UnitApplyUpgradesHint="[UjAPI]  nothing UnitApplyUpgrades (unit whichUnit)"


UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI]  boolean UnitAddAbilityEx (unit whichUnit, integer abilCode, boolean checkForDuplicates)"


UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI]  boolean UnitRemoveAbilityEx (unit whichUnit, integer abilCode, boolean removeDuplicates)"


CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(","unit ",,~whichUnit,", ","boolean ",,~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI]  integer CountUnitAbilities (unit whichUnit, boolean alsoCountBuffs)"


ShowUnitAbility=ShowUnitAbility
ShowUnitAbility="ShowUnitAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~show,")"
ShowUnitAbilityHint="[UjAPI]  nothing ShowUnitAbility (unit whichUnit, integer abilCode, boolean show)"


ShowUnitAbilityEx=ShowUnitAbilityEx
ShowUnitAbilityEx="ShowUnitAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~show,", ","boolean ",,~checkDuplicates,")"
ShowUnitAbilityExHint="[UjAPI]  nothing ShowUnitAbilityEx (unit whichUnit, integer abilCode, boolean show, boolean checkDuplicates)"


DisableUnitAbility=DisableUnitAbility
DisableUnitAbility="DisableUnitAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~hide,", ","boolean ",,~disable,")"
DisableUnitAbilityHint="[UjAPI]  nothing DisableUnitAbility (unit whichUnit, integer abilCode, boolean hide, boolean disable)"


DisableUnitAbilityEx=DisableUnitAbilityEx
DisableUnitAbilityEx="DisableUnitAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~hide,", ","boolean ",,~disable,", ","boolean ",,~checkDuplicates,")"
DisableUnitAbilityExHint="[UjAPI]  nothing DisableUnitAbilityEx (unit whichUnit, integer abilCode, boolean hide, boolean disable, boolean checkDuplicates)"


EnableUnitAbility=EnableUnitAbility
EnableUnitAbility="EnableUnitAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~show,", ","boolean ",,~enable,")"
EnableUnitAbilityHint="[UjAPI]  nothing EnableUnitAbility (unit whichUnit, integer abilCode, boolean show, boolean enable)"


EnableUnitAbilityEx=EnableUnitAbilityEx
EnableUnitAbilityEx="EnableUnitAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~show,", ","boolean ",,~enable,", ","boolean ",,~checkDuplicates,")"
EnableUnitAbilityExHint="[UjAPI]  nothing EnableUnitAbilityEx (unit whichUnit, integer abilCode, boolean show, boolean enable, boolean checkDuplicates)"


UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(","unit ",,~whichUnit,", ","buff ",,~whichBuff,")"
UnitAddBuffHint="[UjAPI]  boolean UnitAddBuff (unit whichUnit, buff whichBuff)"


UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(","unit ",,~whichUnit,", ","buff ",,~whichBuff,", ","boolean ",,~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI]  boolean UnitAddBuffEx (unit whichUnit, buff whichBuff, boolean checkForDuplicates)"


UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(","unit ",,~whichUnit,", ","integer ",,~buffId,")"
UnitAddBuffByIdHint="[UjAPI]  boolean UnitAddBuffById (unit whichUnit, integer buffId)"


UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(","unit ",,~whichUnit,", ","integer ",,~buffId,", ","boolean ",,~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI]  boolean UnitAddBuffByIdEx (unit whichUnit, integer buffId, boolean checkForDuplicates)"


CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(","unit ",,~whichUnit,")"
CountUnitBuffsHint="[UjAPI]  integer CountUnitBuffs (unit whichUnit)"


UnitCancelTimedLife=UnitCancelTimedLife
UnitCancelTimedLife="UnitCancelTimedLife(","unit ",,~whichUnit,")"
UnitCancelTimedLifeHint="[UjAPI]  nothing UnitCancelTimedLife (unit whichUnit)"


SetUnitRemainingTimedLife=SetUnitRemainingTimedLife
SetUnitRemainingTimedLife="SetUnitRemainingTimedLife(","unit ",,~whichUnit,", ","real ",,~duration,")"
SetUnitRemainingTimedLifeHint="[UjAPI]  nothing SetUnitRemainingTimedLife (unit whichUnit, real duration)"


SetUnitGhosted=SetUnitGhosted
SetUnitGhosted="SetUnitGhosted(","unit ",,~whichUnit,", ","boolean ",,~state,", ","real ",,~transitionTime,")"
SetUnitGhostedHint="[UjAPI]  nothing SetUnitGhosted (unit whichUnit, boolean state, real transitionTime)"


SetUnitSelectable=SetUnitSelectable
SetUnitSelectable="SetUnitSelectable(","unit ",,~whichUnit,", ","boolean ",,~selectable,")"
SetUnitSelectableHint="[UjAPI]  nothing SetUnitSelectable (unit whichUnit, boolean selectable)"


SetUnitTargetable=SetUnitTargetable
SetUnitTargetable="SetUnitTargetable(","unit ",,~whichUnit,", ","boolean ",,~targetable,")"
SetUnitTargetableHint="[UjAPI]  nothing SetUnitTargetable (unit whichUnit, boolean targetable)"


SetUnitTruesightImmuneState=SetUnitTruesightImmuneState
SetUnitTruesightImmuneState="SetUnitTruesightImmuneState(","unit ",,~whichUnit,", ","boolean ",,~state,")"
SetUnitTruesightImmuneStateHint="[UjAPI]  nothing SetUnitTruesightImmuneState (unit whichUnit, boolean state)"


SetUnitVisibleByPlayer=SetUnitVisibleByPlayer
SetUnitVisibleByPlayer="SetUnitVisibleByPlayer(","unit ",,~whichUnit,", ","player ",,~whichPlayer,", ","boolean ",,~flag,")"
SetUnitVisibleByPlayerHint="[UjAPI]  nothing SetUnitVisibleByPlayer (unit whichUnit, player whichPlayer, boolean flag)"


SetUnitDetectableByPlayer=SetUnitDetectableByPlayer
SetUnitDetectableByPlayer="SetUnitDetectableByPlayer(","unit ",,~whichUnit,", ","player ",,~whichPlayer,", ","boolean ",,~flag,")"
SetUnitDetectableByPlayerHint="[UjAPI]  nothing SetUnitDetectableByPlayer (unit whichUnit, player whichPlayer, boolean flag)"


SetUnitFlyHeightEnabled=SetUnitFlyHeightEnabled
SetUnitFlyHeightEnabled="SetUnitFlyHeightEnabled(","unit ",,~whichUnit,", ","boolean ",,~enable,")"
SetUnitFlyHeightEnabledHint="[UjAPI]  nothing SetUnitFlyHeightEnabled (unit whichUnit, boolean enable)"


SetUnitResourceCurrent=SetUnitResourceCurrent
SetUnitResourceCurrent="SetUnitResourceCurrent(","unit ",,~whichUnit,", ","integer ",,~amount,")"
SetUnitResourceCurrentHint="[UjAPI]  nothing SetUnitResourceCurrent (unit whichUnit, integer amount)"


SetUnitResourceCapacity=SetUnitResourceCapacity
SetUnitResourceCapacity="SetUnitResourceCapacity(","unit ",,~whichUnit,", ","integer ",,~resourceType,", ","integer ",,~amount,")"
SetUnitResourceCapacityHint="[UjAPI]  nothing SetUnitResourceCapacity (unit whichUnit, integer resourceType, integer amount)"


SetUnitResourcePerGather=SetUnitResourcePerGather
SetUnitResourcePerGather="SetUnitResourcePerGather(","unit ",,~whichUnit,", ","integer ",,~resourceType,", ","integer ",,~amount,")"
SetUnitResourcePerGatherHint="[UjAPI]  nothing SetUnitResourcePerGather (unit whichUnit, integer resourceType, integer amount)"


SetUnitResourceGatherInterval=SetUnitResourceGatherInterval
SetUnitResourceGatherInterval="SetUnitResourceGatherInterval(","unit ",,~whichUnit,", ","real ",,~interval,")"
SetUnitResourceGatherIntervalHint="[UjAPI]  nothing SetUnitResourceGatherInterval (unit whichUnit, real interval)"


SetUnitCurrentSight=SetUnitCurrentSight
SetUnitCurrentSight="SetUnitCurrentSight(","unit ",,~whichUnit,", ","real ",,~realValue,")"
SetUnitCurrentSightHint="[UjAPI]  nothing SetUnitCurrentSight (unit whichUnit, real realValue)"


SetUnitAttackRemainingCooldown=SetUnitAttackRemainingCooldown
SetUnitAttackRemainingCooldown="SetUnitAttackRemainingCooldown(","unit ",,~whichUnit,", ","real ",,~time,")"
SetUnitAttackRemainingCooldownHint="[UjAPI]  nothing SetUnitAttackRemainingCooldown (unit whichUnit, real time)"


SetUnitAttackRemainingDamagePoint=SetUnitAttackRemainingDamagePoint
SetUnitAttackRemainingDamagePoint="SetUnitAttackRemainingDamagePoint(","unit ",,~whichUnit,", ","real ",,~time,")"
SetUnitAttackRemainingDamagePointHint="[UjAPI]  nothing SetUnitAttackRemainingDamagePoint (unit whichUnit, real time)"


SetUnitAttackRemainingBackswing=SetUnitAttackRemainingBackswing
SetUnitAttackRemainingBackswing="SetUnitAttackRemainingBackswing(","unit ",,~whichUnit,", ","real ",,~time,")"
SetUnitAttackRemainingBackswingHint="[UjAPI]  nothing SetUnitAttackRemainingBackswing (unit whichUnit, real time)"


UnitAttackTarget=UnitAttackTarget
UnitAttackTarget="UnitAttackTarget(","unit ",,~whichUnit,", ","widget ",,~whichTarget,", ","boolean ",,~ignoreDistance,", ","boolean ",,~isInstant,")"
UnitAttackTargetHint="[UjAPI]  nothing UnitAttackTarget (unit whichUnit, widget whichTarget, boolean ignoreDistance, boolean isInstant)"


UnitAttackTargetPointZ=UnitAttackTargetPointZ
UnitAttackTargetPointZ="UnitAttackTargetPointZ(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,", ","boolean ",,~ignoreDistance,", ","boolean ",,~isInstant,")"
UnitAttackTargetPointZHint="[UjAPI]  nothing UnitAttackTargetPointZ (unit whichUnit, real x, real y, real z, boolean ignoreDistance, boolean isInstant)"


UnitAttackTargetPoint=UnitAttackTargetPoint
UnitAttackTargetPoint="UnitAttackTargetPoint(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,", ","boolean ",,~ignoreDistance,", ","boolean ",,~isInstant,")"
UnitAttackTargetPointHint="[UjAPI]  nothing UnitAttackTargetPoint (unit whichUnit, real x, real y, boolean ignoreDistance, boolean isInstant)"


UnitAttackTargetPointLoc=UnitAttackTargetPointLoc
UnitAttackTargetPointLoc="UnitAttackTargetPointLoc(","unit ",,~whichUnit,", ","location ",,~whichLocation,", ","boolean ",,~ignoreDistance,", ","boolean ",,~isInstant,")"
UnitAttackTargetPointLocHint="[UjAPI]  nothing UnitAttackTargetPointLoc (unit whichUnit, location whichLocation, boolean ignoreDistance, boolean isInstant)"


UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(","unit ",,~whichUnit,")"
UnitAttackCancelHint="[UjAPI]  boolean UnitAttackCancel (unit whichUnit)"


UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(","unit ",,~whichUnit,")"
UnitAttackRestartHint="[UjAPI]  boolean UnitAttackRestart (unit whichUnit)"


UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(","unit ",,~whichUnit,")"
UnitAttackFinishHint="[UjAPI]  boolean UnitAttackFinish (unit whichUnit)"


SetUnitAttackTypeByIndex=SetUnitAttackTypeByIndex
SetUnitAttackTypeByIndex="SetUnitAttackTypeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","attacktype ",,~whichAttackType,")"
SetUnitAttackTypeByIndexHint="[UjAPI]  nothing SetUnitAttackTypeByIndex (unit whichUnit, integer attackIndex, attacktype whichAttackType)"


SetUnitWeaponTypeByIndex=SetUnitWeaponTypeByIndex
SetUnitWeaponTypeByIndex="SetUnitWeaponTypeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","weapontype ",,~whichWeaponType,")"
SetUnitWeaponTypeByIndexHint="[UjAPI]  nothing SetUnitWeaponTypeByIndex (unit whichUnit, integer attackIndex, weapontype whichWeaponType)"


SetUnitWeaponSoundByIndex=SetUnitWeaponSoundByIndex
SetUnitWeaponSoundByIndex="SetUnitWeaponSoundByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","integer ",,~weaponSound,")"
SetUnitWeaponSoundByIndexHint="[UjAPI]  nothing SetUnitWeaponSoundByIndex (unit whichUnit, integer attackIndex, integer weaponSound)"


SetUnitBaseDamageByIndex=SetUnitBaseDamageByIndex
SetUnitBaseDamageByIndex="SetUnitBaseDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","integer ",,~damage,")"
SetUnitBaseDamageByIndexHint="[UjAPI]  nothing SetUnitBaseDamageByIndex (unit whichUnit, integer attackIndex, integer damage)"


SetUnitBonusDamageByIndex=SetUnitBonusDamageByIndex
SetUnitBonusDamageByIndex="SetUnitBonusDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","integer ",,~bonusDamage,")"
SetUnitBonusDamageByIndexHint="[UjAPI]  nothing SetUnitBonusDamageByIndex (unit whichUnit, integer attackIndex, integer bonusDamage)"


SetUnitDamageDicesSideByIndex=SetUnitDamageDicesSideByIndex
SetUnitDamageDicesSideByIndex="SetUnitDamageDicesSideByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","integer ",,~dicesSides,")"
SetUnitDamageDicesSideByIndexHint="[UjAPI]  nothing SetUnitDamageDicesSideByIndex (unit whichUnit, integer attackIndex, integer dicesSides)"


SetUnitDamageDicesByIndex=SetUnitDamageDicesByIndex
SetUnitDamageDicesByIndex="SetUnitDamageDicesByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","integer ",,~dices,")"
SetUnitDamageDicesByIndexHint="[UjAPI]  nothing SetUnitDamageDicesByIndex (unit whichUnit, integer attackIndex, integer dices)"


SetUnitAttackRangeByIndex=SetUnitAttackRangeByIndex
SetUnitAttackRangeByIndex="SetUnitAttackRangeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","real ",,~range,")"
SetUnitAttackRangeByIndexHint="[UjAPI]  nothing SetUnitAttackRangeByIndex (unit whichUnit, integer attackIndex, real range)"


SetUnitAttackSpeed=SetUnitAttackSpeed
SetUnitAttackSpeed="SetUnitAttackSpeed(","unit ",,~whichUnit,", ","real ",,~attackSpeed,")"
SetUnitAttackSpeedHint="[UjAPI]  nothing SetUnitAttackSpeed (unit whichUnit, real attackSpeed)"


SetUnitAttackCooldownByIndex=SetUnitAttackCooldownByIndex
SetUnitAttackCooldownByIndex="SetUnitAttackCooldownByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","real ",,~attackCooldown,")"
SetUnitAttackCooldownByIndexHint="[UjAPI]  nothing SetUnitAttackCooldownByIndex (unit whichUnit, integer attackIndex, real attackCooldown)"


SetUnitBackswingPointByIndex=SetUnitBackswingPointByIndex
SetUnitBackswingPointByIndex="SetUnitBackswingPointByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","real ",,~backswing,")"
SetUnitBackswingPointByIndexHint="[UjAPI]  nothing SetUnitBackswingPointByIndex (unit whichUnit, integer attackIndex, real backswing)"


SetUnitDamagePointByIndex=SetUnitDamagePointByIndex
SetUnitDamagePointByIndex="SetUnitDamagePointByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,", ","real ",,~damagePoint,")"
SetUnitDamagePointByIndexHint="[UjAPI]  nothing SetUnitDamagePointByIndex (unit whichUnit, integer attackIndex, real damagePoint)"


SetUnitArmourType=SetUnitArmourType
SetUnitArmourType="SetUnitArmourType(","unit ",,~whichUnit,", ","defensetype ",,~whichArmour,")"
SetUnitArmourTypeHint="[UjAPI]  nothing SetUnitArmourType (unit whichUnit, defensetype whichArmour)"


SetUnitArmour=SetUnitArmour
SetUnitArmour="SetUnitArmour(","unit ",,~whichUnit,", ","real ",,~armour,")"
SetUnitArmourHint="[UjAPI]  nothing SetUnitArmour (unit whichUnit, real armour)"


SetUnitBaseMoveSpeed=SetUnitBaseMoveSpeed
SetUnitBaseMoveSpeed="SetUnitBaseMoveSpeed(","unit ",,~whichUnit,", ","real ",,~baseMoveSpeed,")"
SetUnitBaseMoveSpeedHint="[UjAPI]  nothing SetUnitBaseMoveSpeed (unit whichUnit, real baseMoveSpeed)"


SetUnitBonusMoveSpeedPercent=SetUnitBonusMoveSpeedPercent
SetUnitBonusMoveSpeedPercent="SetUnitBonusMoveSpeedPercent(","unit ",,~whichUnit,", ","real ",,~bonusMoveSpeedPercent,")"
SetUnitBonusMoveSpeedPercentHint="[UjAPI]  nothing SetUnitBonusMoveSpeedPercent (unit whichUnit, real bonusMoveSpeedPercent)"


SetUnitPlayerColour=SetUnitPlayerColour
SetUnitPlayerColour="SetUnitPlayerColour(","unit ",,~whichUnit,", ","playercolor ",,~color,")"
SetUnitPlayerColourHint="[UjAPI]  nothing SetUnitPlayerColour (unit whichUnit, playercolor color)"


ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,")"
ReviveUnitHint="[UjAPI]  boolean ReviveUnit (unit whichUnit, real x, real y)"


ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(","unit ",,~whichUnit,", ","location ",,~loc,")"
ReviveUnitLocHint="[UjAPI]  boolean ReviveUnitLoc (unit whichUnit, location loc)"


SetUnitCurrentLife=SetUnitCurrentLife
SetUnitCurrentLife="SetUnitCurrentLife(","unit ",,~whichUnit,", ","real ",,~life,")"
SetUnitCurrentLifeHint="[UjAPI]  nothing SetUnitCurrentLife (unit whichUnit, real life)"


SetUnitMaxLife=SetUnitMaxLife
SetUnitMaxLife="SetUnitMaxLife(","unit ",,~whichUnit,", ","real ",,~maxLife,")"
SetUnitMaxLifeHint="[UjAPI]  nothing SetUnitMaxLife (unit whichUnit, real maxLife)"


SetUnitLifeRegen=SetUnitLifeRegen
SetUnitLifeRegen="SetUnitLifeRegen(","unit ",,~whichUnit,", ","real ",,~lifeRegen,")"
SetUnitLifeRegenHint="[UjAPI]  nothing SetUnitLifeRegen (unit whichUnit, real lifeRegen)"


SetUnitCurrentMana=SetUnitCurrentMana
SetUnitCurrentMana="SetUnitCurrentMana(","unit ",,~whichUnit,", ","real ",,~mana,")"
SetUnitCurrentManaHint="[UjAPI]  nothing SetUnitCurrentMana (unit whichUnit, real mana)"


SetUnitMaxMana=SetUnitMaxMana
SetUnitMaxMana="SetUnitMaxMana(","unit ",,~whichUnit,", ","real ",,~maxMana,")"
SetUnitMaxManaHint="[UjAPI]  nothing SetUnitMaxMana (unit whichUnit, real maxMana)"


SetUnitManaRegen=SetUnitManaRegen
SetUnitManaRegen="SetUnitManaRegen(","unit ",,~whichUnit,", ","real ",,~manaRegen,")"
SetUnitManaRegenHint="[UjAPI]  nothing SetUnitManaRegen (unit whichUnit, real manaRegen)"


SetHeroPrimaryAttribute=SetHeroPrimaryAttribute
SetHeroPrimaryAttribute="SetHeroPrimaryAttribute(","unit ",,~whichUnit,", ","heroattribute ",,~whichHeroAttribute,")"
SetHeroPrimaryAttributeHint="[UjAPI]  nothing SetHeroPrimaryAttribute (unit whichUnit, heroattribute whichHeroAttribute)"


SetUnitModel=SetUnitModel
SetUnitModel="SetUnitModel(","unit ",,~whichUnit,", ","string ",,~modelName,")"
SetUnitModelHint="[UjAPI]  nothing SetUnitModel (unit whichUnit, string modelName)"


SetUnitModelEx=SetUnitModelEx
SetUnitModelEx="SetUnitModelEx(","unit ",,~whichUnit,", ","string ",,~modelName,", ","integer ",,~playercolourId,")"
SetUnitModelExHint="[UjAPI]  nothing SetUnitModelEx (unit whichUnit, string modelName, integer playercolourId)"


SetUnitMaterialTexture=SetUnitMaterialTexture
SetUnitMaterialTexture="SetUnitMaterialTexture(","unit ",,~whichUnit,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetUnitMaterialTextureHint="[UjAPI]  nothing SetUnitMaterialTexture (unit whichUnit, string textureName, integer materialId, integer textureIndex)"


SetUnitTexture=SetUnitTexture
SetUnitTexture="SetUnitTexture(","unit ",,~whichUnit,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetUnitTextureHint="[UjAPI]  nothing SetUnitTexture (unit whichUnit, string textureName, integer textureIndex)"


SetUnitReplaceableTexture=SetUnitReplaceableTexture
SetUnitReplaceableTexture="SetUnitReplaceableTexture(","unit ",,~whichUnit,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetUnitReplaceableTextureHint="[UjAPI]  nothing SetUnitReplaceableTexture (unit whichUnit, string textureName, integer textureIndex)"


SetUnitCollisionType=SetUnitCollisionType
SetUnitCollisionType="SetUnitCollisionType(","unit ",,~whichUnit,", ","collisiontype ",,~collisionType,")"
SetUnitCollisionTypeHint="[UjAPI]  nothing SetUnitCollisionType (unit whichUnit, collisiontype collisionType)"


SetUnitPathingAIType=SetUnitPathingAIType
SetUnitPathingAIType="SetUnitPathingAIType(","unit ",,~whichUnit,", ","pathingaitype ",,~pathingAIType,")"
SetUnitPathingAITypeHint="[UjAPI]  nothing SetUnitPathingAIType (unit whichUnit, pathingaitype pathingAIType)"


SetUnitPathingType=SetUnitPathingType
SetUnitPathingType="SetUnitPathingType(","unit ",,~whichUnit,", ","pathingtype ",,~pathingType,")"
SetUnitPathingTypeHint="[UjAPI]  nothing SetUnitPathingType (unit whichUnit, pathingtype pathingType)"


SetUnitItemSlots=SetUnitItemSlots
SetUnitItemSlots="SetUnitItemSlots(","unit ",,~whichUnit,", ","integer ",,~itemSlots,")"
SetUnitItemSlotsHint="[UjAPI]  nothing SetUnitItemSlots (unit whichUnit, integer itemSlots)"


SetUnitFacingEx=SetUnitFacingEx
SetUnitFacingEx="SetUnitFacingEx(","unit ",,~whichUnit,", ","real ",,~facing,", ","boolean ",,~isInstant,")"
SetUnitFacingExHint="[UjAPI]  nothing SetUnitFacingEx (unit whichUnit, real facing, boolean isInstant)"


SetUnitFacingInstant=SetUnitFacingInstant
SetUnitFacingInstant="SetUnitFacingInstant(","unit ",,~whichUnit,", ","real ",,~facing,")"
SetUnitFacingInstantHint="[UjAPI]  nothing SetUnitFacingInstant (unit whichUnit, real facing)"


UnitApplySilence=UnitApplySilence
UnitApplySilence="UnitApplySilence(","unit ",,~whichUnit,", ","boolean ",,~state,")"
UnitApplySilenceHint="[UjAPI]  nothing UnitApplySilence (unit whichUnit, boolean state)"


UnitDisableAbilities=UnitDisableAbilities
UnitDisableAbilities="UnitDisableAbilities(","unit ",,~whichUnit,", ","boolean ",,~state,")"
UnitDisableAbilitiesHint="[UjAPI]  nothing UnitDisableAbilities (unit whichUnit, boolean state)"


PauseUnitEx=PauseUnitEx
PauseUnitEx="PauseUnitEx(","unit ",,~whichUnit,", ","boolean ",,~pause,")"
PauseUnitExHint="[UjAPI]  nothing PauseUnitEx (unit whichUnit, boolean pause)"


SetUnitStunned=SetUnitStunned
SetUnitStunned="SetUnitStunned(","unit ",,~whichUnit,", ","boolean ",,~state,")"
SetUnitStunnedHint="[UjAPI]  nothing SetUnitStunned (unit whichUnit, boolean state)"


SetUnitStunCounter=SetUnitStunCounter
SetUnitStunCounter="SetUnitStunCounter(","unit ",,~whichUnit,", ","integer ",,~stunCounter,")"
SetUnitStunCounterHint="[UjAPI]  nothing SetUnitStunCounter (unit whichUnit, integer stunCounter)"


SetUnitKiller=SetUnitKiller
SetUnitKiller="SetUnitKiller(","unit ",,~whichUnit,", ","unit ",,~killer,")"
SetUnitKillerHint="[UjAPI]  nothing SetUnitKiller (unit whichUnit, unit killer)"


KillUnitEx=KillUnitEx
KillUnitEx="KillUnitEx(","unit ",,~whichUnit,", ","unit ",,~killer,")"
KillUnitExHint="[UjAPI]  nothing KillUnitEx (unit whichUnit, unit killer)"


SetUnitAnimationOffsetPercent=SetUnitAnimationOffsetPercent
SetUnitAnimationOffsetPercent="SetUnitAnimationOffsetPercent(","unit ",,~whichUnit,", ","real ",,~percent,")"
SetUnitAnimationOffsetPercentHint="[UjAPI]  nothing SetUnitAnimationOffsetPercent (unit whichUnit, real percent)"


UnitEnableAutoOrientation=UnitEnableAutoOrientation
UnitEnableAutoOrientation="UnitEnableAutoOrientation(","unit ",,~whichUnit,", ","boolean ",,~enable,")"
UnitEnableAutoOrientationHint="[UjAPI]  nothing UnitEnableAutoOrientation (unit whichUnit, boolean enable)"


SetUnitYaw=SetUnitYaw
SetUnitYaw="SetUnitYaw(","unit ",,~whichUnit,", ","real ",,~yaw,")"
SetUnitYawHint="[UjAPI]  nothing SetUnitYaw (unit whichUnit, real yaw)"


SetUnitPitch=SetUnitPitch
SetUnitPitch="SetUnitPitch(","unit ",,~whichUnit,", ","real ",,~pitch,")"
SetUnitPitchHint="[UjAPI]  nothing SetUnitPitch (unit whichUnit, real pitch)"


SetUnitRoll=SetUnitRoll
SetUnitRoll="SetUnitRoll(","unit ",,~whichUnit,", ","real ",,~roll,")"
SetUnitRollHint="[UjAPI]  nothing SetUnitRoll (unit whichUnit, real roll)"


SetUnitMatrixScale=SetUnitMatrixScale
SetUnitMatrixScale="SetUnitMatrixScale(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetUnitMatrixScaleHint="[UjAPI]  nothing SetUnitMatrixScale (unit whichUnit, real x, real y, real z)"


ResetUnitMatrix=ResetUnitMatrix
ResetUnitMatrix="ResetUnitMatrix(","unit ",,~whichUnit,")"
ResetUnitMatrixHint="[UjAPI]  nothing ResetUnitMatrix (unit whichUnit)"


SetUnitOrientationEx=SetUnitOrientationEx
SetUnitOrientationEx="SetUnitOrientationEx(","unit ",,~whichUnit,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetUnitOrientationExHint="[UjAPI]  nothing SetUnitOrientationEx (unit whichUnit, real yaw, real pitch, real roll, integer eulerOrder)"


SetUnitOrientation=SetUnitOrientation
SetUnitOrientation="SetUnitOrientation(","unit ",,~whichUnit,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetUnitOrientationHint="[UjAPI]  nothing SetUnitOrientation (unit whichUnit, real yaw, real pitch, real roll)"


CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
CreateBuildingHint="[UjAPI]  unit CreateBuilding (player whichPlayer, integer unitTypeId, real x, real y, real facing)"


CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,", ","boolean ",,~isAutoBuild,", ","boolean ",,~workersCanAssist,")"
CreateBuildingExHint="[UjAPI]  unit CreateBuildingEx (player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist)"


UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(","unit ",,~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI]  real UnitGetConstructionProgress (unit whichUnit)"


UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(","unit ",,~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI]  real UnitGetConstructionRemainingTime (unit whichUnit)"


UnitSetConstructionRemainingTime=UnitSetConstructionRemainingTime
UnitSetConstructionRemainingTime="UnitSetConstructionRemainingTime(","unit ",,~whichUnit,", ","real ",,~time,")"
UnitSetConstructionRemainingTimeHint="[UjAPI]  nothing UnitSetConstructionRemainingTime (unit whichUnit, real time)"


UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(","unit ",,~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI]  real UnitGetUpgradeProgress (unit whichUnit)"


UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(","unit ",,~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI]  real UnitGetUpgradeRemainingTime (unit whichUnit)"


UnitSetUpgradeRemainingTime=UnitSetUpgradeRemainingTime
UnitSetUpgradeRemainingTime="UnitSetUpgradeRemainingTime(","unit ",,~whichUnit,", ","real ",,~time,")"
UnitSetUpgradeRemainingTimeHint="[UjAPI]  nothing UnitSetUpgradeRemainingTime (unit whichUnit, real time)"


UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(","unit ",,~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI]  real UnitGetTrainingProgress (unit whichUnit)"


UnitSetTrainingProgress=UnitSetTrainingProgress
UnitSetTrainingProgress="UnitSetTrainingProgress(","unit ",,~whichUnit,", ","integer ",,~trainingPercentage,")"
UnitSetTrainingProgressHint="[UjAPI]  nothing UnitSetTrainingProgress (unit whichUnit, integer trainingPercentage)"


UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(","unit ",,~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI]  real UnitGetTrainingRemainingTime (unit whichUnit)"


UnitSetTrainingRemainingTime=UnitSetTrainingRemainingTime
UnitSetTrainingRemainingTime="UnitSetTrainingRemainingTime(","unit ",,~whichUnit,", ","real ",,~time,")"
UnitSetTrainingRemainingTimeHint="[UjAPI]  nothing UnitSetTrainingRemainingTime (unit whichUnit, real time)"


UnitCancelTrainingAt=UnitCancelTrainingAt
UnitCancelTrainingAt="UnitCancelTrainingAt(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitCancelTrainingAtHint="[UjAPI]  nothing UnitCancelTrainingAt (unit whichUnit, integer index)"


UnitSetTrainingTypeIdAt=UnitSetTrainingTypeIdAt
UnitSetTrainingTypeIdAt="UnitSetTrainingTypeIdAt(","unit ",,~whichUnit,", ","integer ",,~index,", ","integer ",,~typeId,")"
UnitSetTrainingTypeIdAtHint="[UjAPI]  nothing UnitSetTrainingTypeIdAt (unit whichUnit, integer index, integer typeId)"


UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(","unit ",,~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI]  real UnitGetResearchProgress (unit whichUnit)"


UnitSetResearchProgress=UnitSetResearchProgress
UnitSetResearchProgress="UnitSetResearchProgress(","unit ",,~whichUnit,", ","integer ",,~trainingPercentage,")"
UnitSetResearchProgressHint="[UjAPI]  nothing UnitSetResearchProgress (unit whichUnit, integer trainingPercentage)"


UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(","unit ",,~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI]  real UnitGetResearchRemainingTime (unit whichUnit)"


UnitSetResearchRemainingTime=UnitSetResearchRemainingTime
UnitSetResearchRemainingTime="UnitSetResearchRemainingTime(","unit ",,~whichUnit,", ","real ",,~time,")"
UnitSetResearchRemainingTimeHint="[UjAPI]  nothing UnitSetResearchRemainingTime (unit whichUnit, real time)"


UnitCancelResearchAt=UnitCancelResearchAt
UnitCancelResearchAt="UnitCancelResearchAt(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitCancelResearchAtHint="[UjAPI]  nothing UnitCancelResearchAt (unit whichUnit, integer index)"


UnitSetResearchTypeIdAt=UnitSetResearchTypeIdAt
UnitSetResearchTypeIdAt="UnitSetResearchTypeIdAt(","unit ",,~whichUnit,", ","integer ",,~index,", ","integer ",,~typeId,")"
UnitSetResearchTypeIdAtHint="[UjAPI]  nothing UnitSetResearchTypeIdAt (unit whichUnit, integer index, integer typeId)"


CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
CreateIllusionHint="[UjAPI]  unit CreateIllusion (player whichPlayer, integer unitTypeId, real x, real y, real facing)"


CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","location ",,~whichLocation,", ","real ",,~facing,")"
CreateIllusionAtLocHint="[UjAPI]  unit CreateIllusionAtLoc (player whichPlayer, integer unitTypeId, location whichLocation, real facing)"


CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(","unit ",,~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI]  unit CreateIllusionFromUnit (unit whichUnit)"


CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(","unit ",,~whichUnit,", ","boolean ",,~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI]  unit CreateIllusionFromUnitEx (unit whichUnit, boolean copyPassives)"


SetIllusionDamageDealt=SetIllusionDamageDealt
SetIllusionDamageDealt="SetIllusionDamageDealt(","unit ",,~whichUnit,", ","real ",,~multiplier,")"
SetIllusionDamageDealtHint="[UjAPI]  nothing SetIllusionDamageDealt (unit whichUnit, real multiplier)"


SetIllusionDamageReceived=SetIllusionDamageReceived
SetIllusionDamageReceived="SetIllusionDamageReceived(","unit ",,~whichUnit,", ","real ",,~multiplier,")"
SetIllusionDamageReceivedHint="[UjAPI]  nothing SetIllusionDamageReceived (unit whichUnit, real multiplier)"


QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(","unit ",,~whichUnit,", ","integer ",,~order,")"
QueueImmediateOrderByIdHint="[UjAPI]  boolean QueueImmediateOrderById (unit whichUnit, integer order)"


QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,")"
QueuePointOrderByIdHint="[UjAPI]  boolean QueuePointOrderById (unit whichUnit, integer order, real x, real y)"


QueueTargetOrderById=QueueTargetOrderById
QueueTargetOrderById="QueueTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,")"
QueueTargetOrderByIdHint="[UjAPI]  boolean QueueTargetOrderById (unit whichUnit, integer order, widget targetWidget)"


QueueInstantPointOrderById=QueueInstantPointOrderById
QueueInstantPointOrderById="QueueInstantPointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,", ","widget ",,~instantTargetWidget,")"
QueueInstantPointOrderByIdHint="[UjAPI]  boolean QueueInstantPointOrderById (unit whichUnit, integer order, real x, real y, widget instantTargetWidget)"


QueueInstantTargetOrderById=QueueInstantTargetOrderById
QueueInstantTargetOrderById="QueueInstantTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,", ","widget ",,~instantTargetWidget,")"
QueueInstantTargetOrderByIdHint="[UjAPI]  boolean QueueInstantTargetOrderById (unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget)"


QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(","unit ",,~whichPeon,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
QueueBuildOrderByIdHint="[UjAPI]  boolean QueueBuildOrderById (unit whichPeon, integer unitId, real x, real y)"


QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI]  boolean QueueNeutralImmediateOrderById (player forWhichPlayer, unit neutralStructure, integer unitId)"


QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI]  boolean QueueNeutralPointOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, real x, real y)"


QueueNeutralTargetOrderById=QueueNeutralTargetOrderById
QueueNeutralTargetOrderById="QueueNeutralTargetOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","widget ",,~target,")"
QueueNeutralTargetOrderByIdHint="[UjAPI]  boolean QueueNeutralTargetOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, widget target)"


UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitRemoveOrderByIndexHint="[UjAPI]  boolean UnitRemoveOrderByIndex (unit whichUnit, integer index)"


UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(","unit ",,~whichUnit,", ","integer ",,~orderId,", ","boolean ",,~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI]  boolean UnitRemoveOrderByOrderId (unit whichUnit, integer orderId, boolean eraseAllSimilar)"


UnitReverseOrders=UnitReverseOrders
UnitReverseOrders="UnitReverseOrders(","unit ",,~whichUnit,")"
UnitReverseOrdersHint="[UjAPI]  nothing UnitReverseOrders (unit whichUnit)"


UnitClearOrders=UnitClearOrders
UnitClearOrders="UnitClearOrders(","unit ",,~whichUnit,", ","boolean ",,~onlyQueued,")"
UnitClearOrdersHint="[UjAPI]  nothing UnitClearOrders (unit whichUnit, boolean onlyQueued)"


UnitForceStopOrder=UnitForceStopOrder
UnitForceStopOrder="UnitForceStopOrder(","unit ",,~whichUnit,", ","boolean ",,~clearQueue,")"
UnitForceStopOrderHint="[UjAPI]  nothing UnitForceStopOrder (unit whichUnit, boolean clearQueue)"


OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(","orderhandle ",,~whichOrder,")"
OrderGetNextHint="[UjAPI]  orderhandle OrderGetNext (orderhandle whichOrder)"


OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(","orderhandle ",,~whichOrder,")"
OrderGetTargetXHint="[UjAPI]  real OrderGetTargetX (orderhandle whichOrder)"


OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(","orderhandle ",,~whichOrder,")"
OrderGetTargetYHint="[UjAPI]  real OrderGetTargetY (orderhandle whichOrder)"


OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(","orderhandle ",,~whichOrder,")"
OrderGetTargetLocHint="[UjAPI]  location OrderGetTargetLoc (orderhandle whichOrder)"


OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(","orderhandle ",,~whichOrder,")"
OrderGetSourceXHint="[UjAPI]  real OrderGetSourceX (orderhandle whichOrder)"


OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(","orderhandle ",,~whichOrder,")"
OrderGetSourceYHint="[UjAPI]  real OrderGetSourceY (orderhandle whichOrder)"


OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(","orderhandle ",,~whichOrder,")"
OrderGetSourceLocHint="[UjAPI]  location OrderGetSourceLoc (orderhandle whichOrder)"


OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(","orderhandle ",,~whichOrder,")"
OrderGetTargetHint="[UjAPI]  widget OrderGetTarget (orderhandle whichOrder)"


OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(","orderhandle ",,~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI]  destructable OrderGetTargetDestructable (orderhandle whichOrder)"


OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(","orderhandle ",,~whichOrder,")"
OrderGetTargetItemHint="[UjAPI]  item OrderGetTargetItem (orderhandle whichOrder)"


OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(","orderhandle ",,~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI]  unit OrderGetTargetUnit (orderhandle whichOrder)"


CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(","integer ",,~projectileTypeId,")"
CreateProjectileHint="[UjAPI]  projectile CreateProjectile (integer projectileTypeId)"


CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(","unit ",,~owner,", ","integer ",,~projectileTypeId,", ","integer ",,~attackIndex,")"
CreateProjectileExHint="[UjAPI]  projectile CreateProjectileEx (unit owner, integer projectileTypeId, integer attackIndex)"


SetProjectileUnitData=SetProjectileUnitData
SetProjectileUnitData="SetProjectileUnitData(","projectile ",,~whichProjectile,", ","unit ",,~owner,", ","integer ",,~attackIndex,")"
SetProjectileUnitDataHint="[UjAPI]  nothing SetProjectileUnitData (projectile whichProjectile, unit owner, integer attackIndex)"


KillProjectile=KillProjectile
KillProjectile="KillProjectile(","projectile ",,~whichProjectile,")"
KillProjectileHint="[UjAPI]  nothing KillProjectile (projectile whichProjectile)"


RemoveProjectile=RemoveProjectile
RemoveProjectile="RemoveProjectile(","projectile ",,~whichProjectile,")"
RemoveProjectileHint="[UjAPI]  nothing RemoveProjectile (projectile whichProjectile)"


LaunchProjectile=LaunchProjectile
LaunchProjectile="LaunchProjectile(","projectile ",,~whichProjectile,")"
LaunchProjectileHint="[UjAPI]  nothing LaunchProjectile (projectile whichProjectile)"


LaunchProjectileTarget=LaunchProjectileTarget
LaunchProjectileTarget="LaunchProjectileTarget(","projectile ",,~whichProjectile,", ","widget ",,~whichWidget,")"
LaunchProjectileTargetHint="[UjAPI]  nothing LaunchProjectileTarget (projectile whichProjectile, widget whichWidget)"


LaunchProjectileAt=LaunchProjectileAt
LaunchProjectileAt="LaunchProjectileAt(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
LaunchProjectileAtHint="[UjAPI]  nothing LaunchProjectileAt (projectile whichProjectile, real x, real y, real z)"


SetProjectileVisible=SetProjectileVisible
SetProjectileVisible="SetProjectileVisible(","projectile ",,~whichProjectile,", ","boolean ",,~visibility,")"
SetProjectileVisibleHint="[UjAPI]  nothing SetProjectileVisible (projectile whichProjectile, boolean visibility)"


SetProjectileX=SetProjectileX
SetProjectileX="SetProjectileX(","projectile ",,~whichProjectile,", ","real ",,~x,")"
SetProjectileXHint="[UjAPI]  nothing SetProjectileX (projectile whichProjectile, real x)"


SetProjectileY=SetProjectileY
SetProjectileY="SetProjectileY(","projectile ",,~whichProjectile,", ","real ",,~y,")"
SetProjectileYHint="[UjAPI]  nothing SetProjectileY (projectile whichProjectile, real y)"


SetProjectileZ=SetProjectileZ
SetProjectileZ="SetProjectileZ(","projectile ",,~whichProjectile,", ","real ",,~z,")"
SetProjectileZHint="[UjAPI]  nothing SetProjectileZ (projectile whichProjectile, real z)"


SetProjectileHeight=SetProjectileHeight
SetProjectileHeight="SetProjectileHeight(","projectile ",,~whichProjectile,", ","real ",,~height,")"
SetProjectileHeightHint="[UjAPI]  nothing SetProjectileHeight (projectile whichProjectile, real height)"


SetProjectilePosition=SetProjectilePosition
SetProjectilePosition="SetProjectilePosition(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,")"
SetProjectilePositionHint="[UjAPI]  nothing SetProjectilePosition (projectile whichProjectile, real x, real y)"


SetProjectilePositionWithZ=SetProjectilePositionWithZ
SetProjectilePositionWithZ="SetProjectilePositionWithZ(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetProjectilePositionWithZHint="[UjAPI]  nothing SetProjectilePositionWithZ (projectile whichProjectile, real x, real y, real z)"


SetProjectilePositionLoc=SetProjectilePositionLoc
SetProjectilePositionLoc="SetProjectilePositionLoc(","projectile ",,~whichProjectile,", ","location ",,~loc,")"
SetProjectilePositionLocHint="[UjAPI]  nothing SetProjectilePositionLoc (projectile whichProjectile, location loc)"


SetProjectileScale=SetProjectileScale
SetProjectileScale="SetProjectileScale(","projectile ",,~whichProjectile,", ","real ",,~scale,")"
SetProjectileScaleHint="[UjAPI]  nothing SetProjectileScale (projectile whichProjectile, real scale)"


SetProjectileTimeScale=SetProjectileTimeScale
SetProjectileTimeScale="SetProjectileTimeScale(","projectile ",,~whichProjectile,", ","real ",,~timescale,")"
SetProjectileTimeScaleHint="[UjAPI]  nothing SetProjectileTimeScale (projectile whichProjectile, real timescale)"


SetProjectilePlayerColour=SetProjectilePlayerColour
SetProjectilePlayerColour="SetProjectilePlayerColour(","projectile ",,~whichProjectile,", ","playercolor ",,~color,")"
SetProjectilePlayerColourHint="[UjAPI]  nothing SetProjectilePlayerColour (projectile whichProjectile, playercolor color)"


SetProjectileColour=SetProjectileColour
SetProjectileColour="SetProjectileColour(","projectile ",,~whichProjectile,", ","integer ",,~colour,")"
SetProjectileColourHint="[UjAPI]  nothing SetProjectileColour (projectile whichProjectile, integer colour)"


SetProjectileAlpha=SetProjectileAlpha
SetProjectileAlpha="SetProjectileAlpha(","projectile ",,~whichProjectile,", ","integer ",,~alpha,")"
SetProjectileAlphaHint="[UjAPI]  nothing SetProjectileAlpha (projectile whichProjectile, integer alpha)"


SetProjectileVertexColour=SetProjectileVertexColour
SetProjectileVertexColour="SetProjectileVertexColour(","projectile ",,~whichProjectile,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetProjectileVertexColourHint="[UjAPI]  nothing SetProjectileVertexColour (projectile whichProjectile, integer red, integer green, integer blue, integer alpha)"


SetProjectileMatrixScale=SetProjectileMatrixScale
SetProjectileMatrixScale="SetProjectileMatrixScale(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetProjectileMatrixScaleHint="[UjAPI]  nothing SetProjectileMatrixScale (projectile whichProjectile, real x, real y, real z)"


ResetProjectileMatrix=ResetProjectileMatrix
ResetProjectileMatrix="ResetProjectileMatrix(","projectile ",,~whichProjectile,")"
ResetProjectileMatrixHint="[UjAPI]  nothing ResetProjectileMatrix (projectile whichProjectile)"


SetProjectileOrientationEx=SetProjectileOrientationEx
SetProjectileOrientationEx="SetProjectileOrientationEx(","projectile ",,~whichProjectile,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetProjectileOrientationExHint="[UjAPI]  nothing SetProjectileOrientationEx (projectile whichProjectile, real yaw, real pitch, real roll, integer eulerOrder)"


SetProjectileYaw=SetProjectileYaw
SetProjectileYaw="SetProjectileYaw(","projectile ",,~whichProjectile,", ","real ",,~yaw,")"
SetProjectileYawHint="[UjAPI]  nothing SetProjectileYaw (projectile whichProjectile, real yaw)"


SetProjectileFacing=SetProjectileFacing
SetProjectileFacing="SetProjectileFacing(","projectile ",,~whichProjectile,", ","real ",,~facing,")"
SetProjectileFacingHint="[UjAPI]  nothing SetProjectileFacing (projectile whichProjectile, real facing)"


SetProjectilePitch=SetProjectilePitch
SetProjectilePitch="SetProjectilePitch(","projectile ",,~whichProjectile,", ","real ",,~pitch,")"
SetProjectilePitchHint="[UjAPI]  nothing SetProjectilePitch (projectile whichProjectile, real pitch)"


SetProjectileRoll=SetProjectileRoll
SetProjectileRoll="SetProjectileRoll(","projectile ",,~whichProjectile,", ","real ",,~roll,")"
SetProjectileRollHint="[UjAPI]  nothing SetProjectileRoll (projectile whichProjectile, real roll)"


SetProjectileOrientation=SetProjectileOrientation
SetProjectileOrientation="SetProjectileOrientation(","projectile ",,~whichProjectile,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetProjectileOrientationHint="[UjAPI]  nothing SetProjectileOrientation (projectile whichProjectile, real yaw, real pitch, real roll)"


SetProjectileMaterialTexture=SetProjectileMaterialTexture
SetProjectileMaterialTexture="SetProjectileMaterialTexture(","projectile ",,~whichProjectile,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetProjectileMaterialTextureHint="[UjAPI]  nothing SetProjectileMaterialTexture (projectile whichProjectile, string textureName, integer materialId, integer textureIndex)"


SetProjectileTexture=SetProjectileTexture
SetProjectileTexture="SetProjectileTexture(","projectile ",,~whichProjectile,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetProjectileTextureHint="[UjAPI]  nothing SetProjectileTexture (projectile whichProjectile, string textureName, integer textureIndex)"


SetProjectileReplaceableTexture=SetProjectileReplaceableTexture
SetProjectileReplaceableTexture="SetProjectileReplaceableTexture(","projectile ",,~whichProjectile,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetProjectileReplaceableTextureHint="[UjAPI]  nothing SetProjectileReplaceableTexture (projectile whichProjectile, string textureName, integer textureIndex)"


SetProjectileModel=SetProjectileModel
SetProjectileModel="SetProjectileModel(","projectile ",,~whichProjectile,", ","string ",,~modelName,")"
SetProjectileModelHint="[UjAPI]  nothing SetProjectileModel (projectile whichProjectile, string modelName)"


SetProjectileModelEx=SetProjectileModelEx
SetProjectileModelEx="SetProjectileModelEx(","projectile ",,~whichProjectile,", ","string ",,~modelName,", ","integer ",,~playerColour,")"
SetProjectileModelExHint="[UjAPI]  nothing SetProjectileModelEx (projectile whichProjectile, string modelName, integer playerColour)"


SetProjectileAnimationWithRarityByIndex=SetProjectileAnimationWithRarityByIndex
SetProjectileAnimationWithRarityByIndex="SetProjectileAnimationWithRarityByIndex(","projectile ",,~whichProjectile,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetProjectileAnimationWithRarityByIndexHint="[UjAPI]  nothing SetProjectileAnimationWithRarityByIndex (projectile whichProjectile, integer animIndex, raritycontrol rarity)"


SetProjectileAnimationWithRarity=SetProjectileAnimationWithRarity
SetProjectileAnimationWithRarity="SetProjectileAnimationWithRarity(","projectile ",,~whichProjectile,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetProjectileAnimationWithRarityHint="[UjAPI]  nothing SetProjectileAnimationWithRarity (projectile whichProjectile, string animationName, raritycontrol rarity)"


SetProjectileAnimationByIndex=SetProjectileAnimationByIndex
SetProjectileAnimationByIndex="SetProjectileAnimationByIndex(","projectile ",,~whichProjectile,", ","integer ",,~animIndex,")"
SetProjectileAnimationByIndexHint="[UjAPI]  nothing SetProjectileAnimationByIndex (projectile whichProjectile, integer animIndex)"


SetProjectileAnimation=SetProjectileAnimation
SetProjectileAnimation="SetProjectileAnimation(","projectile ",,~whichProjectile,", ","string ",,~animationName,")"
SetProjectileAnimationHint="[UjAPI]  nothing SetProjectileAnimation (projectile whichProjectile, string animationName)"


QueueProjectileAnimationByIndex=QueueProjectileAnimationByIndex
QueueProjectileAnimationByIndex="QueueProjectileAnimationByIndex(","projectile ",,~whichProjectile,", ","integer ",,~animIndex,")"
QueueProjectileAnimationByIndexHint="[UjAPI]  nothing QueueProjectileAnimationByIndex (projectile whichProjectile, integer animIndex)"


QueueProjectileAnimation=QueueProjectileAnimation
QueueProjectileAnimation="QueueProjectileAnimation(","projectile ",,~whichProjectile,", ","string ",,~animationName,")"
QueueProjectileAnimationHint="[UjAPI]  nothing QueueProjectileAnimation (projectile whichProjectile, string animationName)"


SetProjectileAnimationOffsetPercent=SetProjectileAnimationOffsetPercent
SetProjectileAnimationOffsetPercent="SetProjectileAnimationOffsetPercent(","projectile ",,~whichProjectile,", ","real ",,~percent,")"
SetProjectileAnimationOffsetPercentHint="[UjAPI]  nothing SetProjectileAnimationOffsetPercent (projectile whichProjectile, real percent)"


SetProjectileSource=SetProjectileSource
SetProjectileSource="SetProjectileSource(","projectile ",,~whichProjectile,", ","unit ",,~whichUnit,")"
SetProjectileSourceHint="[UjAPI]  nothing SetProjectileSource (projectile whichProjectile, unit whichUnit)"


SetProjectileSourceAbility=SetProjectileSourceAbility
SetProjectileSourceAbility="SetProjectileSourceAbility(","projectile ",,~whichProjectile,", ","ability ",,~whichAbility,")"
SetProjectileSourceAbilityHint="[UjAPI]  nothing SetProjectileSourceAbility (projectile whichProjectile, ability whichAbility)"


SetProjectileTargetX=SetProjectileTargetX
SetProjectileTargetX="SetProjectileTargetX(","projectile ",,~whichProjectile,", ","real ",,~x,")"
SetProjectileTargetXHint="[UjAPI]  nothing SetProjectileTargetX (projectile whichProjectile, real x)"


SetProjectileTargetY=SetProjectileTargetY
SetProjectileTargetY="SetProjectileTargetY(","projectile ",,~whichProjectile,", ","real ",,~y,")"
SetProjectileTargetYHint="[UjAPI]  nothing SetProjectileTargetY (projectile whichProjectile, real y)"


SetProjectileTargetZ=SetProjectileTargetZ
SetProjectileTargetZ="SetProjectileTargetZ(","projectile ",,~whichProjectile,", ","real ",,~z,")"
SetProjectileTargetZHint="[UjAPI]  nothing SetProjectileTargetZ (projectile whichProjectile, real z)"


SetProjectileTargetPositionLoc=SetProjectileTargetPositionLoc
SetProjectileTargetPositionLoc="SetProjectileTargetPositionLoc(","projectile ",,~whichProjectile,", ","location ",,~loc,")"
SetProjectileTargetPositionLocHint="[UjAPI]  nothing SetProjectileTargetPositionLoc (projectile whichProjectile, location loc)"


SetProjectileTargetPosition=SetProjectileTargetPosition
SetProjectileTargetPosition="SetProjectileTargetPosition(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,")"
SetProjectileTargetPositionHint="[UjAPI]  nothing SetProjectileTargetPosition (projectile whichProjectile, real x, real y)"


SetProjectileTargetPositionWithZ=SetProjectileTargetPositionWithZ
SetProjectileTargetPositionWithZ="SetProjectileTargetPositionWithZ(","projectile ",,~whichProjectile,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,")"
SetProjectileTargetPositionWithZHint="[UjAPI]  nothing SetProjectileTargetPositionWithZ (projectile whichProjectile, real x, real y, real z)"


SetProjectileTarget=SetProjectileTarget
SetProjectileTarget="SetProjectileTarget(","projectile ",,~whichProjectile,", ","widget ",,~whichWidget,")"
SetProjectileTargetHint="[UjAPI]  nothing SetProjectileTarget (projectile whichProjectile, widget whichWidget)"


SetProjectileAttackType=SetProjectileAttackType
SetProjectileAttackType="SetProjectileAttackType(","projectile ",,~whichProjectile,", ","attacktype ",,~whichAttackType,")"
SetProjectileAttackTypeHint="[UjAPI]  nothing SetProjectileAttackType (projectile whichProjectile, attacktype whichAttackType)"


SetProjectileDamage=SetProjectileDamage
SetProjectileDamage="SetProjectileDamage(","projectile ",,~whichProjectile,", ","real ",,~damage,")"
SetProjectileDamageHint="[UjAPI]  nothing SetProjectileDamage (projectile whichProjectile, real damage)"


SetProjectileAreaOfEffectFullDamage=SetProjectileAreaOfEffectFullDamage
SetProjectileAreaOfEffectFullDamage="SetProjectileAreaOfEffectFullDamage(","projectile ",,~whichProjectile,", ","real ",,~area,")"
SetProjectileAreaOfEffectFullDamageHint="[UjAPI]  nothing SetProjectileAreaOfEffectFullDamage (projectile whichProjectile, real area)"


SetProjectileAreaOfEffectMediumDamage=SetProjectileAreaOfEffectMediumDamage
SetProjectileAreaOfEffectMediumDamage="SetProjectileAreaOfEffectMediumDamage(","projectile ",,~whichProjectile,", ","real ",,~area,")"
SetProjectileAreaOfEffectMediumDamageHint="[UjAPI]  nothing SetProjectileAreaOfEffectMediumDamage (projectile whichProjectile, real area)"


SetProjectileAreaOfEffectSmallDamage=SetProjectileAreaOfEffectSmallDamage
SetProjectileAreaOfEffectSmallDamage="SetProjectileAreaOfEffectSmallDamage(","projectile ",,~whichProjectile,", ","real ",,~area,")"
SetProjectileAreaOfEffectSmallDamageHint="[UjAPI]  nothing SetProjectileAreaOfEffectSmallDamage (projectile whichProjectile, real area)"


SetProjectileAreaOfEffectMediumDamageFactor=SetProjectileAreaOfEffectMediumDamageFactor
SetProjectileAreaOfEffectMediumDamageFactor="SetProjectileAreaOfEffectMediumDamageFactor(","projectile ",,~whichProjectile,", ","real ",,~factor,")"
SetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI]  nothing SetProjectileAreaOfEffectMediumDamageFactor (projectile whichProjectile, real factor)"


SetProjectileAreaOfEffectSmallDamageFactor=SetProjectileAreaOfEffectSmallDamageFactor
SetProjectileAreaOfEffectSmallDamageFactor="SetProjectileAreaOfEffectSmallDamageFactor(","projectile ",,~whichProjectile,", ","real ",,~factor,")"
SetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI]  nothing SetProjectileAreaOfEffectSmallDamageFactor (projectile whichProjectile, real factor)"


SetProjectileSpeed=SetProjectileSpeed
SetProjectileSpeed="SetProjectileSpeed(","projectile ",,~whichProjectile,", ","real ",,~speed,")"
SetProjectileSpeedHint="[UjAPI]  nothing SetProjectileSpeed (projectile whichProjectile, real speed)"


SetProjectileArc=SetProjectileArc
SetProjectileArc="SetProjectileArc(","projectile ",,~whichProjectile,", ","real ",,~arc,")"
SetProjectileArcHint="[UjAPI]  nothing SetProjectileArc (projectile whichProjectile, real arc)"


SetProjectileWeaponType=SetProjectileWeaponType
SetProjectileWeaponType="SetProjectileWeaponType(","projectile ",,~whichProjectile,", ","weapontype ",,~whichWeaponType,")"
SetProjectileWeaponTypeHint="[UjAPI]  nothing SetProjectileWeaponType (projectile whichProjectile, weapontype whichWeaponType)"


SetProjectileDamageType=SetProjectileDamageType
SetProjectileDamageType="SetProjectileDamageType(","projectile ",,~whichProjectile,", ","damagetype ",,~whichDamageType,")"
SetProjectileDamageTypeHint="[UjAPI]  nothing SetProjectileDamageType (projectile whichProjectile, damagetype whichDamageType)"


SetProjectileDamageFlags=SetProjectileDamageFlags
SetProjectileDamageFlags="SetProjectileDamageFlags(","projectile ",,~whichProjectile,", ","integer ",,~flags,")"
SetProjectileDamageFlagsHint="[UjAPI]  nothing SetProjectileDamageFlags (projectile whichProjectile, integer flags)"


EnumProjectilesInRange=EnumProjectilesInRange
EnumProjectilesInRange="EnumProjectilesInRange(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumProjectilesInRangeHint="[UjAPI]  nothing EnumProjectilesInRange (real x, real y, real radius, boolexpr filter, code handlerFunc)"


EnumProjectilesInRect=EnumProjectilesInRect
EnumProjectilesInRect="EnumProjectilesInRect(","rect ",,~whichRect,", ","boolexpr ",,~filter,", ","code ",,~handlerFunc,")"
EnumProjectilesInRectHint="[UjAPI]  nothing EnumProjectilesInRect (rect whichRect, boolexpr filter, code handlerFunc)"


HideOriginFrames=HideOriginFrames
HideOriginFrames="HideOriginFrames(","boolean ",,~flag,")"
HideOriginFramesHint="[UjAPI]  nothing HideOriginFrames (boolean flag)"


EditBlackBorders=EditBlackBorders
EditBlackBorders="EditBlackBorders(","real ",,~upperHeight,", ","real ",,~bottomHeight,")"
EditBlackBordersHint="[UjAPI]  nothing EditBlackBorders (real upperHeight, real bottomHeight)"


LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(","string ",,~TOCFile,")"
LoadTOCFileHint="[UjAPI]  boolean LoadTOCFile (string TOCFile)"


CreateFrame=CreateFrame
CreateFrame="CreateFrame(","string ",,~templateName,", ","framehandle ",,~whichParent,", ","integer ",,~priority,", ","integer ",,~createContext,")"
CreateFrameHint="[UjAPI]  framehandle CreateFrame (string templateName, framehandle whichParent, integer priority, integer createContext)"


CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(","string ",,~templateName,", ","framehandle ",,~whichParent,", ","integer ",,~createContext,")"
CreateSimpleFrameHint="[UjAPI]  framehandle CreateSimpleFrame (string templateName, framehandle whichParent, integer createContext)"


CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(","framehandle ",,~whichSimpleParent,", ","framehandle ",,~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI]  framehandle CreateSimpleGlueFrame (framehandle whichSimpleParent, framehandle whichSpriteFrame)"


CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(","string ",,~frameType,", ","string ",,~contextName,", ","framehandle ",,~whichParent,", ","string ",,~templateName,", ","integer ",,~createContext,")"
CreateFrameByTypeHint="[UjAPI]  framehandle CreateFrameByType (string frameType, string contextName, framehandle whichParent, string templateName, integer createContext)"


DestroyFrame=DestroyFrame
DestroyFrame="DestroyFrame(","framehandle ",,~whichFrame,")"
DestroyFrameHint="[UjAPI]  nothing DestroyFrame (framehandle whichFrame)"


SetFrameRelativePoint=SetFrameRelativePoint
SetFrameRelativePoint="SetFrameRelativePoint(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,", ","framehandle ",,~relativeFrame,", ","framepointtype ",,~relativePoint,", ","real ",,~x,", ","real ",,~y,")"
SetFrameRelativePointHint="[UjAPI]  nothing SetFrameRelativePoint (framehandle whichFrame, framepointtype point, framehandle relativeFrame, framepointtype relativePoint, real x, real y)"


SetFrameAbsolutePoint=SetFrameAbsolutePoint
SetFrameAbsolutePoint="SetFrameAbsolutePoint(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,", ","real ",,~x,", ","real ",,~y,")"
SetFrameAbsolutePointHint="[UjAPI]  nothing SetFrameAbsolutePoint (framehandle whichFrame, framepointtype point, real x, real y)"


ClearFrameAllPoints=ClearFrameAllPoints
ClearFrameAllPoints="ClearFrameAllPoints(","framehandle ",,~whichFrame,")"
ClearFrameAllPointsHint="[UjAPI]  nothing ClearFrameAllPoints (framehandle whichFrame)"


SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(","framehandle ",,~whichFrame,", ","framehandle ",,~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI]  boolean SetFrameAllPoints (framehandle whichFrame, framehandle relativeFrame)"


ShowFrame=ShowFrame
ShowFrame="ShowFrame(","framehandle ",,~whichFrame,", ","boolean ",,~isShow,")"
ShowFrameHint="[UjAPI]  nothing ShowFrame (framehandle whichFrame, boolean isShow)"


SetFrameName=SetFrameName
SetFrameName="SetFrameName(","framehandle ",,~whichFrame,", ","string ",,~contextName,")"
SetFrameNameHint="[UjAPI]  nothing SetFrameName (framehandle whichFrame, string contextName)"


SetFrameContext=SetFrameContext
SetFrameContext="SetFrameContext(","framehandle ",,~whichFrame,", ","integer ",,~createContext,")"
SetFrameContextHint="[UjAPI]  nothing SetFrameContext (framehandle whichFrame, integer createContext)"


SetFrameContextName=SetFrameContextName
SetFrameContextName="SetFrameContextName(","framehandle ",,~whichFrame,", ","string ",,~contextName,", ","integer ",,~createContext,")"
SetFrameContextNameHint="[UjAPI]  nothing SetFrameContextName (framehandle whichFrame, string contextName, integer createContext)"


ClickFrameEx=ClickFrameEx
ClickFrameEx="ClickFrameEx(","framehandle ",,~whichFrame,", ","mousebuttontype ",,~whichMouseButton,")"
ClickFrameExHint="[UjAPI]  nothing ClickFrameEx (framehandle whichFrame, mousebuttontype whichMouseButton)"


ClickFrame=ClickFrame
ClickFrame="ClickFrame(","framehandle ",,~whichFrame,")"
ClickFrameHint="[UjAPI]  nothing ClickFrame (framehandle whichFrame)"


SetFrameText=SetFrameText
SetFrameText="SetFrameText(","framehandle ",,~whichFrame,", ","string ",,~text,")"
SetFrameTextHint="[UjAPI]  nothing SetFrameText (framehandle whichFrame, string text)"


AddFrameText=AddFrameText
AddFrameText="AddFrameText(","framehandle ",,~whichFrame,", ","string ",,~text,")"
AddFrameTextHint="[UjAPI]  nothing AddFrameText (framehandle whichFrame, string text)"


SetFrameTextSizeLimit=SetFrameTextSizeLimit
SetFrameTextSizeLimit="SetFrameTextSizeLimit(","framehandle ",,~whichFrame,", ","integer ",,~textSize,")"
SetFrameTextSizeLimitHint="[UjAPI]  nothing SetFrameTextSizeLimit (framehandle whichFrame, integer textSize)"


SetFrameTextColourEx=SetFrameTextColourEx
SetFrameTextColourEx="SetFrameTextColourEx(","framehandle ",,~whichFrame,", ","integer ",,~stateId,", ","integer ",,~colour,")"
SetFrameTextColourExHint="[UjAPI]  nothing SetFrameTextColourEx (framehandle whichFrame, integer stateId, integer colour)"


SetFrameTextColour=SetFrameTextColour
SetFrameTextColour="SetFrameTextColour(","framehandle ",,~whichFrame,", ","integer ",,~colour,")"
SetFrameTextColourHint="[UjAPI]  nothing SetFrameTextColour (framehandle whichFrame, integer colour)"


SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(","framehandle ",,~whichFrame,", ","boolean ",,~isFocus,")"
SetFrameFocusHint="[UjAPI]  boolean SetFrameFocus (framehandle whichFrame, boolean isFocus)"


SetFrameModel=SetFrameModel
SetFrameModel="SetFrameModel(","framehandle ",,~whichFrame,", ","string ",,~model,", ","integer ",,~cameraIndex,")"
SetFrameModelHint="[UjAPI]  nothing SetFrameModel (framehandle whichFrame, string model, integer cameraIndex)"


SetFrameState=SetFrameState
SetFrameState="SetFrameState(","framehandle ",,~whichFrame,", ","framestate ",,~whichFrameState,")"
SetFrameStateHint="[UjAPI]  nothing SetFrameState (framehandle whichFrame, framestate whichFrameState)"


SetFrameEnabled=SetFrameEnabled
SetFrameEnabled="SetFrameEnabled(","framehandle ",,~whichFrame,", ","boolean ",,~enabled,")"
SetFrameEnabledHint="[UjAPI]  nothing SetFrameEnabled (framehandle whichFrame, boolean enabled)"


SetFrameLayoutFlag=SetFrameLayoutFlag
SetFrameLayoutFlag="SetFrameLayoutFlag(","framehandle ",,~whichFrame,", ","layoutstyleflag ",,~whichLayoutStyle,", ","boolean ",,~isSet,")"
SetFrameLayoutFlagHint="[UjAPI]  nothing SetFrameLayoutFlag (framehandle whichFrame, layoutstyleflag whichLayoutStyle, boolean isSet)"


SetFrameGridFlag=SetFrameGridFlag
SetFrameGridFlag="SetFrameGridFlag(","framehandle ",,~whichFrame,", ","gridstyleflag ",,~whichGridStyle,", ","boolean ",,~isSet,")"
SetFrameGridFlagHint="[UjAPI]  nothing SetFrameGridFlag (framehandle whichFrame, gridstyleflag whichGridStyle, boolean isSet)"


SetFrameLayerFlag=SetFrameLayerFlag
SetFrameLayerFlag="SetFrameLayerFlag(","framehandle ",,~whichFrame,", ","layerstyleflag ",,~whichLayerStyle,", ","boolean ",,~isSet,")"
SetFrameLayerFlagHint="[UjAPI]  nothing SetFrameLayerFlag (framehandle whichFrame, layerstyleflag whichLayerStyle, boolean isSet)"


SetFrameControlFlag=SetFrameControlFlag
SetFrameControlFlag="SetFrameControlFlag(","framehandle ",,~whichFrame,", ","controlstyleflag ",,~whichControlStyle,", ","boolean ",,~isSet,")"
SetFrameControlFlagHint="[UjAPI]  nothing SetFrameControlFlag (framehandle whichFrame, controlstyleflag whichControlStyle, boolean isSet)"


SetFrameColourEx=SetFrameColourEx
SetFrameColourEx="SetFrameColourEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","integer ",,~colour,")"
SetFrameColourExHint="[UjAPI]  nothing SetFrameColourEx (framehandle whichFrame, integer textureId, integer colour)"


SetFrameColour=SetFrameColour
SetFrameColour="SetFrameColour(","framehandle ",,~whichFrame,", ","integer ",,~colour,")"
SetFrameColourHint="[UjAPI]  nothing SetFrameColour (framehandle whichFrame, integer colour)"


SetFrameVertexColour=SetFrameVertexColour
SetFrameVertexColour="SetFrameVertexColour(","framehandle ",,~whichFrame,", ","integer ",,~alpha,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,")"
SetFrameVertexColourHint="[UjAPI]  nothing SetFrameVertexColour (framehandle whichFrame, integer alpha, integer red, integer green, integer blue)"


SetFrameVertexColourEx=SetFrameVertexColourEx
SetFrameVertexColourEx="SetFrameVertexColourEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","integer ",,~alpha,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,")"
SetFrameVertexColourExHint="[UjAPI]  nothing SetFrameVertexColourEx (framehandle whichFrame, integer textureId, integer alpha, integer red, integer green, integer blue)"


SetFrameAlphaEx=SetFrameAlphaEx
SetFrameAlphaEx="SetFrameAlphaEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","integer ",,~alpha,")"
SetFrameAlphaExHint="[UjAPI]  nothing SetFrameAlphaEx (framehandle whichFrame, integer textureId, integer alpha)"


SetFrameAlpha=SetFrameAlpha
SetFrameAlpha="SetFrameAlpha(","framehandle ",,~whichFrame,", ","integer ",,~alpha,")"
SetFrameAlphaHint="[UjAPI]  nothing SetFrameAlpha (framehandle whichFrame, integer alpha)"


SetFrameBackdropTexture=SetFrameBackdropTexture
SetFrameBackdropTexture="SetFrameBackdropTexture(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","string ",,~backgroundTextureFile,", ","boolean ",,~allowTransparency,", ","boolean ",,~blend,", ","string ",,~borderTextureFile,", ","integer ",,~borderFlags,", ","boolean ",,~isControlBackdrop,")"
SetFrameBackdropTextureHint="[UjAPI]  nothing SetFrameBackdropTexture (framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean allowTransparency, boolean blend, string borderTextureFile, integer borderFlags, boolean isControlBackdrop)"


SetFrameTextureEx=SetFrameTextureEx
SetFrameTextureEx="SetFrameTextureEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","string ",,~backgroundTextureFile,", ","boolean ",,~blend,", ","string ",,~borderTextureFile,", ","integer ",,~borderFlags,")"
SetFrameTextureExHint="[UjAPI]  nothing SetFrameTextureEx (framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean blend, string borderTextureFile, integer borderFlags)"


SetFrameTexture=SetFrameTexture
SetFrameTexture="SetFrameTexture(","framehandle ",,~whichFrame,", ","string ",,~textureFile,", ","integer ",,~textureId,", ","boolean ",,~blend,")"
SetFrameTextureHint="[UjAPI]  nothing SetFrameTexture (framehandle whichFrame, string textureFile, integer textureId, boolean blend)"


SetFrameBlendMode=SetFrameBlendMode
SetFrameBlendMode="SetFrameBlendMode(","framehandle ",,~whichFrame,", ","integer ",,~textureId,", ","blendmode ",,~whichMode,")"
SetFrameBlendModeHint="[UjAPI]  nothing SetFrameBlendMode (framehandle whichFrame, integer textureId, blendmode whichMode)"


SetFrameMouseCaged=SetFrameMouseCaged
SetFrameMouseCaged="SetFrameMouseCaged(","framehandle ",,~whichFrame,", ","boolean ",,~enable,")"
SetFrameMouseCagedHint="[UjAPI]  nothing SetFrameMouseCaged (framehandle whichFrame, boolean enable)"


SetFrameValue=SetFrameValue
SetFrameValue="SetFrameValue(","framehandle ",,~whichFrame,", ","real ",,~value,")"
SetFrameValueHint="[UjAPI]  nothing SetFrameValue (framehandle whichFrame, real value)"


SetFrameValueEx=SetFrameValueEx
SetFrameValueEx="SetFrameValueEx(","framehandle ",,~whichFrame,", ","real ",,~value,", ","boolean ",,~isFireEvent,")"
SetFrameValueExHint="[UjAPI]  nothing SetFrameValueEx (framehandle whichFrame, real value, boolean isFireEvent)"


SetFrameMinMaxValues=SetFrameMinMaxValues
SetFrameMinMaxValues="SetFrameMinMaxValues(","framehandle ",,~whichFrame,", ","real ",,~minVal,", ","real ",,~maxVal,")"
SetFrameMinMaxValuesHint="[UjAPI]  nothing SetFrameMinMaxValues (framehandle whichFrame, real minVal, real maxVal)"


SetFrameStepSize=SetFrameStepSize
SetFrameStepSize="SetFrameStepSize(","framehandle ",,~whichFrame,", ","real ",,~stepSize,")"
SetFrameStepSizeHint="[UjAPI]  nothing SetFrameStepSize (framehandle whichFrame, real stepSize)"


SetFrameWidth=SetFrameWidth
SetFrameWidth="SetFrameWidth(","framehandle ",,~whichFrame,", ","real ",,~width,")"
SetFrameWidthHint="[UjAPI]  nothing SetFrameWidth (framehandle whichFrame, real width)"


SetFrameHeight=SetFrameHeight
SetFrameHeight="SetFrameHeight(","framehandle ",,~whichFrame,", ","real ",,~height,")"
SetFrameHeightHint="[UjAPI]  nothing SetFrameHeight (framehandle whichFrame, real height)"


SetFrameSize=SetFrameSize
SetFrameSize="SetFrameSize(","framehandle ",,~whichFrame,", ","real ",,~width,", ","real ",,~height,")"
SetFrameSizeHint="[UjAPI]  nothing SetFrameSize (framehandle whichFrame, real width, real height)"


SetFrameScale=SetFrameScale
SetFrameScale="SetFrameScale(","framehandle ",,~whichFrame,", ","real ",,~scale,")"
SetFrameScaleHint="[UjAPI]  nothing SetFrameScale (framehandle whichFrame, real scale)"


SetFramePriority=SetFramePriority
SetFramePriority="SetFramePriority(","framehandle ",,~whichFrame,", ","integer ",,~priority,")"
SetFramePriorityHint="[UjAPI]  nothing SetFramePriority (framehandle whichFrame, integer priority)"


SetFrameParent=SetFrameParent
SetFrameParent="SetFrameParent(","framehandle ",,~whichFrame,", ","framehandle ",,~whichParent,")"
SetFrameParentHint="[UjAPI]  nothing SetFrameParent (framehandle whichFrame, framehandle whichParent)"


SetFrameFont=SetFrameFont
SetFrameFont="SetFrameFont(","framehandle ",,~whichFrame,", ","string ",,~fontName,", ","real ",,~size,", ","integer ",,~flags,")"
SetFrameFontHint="[UjAPI]  nothing SetFrameFont (framehandle whichFrame, string fontName, real size, integer flags)"


SetFrameTextAlignmentValue=SetFrameTextAlignmentValue
SetFrameTextAlignmentValue="SetFrameTextAlignmentValue(","framehandle ",,~whichFrame,", ","integer ",,~id,", ","real ",,~offset,")"
SetFrameTextAlignmentValueHint="[UjAPI]  nothing SetFrameTextAlignmentValue (framehandle whichFrame, integer id, real offset)"


SetFrameTextAlignment=SetFrameTextAlignment
SetFrameTextAlignment="SetFrameTextAlignment(","framehandle ",,~whichFrame,", ","textaligntype ",,~verticalAlign,", ","textaligntype ",,~horizontalAlign,")"
SetFrameTextAlignmentHint="[UjAPI]  nothing SetFrameTextAlignment (framehandle whichFrame, textaligntype verticalAlign, textaligntype horizontalAlign)"


SetFrameTextVerticalAlignment=SetFrameTextVerticalAlignment
SetFrameTextVerticalAlignment="SetFrameTextVerticalAlignment(","framehandle ",,~whichFrame,", ","textaligntype ",,~verticalAlign,")"
SetFrameTextVerticalAlignmentHint="[UjAPI]  nothing SetFrameTextVerticalAlignment (framehandle whichFrame, textaligntype verticalAlign)"


SetFrameTextHorizontalAlignment=SetFrameTextHorizontalAlignment
SetFrameTextHorizontalAlignment="SetFrameTextHorizontalAlignment(","framehandle ",,~whichFrame,", ","textaligntype ",,~horizontalAlign,")"
SetFrameTextHorizontalAlignmentHint="[UjAPI]  nothing SetFrameTextHorizontalAlignment (framehandle whichFrame, textaligntype horizontalAlign)"


SetFrameCheckState=SetFrameCheckState
SetFrameCheckState="SetFrameCheckState(","framehandle ",,~whichFrame,", ","boolean ",,~isCheck,")"
SetFrameCheckStateHint="[UjAPI]  nothing SetFrameCheckState (framehandle whichFrame, boolean isCheck)"


SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(","string ",,~texturePath,")"
SetMiniMapTextureHint="[UjAPI]  boolean SetMiniMapTexture (string texturePath)"


AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(","framehandle ",,~whichFrame,")"
AddFrameSliderHint="[UjAPI]  framehandle AddFrameSlider (framehandle whichFrame)"


SetFrameItemsBorder=SetFrameItemsBorder
SetFrameItemsBorder="SetFrameItemsBorder(","framehandle ",,~whichFrame,", ","real ",,~value,")"
SetFrameItemsBorderHint="[UjAPI]  nothing SetFrameItemsBorder (framehandle whichFrame, real value)"


SetFrameItemsHeight=SetFrameItemsHeight
SetFrameItemsHeight="SetFrameItemsHeight(","framehandle ",,~whichFrame,", ","real ",,~value,")"
SetFrameItemsHeightHint="[UjAPI]  nothing SetFrameItemsHeight (framehandle whichFrame, real value)"


AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(","framehandle ",,~whichFrame,", ","string ",,~text,", ","framehandle ",,~frameToAdd,")"
AddFrameListItemHint="[UjAPI]  framehandle AddFrameListItem (framehandle whichFrame, string text, framehandle frameToAdd)"


SetFrameListItemById=SetFrameListItemById
SetFrameListItemById="SetFrameListItemById(","framehandle ",,~whichFrame,", ","integer ",,~id,", ","framehandle ",,~listBoxItem,")"
SetFrameListItemByIdHint="[UjAPI]  nothing SetFrameListItemById (framehandle whichFrame, integer id, framehandle listBoxItem)"


SetFrameListItemByFrame=SetFrameListItemByFrame
SetFrameListItemByFrame="SetFrameListItemByFrame(","framehandle ",,~whichFrame,", ","framehandle ",,~frameToFind,", ","framehandle ",,~listBoxItem,")"
SetFrameListItemByFrameHint="[UjAPI]  nothing SetFrameListItemByFrame (framehandle whichFrame, framehandle frameToFind, framehandle listBoxItem)"


RemoveFrameListItem=RemoveFrameListItem
RemoveFrameListItem="RemoveFrameListItem(","framehandle ",,~whichFrame,", ","framehandle ",,~listBoxItem,")"
RemoveFrameListItemHint="[UjAPI]  nothing RemoveFrameListItem (framehandle whichFrame, framehandle listBoxItem)"


RemoveFrameListItemById=RemoveFrameListItemById
RemoveFrameListItemById="RemoveFrameListItemById(","framehandle ",,~whichFrame,", ","integer ",,~id,")"
RemoveFrameListItemByIdHint="[UjAPI]  nothing RemoveFrameListItemById (framehandle whichFrame, integer id)"


RemoveFrameListItemByFrame=RemoveFrameListItemByFrame
RemoveFrameListItemByFrame="RemoveFrameListItemByFrame(","framehandle ",,~whichFrame,", ","framehandle ",,~listBoxItem,")"
RemoveFrameListItemByFrameHint="[UjAPI]  nothing RemoveFrameListItemByFrame (framehandle whichFrame, framehandle listBoxItem)"


SetFrameItemOwner=SetFrameItemOwner
SetFrameItemOwner="SetFrameItemOwner(","framehandle ",,~listBoxItem,", ","framehandle ",,~whichFrame,")"
SetFrameItemOwnerHint="[UjAPI]  nothing SetFrameItemOwner (framehandle listBoxItem, framehandle whichFrame)"


SetFrameHighlightTexture=SetFrameHighlightTexture
SetFrameHighlightTexture="SetFrameHighlightTexture(","framehandle ",,~whichFrame,", ","integer ",,~highlightId,", ","string ",,~texturePath,", ","blendmode ",,~blendMode,")"
SetFrameHighlightTextureHint="[UjAPI]  nothing SetFrameHighlightTexture (framehandle whichFrame, integer highlightId, string texturePath, blendmode blendMode)"


SetFrameBorderEnabled=SetFrameBorderEnabled
SetFrameBorderEnabled="SetFrameBorderEnabled(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","boolean ",,~isEnable,")"
SetFrameBorderEnabledHint="[UjAPI]  nothing SetFrameBorderEnabled (framehandle whichFrame, integer backdropId, boolean isEnable)"


SetFrameBorderFlags=SetFrameBorderFlags
SetFrameBorderFlags="SetFrameBorderFlags(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","integer ",,~borderFlag,")"
SetFrameBorderFlagsHint="[UjAPI]  nothing SetFrameBorderFlags (framehandle whichFrame, integer backdropId, integer borderFlag)"


SetFrameBorderSize=SetFrameBorderSize
SetFrameBorderSize="SetFrameBorderSize(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","real ",,~value,")"
SetFrameBorderSizeHint="[UjAPI]  nothing SetFrameBorderSize (framehandle whichFrame, integer backdropId, real value)"


SetFrameBackgroundSize=SetFrameBackgroundSize
SetFrameBackgroundSize="SetFrameBackgroundSize(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","real ",,~value,")"
SetFrameBackgroundSizeHint="[UjAPI]  nothing SetFrameBackgroundSize (framehandle whichFrame, integer backdropId, real value)"


SetFrameBackgroundInsetById=SetFrameBackgroundInsetById
SetFrameBackgroundInsetById="SetFrameBackgroundInsetById(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","integer ",,~insetId,", ","real ",,~value,")"
SetFrameBackgroundInsetByIdHint="[UjAPI]  nothing SetFrameBackgroundInsetById (framehandle whichFrame, integer backdropId, integer insetId, real value)"


SetFrameBackgroundInsets=SetFrameBackgroundInsets
SetFrameBackgroundInsets="SetFrameBackgroundInsets(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","real ",,~minX,", ","real ",,~minY,", ","real ",,~maxX,", ","real ",,~maxY,")"
SetFrameBackgroundInsetsHint="[UjAPI]  nothing SetFrameBackgroundInsets (framehandle whichFrame, integer backdropId, real minX, real minY, real maxX, real maxY)"


SetFrameGridSize=SetFrameGridSize
SetFrameGridSize="SetFrameGridSize(","framehandle ",,~grid,", ","integer ",,~row,", ","integer ",,~column,")"
SetFrameGridSizeHint="[UjAPI]  nothing SetFrameGridSize (framehandle grid, integer row, integer column)"


SetFrameGridFrame=SetFrameGridFrame
SetFrameGridFrame="SetFrameGridFrame(","framehandle ",,~grid,", ","integer ",,~row,", ","integer ",,~column,", ","framehandle ",,~whichFrame,")"
SetFrameGridFrameHint="[UjAPI]  nothing SetFrameGridFrame (framehandle grid, integer row, integer column, framehandle whichFrame)"


SetBuffBarRenderDuplicates=SetBuffBarRenderDuplicates
SetBuffBarRenderDuplicates="SetBuffBarRenderDuplicates(","boolean ",,~allow,")"
SetBuffBarRenderDuplicatesHint="[UjAPI]  nothing SetBuffBarRenderDuplicates (boolean allow)"


TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(","trigger ",,~whichTrigger,", ","framehandle ",,~whichFrame,", ","frameeventtype ",,~frameEvent,")"
TriggerRegisterFrameEventHint="[UjAPI]  event TriggerRegisterFrameEvent (trigger whichTrigger, framehandle whichFrame, frameeventtype frameEvent)"


RegisterFrameMouseButton=RegisterFrameMouseButton
RegisterFrameMouseButton="RegisterFrameMouseButton(","framehandle ",,~whichFrame,", ","mousebuttontype ",,~whichButton,", ","boolean ",,~isAdd,")"
RegisterFrameMouseButtonHint="[UjAPI]  nothing RegisterFrameMouseButton (framehandle whichFrame, mousebuttontype whichButton, boolean isAdd)"


SetFrameSpriteScale=SetFrameSpriteScale
SetFrameSpriteScale="SetFrameSpriteScale(","framehandle ",,~whichFrame,", ","real ",,~scale,")"
SetFrameSpriteScaleHint="[UjAPI]  nothing SetFrameSpriteScale (framehandle whichFrame, real scale)"


SetFrameSpriteTimeScale=SetFrameSpriteTimeScale
SetFrameSpriteTimeScale="SetFrameSpriteTimeScale(","framehandle ",,~whichFrame,", ","real ",,~timescale,")"
SetFrameSpriteTimeScaleHint="[UjAPI]  nothing SetFrameSpriteTimeScale (framehandle whichFrame, real timescale)"


SetFrameSpritePlayerColour=SetFrameSpritePlayerColour
SetFrameSpritePlayerColour="SetFrameSpritePlayerColour(","framehandle ",,~whichFrame,", ","playercolor ",,~color,")"
SetFrameSpritePlayerColourHint="[UjAPI]  nothing SetFrameSpritePlayerColour (framehandle whichFrame, playercolor color)"


SetFrameSpriteAlpha=SetFrameSpriteAlpha
SetFrameSpriteAlpha="SetFrameSpriteAlpha(","framehandle ",,~whichFrame,", ","integer ",,~alpha,")"
SetFrameSpriteAlphaHint="[UjAPI]  boolean SetFrameSpriteAlpha (framehandle whichFrame, integer alpha)"


SetFrameSpriteColour=SetFrameSpriteColour
SetFrameSpriteColour="SetFrameSpriteColour(","framehandle ",,~whichFrame,", ","integer ",,~colour,")"
SetFrameSpriteColourHint="[UjAPI]  boolean SetFrameSpriteColour (framehandle whichFrame, integer colour)"


SetFrameSpriteVertexColour=SetFrameSpriteVertexColour
SetFrameSpriteVertexColour="SetFrameSpriteVertexColour(","framehandle ",,~whichFrame,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetFrameSpriteVertexColourHint="[UjAPI]  boolean SetFrameSpriteVertexColour (framehandle whichFrame, integer red, integer green, integer blue, integer alpha)"


SetFrameSpriteOrientationEx=SetFrameSpriteOrientationEx
SetFrameSpriteOrientationEx="SetFrameSpriteOrientationEx(","framehandle ",,~whichFrame,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetFrameSpriteOrientationExHint="[UjAPI]  boolean SetFrameSpriteOrientationEx (framehandle whichFrame, real yaw, real pitch, real roll, integer eulerOrder)"


SetFrameSpriteYaw=SetFrameSpriteYaw
SetFrameSpriteYaw="SetFrameSpriteYaw(","framehandle ",,~whichFrame,", ","real ",,~yaw,")"
SetFrameSpriteYawHint="[UjAPI]  boolean SetFrameSpriteYaw (framehandle whichFrame, real yaw)"


SetFrameSpriteFacing=SetFrameSpriteFacing
SetFrameSpriteFacing="SetFrameSpriteFacing(","framehandle ",,~whichFrame,", ","real ",,~facing,")"
SetFrameSpriteFacingHint="[UjAPI]  boolean SetFrameSpriteFacing (framehandle whichFrame, real facing)"


SetFrameSpritePitch=SetFrameSpritePitch
SetFrameSpritePitch="SetFrameSpritePitch(","framehandle ",,~whichFrame,", ","real ",,~pitch,")"
SetFrameSpritePitchHint="[UjAPI]  boolean SetFrameSpritePitch (framehandle whichFrame, real pitch)"


SetFrameSpriteRoll=SetFrameSpriteRoll
SetFrameSpriteRoll="SetFrameSpriteRoll(","framehandle ",,~whichFrame,", ","real ",,~roll,")"
SetFrameSpriteRollHint="[UjAPI]  boolean SetFrameSpriteRoll (framehandle whichFrame, real roll)"


SetFrameSpriteOrientation=SetFrameSpriteOrientation
SetFrameSpriteOrientation="SetFrameSpriteOrientation(","framehandle ",,~whichFrame,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,")"
SetFrameSpriteOrientationHint="[UjAPI]  nothing SetFrameSpriteOrientation (framehandle whichFrame, real yaw, real pitch, real roll)"


SetFrameSpriteMaterialTexture=SetFrameSpriteMaterialTexture
SetFrameSpriteMaterialTexture="SetFrameSpriteMaterialTexture(","framehandle ",,~whichFrame,", ","string ",,~textureName,", ","integer ",,~materialId,", ","integer ",,~textureIndex,")"
SetFrameSpriteMaterialTextureHint="[UjAPI]  nothing SetFrameSpriteMaterialTexture (framehandle whichFrame, string textureName, integer materialId, integer textureIndex)"


SetFrameSpriteMatrixScale=SetFrameSpriteMatrixScale
SetFrameSpriteMatrixScale="SetFrameSpriteMatrixScale(","framehandle ",,~whichFrame,", ","real ",,~sizeX,", ","real ",,~sizeY,", ","real ",,~sizeZ,")"
SetFrameSpriteMatrixScaleHint="[UjAPI]  nothing SetFrameSpriteMatrixScale (framehandle whichFrame, real sizeX, real sizeY, real sizeZ)"


ResetFrameSpriteMatrix=ResetFrameSpriteMatrix
ResetFrameSpriteMatrix="ResetFrameSpriteMatrix(","framehandle ",,~whichFrame,")"
ResetFrameSpriteMatrixHint="[UjAPI]  nothing ResetFrameSpriteMatrix (framehandle whichFrame)"


SetFrameSpriteTexture=SetFrameSpriteTexture
SetFrameSpriteTexture="SetFrameSpriteTexture(","framehandle ",,~whichFrame,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetFrameSpriteTextureHint="[UjAPI]  nothing SetFrameSpriteTexture (framehandle whichFrame, string textureName, integer textureIndex)"


SetFrameSpriteReplaceableTexture=SetFrameSpriteReplaceableTexture
SetFrameSpriteReplaceableTexture="SetFrameSpriteReplaceableTexture(","framehandle ",,~whichFrame,", ","string ",,~textureName,", ","integer ",,~textureIndex,")"
SetFrameSpriteReplaceableTextureHint="[UjAPI]  nothing SetFrameSpriteReplaceableTexture (framehandle whichFrame, string textureName, integer textureIndex)"


SetFrameSpriteModel=SetFrameSpriteModel
SetFrameSpriteModel="SetFrameSpriteModel(","framehandle ",,~whichFrame,", ","string ",,~modelName,")"
SetFrameSpriteModelHint="[UjAPI]  nothing SetFrameSpriteModel (framehandle whichFrame, string modelName)"


SetFrameSpriteModelEx=SetFrameSpriteModelEx
SetFrameSpriteModelEx="SetFrameSpriteModelEx(","framehandle ",,~whichFrame,", ","string ",,~modelName,", ","integer ",,~playerColour,")"
SetFrameSpriteModelExHint="[UjAPI]  nothing SetFrameSpriteModelEx (framehandle whichFrame, string modelName, integer playerColour)"


SetFrameSpriteAnimationWithRarityByIndex=SetFrameSpriteAnimationWithRarityByIndex
SetFrameSpriteAnimationWithRarityByIndex="SetFrameSpriteAnimationWithRarityByIndex(","framehandle ",,~whichFrame,", ","integer ",,~animIndex,", ","raritycontrol ",,~rarity,")"
SetFrameSpriteAnimationWithRarityByIndexHint="[UjAPI]  nothing SetFrameSpriteAnimationWithRarityByIndex (framehandle whichFrame, integer animIndex, raritycontrol rarity)"


SetFrameSpriteAnimationByIndex=SetFrameSpriteAnimationByIndex
SetFrameSpriteAnimationByIndex="SetFrameSpriteAnimationByIndex(","framehandle ",,~whichFrame,", ","integer ",,~animIndex,")"
SetFrameSpriteAnimationByIndexHint="[UjAPI]  nothing SetFrameSpriteAnimationByIndex (framehandle whichFrame, integer animIndex)"


QueueFrameSpriteAnimationByIndex=QueueFrameSpriteAnimationByIndex
QueueFrameSpriteAnimationByIndex="QueueFrameSpriteAnimationByIndex(","framehandle ",,~whichFrame,", ","integer ",,~animIndex,")"
QueueFrameSpriteAnimationByIndexHint="[UjAPI]  nothing QueueFrameSpriteAnimationByIndex (framehandle whichFrame, integer animIndex)"


SetFrameSpriteAnimationWithRarity=SetFrameSpriteAnimationWithRarity
SetFrameSpriteAnimationWithRarity="SetFrameSpriteAnimationWithRarity(","framehandle ",,~whichFrame,", ","string ",,~animationName,", ","raritycontrol ",,~rarity,")"
SetFrameSpriteAnimationWithRarityHint="[UjAPI]  nothing SetFrameSpriteAnimationWithRarity (framehandle whichFrame, string animationName, raritycontrol rarity)"


SetFrameSpriteAnimation=SetFrameSpriteAnimation
SetFrameSpriteAnimation="SetFrameSpriteAnimation(","framehandle ",,~whichFrame,", ","string ",,~animationName,")"
SetFrameSpriteAnimationHint="[UjAPI]  nothing SetFrameSpriteAnimation (framehandle whichFrame, string animationName)"


QueueFrameSpriteAnimation=QueueFrameSpriteAnimation
QueueFrameSpriteAnimation="QueueFrameSpriteAnimation(","framehandle ",,~whichFrame,", ","string ",,~animationName,")"
QueueFrameSpriteAnimationHint="[UjAPI]  nothing QueueFrameSpriteAnimation (framehandle whichFrame, string animationName)"


SetFrameSpriteAnimationOffsetPercent=SetFrameSpriteAnimationOffsetPercent
SetFrameSpriteAnimationOffsetPercent="SetFrameSpriteAnimationOffsetPercent(","framehandle ",,~whichFrame,", ","real ",,~percent,")"
SetFrameSpriteAnimationOffsetPercentHint="[UjAPI]  nothing SetFrameSpriteAnimationOffsetPercent (framehandle whichFrame, real percent)"


SyncInteger=SyncInteger
SyncInteger="SyncInteger(","string ",,~variableName,")"
SyncIntegerHint="[UjAPI]  nothing SyncInteger (string variableName)"


SyncReal=SyncReal
SyncReal="SyncReal(","string ",,~variableName,")"
SyncRealHint="[UjAPI]  nothing SyncReal (string variableName)"


SyncHandle=SyncHandle
SyncHandle="SyncHandle(","string ",,~variableName,")"
SyncHandleHint="[UjAPI]  nothing SyncHandle (string variableName)"


SyncBoolean=SyncBoolean
SyncBoolean="SyncBoolean(","string ",,~variableName,")"
SyncBooleanHint="[UjAPI]  nothing SyncBoolean (string variableName)"


TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","string ",,~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI]  event TriggerRegisterPlayerVariableSyncEvent (trigger whichTrigger, player whichPlayer, string variableName)"


SyncSavedInteger=SyncSavedInteger
SyncSavedInteger="SyncSavedInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
SyncSavedIntegerHint="[UjAPI]  nothing SyncSavedInteger (hashtable table, integer parentKey, integer childKey)"


SyncSavedReal=SyncSavedReal
SyncSavedReal="SyncSavedReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
SyncSavedRealHint="[UjAPI]  nothing SyncSavedReal (hashtable table, integer parentKey, integer childKey)"


SyncSavedHandle=SyncSavedHandle
SyncSavedHandle="SyncSavedHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
SyncSavedHandleHint="[UjAPI]  nothing SyncSavedHandle (hashtable table, integer parentKey, integer childKey)"


SyncSavedBoolean=SyncSavedBoolean
SyncSavedBoolean="SyncSavedBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
SyncSavedBooleanHint="[UjAPI]  nothing SyncSavedBoolean (hashtable table, integer parentKey, integer childKey)"


TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","hashtable ",,~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI]  event TriggerRegisterPlayerHashtableDataSyncEvent (trigger whichTrigger, player whichPlayer, hashtable whichHashtable)"


SendSyncData=SendSyncData
SendSyncData="SendSyncData(","string ",,~prefix,", ","string ",,~data,")"
SendSyncDataHint="[UjAPI]  boolean SendSyncData (string prefix, string data)"


TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","string ",,~prefix,", ","boolean ",,~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI]  event TriggerRegisterPlayerSyncEvent (trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer)"


TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","oskeytype ",,~whichKey,", ","integer ",,~whichMetaKey,", ","boolean ",,~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI]  event TriggerRegisterPlayerKeyEvent (trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown)"


SetMouseMoveEventScreenAxisEnabled=SetMouseMoveEventScreenAxisEnabled
SetMouseMoveEventScreenAxisEnabled="SetMouseMoveEventScreenAxisEnabled(","boolean ",,~enable,")"
SetMouseMoveEventScreenAxisEnabledHint="[UjAPI]  nothing SetMouseMoveEventScreenAxisEnabled (boolean enable)"


SetMouseMoveEventWorldAxisEnabled=SetMouseMoveEventWorldAxisEnabled
SetMouseMoveEventWorldAxisEnabled="SetMouseMoveEventWorldAxisEnabled(","boolean ",,~enable,")"
SetMouseMoveEventWorldAxisEnabledHint="[UjAPI]  nothing SetMouseMoveEventWorldAxisEnabled (boolean enable)"


SetMouseMoveEventDelay=SetMouseMoveEventDelay
SetMouseMoveEventDelay="SetMouseMoveEventDelay(","integer ",,~delay,")"
SetMouseMoveEventDelayHint="[UjAPI]  nothing SetMouseMoveEventDelay (integer delay)"


SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(","integer ",,~flag,", ","boolean ",,~isSet,")"
SetEventDamageFlagHint="[UjAPI]  boolean SetEventDamageFlag (integer flag, boolean isSet)"


SetEventDamageExtraFlag=SetEventDamageExtraFlag
SetEventDamageExtraFlag="SetEventDamageExtraFlag(","integer ",,~flag,", ","boolean ",,~isSet,")"
SetEventDamageExtraFlagHint="[UjAPI]  boolean SetEventDamageExtraFlag (integer flag, boolean isSet)"


SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(","attacktype ",,~attackType,")"
SetEventAttackTypeHint="[UjAPI]  boolean SetEventAttackType (attacktype attackType)"


SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(","damagetype ",,~damageType,")"
SetEventDamageTypeHint="[UjAPI]  boolean SetEventDamageType (damagetype damageType)"


SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(","integer ",,~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI]  boolean SetEventDamageTypeFlags (integer damageFlags)"


SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(","weapontype ",,~weaponType,")"
SetEventWeaponTypeHint="[UjAPI]  boolean SetEventWeaponType (weapontype weaponType)"


SetEventDamage=SetEventDamage
SetEventDamage="SetEventDamage(","real ",,~damage,")"
SetEventDamageHint="[UjAPI]  nothing SetEventDamage (real damage)"


SetEnemyStartLocPrioCount=SetEnemyStartLocPrioCount
SetEnemyStartLocPrioCount="SetEnemyStartLocPrioCount(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotCount,")"
SetEnemyStartLocPrioCountHint="[UjAPI]  nothing SetEnemyStartLocPrioCount (integer whichStartLoc, integer prioSlotCount)"


SetEnemyStartLocPrio=SetEnemyStartLocPrio
SetEnemyStartLocPrio="SetEnemyStartLocPrio(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotIndex,", ","integer ",,~otherStartLocIndex,", ","startlocprio ",,~priority,")"
SetEnemyStartLocPrioHint="[UjAPI]  nothing SetEnemyStartLocPrio (integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority)"


ParseTags=ParseTags
ParseTags="ParseTags(","string ",,~taggedString,")"
ParseTagsHint="[UjAPI]  string ParseTags (string taggedString)"


TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(","trigger ",,~whichTrigger,", ","integer ",,~whichAbility,", ","string ",,~order,")"
TriggerRegisterCommandEventHint="[UjAPI]  event TriggerRegisterCommandEvent (trigger whichTrigger, integer whichAbility, string order)"


TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(","trigger ",,~whichTrigger,", ","integer ",,~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI]  event TriggerRegisterUpgradeCommandEvent (trigger whichTrigger, integer whichUpgrade)"


SetPlayerHandicapReviveTime=SetPlayerHandicapReviveTime
SetPlayerHandicapReviveTime="SetPlayerHandicapReviveTime(","player ",,~whichPlayer,", ","real ",,~handicap,")"
SetPlayerHandicapReviveTimeHint="[UjAPI]  nothing SetPlayerHandicapReviveTime (player whichPlayer, real handicap)"


SetPlayerHandicapDamage=SetPlayerHandicapDamage
SetPlayerHandicapDamage="SetPlayerHandicapDamage(","player ",,~whichPlayer,", ","real ",,~handicap,")"
SetPlayerHandicapDamageHint="[UjAPI]  nothing SetPlayerHandicapDamage (player whichPlayer, real handicap)"


SetMaxCheckpointSaves=SetMaxCheckpointSaves
SetMaxCheckpointSaves="SetMaxCheckpointSaves(","integer ",,~maxCheckpointSaves,")"
SetMaxCheckpointSavesHint="[UjAPI]  nothing SetMaxCheckpointSaves (integer maxCheckpointSaves)"


SaveGameCheckpoint=SaveGameCheckpoint
SaveGameCheckpoint="SaveGameCheckpoint(","string ",,~saveFileName,", ","boolean ",,~showWindow,")"
SaveGameCheckpointHint="[UjAPI]  nothing SaveGameCheckpoint (string saveFileName, boolean showWindow)"


SetPortraitLight=SetPortraitLight
SetPortraitLight="SetPortraitLight(","string ",,~portraitDNCFile,")"
SetPortraitLightHint="[UjAPI]  nothing SetPortraitLight (string portraitDNCFile)"


CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(","unit ",,~whichUnit,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI]  minimapicon CreateMinimapIconOnUnit (unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(","location ",,~where,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI]  minimapicon CreateMinimapIconAtLoc (location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(","real ",,~x,", ","real ",,~y,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconHint="[UjAPI]  minimapicon CreateMinimapIcon (real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(","string ",,~key,")"
SkinManagerGetLocalPathHint="[UjAPI]  string SkinManagerGetLocalPath (string key)"


DestroyMinimapIcon=DestroyMinimapIcon
DestroyMinimapIcon="DestroyMinimapIcon(","minimapicon ",,~pingId,")"
DestroyMinimapIconHint="[UjAPI]  nothing DestroyMinimapIcon (minimapicon pingId)"


SetMinimapIconVisible=SetMinimapIconVisible
SetMinimapIconVisible="SetMinimapIconVisible(","minimapicon ",,~whichMinimapIcon,", ","boolean ",,~visible,")"
SetMinimapIconVisibleHint="[UjAPI]  nothing SetMinimapIconVisible (minimapicon whichMinimapIcon, boolean visible)"


SetMinimapIconOrphanDestroy=SetMinimapIconOrphanDestroy
SetMinimapIconOrphanDestroy="SetMinimapIconOrphanDestroy(","minimapicon ",,~whichMinimapIcon,", ","boolean ",,~doDestroy,")"
SetMinimapIconOrphanDestroyHint="[UjAPI]  nothing SetMinimapIconOrphanDestroy (minimapicon whichMinimapIcon, boolean doDestroy)"


CameraSetFocalDistance=CameraSetFocalDistance
CameraSetFocalDistance="CameraSetFocalDistance(","real ",,~distance,")"
CameraSetFocalDistanceHint="[UjAPI]  nothing CameraSetFocalDistance (real distance)"


CameraSetDepthOfFieldScale=CameraSetDepthOfFieldScale
CameraSetDepthOfFieldScale="CameraSetDepthOfFieldScale(","real ",,~scale,")"
CameraSetDepthOfFieldScaleHint="[UjAPI]  nothing CameraSetDepthOfFieldScale (real scale)"


SetCinematicAudio=SetCinematicAudio
SetCinematicAudio="SetCinematicAudio(","boolean ",,~cinematicAudio,")"
SetCinematicAudioHint="[UjAPI]  nothing SetCinematicAudio (boolean cinematicAudio)"


StartSoundEx=StartSoundEx
StartSoundEx="StartSoundEx(","sound ",,~soundHandle,", ","boolean ",,~fadeIn,")"
StartSoundExHint="[UjAPI]  nothing StartSoundEx (sound soundHandle, boolean fadeIn)"


SetThematicMusicVolume=SetThematicMusicVolume
SetThematicMusicVolume="SetThematicMusicVolume(","integer ",,~volume,")"
SetThematicMusicVolumeHint="[UjAPI]  nothing SetThematicMusicVolume (integer volume)"


SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(","sound ",,~soundHandle,", ","string ",,~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI]  boolean SetSoundFacialAnimationLabel (sound soundHandle, string animationLabel)"


SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(","sound ",,~soundHandle,", ","string ",,~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI]  boolean SetSoundFacialAnimationGroupLabel (sound soundHandle, string groupLabel)"


SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(","sound ",,~soundHandle,", ","string ",,~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI]  boolean SetSoundFacialAnimationSetFilepath (sound soundHandle, string animationSetFilepath)"


SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(","sound ",,~soundHandle,", ","string ",,~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI]  boolean SetDialogueSpeakerNameKey (sound soundHandle, string speakerName)"


SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(","sound ",,~soundHandle,", ","string ",,~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI]  boolean SetDialogueTextKey (sound soundHandle, string dialogueText)"


AutomationSetTestType=AutomationSetTestType
AutomationSetTestType="AutomationSetTestType(","string ",,~testType,")"
AutomationSetTestTypeHint="[UjAPI]  nothing AutomationSetTestType (string testType)"


AutomationTestStart=AutomationTestStart
AutomationTestStart="AutomationTestStart(","string ",,~testName,")"
AutomationTestStartHint="[UjAPI]  nothing AutomationTestStart (string testName)"


AutomationTestEnd=AutomationTestEnd
AutomationTestEnd="AutomationTestEnd(",")"
AutomationTestEndHint="[UjAPI]  nothing AutomationTestEnd ()"


AutomationTestingFinished=AutomationTestingFinished
AutomationTestingFinished="AutomationTestingFinished(",")"
AutomationTestingFinishedHint="[UjAPI]  nothing AutomationTestingFinished ()"


CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(","integer ",,~abilCode,", ","string ",,~order,")"
CreateCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateCommandButtonEffect (integer abilCode, string order)"


CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(","integer ",,~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateUpgradeCommandButtonEffect (integer whichUprgade)"


CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(","integer ",,~abilCode,")"
CreateLearnCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateLearnCommandButtonEffect (integer abilCode)"


DestroyCommandButtonEffect=DestroyCommandButtonEffect
DestroyCommandButtonEffect="DestroyCommandButtonEffect(","commandbuttoneffect ",,~whichEffect,")"
DestroyCommandButtonEffectHint="[UjAPI]  nothing DestroyCommandButtonEffect (commandbuttoneffect whichEffect)"

DoNothing=Do Nothing
DoNothing="Do nothing"

CommentString=Comment
CommentString="-------- ",~Comment Text," --------"

CustomScriptCode=Custom Script
CustomScriptCode="Custom script:   ",~Script Code
CustomScriptCodeHint=Enter one line of script code.  Example: 'call my_func(udg_my_var)'

TriggerSleepAction=Wait
TriggerSleepAction="Wait ",~Time," seconds"
TriggerSleepActionHint=The duration of this wait is specified in real-time seconds.

PolledWait=Wait (Game-Time)
PolledWait="Wait ",~Time," game-time seconds"
PolledWaitHint=The duration of this wait is specified in game-time seconds.  This is a polled wait, so it may last slightly longer than requested.

WaitForCondition=Wait For Condition
WaitForCondition="Wait until ",~Condition,", checking every ",~Interval," seconds"

WaitForSoundBJ=Wait For Sound
WaitForSoundBJ="Wait for ",~Sound," to be ",~Time," seconds from finished playing"
WaitForSoundBJHint=This action only waits if the sound is currently playing.  If the sound has not yet started, or has already finished, this action does nothing.

SetVariable=Set Variable
SetVariable="Set ",~Variable," = ",~Value

ReturnAction=Skip Remaining Actions
ReturnAction="Skip remaining actions"
ReturnActionHint=This causes all remaining actions in the trigger to be skipped.

IfThenElseMultiple=If / Then / Else, Multiple Functions
IfThenElseMultiple="If (All Conditions are True) then do (Then Actions) else do (Else Actions)"
IfThenElseMultipleHint=Add conditions and actions to this function in the main display.

IfThenElse=If / Then / Else
IfThenElse="If ",~Condition," then do ",~Action," else do ",~Action

ForLoopAMultiple=For Each Integer A, Do Multiple Actions
ForLoopAMultiple="For each (Integer A) from ",~Start," to ",~End,", do (Actions)"
ForLoopAMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopBMultiple=For Each Integer B, Do Multiple Actions
ForLoopBMultiple="For each (Integer B) from ",~Start," to ",~End,", do (Actions)"
ForLoopBMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopVarMultiple=For Each Integer Variable, Do Multiple Actions
ForLoopVarMultiple="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do (Actions)"
ForLoopVarMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopA=For Each Integer A, Do Action
ForLoopA="For each (Integer A) from ",~Start," to ",~End,", do ",~Action
ForLoopAHint=The end value is assumed to be larger than the start value.

ForLoopB=For Each Integer B, Do Action
ForLoopB="For each (Integer B) from ",~Start," to ",~End,", do ",~Action
ForLoopBHint=The end value is assumed to be larger than the start value.

ForLoopVar=For Each Integer Variable, Do Action
ForLoopVar="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do ",~Action
ForLoopVarHint=The end value is assumed to be larger than the start value.

StartMeleeAI=Start Melee AI Script
StartMeleeAI="Start melee AI script for ",~Player,": ",~Script
StartMeleeAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

StartCampaignAI=Start Campaign AI Script
StartCampaignAI="Start campaign AI script for ",~Player,": ",~Script
StartCampaignAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

CommandAI=Send AI Command
CommandAI="Send ",~Player," the AI Command (",~Command,", ",~Data,")"
CommandAIHint=This action is for internal use in AI scripts.

RemoveGuardPosition=Ignore Unit Guard Position
RemoveGuardPosition="Ignore ",~Unit,"'s guard position"
RemoveGuardPositionHint=This action tells the AI to neither use nor replace a given preplaced unit.  This has no effect on Heroes and peon-type units.

RemoveAllGuardPositions=Ignore All Unit Guard Positions
RemoveAllGuardPositions="Ignore the guard positions of all ",~Player," units"
RemoveAllGuardPositionsHint=This action tells the AI for the given player to neither use nor replace any of its preplaced units.  This has no effect on Heroes and peon-type units.

RecycleGuardPosition=Recycle Unit Guard Position
RecycleGuardPosition="Recycle ",~Unit,"'s guard position"
RecycleGuardPositionHint=This action requests that the AI recycle the guard position that once belonged to the specified unit.

LockGuardPosition=Lock Guard Position
LockGuardPosition="Lock guard position of ",~Unit
LockGuardPositionHint=This action prevents the AI from changing the guard position of a unit.

SetUnitAnimation=Play Unit Animation
SetUnitAnimation="Play ",~Unit,"'s ",~Animation Name," animation"
SetUnitAnimationHint=Use 'Reset Unit Animation' to revert to a unit's normal animation.

SetUnitAnimationWithRarity=Play Unit Animation (Specify Rarity)
SetUnitAnimationWithRarity="Play ",~Unit,"'s ",~Animation Name," animation, using only ",~Rarity," animations"
SetUnitAnimationWithRarityHint=This animation will repeat until reset with 'Reset Unit Animation'.

QueueUnitAnimationBJ=Queue Unit Animation
QueueUnitAnimationBJ="Queue ",~Unit,"'s ",~Animation Name," animation"

ResetUnitAnimation=Reset Unit Animation
ResetUnitAnimation="Reset ",~Unit,"'s animation"
ResetUnitAnimationHint=Sets the unit's animation back to whatever the unit is doing.

AddUnitAnimationPropertiesBJ=Add/Remove Unit Animation Tag
AddUnitAnimationPropertiesBJ=~Add/Remove," the ",~Tag," animation tag to ",~Unit

SetUnitLookAt=Lock Body-Part Facing
SetUnitLookAt="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used.  The offset is taken as (X, Y, Z) from the target's feet.

ResetUnitLookAt=Reset Body-Part Facing
ResetUnitLookAt="Reset ",~Unit,"'s body-part facing"
ResetUnitLookAtHint=Returns a unit's body-part facing to normal.

SetUnitScalePercent=Change Unit Size
SetUnitScalePercent="Change ",~Unit,"'s size to (",~X,"%, ",~Y,"%, ",~Z,"%) of its original size"
SetUnitScalePercentHint=The scaling values apply to (Length, Width, Height) when viewing a unit head-on.

SetUnitVertexColorBJ=Change Unit Vertex Coloring
SetUnitVertexColorBJ="Change ",~Unit,"'s vertex coloring to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetUnitVertexColorBJHint=The color values are (Red, Green, Blue).  Most units default to 100% red, green, and blue, with 0% transparency.  A 100% transparent unit is completely invisible.

SetUnitTimeScalePercent=Change Unit Animation Speed
SetUnitTimeScalePercent="Change ",~Unit,"'s animation speed to ",~Percent,"% of its original speed"
SetUnitTimeScalePercentHint=To revert a unit's animation speed to default, set its animation speed to 100%.

SetUnitTurnSpeedBJ=Change Unit Turn Speed
SetUnitTurnSpeedBJ="Change ",~Unit," turn speed to ",~Value
SetUnitTurnSpeedBJHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

SetUnitBlendTimeBJ=Change Unit Blend Time
SetUnitBlendTimeBJ="Change ",~Unit," blend time to ",~Value
SetUnitBlendTimeBJHint=A unit's blend time determines how quickly the unit's body parts turn to face a direction.

SetUnitFlyHeightBJ=Change Unit Flying Height
SetUnitFlyHeightBJ="Change ",~Unit," flying height to ",~Height," at ",~Rate
SetUnitFlyHeightBJHint=Only flying units use flying heights.

SetUnitPropWindowBJ=Change Unit Prop Window Angle
SetUnitPropWindowBJ="Change ",~Unit," prop window angle to ",~Angle

SetDestructableAnimationBJ=Play Destructible Animation
SetDestructableAnimationBJ="Play ",~Destructible,"'s ",~Animation Name," animation"

QueueDestructableAnimationBJ=Queue Destructible Animation
QueueDestructableAnimationBJ="Queue ",~Destructible,"'s ",~Animation Name," animation"

SetDestAnimationSpeedPercent=Change Destructible Animation Speed
SetDestAnimationSpeedPercent="Change ",~Destructible,"'s animation speed to ",~Percent,"% of its original speed"
SetDestAnimationSpeedPercentHint=To revert a destructible's animation speed to default, set its animation speed to 100%.

SetDoodadAnimationRectBJ=Play Animation For Doodads In Rect
SetDoodadAnimationRectBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Rect
SetDoodadAnimationRectBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

SetDoodadAnimationBJ=Play Animation For Doodads In Circle
SetDoodadAnimationBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Radius," of ",~Point
SetDoodadAnimationBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

CameraSetupApplyForPlayer=Apply Camera Object (Timed)
CameraSetupApplyForPlayer=~Apply Method," ",~Camera Object," for ",~Player," over ",~Time," seconds"

PanCameraToTimedLocForPlayer=Pan Camera (Timed)
PanCameraToTimedLocForPlayer="Pan camera for ",~Player," to ",~Point," over ",~Time," seconds"

PanCameraToTimedLocWithZForPlayer=Pan Camera With Interpolated Height (Timed)
PanCameraToTimedLocWithZForPlayer="Pan camera for ",~Player," to ",~Point," with height ",~Z," above the terrain over ",~Time," seconds"
PanCameraToTimedLocWithZForPlayerHint=The camera will not drop below the terrain height during its camera path.

SmartCameraPanBJ=Pan Camera As Necessary (Timed)
SmartCameraPanBJ="Pan camera as necessary for ",~Player," to ",~Point," over ",~Time," seconds"
SmartCameraPanBJHint=If the camera is very far from the destination, it will snap instead of pan.  If the camera is very close to the destination, the pan request will be skipped.

SetCameraFieldForPlayer=Set Camera Field (Timed)
SetCameraFieldForPlayer="Set ",~Player,"'s camera ",~Field," to ",~Value," over ",~Time," seconds"

RotateCameraAroundLocBJ=Rotate Camera Around Point
RotateCameraAroundLocBJ="Rotate camera ",~Angle," degrees around ",~Point," for ",~Player," over ",~Time," seconds"

SetCameraTargetControllerNoZForPlayer=Lock Camera Target To Unit
SetCameraTargetControllerNoZForPlayer="Lock camera target for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,") using ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint=The camera target is offset by (X, Y) from the center of the unit's feet.

SetCameraOrientControllerForPlayerBJ=Lock Camera Orientation To Unit
SetCameraOrientControllerForPlayerBJ="Lock camera orientation for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,")"

SetCinematicCameraForPlayer=Play Cinematic Camera
SetCinematicCameraForPlayer="Run camera for ",~Player," through ",~Camera File," cinematic camera"

StopCameraForPlayerBJ=Stop Camera
StopCameraForPlayerBJ="Stop the camera for ",~Player

ResetToGameCameraForPlayer=Reset Game Camera
ResetToGameCameraForPlayer="Reset camera for ",~Player," to standard game-view over ",~Time," seconds"

CameraSetSmoothingFactorBJ=Change Camera Smoothing Factor
CameraSetSmoothingFactorBJ="Change camera smoothing factor to ",~Factor

CameraResetSmoothingFactorBJ=Reset Camera Smoothing Factor
CameraResetSmoothingFactorBJ="Reset camera smoothing factor"

CameraSetSourceNoiseForPlayer=Sway Camera Source
CameraSetSourceNoiseForPlayer="Sway the camera source for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetSourceNoiseForPlayerHint=This constantly sways the camera source until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetTargetNoiseForPlayer=Sway Camera Target
CameraSetTargetNoiseForPlayer="Sway the camera target for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetTargetNoiseForPlayerHint=This constantly sways the camera target until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetEQNoiseForPlayer=Shake Camera
CameraSetEQNoiseForPlayer="Shake the camera for ",~Player," with magnitude ",~Magnitude
CameraSetEQNoiseForPlayerHint=This constantly shakes the camera until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying/Shaking Camera'.

CameraClearNoiseForPlayer=Stop Swaying/Shaking Camera
CameraClearNoiseForPlayer="Stop swaying/shaking the camera for ",~Player
CameraClearNoiseForPlayerHint=This stops the camera from swaying after a 'Camera - Sway Camera' or 'Camera - Shake Camera' action is used.

AdjustCameraBoundsForPlayerBJ=Extend/Shrink Camera Bounds
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," the camera bounds for ",~Player," west by ",~West,", east by ",~East,", north by ",~North,", and south by ",~South

SetCameraBoundsToRectForPlayerBJ=Set Camera Bounds
SetCameraBoundsToRectForPlayerBJ="Set the camera bounds for ",~Player," to ",~Rect
SetCameraBoundsToRectForPlayerBJHint=This restricts the game camera to the specified rect.  Changing the camera bounds does not change the scale of the minimap.  This should only be called while the camera is facing north.

SetCameraQuickPositionLocForPlayer=Set Spacebar-Point
SetCameraQuickPositionLocForPlayer="Set a spacebar-point for ",~Player," at ",~Point
SetCameraQuickPositionLocForPlayerHint=A spacebar-point is a location that the game camera jumps to when the player presses the spacebar.

TransmissionFromUnitWithNameBJ=Transmission From Unit
TransmissionFromUnitWithNameBJ="Send transmission to ",~Player Group," from ",~Unit," named ",~Name,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint=The duration of 'No sound' is 5 seconds.

TransmissionFromUnitTypeWithNameBJ=Transmission From Unit-Type
TransmissionFromUnitTypeWithNameBJ="Send transmission to ",~Player Group," from a ",~Player," ",~Unit-Type," named ",~Name," at ",~Point,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint=The duration of 'No sound' is 5 seconds.

ForceCinematicSubtitlesBJ=Subtitle Display Override
ForceCinematicSubtitlesBJ="Turn subtitle display override ",~On/Off
ForceCinematicSubtitlesBJHint=Turning this on will cause transmission text to be displayed on the screen even if the user normally has subtitles turned off.

CinematicModeBJ=Cinematic Mode
CinematicModeBJ="Turn cinematic mode ",~On/Off," for ",~Player Group

CinematicModeExBJ=Cinematic Mode (Timed)
CinematicModeExBJ="Turn cinematic mode ",~On/Off," for ",~Player Group," over ",~Time," seconds"

CinematicFadeBJ=Fade Filter
CinematicFadeBJ=~Fade Type," over ",~Duration," seconds using texture ",~Texture," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
CinematicFadeBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CinematicFilterGenericBJ=Advanced Filter
CinematicFilterGenericBJ="Apply a filter over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DisplayCineFilterBJ=Show/Hide Filter
DisplayCineFilterBJ=~Show/Hide," filter"

PingMinimapLocForForce=Ping Minimap
PingMinimapLocForForce="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds"

PingMinimapLocForForceEx=Ping Minimap With Color
PingMinimapLocForForceEx="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds, using a ",~Style," ping of color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint=The color values are (Red, Green, Blue).  Warning pings are always red.

UnitAddIndicatorBJ=Flash Speech Indicator For Unit
UnitAddIndicatorBJ="Flash a speech indicator for ",~Unit," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
UnitAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DestructableAddIndicatorBJ=Flash Speech Indicator For Destructible
DestructableAddIndicatorBJ="Flash a speech indicator for ",~Destructible," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
DestructableAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ItemAddIndicatorBJ=Flash Speech Indicator For Item
ItemAddIndicatorBJ="Flash a speech indicator for ",~Item," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
ItemAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ClearTextMessagesBJ=Clear Text Messages
ClearTextMessagesBJ="Clear the screen of text messages for ",~Player Group

ShowInterfaceForceOff=Letterbox Mode On
ShowInterfaceForceOff="Turn on letterbox mode (hide interface) for ",~Player Group,": fade out over ",~Duration," seconds"
ShowInterfaceForceOffHint=Puts the camera into letterbox mode, hiding the game interface.

ShowInterfaceForceOn=Letterbox Mode Off
ShowInterfaceForceOn="Turn off letterbox mode (show interface) for ",~Player Group,": fade in over ",~Duration," seconds"
ShowInterfaceForceOnHint=Puts the camera into normal (non-letterbox) mode, displaying the game interface.

SetUserControlForceOff=Disable User Control
SetUserControlForceOff="Disable user control for ",~Player Group

SetUserControlForceOn=Enable User Control
SetUserControlForceOn="Enable user control for ",~Player Group

EnableOcclusionBJ=Enable/Disable Occlusion
EnableOcclusionBJ=~Enable/Disable," occlusion for ",~Player Group
EnableOcclusionBJHint=When occlusion is enabled, trees that block vision of units become transparent.

EnableWorldFogBoundaryBJ=Enable/Disable Boundary Tinting
EnableWorldFogBoundaryBJ=~Enable/Disable," boundary tinting for ",~Player Group

StartTimerBJ=Start Timer
StartTimerBJ="Start ",~Timer," as a ",~One-Shot/Repeating," timer that will expire in ",~Time," seconds"

PauseTimerBJ=Pause Timer
PauseTimerBJ=~Pause/Resume," ",~Timer

CreateTimerDialogBJ=Create Timer Window
CreateTimerDialogBJ="Create a timer window for ",~Timer," with title ",~Title
CreateTimerDialogBJHint=Timer Windows cannot be displayed at map initialization.

DestroyTimerDialogBJ=Destroy Timer Window
DestroyTimerDialogBJ="Destroy ",~Timer Window

TimerDialogDisplayForPlayerBJ=Show/Hide Timer Window For Player
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," for ",~Player
TimerDialogDisplayForPlayerBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogDisplayBJ=Show/Hide Timer Window
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogSetTitleBJ=Change Timer Window Title
TimerDialogSetTitleBJ="Change the title of ",~Timer Window," to ",~Title

TimerDialogSetTitleColorBJ=Change Timer Window Title Color
TimerDialogSetTitleColorBJ="Change the color of the title for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTitleColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

TimerDialogSetTimeColorBJ=Change Timer Window Time Color
TimerDialogSetTimeColorBJ="Change the color of the time for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTimeColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CreateDestructableLoc=Create
CreateDestructableLoc="Create a ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

CreateDeadDestructableLocBJ=Create (Dead)
CreateDeadDestructableLocBJ="Create a dead ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableLocBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

KillDestructable=Kill
KillDestructable="Kill ",~Destructible

RemoveDestructable=Remove
RemoveDestructable="Remove ",~Destructible

DestructableRestoreLife=Resurrect
DestructableRestoreLife="Resurrect ",~Destructible," with ",~Value," life and ",~Show/Hide," birth animation"

ShowDestructableBJ=Show/Hide
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint=Hidden destructibles are not displayed, but still affect pathing and visibility.

SetDestructableLifePercentBJ=Set Life (To Percentage)
SetDestructableLifePercentBJ="Set life of ",~Destructible," to ",~Percent,"%"

SetDestructableLife=Set Life (To Value)
SetDestructableLife="Set life of ",~Destructible," to ",~Value

SetDestructableMaxLifeBJ=Set Max Life
SetDestructableMaxLifeBJ="Set max life of ",~Destructible," to ",~Value

ModifyGateBJ=Open/Close/Destroy Gate
ModifyGateBJ=~Open/Close/Destroy," ",~Gate

ChangeElevatorWalls=Open/Close Elevator Walls
ChangeElevatorWalls=~Open/Close," ",~Walls," of ",~Elevator

ChangeElevatorHeight=Set Elevator Height
ChangeElevatorHeight="Set height of ",~Elevator," to ",~Height

SetDestructableInvulnerableBJ=Make Invulnerable/Vulnerable
SetDestructableInvulnerableBJ="Make ",~Destructible," ",~Invulnerable/Vulnerable

SetDestructableOccluderHeight=Set Occlusion Height
SetDestructableOccluderHeight="Set the occlusion height of ",~Destructible," to ",~Height

EnumDestructablesInRectAllMultiple=Pick Every Destructible In Rect And Do Multiple Actions
EnumDestructablesInRectAllMultiple="Pick every destructible in ",~Rect," and do (Actions)"
EnumDestructablesInRectAllMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInCircleBJMultiple=Pick Every Destructible In Circle And Do Multiple Actions
EnumDestructablesInCircleBJMultiple="Pick every destructible within ",~Radius," of ",~Point," and do (Actions)"
EnumDestructablesInCircleBJMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInRectAll=Pick Every Destructible In Rect And Do Action
EnumDestructablesInRectAll="Pick every destructible in ",~Rect," and do ",~Action
EnumDestructablesInRectAllHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.

EnumDestructablesInCircleBJ=Pick Every Destructible In Circle And Do Action
EnumDestructablesInCircleBJ="Pick every destructible within ",~Radius," of ",~Point," and do ",~Action
EnumDestructablesInCircleBJHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.

DialogDisplayBJ=Show/Hide
DialogDisplayBJ=~Show/Hide," ",~Dialog," for ",~Player
DialogDisplayBJHint=Dialogs cannot be displayed at map initialization.

DialogSetMessageBJ=Change Title
DialogSetMessageBJ="Change the title of ",~Dialog," to ",~Title

DialogAddButtonBJ=Create Dialog Button
DialogAddButtonBJ="Create a dialog button for ",~Dialog," labelled ",~Text

DialogClearBJ=Clear
DialogClearBJ="Clear ",~Dialog
DialogClearBJHint=This clears the title and all buttons for the specified dialog.

AddWeatherEffectSaveLast=Create Weather Effect
AddWeatherEffectSaveLast="Create at ",~Rect," the weather effect ",~Weather Id

EnableWeatherEffect=Enable/Disable Weather Effect
EnableWeatherEffect="Turn ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint=You can create weather effects via the 'Environment - Create Weather Effect' action.

RemoveWeatherEffectBJ=Remove Weather Effect
RemoveWeatherEffectBJ="Remove ",~Weather Effect

TerrainDeformationCraterBJ=Create Terrain Deformation: Crater
TerrainDeformationCraterBJ="Create a ",~Duration," second ",~Type," crater deformation at ",~Point," with radius ",~Radius," and depth ",~Depth
TerrainDeformationCraterBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.  Permanent deformations are not preserved in saved game files.

TerrainDeformationRippleBJ=Create Terrain Deformation: Ripple
TerrainDeformationRippleBJ="Create a ",~Duration," second ",~Type," ripple deformation at ",~Point," with starting radius ",~Radius,", ending radius ",~Radius,", and depth ",~Depth,", using ",~Time," second ripples spaced ",~Distance," apart"
TerrainDeformationRippleBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationWaveBJ=Create Terrain Deformation: Wave
TerrainDeformationWaveBJ="Create a ",~Duration," second wave deformation from ",~Source," to ",~Target," with radius ",~Radius,", depth ",~Depth,", and a ",~Delay," second trailing delay"
TerrainDeformationWaveBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.

TerrainDeformationRandomBJ=Create Terrain Deformation: Random
TerrainDeformationRandomBJ="Create a ",~Duration," second random deformation at ",~Point," with radius ",~Radius,", using depths between ",~Minimum," and ",~Maximum,", updating every ",~Update Interval," seconds"
TerrainDeformationRandomBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationStopBJ=Stop Terrain Deformation
TerrainDeformationStopBJ="Stop ",~Terrain Deformation," over ",~Duration," seconds"
TerrainDeformationStopBJHint=The deformation will smoothly reduce to nothing over the duration.

TerrainDeformStopAll=Stop All Terrain Deformations
TerrainDeformStopAll="Stop all active terrain deformations instantly"
TerrainDeformStopAllHint=This includes any terrain deformations indirectly caused by spells or abilities.

SetWaterDeforms=Turn Water Deformation On/Off
SetWaterDeforms="Turn water deformation ",~On/Off
SetWaterDeformsHint=When this is turned on, terrain deformations will also apply to any water above the terrain.  This does not work with permanent deformations.

SetTerrainTypeBJ=Change Terrain Type
SetTerrainTypeBJ="Change terrain type at ",~Location," to ",~Terrain Type," using variation ",~Variation," in an area of size ",~Area," and shape ",~Shape
SetTerrainTypeBJHint=Use a variation of -1 to generate random variations across the area.

SetTerrainPathableBJ=Turn Terrain Pathing On/Off
SetTerrainPathableBJ="Set terrain pathing at ",~Location," of type ",~Pathing," to ",~On/Off
SetTerrainPathableBJHint=Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.).

SetWaterBaseColorBJ=Set Water Tinting Color
SetWaterBaseColorBJ="Change water tinting color to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetWaterBaseColorBJHint=The color values are (Red, Green, Blue).  100% transparent water is completely invisible.

SetSkyModel=Set Sky
SetSkyModel="Set sky to ",~Sky

SetTerrainFogExBJ=Set Fog
SetTerrainFogExBJ="Set fog to style ",~Style,", z-start ",~Z-Start,", z-end ",~Z-End,", density ",~Density," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint=The color values are (Red, Green, Blue).

ResetTerrainFogBJ=Reset Fog
ResetTerrainFogBJ="Reset fog to default values"

SetBlightRectBJ=Create/Remove Blight Rect
SetBlightRectBJ=~Create/Remove," Blight for ",~Player," across ",~Rect

SetBlightRadiusLocBJ=Create/Remove Blight Circle
SetBlightRadiusLocBJ=~Create/Remove," Blight for ",~Player," from ",~Point," to a radius of ",~Radius

CreateTextTagLocBJ=Create Floating Text At Point
CreateTextTagLocBJ="Create floating text that reads ",~Message," at ",~Point," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagLocBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

CreateTextTagUnitBJ=Create Floating Text Above Unit
CreateTextTagUnitBJ="Create floating text that reads ",~Message," above ",~Unit," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagUnitBJHint=Floating text created in this manner does not follow the unit's movement.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

DestroyTextTagBJ=Destroy
DestroyTextTagBJ="Destroy ",~Floating Text

ShowTextTagForceBJ=Show/Hide
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," for ",~Player Group

SetTextTagVelocityBJ=Set Velocity
SetTextTagVelocityBJ="Set the velocity of ",~Floating Text," to ",~Speed," towards ",~Angle," degrees"
SetTextTagVelocityBJHint=You can only accurately set the velocity of floating text once, when it is first created.  The angle is expected in degrees, with 0 being east and 90 being north.

SetTextTagColorBJ=Change Color
SetTextTagColorBJ="Change the color of ",~Floating Text," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetTextTagColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetTextTagPosBJ=Change Position To Point
SetTextTagPosBJ="Change the position of ",~Floating Text," to ",~Point," with Z offset ",~Z

SetTextTagPosUnitBJ=Change Position To Unit
SetTextTagPosUnitBJ="Change the position of ",~Floating Text," to ",~Unit," with Z offset ",~Z

SetTextTagTextBJ=Change Text
SetTextTagTextBJ="Change text of ",~Floating Text," to ",~Message," using font size ",~Size

SetTextTagSuspendedBJ=Suspend/Resume
SetTextTagSuspendedBJ="Change ",~Floating Text,": ",~Enable/Disable," suspend state"

SetTextTagPermanentBJ=Permanent/Expires
SetTextTagPermanentBJ="Change ",~Floating Text,": ",~Enable/Disable," permanence"

SetTextTagLifespanBJ=Change Lifespan
SetTextTagLifespanBJ="Change the lifespan of ",~Floating Text," to ",~Time," seconds"
SetTextTagLifespanBJHint=This does not affect permanent floating text.  This sets the age at which floating text is removed and cleaned up.

SetTextTagFadepointBJ=Change Fading Age
SetTextTagFadepointBJ="Change the fading age of ",~Floating Text," to ",~Time," seconds"
SetTextTagFadepointBJHint=This does not affect permanent floating text.  This sets the age at which floating text begins fading.

SetTextTagAgeBJ=Change Age
SetTextTagAgeBJ="Change the age of ",~Floating Text," to ",~Time," seconds"
SetTextTagAgeBJHint=This does not affect permanent floating text.

DisplayTextToForce=Text Message (Auto-Timed) (Auto-Timed)
DisplayTextToForce="Display to ",~Player Group," the text: ",~Text
DisplayTextToForceHint=The text is shown for an amount of time that automatically increases with the text length.

DisplayTimedTextToForce=Text Message (Explicitly Timed) (Explicitly Timed)
DisplayTimedTextToForce="Display to ",~Player Group," for ",~Time," seconds the text: ",~Text

PauseGameOn=Pause Game
PauseGameOn="Pause the game"

PauseGameOff=Unpause Game
PauseGameOff="Unpause the game"

SetGameSpeed=Set Game Speed
SetGameSpeed="Set game speed to ",~Speed
SetGameSpeedHint=You can lock the game speed with the 'Game - Lock Game Speed' trigger action.

LockGameSpeedBJ=Lock Game Speed
LockGameSpeedBJ="Lock the game speed"
LockGameSpeedBJHint=This prevents the game speed from being modified.  Not even triggers can modify the game speed when it is locked.

UnlockGameSpeedBJ=Unlock Game Speed
UnlockGameSpeedBJ="Unlock the game speed"
UnlockGameSpeedBJHint=This allows the game speed to be modified again after a 'Game - Lock Game Speed' action is used.

SetMapFlag=Set Map Flag
SetMapFlag="Set ",~Map Flag," to ",~On/Off

SetTimeOfDay=Set Time Of Day
SetTimeOfDay="Set the time of day to ",~Time
SetTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

SetTimeOfDayScalePercentBJ=Set Time Of Day Speed
SetTimeOfDayScalePercentBJ="Set time of day speed to ",~Percent,"% of the default speed"
SetTimeOfDayScalePercentBJHint=Use 100% to revert the speed to normal.

UseTimeOfDayBJ=Turn Day/Night Cycle On/Off
UseTimeOfDayBJ="Turn the day/night cycle ",~On/Off

ShareEverythingWithTeam=Share Vision And Full Unit Control With Team
ShareEverythingWithTeam="Grant shared vision and full shared unit control of ",~Player," units with his/her allies"
ShareEverythingWithTeamHint=Two players are considered allies if they are both allied with each other.

MakeUnitsPassiveForPlayer=Give Units To Neutral Victim
MakeUnitsPassiveForPlayer="Give all ",~Player," units to the Neutral Victim player"
MakeUnitsPassiveForPlayerHint=By default, the Neutral Victim player treats all other players as allies, but is treated as an enemy by all other players.

SetNextLevelBJ=Set Next Level
SetNextLevelBJ="Set the next level to ",~Level
SetNextLevelBJHint=This sets a level to be started after the current game ends.

CustomVictoryBJ=Victory
CustomVictoryBJ="Victory ",~Player," (",~Show/Skip," dialogs, ",~Show/Skip," scores)"

CustomDefeatBJ=Defeat
CustomDefeatBJ="Defeat ",~Player," with the message: ",~Message

LoadGameBJ=Load Game
LoadGameBJ="Load ",~Filename," (",~Show/Skip," scores)"

SaveAndLoadGameBJ=Save Game And Load Game
SaveAndLoadGameBJ="Save game as ",~Filename," and load ",~Filename," (",~Show/Skip," scores)"

SaveAndChangeLevelBJ=Save Game And Change Level
SaveAndChangeLevelBJ="Save game as ",~Filename," and change level to ",~Filename," (",~Show/Skip," scores)"

RenameSaveDirectoryBJ=Rename Saved-Game Folder
RenameSaveDirectoryBJ="Rename the ",~Folder," saved-game folder to ",~Folder

RemoveSaveDirectoryBJ=Delete Saved-Game Folder
RemoveSaveDirectoryBJ="Delete the ",~Folder," saved-game folder"
RemoveSaveDirectoryBJHint=This deletes the specified saved-game folder and all of its contents.

CopySaveGameBJ=Copy Saved-Game
CopySaveGameBJ="Create a copy of the ",~Filename," saved-game and name it ",~Filename
CopySaveGameBJHint=This action only works in response to Game Load and Game Save events, and can only be used up to 16 times per event.

SetCampaignMenuRaceBJ=Set Campaign Screen
SetCampaignMenuRaceBJ="Set campaign to ",~Campaign

SetMissionAvailableBJ=Enable/Disable Mission
SetMissionAvailableBJ=~Enable/Disable," ",~Mission

SetCampaignAvailableBJ=Enable/Disable Campaign
SetCampaignAvailableBJ=~Enable/Disable," the ",~Campaign

SetCinematicAvailableBJ=Enable/Disable Cinematic
SetCinematicAvailableBJ=~Enable/Disable," the ",~Cinematic

ShowCustomCampaignButton=Show/Hide Custom Campaign Button
ShowCustomCampaignButton=~Show/Hide," custom campaign button ",~Number

SetAllyColorFilterState=Set Ally Color Filter
SetAllyColorFilterState="Set ally color filtering to ",~State
SetAllyColorFilterStateHint=A value of 0 disables filtering.  A value of 1 enables filtering for the minimap.  A value of 2 enables filtering for the minimap and the game view.

SetCreepCampFilterState=Show/Hide Creep Camps On Minimap
SetCreepCampFilterState=~Show/Hide," creep camps on the minimap"

EnableMinimapFilterButtons=Enable/Disable Minimap Buttons
EnableMinimapFilterButtons=~Enable/Disable," ally color button and ",~Enable/Disable," creep camp button"

EnableSelect=Enable/Disable Selection
EnableSelect=~Enable/Disable," selection and deselection functionality (",~Enable/Disable," selection circles)"
EnableSelectHint=Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled.

EnableDragSelect=Enable/Disable Drag-Selection
EnableDragSelect=~Enable/Disable," drag-selection functionality (",~Enable/Disable," drag-selection box)"

EnablePreSelect=Enable/Disable Pre-Selection
EnablePreSelect=~Enable/Disable," pre-selection functionality (",~Enable/Disable," pre-selection circles, life bars, and object info)"

ForceUIKeyBJ=Force UI Key
ForceUIKeyBJ="Force ",~Player," to press the key ",~Key

ForceUICancelBJ=Force UI Cancel
ForceUICancelBJ="Force ",~Player," to press Escape/Cancel"

Preload=Preload File
Preload="Preload ",~Filename

PreloadEnd=Begin Preloading
PreloadEnd="Begin preloading with a ",~Time," second timeout"

Preloader=Preload Batch
Preloader="Preload all files listed in ",~Filename

InitGameCacheBJ=Create Game Cache
InitGameCacheBJ="Create a game cache from ",~Filename
InitGameCacheBJHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created.

SaveGameCacheBJ=Save Game Cache
SaveGameCacheBJ="Save ",~Game Cache
SaveGameCacheBJHint=Saves the game cache, using the same filename from which it was created.

StoreUnitBJ=Store Unit
StoreUnitBJ="Store ",~Unit," as ",~Label," of ",~Category," in ",~Game Cache
StoreUnitBJHint=Use the 'Game Cache - Restore Unit' actions to load this unit from a cache.  Label and Category names should not contain spaces.

StoreRealBJ=Store Real
StoreRealBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreRealBJHint=Use the 'Game Cache - Load Real Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreIntegerBJ=Store Integer
StoreIntegerBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreIntegerBJHint=Use the 'Game Cache - Load Integer Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreBooleanBJ=Store Boolean
StoreBooleanBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreBooleanBJHint=Use the 'Game Cache - Load Boolean Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreStringBJ=Store String
StoreStringBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreStringBJHint=Use the 'Game Cache - Load String Value' function to load this value from a cache.  Label and Category names should not contain spaces.

InitHashtableBJ=Create Hashtable
InitHashtableBJ="Create a hashtable"
InitHashtableBJHint=A hashtable allows you to store data.

SaveRealBJ=Save Real
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint=Use the 'Hashtable - Load Real Value' function to load this value from a hashtable.

SaveIntegerBJ=Save Integer
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint=Use the 'Hashtable - Load Integer Value' function to load this value from a hashtable.

SaveBooleanBJ=Save Boolean
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint=Use the 'Hashtable - Load Boolean Value' function to load this value from a hashtable.

SaveStringBJ=Save String
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint=Use the 'Hashtable - Load String Value' function to load this value from a hashtable.

SavePlayerHandleBJ=Save Player Handle
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint=Use the 'Hashtable - Load Player' actions to load this player from a hashtable.

SaveWidgetHandleBJ=Save Widget Handle
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~%s
SaveWidgetHandleBJHint=Use the 'Hashtable - Load Widget' actions to load this widget from a hashtable.

SaveDestructableHandleBJ=Save Destructable Handle
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint=Use the 'Hashtable - Load Destructable' actions to load this destructable from a hashtable.

SaveItemHandleBJ=Save Item Handle
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint=Use the 'Hashtable - Load Item' actions to load this item from a hashtable.

SaveUnitHandleBJ=Save Unit Handle
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint=Use the 'Hashtable - Load Unit' actions to load this unit from a hashtable.

SaveAbilityHandleBJ=Save Ability Handle
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~%s
SaveAbilityHandleBJHint=Use the 'Hashtable - Load Ability' actions to load this ability from a hashtable.

SaveTimerHandleBJ=Save Timer Handle
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint=Use the 'Hashtable - Load Timer' actions to load this timer from a hashtable.

SaveTriggerHandleBJ=Save Trigger Handle
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint=Use the 'Hashtable - Load Trigger' actions to load this trigger from a hashtable.

SaveTriggerConditionHandleBJ=Save Triggercondition Handle
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint=Use the 'Hashtable - Load Triggercondition' actions to load this triggercondition from a hashtable.

SaveTriggerActionHandleBJ=Save Triggeraction Handle
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint=Use the 'Hashtable - Load Triggeraction' actions to load this triggeraction from a hashtable.

SaveTriggerEventHandleBJ=Save Eventid Handle
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~%s
SaveTriggerEventHandleBJHint=Use the 'Hashtable - Load Eventid' actions to load this eventid from a hashtable.

SaveForceHandleBJ=Save Force Handle
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint=Use the 'Hashtable - Load Force' actions to load this force from a hashtable.

SaveGroupHandleBJ=Save Group Handle
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint=Use the 'Hashtable - Load Group' actions to load this group from a hashtable.

SaveLocationHandleBJ=Save Location Handle
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint=Use the 'Hashtable - Load Location' actions to load this location from a hashtable.

SaveRegionHandleBJ=Save Region Handle
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~%s
SaveRegionHandleBJHint=Use the 'Hashtable - Load Region' actions to load this region from a hashtable.

SaveRectHandleBJ=Save Rect Handle
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint=Use the 'Hashtable - Load Rect' actions to load this rect from a hashtable.

SaveBooleanExprHandleBJ=Save Boolexpr Handle
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint=Use the 'Hashtable - Load Boolexpr' actions to load this boolexpr from a hashtable.

SaveSoundHandleBJ=Save Sound Handle
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint=Use the 'Hashtable - Load Sound' actions to load this sound from a hashtable.

SaveEffectHandleBJ=Save Effect Handle
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint=Use the 'Hashtable - Load Effect' actions to load this effect from a hashtable.

SaveUnitPoolHandleBJ=Save Unitpool Handle
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~%s
SaveUnitPoolHandleBJHint=Use the 'Hashtable - Load Unitpool' actions to load this unitpool from a hashtable.

SaveItemPoolHandleBJ=Save Itempool Handle
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~%s
SaveItemPoolHandleBJHint=Use the 'Hashtable - Load Itempool' actions to load this itempool from a hashtable.

SaveQuestHandleBJ=Save Quest Handle
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint=Use the 'Hashtable - Load Quest' actions to load this quest from a hashtable.

SaveQuestItemHandleBJ=Save Questitem Handle
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint=Use the 'Hashtable - Load Questitem' actions to load this questitem from a hashtable.

SaveDefeatConditionHandleBJ=Save Defeatcondition Handle
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint=Use the 'Hashtable - Load Defeatcondition' actions to load this defeatcondition from a hashtable.

SaveTimerDialogHandleBJ=Save Timerdialog Handle
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint=Use the 'Hashtable - Load Timerdialog' actions to load this timerdialog from a hashtable.

SaveLeaderboardHandleBJ=Save Leaderboard Handle
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint=Use the 'Hashtable - Load Leaderboard' actions to load this leaderboard from a hashtable.

SaveMultiboardHandleBJ=Save Multiboard Handle
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint=Use the 'Hashtable - Load Multiboard' actions to load this multiboard from a hashtable.

SaveMultiboardItemHandleBJ=Save Multiboarditem Handle
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~%s
SaveMultiboardItemHandleBJHint=Use the 'Hashtable - Load Multiboarditem' actions to load this multiboarditem from a hashtable.

SaveTrackableHandleBJ=Save Trackable Handle
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~%s
SaveTrackableHandleBJHint=Use the 'Hashtable - Load Trackable' actions to load this trackable from a hashtable.

SaveGameCacheHandleBJ=Save Gamecache Handle
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint=Use the 'Hashtable - Load Gamecache' actions to load this gamecache from a hashtable.

SaveDialogHandleBJ=Save Dialog Handle
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint=Use the 'Hashtable - Load Dialog' actions to load this dialog from a hashtable.

SaveButtonHandleBJ=Save Button Handle
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint=Use the 'Hashtable - Load Button' actions to load this button from a hashtable.

SaveTextTagHandleBJ=Save Texttag Handle
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint=Use the 'Hashtable - Load Texttag' actions to load this texttag from a hashtable.

SaveLightningHandleBJ=Save Lightning Handle
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint=Use the 'Hashtable - Load Lightning' actions to load this lightning from a hashtable.

SaveImageHandleBJ=Save Image Handle
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint=Use the 'Hashtable - Load Image' actions to load this image from a hashtable.

SaveUbersplatHandleBJ=Save Ubersplat Handle
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint=Use the 'Hashtable - Load Ubersplat' actions to load this ubersplat from a hashtable.

SaveFogStateHandleBJ=Save Fogstate Handle
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint=Use the 'Hashtable - Load Fogstate' actions to load this fogstate from a hashtable.

SaveFogModifierHandleBJ=Save Fogmodifier Handle
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint=Use the 'Hashtable - Load Fogmodifier' actions to load this fogmodifier from a hashtable.

RestoreUnitLocFacingAngleBJ=Restore Unit Facing Angle
RestoreUnitLocFacingAngleBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Angle
RestoreUnitLocFacingAngleBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

RestoreUnitLocFacingPointBJ=Restore Unit Facing Point
RestoreUnitLocFacingPointBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Point
RestoreUnitLocFacingPointBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

ReloadGameCachesFromDisk=Reload All
ReloadGameCachesFromDisk="Reload all game cache data from disk"

FlushGameCacheBJ=Clear Game Cache
FlushGameCacheBJ="Clear ",~Game Cache
FlushGameCacheBJHint=Clears all labels of all categories in a game cache.

FlushStoredMissionBJ=Clear Category
FlushStoredMissionBJ="Clear all labels of ",~Category," in ",~Game Cache
FlushStoredMissionBJHint=Clears all labels of a specific category in a game cache.

FlushParentHashtableBJ=Clear Parent Hashtable
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint=Clears all parent and child hashtables.

FlushChildHashtableBJ=Clear Child Hashtable
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint=Clears all childen of a specific parent in a hashtable.

SelectHeroSkill=Learn Skill
SelectHeroSkill="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkillHint=This only works if the Hero has at least one skill point to spend.

SetHeroLevel=Set Level
SetHeroLevel="Set ",~Hero," Hero-level to ",~Level,", ",~Show/Hide," level-up graphics"

SetHeroXP=Set Experience
SetHeroXP="Set ",~Hero," experience to ",~Quantity,", ",~Show/Hide," level-up graphics"

AddHeroXPSwapped=Add Experience
AddHeroXPSwapped="Add ",~Quantity," experience to ",~Hero,", ",~Show/Hide," level-up graphics"

SuspendHeroXPBJ=Enable/Disable Experience Gain
SuspendHeroXPBJ=~Enable/Disable," experience gain for ",~Hero

SetPlayerHandicapXPBJ=Set Experience Rate
SetPlayerHandicapXPBJ="Make ",~Player," Heroes gain ",~Percent,"% experience from future kills"

ReviveHeroLoc=Revive (Instantly)
ReviveHeroLoc="Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive.

ModifyHeroStat=Modify Hero Attribute
ModifyHeroStat="Modify ",~Attribute," of ",~Hero,": ",~Modify," ",~Value

ModifyHeroSkillPoints=Modify Hero Skill Points
ModifyHeroSkillPoints="Modify unspent skill points of ",~Hero,": ",~Modify," ",~Value," points"

SetReservedLocalHeroButtons=Reserve Hero Buttons
SetReservedLocalHeroButtons="Reserve ",~Number," Hero buttons for the local player"
SetReservedLocalHeroButtonsHint=Button slots reserved by this action are not used by Heroes controlled via shared unit control.

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Give ",~Item," to ",~Hero

UnitAddItemByIdSwapped=Create Item For Hero
UnitAddItemByIdSwapped="Create ",~Item-Type," and give it to ",~Hero

UnitRemoveItemSwapped=Drop Item From Hero
UnitRemoveItemSwapped="Drop ",~Item," from ",~Hero
UnitRemoveItemSwappedHint=The item is removed from the Hero and placed on the ground at the Hero's feet.

UnitRemoveItemFromSlotSwapped=Drop Item From Hero Inventory Slot
UnitRemoveItemFromSlotSwapped="Drop the item from slot ",~Index," of ",~Hero
UnitRemoveItemFromSlotSwappedHint=If an item exists in the given slot, it is removed from the Hero and placed on the ground at the Hero's feet.

UnitUseItemTarget=Use Item On A Unit
UnitUseItemTarget="Order ",~Hero," to use ",~Item," on ",~Unit

UnitUseItemPointLoc=Use Item On A Point
UnitUseItemPointLoc="Order ",~Hero," to use ",~Item," on ",~Point

UnitUseItemDestructable=Use Item On A Destructible
UnitUseItemDestructable="Order ",~Hero," to use ",~Item," on ",~Destructible

UnitUseItem=Use Item
UnitUseItem="Order ",~Hero," to use ",~Item

CreateItemLoc=Create
CreateItemLoc="Create ",~Item," at ",~Point

RemoveItem=Remove
RemoveItem="Remove ",~Item

SetItemVisibleBJ=Show/Hide Item
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint=This hides items on the ground.  It does not affect items held by units.

SetItemPositionLoc=Move (Instantly)
SetItemPositionLoc="Move ",~Item," to ",~Point

SetItemLifeBJ=Set Life
SetItemLifeBJ="Set life of ",~Item," to ",~Value

SetItemCharges=Set Charges Remaining
SetItemCharges="Set charges remaining in ",~Item," to ",~Charges
SetItemChargesHint=Use a value of zero to give the item unlimited charges.

SetItemInvulnerableBJ=Make Invulnerable/Vulnerable
SetItemInvulnerableBJ="Make ",~Item," ",~Invulnerable/Vulnerable

SetItemPawnable=Make Pawnable
SetItemPawnable="Make ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint=A pawnable item can be sold at item vendors.

SetItemDroppableBJ=Make Undroppable
SetItemDroppableBJ="Make ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint=An undroppable item cannot be removed from a Hero's inventory once it has been picked up.

SetItemDropOnDeathBJ=Make Item Drop From Heroes Upon Death
SetItemDropOnDeathBJ="Make ",~Item," ",~Drop from/Stay with," Heroes upon death"

SetItemPlayerBJ=Change Owner
SetItemPlayerBJ="Change ownership of ",~Item," to ",~Player," and ",~Change/Retain Color
SetItemPlayerBJHint=Not all items are capable of changing color.

SetItemUserData=Set Custom Value
SetItemUserData="Set the custom value of ",~Item," to ",~Index
SetItemUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

EnumItemsInRectBJMultiple=Pick Every Item In Rect And Do Multiple Actions
EnumItemsInRectBJMultiple="Pick every item in ",~Rect," and do (Actions)"
EnumItemsInRectBJMultipleHint=Use 'Picked Item' to refer each item as it is picked.  This works for every item in the rect, including hidden items.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumItemsInRectBJ=Pick Every Item In Rect And Do Action
EnumItemsInRectBJ="Pick every item in ",~Rect," and do ",~Action
EnumItemsInRectBJHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function.

CreateImageBJ=Create
CreateImageBJ="Create an image using ",~Image," of size ",~Size," at ",~Point," with Z offset ",~Z," using image type ",~Type
CreateImageBJHint=Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly.

DestroyImage=Destroy
DestroyImage="Destroy ",~Image

ShowImageBJ=Show/Hide
ShowImageBJ=~Show/Hide," ",~Image

SetImageConstantHeight=Change Constant Height
SetImageConstantHeight="Change the height state of ",~Image," to ",~Enable/Disable," at ",~Height

SetImagePositionBJ=Change Position
SetImagePositionBJ="Change the position of ",~Image," to ",~Position," with Z offset ",~Z
SetImagePositionBJHint=The point specified is used as the bottom-left corner of the image.

SetImageColorBJ=Change Color
SetImageColorBJ="Change the color of ",~Image," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetImageColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetImageRender=Change Render State
SetImageRender="Change ",~Image,": ",~Enable/Disable," rendering state"

SetImageRenderAlways=Change Render Always State
SetImageRenderAlways="Change ",~Image,": ",~Enable/Disable," render always state"

SetImageAboveWater=Change Above Water State
SetImageAboveWater="Change ",~Image,": ",~Enable/Disable," above water state, ",~Enable/Disable," water alpha inheritance"

SetImageType=Change Type
SetImageType="Change type of ",~Image," to ",~Type

CreateLeaderboardBJ=Create
CreateLeaderboardBJ="Create a leaderboard for ",~Player Group," titled ",~Title
CreateLeaderboardBJHint=Leaderboards cannot be displayed at map initialization.  If no title is specified, the title line will not be displayed.

DestroyLeaderboardBJ=Destroy
DestroyLeaderboardBJ="Destroy ",~Leaderboard

LeaderboardSortItemsBJ=Sort
LeaderboardSortItemsBJ="Sort ",~Leaderboard," by ",~Field," in ",~Ascending/Descending," order"

LeaderboardDisplayBJ=Show/Hide
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint=Leaderboards cannot be displayed at map initialization.

LeaderboardSetLabelBJ=Change Title
LeaderboardSetLabelBJ="Change the title of ",~Leaderboard," to ",~Title

LeaderboardSetLabelColorBJ=Change Label Colors
LeaderboardSetLabelColorBJ="Change the color of all labels for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetValueColorBJ=Change Value Colors
LeaderboardSetValueColorBJ="Change the color of all values for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetStyleBJ=Change Style
LeaderboardSetStyleBJ="Change the display style for ",~Leaderboard," to ",~Show/Hide," the title, ",~Show/Hide," labels, ",~Show/Hide," values, and ",~Show/Hide," icons"

LeaderboardAddItemBJ=Add Player
LeaderboardAddItemBJ="Add ",~Player," to ",~Leaderboard," with label ",~Label," and value ",~Value

LeaderboardRemovePlayerItemBJ=Remove Player
LeaderboardRemovePlayerItemBJ="Remove ",~Player," from ",~Leaderboard

LeaderboardSetPlayerItemLabelBJ=Change Player Label
LeaderboardSetPlayerItemLabelBJ="Change the label for ",~Player," in ",~Leaderboard," to ",~Label

LeaderboardSetPlayerItemLabelColorBJ=Change Player Label Color
LeaderboardSetPlayerItemLabelColorBJ="Change the color of the label for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemValueBJ=Change Player Value
LeaderboardSetPlayerItemValueBJ="Change the value for ",~Player," in ",~Leaderboard," to ",~Value

LeaderboardSetPlayerItemValueColorBJ=Change Player Value Color
LeaderboardSetPlayerItemValueColorBJ="Change the color of the value for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemStyleBJ=Change Player Style
LeaderboardSetPlayerItemStyleBJ="Change the display style for ",~Player," in ",~Leaderboard," to ",~Show/Hide," the label, ",~Show/Hide," the value, and ",~Show/Hide," the icon"

AddLightningLoc=Create Lightning Effect
AddLightningLoc="Create a ",~Type," lightning effect from source ",~Point," to target ",~Point

DestroyLightningBJ=Destroy Lightning Effect
DestroyLightningBJ="Destroy ",~Lightning

MoveLightningLoc=Move Lightning Effect
MoveLightningLoc="Move ",~Lightning," to source ",~Point," and target ",~Point

SetLightningColorBJ=Set Lightning Effect Color
SetLightningColorBJ="Change color of ",~Lightning," to (",~Red," ",~Green," ",~Blue,") with ",~Alpha," alpha"
SetLightningColorBJHint=The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible.

MeleeStartingVisibility=Use Melee Time Of Day
MeleeStartingVisibility="Use melee time of day (for all players)"

MeleeStartingHeroLimit=Hero Limits
MeleeStartingHeroLimit="Limit Heroes to 1 per Hero-type (for all players)"

MeleeGrantHeroItems=Hero Starting Items
MeleeGrantHeroItems="Give trained Heroes a Scroll of Town Portal (for all players)"

MeleeStartingResources=Set Starting Resources
MeleeStartingResources="Set starting resources (for all players)"

MeleeClearExcessUnits=Remove Excess Units
MeleeClearExcessUnits="Remove creeps and critters from used start locations (for all players)"
MeleeClearExcessUnitsHint=Removes all Neutral Hostile units and non-building Neutral Passive units within a radius of 1024 around each used start location.

MeleeStartingUnits=Create Starting Units
MeleeStartingUnits="Create starting units (for all players)"

MeleeStartingAI=Run AI
MeleeStartingAI="Run melee AI scripts (for computer players)"
MeleeStartingAIHint=Players should have starting units and resources before this action is run.

MeleeInitVictoryDefeat=Victory/Defeat Conditions
MeleeInitVictoryDefeat="Enforce victory/defeat conditions (for all players)"
MeleeInitVictoryDefeatHint=Players should have starting units before this action is run.

MeleeStartingUnitsForPlayer=Create Starting Units For Player
MeleeStartingUnitsForPlayer="Create ",~Race," starting units for ",~Player," at ",~Point," (",~Include/Exclude," Heroes)"
MeleeStartingUnitsForPlayerHint=This action creates the same starting units that are created for melee games.

CreateMultiboardBJ=Create
CreateMultiboardBJ="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title
CreateMultiboardBJHint=Multiboards cannot be displayed at map initialization.

DestroyMultiboardBJ=Destroy
DestroyMultiboardBJ="Destroy ",~Multiboard

MultiboardDisplayBJ=Show/Hide
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint=Multiboards cannot be displayed at map initialization.

MultiboardAllowDisplayBJ=Show/Hide All Multiboards
MultiboardAllowDisplayBJ=~Show/Hide," all multiboards"

MultiboardMinimizeBJ=Minimize/Maximize
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint=A minimized multiboard will only display the title.

MultiboardClear=Clear
MultiboardClear="Clear ",~Multiboard
MultiboardClearHint=This will remove all rows and columns from the multiboard.

MultiboardSetTitleText=Change Title
MultiboardSetTitleText="Change the title of ",~Multiboard," to ",~Title

MultiboardSetTitleTextColorBJ=Change Title Color
MultiboardSetTitleTextColorBJ="Change the color of the title for ",~Multiboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetTitleTextColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetRowCount=Change Number Of Rows
MultiboardSetRowCount="Change the number of rows for ",~Multiboard," to ",~Rows

MultiboardSetColumnCount=Change Number Of Columns
MultiboardSetColumnCount="Change the number of columns for ",~Multiboard," to ",~Columns

MultiboardSetItemStyleBJ=Set Item Display Style
MultiboardSetItemStyleBJ="Set the display style for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Show/Hide," text and ",~Show/Hide," icons"
MultiboardSetItemStyleBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemValueBJ=Set Item Text
MultiboardSetItemValueBJ="Set the text for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Text
MultiboardSetItemValueBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemColorBJ=Set Item Color
MultiboardSetItemColorBJ="Set the color for ",~Multiboard," item in column ",~Column,", row ",~Row," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetItemColorBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetItemWidthBJ=Set Item Width
MultiboardSetItemWidthBJ="Set the width for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Width,"% of the total screen width"

MultiboardSetItemIconBJ=Set Item Icon
MultiboardSetItemIconBJ="Set the icon for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Icon File

AddResourceAmountBJ=Add Gold To Gold Mine
AddResourceAmountBJ="Add ",~Quantity," gold to ",~Gold Mine
AddResourceAmountBJHint=Use a negative number to subtract.

SetResourceAmount=Set Resources Of Gold Mine
SetResourceAmount="Set ",~Gold Mine," to ",~Quantity," gold"

BlightGoldMineForPlayer=Haunt Gold Mine (Instantly)
BlightGoldMineForPlayer="Haunt ",~Gold Mine," for ",~Player
BlightGoldMineForPlayerHint=This replaces the Gold Mine with a Haunted Gold Mine of equal resources.

WaygateActivateBJ=Enable/Disable Way Gate
WaygateActivateBJ=~Enable/Disable," ",~Way Gate

WaygateSetDestinationLocBJ=Set Way Gate Destination
WaygateSetDestinationLocBJ="Set ",~Way Gate," destination to ",~Target

SetAltMinimapIcon=Change Special Minimap Icon
SetAltMinimapIcon="Change the special minimap icon to ",~Image
SetAltMinimapIconHint=The image used for this action must be exactly 16x16 pixels in size.

UnitSetUsesAltIconBJ=Turn Special Minimap Icon On/Off
UnitSetUsesAltIconBJ="Turn special minimap icon ",~On/Off," for ",~Unit
UnitSetUsesAltIconBJHint=Use the 'Neutral Building - Change Special Minimap Icon' action to control the icon that is displayed.

AddItemToStockBJ=Add Item-Type (To Marketplace)
AddItemToStockBJ="Add ",~Item-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddItemToStockBJHint=This only affects a building if it has the 'Sell Items' ability.

AddItemToAllStock=Add Item-Type (To All Marketplaces)
AddItemToAllStock="Add ",~Item-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddItemToAllStockHint=This affects all buildings that have the 'Sell Items' ability.

AddUnitToStockBJ=Add Unit-Type (To Marketplace)
AddUnitToStockBJ="Add ",~Unit-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddUnitToStockBJHint=This only affects a building if it has the 'Sell Units' ability.

AddUnitToAllStock=Add Unit-Type (To All Marketplaces)
AddUnitToAllStock="Add ",~Unit-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddUnitToAllStockHint=This affects all buildings that have the 'Sell Units' ability.

RemoveItemFromStockBJ=Remove Item-Type (From Marketplace)
RemoveItemFromStockBJ="Remove ",~Item-Type," from ",~Marketplace
RemoveItemFromStockBJHint=This only affects a building if it has the 'Sell Items' ability.

RemoveItemFromAllStock=Remove Item-Type (From All Marketplaces)
RemoveItemFromAllStock="Remove ",~Item-Type," from all marketplaces"
RemoveItemFromAllStockHint=This affects all buildings that have the 'Sell Items' ability.

RemoveUnitFromStockBJ=Remove Unit-Type (From Marketplace)
RemoveUnitFromStockBJ="Remove ",~Unit-Type," from ",~Marketplace
RemoveUnitFromStockBJHint=This only affects a building if it has the 'Sell Units' ability.

RemoveUnitFromAllStock=Remove Unit-Type (From All Marketplaces)
RemoveUnitFromAllStock="Remove ",~Unit-Type," from all marketplaces"
RemoveUnitFromAllStockHint=This affects all buildings that have the 'Sell Units' ability.

SetItemTypeSlots=Limit Item Slots (Of Marketplace)
SetItemTypeSlots="Limit ",~Marketplace," to ",~Quantity," item slots"
SetItemTypeSlotsHint=This only affects a building if it has the 'Sell Items' ability.

SetAllItemTypeSlots=Limit Item Slots (Of All Marketplaces)
SetAllItemTypeSlots="Limit all marketplaces to ",~Quantity," item slots"
SetAllItemTypeSlotsHint=This affects all buildings that have the 'Sell Items' ability.

SetUnitTypeSlots=Limit Unit Slots (Of Marketplace)
SetUnitTypeSlots="Limit ",~Marketplace," to ",~Quantity," unit slots"
SetUnitTypeSlotsHint=This only affects a building if it has the 'Sell Units' ability.

SetAllUnitTypeSlots=Limit Unit Slots (Of All Marketplaces)
SetAllUnitTypeSlots="Limit all marketplaces to ",~Quantity," unit slots"
SetAllUnitTypeSlotsHint=This affects all buildings that have the 'Sell Units' ability.

SetPlayerState=Set Property
SetPlayerState="Set ",~Player," ",~Property," to ",~Value

AdjustPlayerStateBJ=Add Property
AdjustPlayerStateBJ="Add ",~Value," to ",~Player," ",~Property
AdjustPlayerStateBJHint=Use a negative number to subtract.

SetPlayerFlagBJ=Turn Player Flag On/Off
SetPlayerFlagBJ="Turn ",~Player Flag," ",~On/Off," for ",~Player

SetPlayerTaxRateBJ=Divert Player Income (Tax)
SetPlayerTaxRateBJ="Divert ",~Rate,"% of the ",~Resource," income of ",~Player," to ",~Player
SetPlayerTaxRateBJHint=Income lost in this way can be accessed using the 'Player Score' function with 'Gold/Lumber Lost To Tax' values.

EnableCreepSleepBJ=Enable/Disable Sleeping For All Creeps
EnableCreepSleepBJ=~Enable/Disable," sleeping for all creeps"
EnableCreepSleepBJHint=This affects nocturnal sleep, not magical sleep.

SetPlayerAllianceStateBJ=Set Alliance
SetPlayerAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetPlayerAllianceStateBJHint=Note that neutral player slots cannot share their vision.

SetPlayerAllianceBJ=Set Aspect Of Alliance
SetPlayerAllianceBJ="For ",~Player,", turn ",~Alliance Type," ",~On/Off," toward ",~Player
SetPlayerAllianceBJHint=This modifies one aspect of a player's alliance state, leaving others untouched.  Note that neutral player slots cannot share their vision.

SetPlayerAbilityAvailableBJ=Enable/Disable Ability
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~Ability," for ",~Player

SetPlayerUnitAvailableBJ=Set Training/Construction Availability Of Unit
SetPlayerUnitAvailableBJ="Make ",~Unit-Type," ",~Available/Unavailable," for training/construction by ",~Player
SetPlayerUnitAvailableBJHint=This determines whether or not a type of unit can be trained or constructed by a player.

SetPlayerUnitMaxAllowed=Limit Training Of Unit-Type
SetPlayerUnitMaxAllowed="Limit training of ",~Unit-Type," to ",~Limit," for ",~Player
SetPlayerUnitMaxAllowedHint=A limit of -1 allows unlimited training of the unit-type.  A limit of 0 makes the unit-type unavailable for training.

SetPlayerMaxHeroesAllowed=Limit Training Of Heroes
SetPlayerMaxHeroesAllowed="Limit training of Heroes to ",~Limit," for ",~Player
SetPlayerMaxHeroesAllowedHint=A limit of -1 allows unlimited training of Heroes.  A limit of 0 makes Heroes unavailable for training.

SetPlayerTechResearchedSwap=Set Current Research Level
SetPlayerTechResearchedSwap="Set the current research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechResearchedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.  Tech cannot be unlearned through the use of this action.

SetPlayerTechMaxAllowedSwap=Set Max Research Level
SetPlayerTechMaxAllowedSwap="Set the max research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechMaxAllowedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

SetPlayerColorBJ=Change Color
SetPlayerColorBJ="Change color of ",~Player," to ",~Color,", ",~Changing/Retaining color," of existing units"

SetPlayerHandicapBJ=Set Handicap
SetPlayerHandicapBJ="Set ",~Player," handicap to ",~Percent,"%"
SetPlayerHandicapBJHint=Handicaps apply to the max life of all units owned or created for the player.  Heroes are less affected by handicaps than non-Hero units.

SetPlayerOnScoreScreenBJ=Show/Hide In Score Screen
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," in the post-game score screen"

SetPlayerName=Set Name
SetPlayerName="Set name of ",~Player," to ",~Name

ForForceMultiple=Pick Every Player In Player Group And Do Multiple Actions
ForForceMultiple="Pick every player in ",~Player Group," and do (Actions)"
ForForceMultipleHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForForce=Pick Every Player In Player Group And Do Action
ForForce="Pick every player in ",~Player Group," and do ",~Action
ForForceHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.

ForceAddPlayerSimple=Add Player
ForceAddPlayerSimple="Add ",~Player," to ",~Player Group
ForceAddPlayerSimpleHint=This adds a player to a Player Group variable.  This does not affect the player.

ForceRemovePlayerSimple=Remove Player
ForceRemovePlayerSimple="Remove ",~Player," from ",~Player Group
ForceRemovePlayerSimpleHint=This removes a player from a Player Group variable.  This does not affect the player.

ForceClear=Clear
ForceClear="Remove all players from ",~Player Group
ForceClearHint=This removes all players from a Player Group variable.  This does not affect the players themselves.

SetForceAllianceStateBJ=Set Alliance
SetForceAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetForceAllianceStateBJHint=Note that neutral player slots cannot share their vision.

QuestMessageBJ=Quest Message
QuestMessageBJ="Display to ",~Player Group," the ",~Quest Message Type," message: ",~Message

CreateQuestBJ=Create Quest
CreateQuestBJ="Create a ",~Quest Type," quest titled ",~Title," with the description ",~Description,", using icon path ",~Icon Path

DestroyQuestBJ=Destroy Quest
DestroyQuestBJ="Destroy ",~Quest
DestroyQuestBJHint=Destroyed quests are removed from the quest log.

QuestSetEnabledBJ=Enable/Disable Quest
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint=Disabled quests are not displayed in the quest log.

QuestSetCompletedBJ=Mark Quest As Completed
QuestSetCompletedBJ="Mark ",~Quest," as ",~Completed/Incomplete

QuestSetFailedBJ=Mark Quest As Failed
QuestSetFailedBJ="Mark ",~Quest," as ",~Failed/Not Failed

QuestSetDiscoveredBJ=Mark Quest As Discovered
QuestSetDiscoveredBJ="Mark ",~Quest," as ",~Discovered/Undiscovered

QuestSetTitleBJ=Change Quest Title
QuestSetTitleBJ="Change the title of ",~Quest," to ",~Title

QuestSetDescriptionBJ=Change Quest Description
QuestSetDescriptionBJ="Change the description of ",~Quest," to ",~Description

CreateQuestItemBJ=Create Quest Requirement
CreateQuestItemBJ="Create a quest requirement for ",~Quest," with the description ",~Description

QuestItemSetCompletedBJ=Mark Quest Requirement As Completed
QuestItemSetCompletedBJ="Mark ",~Quest Requirement," as ",~Completed/Incomplete

QuestItemSetDescriptionBJ=Change Quest Requirement Description
QuestItemSetDescriptionBJ="Change the description of ",~Quest Requirement," to ",~Description

CreateDefeatConditionBJ=Create Defeat Condition
CreateDefeatConditionBJ="Create a defeat condition with the description ",~Description
CreateDefeatConditionBJHint=Defeat conditions are displayed for every quest.

DestroyDefeatConditionBJ=Destroy Defeat Condition
DestroyDefeatConditionBJ="Destroy ",~Defeat Condition
DestroyDefeatConditionBJHint=Destroyed defeat conditions are removed from the quest log.

DefeatConditionSetDescriptionBJ=Change Defeat Condition Description
DefeatConditionSetDescriptionBJ="Change the description of ",~Defeat Condition," to ",~Description

FlashQuestDialogButtonBJ=Flash Quest Dialog Button
FlashQuestDialogButtonBJ="Flash the quest dialog button"

MoveRectToLoc=Move
MoveRectToLoc="Center ",~Rect," on ",~Point
MoveRectToLocHint=This has no effect unless the specified rect is a variable.

ClearSelectionForPlayer=Clear Selection For Player
ClearSelectionForPlayer="Clear selection for ",~Player
ClearSelectionForPlayerHint=Forces a player to deselect all units.

SelectGroupForPlayerBJ=Select Unit Group For Player
SelectGroupForPlayerBJ="Select ",~Unit Group," for ",~Player
SelectGroupForPlayerBJHint=Forces a player to deselect all units and select up to 12 units of the unit group.

SelectUnitForPlayerSingle=Select Unit For Player
SelectUnitForPlayerSingle="Select ",~Unit," for ",~Player
SelectUnitForPlayerSingleHint=Forces a player to deselect all units and select only the given unit.

SelectUnitAddForPlayer=Add Unit To Selection For Player
SelectUnitAddForPlayer="Add ",~Unit," to selection for ",~Player
SelectUnitAddForPlayerHint=Forces a player to select the given unit in addition to whatever is already selected.

SelectUnitRemoveForPlayer=Remove Unit From Selection For Player
SelectUnitRemoveForPlayer="Remove ",~Unit," from selection for ",~Player
SelectUnitRemoveForPlayerHint=Forces a player to deselect the given unit, retaining the rest of the current selection.

ClearSelection=Clear
ClearSelection="Clear selection"
ClearSelectionHint=Deselect all units.

SelectGroupBJ=Select Unit Group
SelectGroupBJ="Select ",~Unit Group
SelectGroupBJHint=Deselects all units and selects up to 12 units of the unit group.

SelectUnitSingle=Select Unit
SelectUnitSingle="Select ",~Unit
SelectUnitSingleHint=Deselects all units and selects only the given unit.

SelectUnitAdd=Add Unit
SelectUnitAdd="Add ",~Unit," to selection"
SelectUnitAddHint=Selects the given unit in addition to whatever is already selected.

SelectUnitRemove=Remove Unit
SelectUnitRemove="Remove ",~Unit," from selection"
SelectUnitRemoveHint=Deselects the given unit, retaining the rest of the current selection.

PlaySoundBJ=Play Sound
PlaySoundBJ="Play ",~Sound
PlaySoundBJHint=Sounds cannot be played at map initialization.  Use the Sound Editor to create sound variables.  Note that a 3D sound must be positioned to be played.

PlaySoundAtPointBJ=Play Sound At Point
PlaySoundAtPointBJ="Play ",~3D Sound," at ",~Volume,"% volume, located at ",~Point," with Z offset ",~Z
PlaySoundAtPointBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundOnUnitBJ=Play Sound On Unit
PlaySoundOnUnitBJ="Play ",~3D Sound," at ",~Volume,"% volume, attached to ",~Unit
PlaySoundOnUnitBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundFromOffsetBJ=Play Sound From Offset
PlaySoundFromOffsetBJ="Play ",~Sound," at ",~Volume,"% volume, skipping the first ",~Offset," seconds"
PlaySoundFromOffsetBJHint=Sounds cannot be played at map initialization.  This should not be used on 3D sounds.

StopSoundBJ=Stop Sound
StopSoundBJ="Stop ",~Sound," ",~After Fading/Immediately

KillSoundWhenDoneBJ=Destroy Sound
KillSoundWhenDoneBJ="Destroy ",~Sound
KillSoundWhenDoneBJHint=If the sound is already playing, it will be destroyed upon finishing.

SetSoundVolumeBJ=Set Sound Volume
SetSoundVolumeBJ="Set volume of ",~Sound," to ",~Volume,"%"

SetSoundOffsetBJ=Skip To Sound Offset
SetSoundOffsetBJ="Skip to ",~Offset," seconds from the start of ",~Sound
SetSoundOffsetBJHint=This should only be used on sounds that are currently playing.  This should not be used on 3D sounds.

SetSoundDistanceCutoffBJ=Set Sound Cutoff Distance
SetSoundDistanceCutoffBJ="Set cutoff distance of ",~Sound," to ",~Distance

SetSoundPitchBJ=Set Sound Pitch
SetSoundPitchBJ="Set pitch of ",~Sound," to ",~Pitch

AttachSoundToUnitBJ=Attach 3D Sound To Unit
AttachSoundToUnitBJ="Attach ",~3D Sound," to ",~Unit
AttachSoundToUnitBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundPositionLocBJ=Set 3D Sound Position
SetSoundPositionLocBJ="Set position of ",~3D Sound," to ",~Point," with Z offset ",~Z
SetSoundPositionLocBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundDistances=Set 3D Sound Distances
SetSoundDistances="Set ",~3D Sound," distances to ",~Distance," minimum and ",~Distance," maximum"
SetSoundDistancesHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetStackedSoundBJ=Add/Remove 3D Sound Across Rect
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," across ",~Rect
SetStackedSoundBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetAmbientDaySound=Use Daytime Ambient Theme
SetAmbientDaySound="Use the ",~Theme," daytime ambient theme"

SetAmbientNightSound=Use Nighttime Ambient Theme
SetAmbientNightSound="Use the ",~Theme," nighttime ambient theme"

EnableDawnDusk=Enable/Disable Dawn And Dusk Sounds
EnableDawnDusk=~Enable/Disable," dawn and dusk sounds"

SetMapMusicIndexedBJ=Set Music List (Using A Specific Initial Song)
SetMapMusicIndexedBJ="Set the music list to ",~Music,", starting with song ",~Index
SetMapMusicIndexedBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

SetMapMusicRandomBJ=Set Music List (Using A Random Initial Song)
SetMapMusicRandomBJ="Set the music list to ",~Music,", starting with a random song"
SetMapMusicRandomBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

ClearMapMusicBJ=Clear Music List
ClearMapMusicBJ="Clear the music list"
ClearMapMusicBJHint=Clearing the music list will cause music to cease after the currently playing music ends.

PlayMusicBJ=Play Music
PlayMusicBJ="Play ",~Music

PlayMusicExBJ=Play Music From Offset
PlayMusicExBJ="Play ",~Music,", skipping the first ",~Offset," seconds and fading in over ",~Fade Time," seconds"

PlayThematicMusicBJ=Play Music Theme
PlayThematicMusicBJ="Play ",~Music Theme
PlayThematicMusicBJHint=This will play a music theme once, and then resume the game music.

PlayThematicMusicExBJ=Play Music Theme From Offset
PlayThematicMusicExBJ="Play ",~Music Theme,", skipping the first ",~Offset," seconds"
PlayThematicMusicExBJHint=This will play a music theme once, and then resume the game music.

EndThematicMusicBJ=Stop Music Theme
EndThematicMusicBJ="Stop the currently playing music theme"

StopMusicBJ=Stop Music
StopMusicBJ="Stop music ",~After Fading/Immediately

ResumeMusicBJ=Resume Music
ResumeMusicBJ="Resume music"

SetMusicVolumeBJ=Set Music Volume
SetMusicVolumeBJ="Set music volume to ",~Volume,"%"

SetMusicOffsetBJ=Skip To Music Offset
SetMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music"

SetThematicMusicOffsetBJ=Skip To Music Theme Offset
SetThematicMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music theme"

VolumeGroupSetVolumeBJ=Set Volume Channel
VolumeGroupSetVolumeBJ="Set ",~Volume Channel," to ",~Volume,"%"

SetCineModeVolumeGroupsBJ=Set All Volume Channels For Cinematics
SetCineModeVolumeGroupsBJ="Setup all volume channels for cinematics"
SetCineModeVolumeGroupsBJHint=This uses the same volume channel settings as the 'Cinematic - Cinematic Mode' action.

SetSpeechVolumeGroupsBJ=Set All Volume Channels For Speech
SetSpeechVolumeGroupsBJ="Setup all volume channels for speech"

VolumeGroupResetBJ=Reset All Volume Channels
VolumeGroupResetBJ="Reset all volume channels to 100%"

AddSpecialEffectLocBJ=Create Special Effect At Point
AddSpecialEffectLocBJ="Create a special effect at ",~Point," using ",~Model File

AddSpecialEffectTargetUnitBJ=Create Special Effect On Unit
AddSpecialEffectTargetUnitBJ="Create a special effect attached to the ",~Attachment Point," of ",~Unit," using ",~Model File

DestroyEffectBJ=Destroy Special Effect
DestroyEffectBJ="Destroy ",~Special Effect

DisableTrigger=Turn Off
DisableTrigger="Turn off ",~Trigger
DisableTriggerHint=Does not interrupt existing executions of the trigger, but prevents future executions.

EnableTrigger=Turn On
EnableTrigger="Turn on ",~Trigger
EnableTriggerHint=Allows the trigger to be executed.

ConditionalTriggerExecute=Run (Checking Conditions)
ConditionalTriggerExecute="Run ",~Trigger," (checking conditions)"
ConditionalTriggerExecuteHint=Runs the trigger's actions if its conditions are true.

TriggerExecute=Run (Ignoring Conditions)
TriggerExecute="Run ",~Trigger," (ignoring conditions)"
TriggerExecuteHint=Runs the trigger's actions while ignoring events and conditions.

QueuedTriggerAddBJ=Add To Trigger Queue
QueuedTriggerAddBJ="Add ",~Trigger," to the trigger queue (",~Checking/Ignoring," conditions)"
QueuedTriggerAddBJHint=Triggers added to the trigger queue are executed one at a time, in turn.  Triggers added in this manner should remove themselves using 'Trigger - Remove From Queue'.

QueuedTriggerRemoveBJ=Remove From Trigger Queue
QueuedTriggerRemoveBJ="Remove ",~Trigger," from the trigger queue"
QueuedTriggerRemoveBJHint=If a trigger is already running via the trigger queue, removing it will allow the next trigger in the trigger queue to run, but will not stop the trigger itself from finishing its execution.

QueuedTriggerClearBJ=Clear Trigger Queue
QueuedTriggerClearBJ="Clear the trigger queue"
QueuedTriggerClearBJHint=This will remove all triggers from the trigger queue.

QueuedTriggerClearInactiveBJ=Clear Trigger Queue Of Pending Triggers
QueuedTriggerClearInactiveBJ="Clear all pending triggers from the trigger queue"
QueuedTriggerClearInactiveBJHint=This will remove all pending triggers from the trigger queue.  If a trigger is currently running in the queue, it will not be removed.

AddTriggerEvent=Add New Event
AddTriggerEvent="Add to ",~Trigger," the event ",~Event

CreateNUnitsAtLoc=Create Units Facing Angle
CreateNUnitsAtLoc="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreateNUnitsAtLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateNUnitsAtLocFacingLocBJ=Create Units Facing Point
CreateNUnitsAtLocFacingLocBJ="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Point
CreateNUnitsAtLocFacingLocBJHint=Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateCorpseLocBJ=Create Corpse
CreateCorpseLocBJ="Create a ",~Unit," corpse for ",~Player," at ",~Point
CreateCorpseLocBJHint=Not all units have corpse forms.  Use 'Last Created Unit' to refer to this unit.

CreatePermanentCorpseLocBJ=Create Permanent Corpse
CreatePermanentCorpseLocBJ="Create a permanent ",~Style," ",~Unit," corpse for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreatePermanentCorpseLocBJHint=Fleshy corpses will often appear skeletal for the first 8 seconds of their existence.

KillUnit=Kill
KillUnit="Kill ",~Unit

RemoveUnit=Remove
RemoveUnit="Remove ",~Unit," from the game"
RemoveUnitHint=Leaves no corpse.  If used on a Hero, that Hero cannot be resurrected.

ExplodeUnitBJ=Explode
ExplodeUnitBJ="Explode ",~Unit

ReplaceUnitBJ=Replace
ReplaceUnitBJ="Replace ",~Unit," with a ",~Unit-Type," using ",~Property Usage," life and mana"
ReplaceUnitBJHint=Use 'Last Replaced Unit' to refer to the replacement unit.  Note that any variables referring to the old unit will need to be updated.  Replacing a Haunted Gold Mine will usually yield a normal Gold Mine in addition to the replacement unit.

ShowUnitHide=Hide
ShowUnitHide="Hide ",~Unit
ShowUnitHideHint=Use the 'Unhide Unit' action to show a unit.  Hidden units do not show up in 'Units In Rect' queries.

ShowUnitShow=Unhide
ShowUnitShow="Unhide ",~Unit
ShowUnitShowHint=Use the 'Hide Unit' action to hide a unit.  Hidden units do not show up in 'Units In Rect' queries.

SetUnitColor=Change Color
SetUnitColor="Change color of ",~Unit," to ",~Color
SetUnitColorHint=Changing a unit's color does not change the unit's ownership.

SetUnitOwner=Change Owner
SetUnitOwner="Change ownership of ",~Unit," to ",~Player," and ",~Change/Retain Color

UnitShareVisionBJ=Shared Vision
UnitShareVisionBJ=~Grant/Deny," shared vision of ",~Unit," to ",~Player
UnitShareVisionBJHint=Note that neutral player slots cannot share their vision.

SetUnitPositionLoc=Move Unit (Instantly)
SetUnitPositionLoc="Move ",~Unit," instantly to ",~Point

SetUnitPositionLocFacingBJ=Move Unit And Face Angle (Instantly)
SetUnitPositionLocFacingBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Direction," degrees"
SetUnitPositionLocFacingBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.

SetUnitPositionLocFacingLocBJ=Move Unit And Face Point (Instantly)
SetUnitPositionLocFacingLocBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Point

SetUnitRallyPoint=Set Rally-Point To Point
SetUnitRallyPoint="Set Rally-Point for ",~Unit," to ",~Point

SetUnitRallyUnit=Set Rally-Point To Unit
SetUnitRallyUnit="Set Rally-Point for ",~Unit," to ",~Unit

SetUnitRallyDestructable=Set Rally-Point To Destructible
SetUnitRallyDestructable="Set Rally-Point for ",~Unit," to ",~Destructible

SetUnitLifePercentBJ=Set Life (To Percentage)
SetUnitLifePercentBJ="Set life of ",~Unit," to ",~Percent,"%"

SetUnitManaPercentBJ=Set Mana (To Percentage)
SetUnitManaPercentBJ="Set mana of ",~Unit," to ",~Percent,"%"

SetUnitLifeBJ=Set Life (To Value)
SetUnitLifeBJ="Set life of ",~Unit," to ",~Value

SetUnitManaBJ=Set Mana (To Value)
SetUnitManaBJ="Set mana of ",~Unit," to ",~Value

SetUnitInvulnerable=Make Invulnerable/Vulnerable
SetUnitInvulnerable="Make ",~Unit," ",~Invulnerable/Vulnerable

PauseUnitBJ=Pause/Unpause
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.

PauseAllUnitsBJ=Pause/Unpause All Units
PauseAllUnitsBJ=~Pause/Unpause," all units"
PauseAllUnitsBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.  This action only affects units that exist when this action is run.

UnitPauseTimedLifeBJ=Pause/Unpause Expiration Timer
UnitPauseTimedLifeBJ=~Pause/Unpause," the expiration timer for ",~Unit
UnitPauseTimedLifeBJHint=Only summoned units have expiration timers.

UnitApplyTimedLifeBJ=Add Expiration Timer
UnitApplyTimedLifeBJ="Add a ",~Duration," second ",~Buff Type," expiration timer to ",~Unit

SetUnitExplodedBJ=Make Unit Explode On Death
SetUnitExplodedBJ="Make ",~Unit," ",~Explode/Die Normally," on death"

UnitSuspendDecayBJ=Suspend Corpse Decay
UnitSuspendDecayBJ=~Suspend/Resume," corpse decay for ",~Unit
UnitSuspendDecayBJHint=This only works on corpses, and only after the corpses' death animations have finished.

UnitResetCooldown=Reset Ability Cooldowns
UnitResetCooldown="Reset ability cooldowns for ",~Unit
UnitResetCooldownHint=This makes all of the unit's abilities available for use again almost immediately.

UnitSetConstructionProgress=Set Building Construction Progress
UnitSetConstructionProgress="Set ",~Building," construction progress to ",~Progress,"%"
UnitSetConstructionProgressHint=This should only be used on buildings that are currently under construction.

UnitSetUpgradeProgress=Set Building Upgrade Progress
UnitSetUpgradeProgress="Set ",~Building," upgrade progress to ",~Progress,"%"
UnitSetUpgradeProgressHint=This should only be used on buildings that are currently being upgraded.  This does not affect research-based upgrades.

UnitAddSleepPerm=Make Unit Sleep
UnitAddSleepPerm="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked"
UnitAddSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitSetCanSleepBJ=Make Unit Sleep At Night
UnitSetCanSleepBJ="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked at night"
UnitSetCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitWakeUpBJ=Wake Up
UnitWakeUpBJ="Wake up ",~Unit
UnitWakeUpBJHint=This affects nocturnal sleep, not magical sleep.

UnitGenerateAlarms=Turn Alarm Generation On/Off
UnitGenerateAlarms="Turn alarm generation for ",~Unit," ",~On/Off
UnitGenerateAlarmsHint=This only affects buildings.

RescueUnitBJ=Rescue Unit
RescueUnitBJ="Rescue ",~Unit," for ",~Player," and ",~Change/Retain Color

MakeUnitRescuableToForceBJ=Make Rescuable
MakeUnitRescuableToForceBJ="Make ",~Unit," ",~Rescuable/Unrescuable," by ",~Player Group

SetUnitRescueRange=Set Rescue Range
SetUnitRescueRange="Limit rescue events for ",~Unit," to a range of ",~Range
SetUnitRescueRangeHint=To make a unit rescuable, use 'Unit - Make Rescuable' or set the unit's owner to 'Rescuable'.

SetRescueUnitColorChangeBJ=Set Rescue Behavior For Units
SetRescueUnitColorChangeBJ="Make units ",~Change/Retain Color," when rescued"
SetRescueUnitColorChangeBJHint=By default, units owned by 'Rescuable' players do not change color when rescued.  This action does not affect units that have already been rescued.

SetRescueBuildingColorChangeBJ=Set Rescue Behavior For Buildings
SetRescueBuildingColorChangeBJ="Make buildings ",~Change/Retain Color," when rescued"
SetRescueBuildingColorChangeBJHint=By default, buildings owned by 'Rescuable' players change color when rescued.  This action does not affect buildings that have already been rescued.

SetUnitUseFoodBJ=Enable/Disable Supply Usage
SetUnitUseFoodBJ=~Enable/Disable," supply usage for ",~Unit

SetUnitFacingToFaceUnitTimed=Make Unit Face Unit
SetUnitFacingToFaceUnitTimed="Make ",~Unit," face ",~Unit," over ",~Time," seconds"
SetUnitFacingToFaceUnitTimedHint=Forces a unit to face another unit.  This only works if the source unit is not moving at the time.

SetUnitFacingToFaceLocTimed=Make Unit Face Point
SetUnitFacingToFaceLocTimed="Make ",~Unit," face ",~Point," over ",~Time," seconds"
SetUnitFacingToFaceLocTimedHint=Forces a unit to face a point.  This only works if the source unit is not moving at the time.

SetUnitFacingTimed=Make Unit Face Angle
SetUnitFacingTimed="Make ",~Unit," face ",~Angle," over ",~Time," seconds"
SetUnitFacingTimedHint=Forces a unit to face a directional angle, expected in degrees, with 0 being east.  This only works if the source unit is not moving at the time.

SetUnitMoveSpeed=Set Movement Speed
SetUnitMoveSpeed="Set ",~Unit," movement speed to ",~Speed
SetUnitMoveSpeedHint=Common movement speeds range from 150 to 300.

SetUnitPathing=Turn Collision On/Off
SetUnitPathing="Turn collision for ",~Unit," ",~On/Off
SetUnitPathingHint=Collision-disabled units ignore obstacles, but are still themselves treated as obstacles.

SetUnitAcquireRangeBJ=Set Acquisition Range
SetUnitAcquireRangeBJ="Set ",~Unit," acquisition range to ",~Range
SetUnitAcquireRangeBJHint=The acquisition range of a unit is the distance at which the unit acquires targets to attack.

SetUnitUserData=Set Custom Value
SetUnitUserData="Set the custom value of ",~Unit," to ",~Index
SetUnitUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

UnitRemoveBuffsBJ=Remove Buffs
UnitRemoveBuffsBJ="Remove ",~Buff Type," buffs from ",~Unit

UnitRemoveBuffsExBJ=Remove Buffs By Type
UnitRemoveBuffsExBJ="Remove ",~Buff Type," buffs considered ",~Buff Resist," from ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

UnitRemoveBuffBJ=Remove Specific Buff
UnitRemoveBuffBJ="Remove ",~Buff," buff from ",~Unit

UnitAddAbilityBJ=Add Ability
UnitAddAbilityBJ="Add ",~Ability," to ",~Unit

UnitRemoveAbilityBJ=Remove Ability
UnitRemoveAbilityBJ="Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent.

UnitAddTypeBJ=Add Classification
UnitAddTypeBJ="Add classification of ",~Classification," to ",~Unit
UnitAddTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

UnitRemoveTypeBJ=Remove Classification
UnitRemoveTypeBJ="Remove classification of ",~Classification," from ",~Unit
UnitRemoveTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

IssueTargetOrder=Issue Order Targeting A Unit
IssueTargetOrder="Order ",~Unit," to ",~Order," ",~Unit

IssuePointOrderLoc=Issue Order Targeting A Point
IssuePointOrderLoc="Order ",~Unit," to ",~Order," ",~Point

IssueTargetDestructableOrder=Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Order ",~Unit," to ",~Order," ",~Destructible

IssueTargetItemOrder=Issue Order Targeting An Item
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item

IssueImmediateOrder=Issue Order With No Target
IssueImmediateOrder="Order ",~Unit," to ",~Order

IssueTrainOrderByIdBJ=Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.

IssueUpgradeOrderByIdBJ=Issue Research Order
IssueUpgradeOrderByIdBJ="Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action.

IssueBuildOrderByIdLocBJ=Issue Build Order
IssueBuildOrderByIdLocBJ="Order ",~Unit," to build a ",~Unit-Type," at ",~Point

UnitDropItemPointLoc=Issue Drop Item Order
UnitDropItemPointLoc="Order ",~Unit," to drop ",~Item," at ",~Point

UnitDropItemSlotBJ=Issue Move Item In Inventory Order
UnitDropItemSlotBJ="Order ",~Unit," to move ",~Item," to inventory slot ",~Index
UnitDropItemSlotBJHint=This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped.

UnitDropItemTargetBJ=Issue Give Item Order
UnitDropItemTargetBJ="Order ",~Unit," to give ",~Item," to ",~Unit

UnitDamagePointLoc=Damage Area
UnitDamagePointLoc="Cause ",~Unit," to damage circular area after ",~Seconds," seconds of radius ",~Size," at ",~Location,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamagePointLocHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

UnitDamageTargetBJ=Damage Target
UnitDamageTargetBJ="Cause ",~Unit," to damage ",~Target,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamageTargetBJHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

DecUnitAbilityLevelSwapped=Decrease Level Of Ability For Unit
DecUnitAbilityLevelSwapped="Decrease level of ",~Ability," for ",~Unit
DecUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

IncUnitAbilityLevelSwapped=Increase Level Of Ability For Unit
IncUnitAbilityLevelSwapped="Increase level of ",~Ability," for ",~Unit
IncUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

SetUnitAbilityLevelSwapped=Set Level Of Ability For Unit
SetUnitAbilityLevelSwapped="Set level of ",~Ability," for ",~Unit," to ",~Level
SetUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

ForGroupMultiple=Pick Every Unit In Unit Group And Do Multiple Actions
ForGroupMultiple="Pick every unit in ",~Unit Group," and do (Actions)"
ForGroupMultipleHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForGroup=Pick Every Unit In Unit Group And Do Action
ForGroup="Pick every unit in ",~Unit Group," and do ",~Action
ForGroupHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.

GroupAddUnitSimple=Add Unit
GroupAddUnitSimple="Add ",~Unit," to ",~Unit Group
GroupAddUnitSimpleHint=This adds a unit to a Unit Group variable.  This does not affect the unit itself.

GroupAddGroup=Add Unit Group
GroupAddGroup="Add all units of ",~Unit Group," to ",~Unit Group
GroupAddGroupHint=This adds all units of a unit group to a Unit Group variable.  This does not affect the units themselves.

GroupRemoveUnitSimple=Remove Unit
GroupRemoveUnitSimple="Remove ",~Unit," from ",~Unit Group
GroupRemoveUnitSimpleHint=This removes a unit from a Unit Group variable.  This does not affect the unit itself.

GroupRemoveGroup=Remove Unit Group
GroupRemoveGroup="Remove all units of ",~Unit Group," from ",~Unit Group
GroupRemoveGroupHint=This removes all units of a unit group from a Unit Group variable.  This does not affect the units themselves.

GroupClear=Clear
GroupClear="Remove all units from ",~Unit Group
GroupClearHint=This removes all units from a Unit Group variable.  This does not affect the units themselves.

GroupTargetOrder=Issue Order Targeting A Unit
GroupTargetOrder="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game.

GroupPointOrderLoc=Issue Order Targeting A Point
GroupPointOrderLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetDestructableOrder=Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetItemOrder=Issue Order Targeting An Item
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupImmediateOrder=Issue Order With No Target
GroupImmediateOrder="Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTrainOrderByIdBJ=Issue Train Order
GroupTrainOrderByIdBJ="Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group.

CreateUbersplatBJ=Create
CreateUbersplatBJ="Create ubersplat at ",~Location," of type ",~Type," with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency (",~Enable/Disable," paused state, ",~Enble/Disable," skipping birth time)"
CreateUbersplatBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Ubersplat - Change Render Always State' to toggle display of this ubersplat.  By default, ubersplats are not rendered.

DestroyUbersplat=Destroy
DestroyUbersplat="Destroy ",~Ubersplat

ResetUbersplat=Reset
ResetUbersplat="Reset ",~Ubersplat

FinishUbersplat=Finish
FinishUbersplat="Finish ",~Ubersplat

ShowUbersplatBJ=Show/Hide
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat

SetUbersplatRender=Change Render State
SetUbersplatRender="Change ",~Ubersplat,": ",~Enable/Disable," render state"

SetUbersplatRenderAlways=Change Render Always State
SetUbersplatRenderAlways="Change ",~Ubersplat,": ",~Enable/Disable," render always state"

FogEnableOn=Enable Fog Of War
FogEnableOn="Enable fog of war"

FogEnableOff=Disable Fog Of War
FogEnableOff="Disable fog of war"

FogMaskEnableOn=Enable Black Mask
FogMaskEnableOn="Enable black mask"

FogMaskEnableOff=Disable Black Mask
FogMaskEnableOff="Disable black mask"

CreateFogModifierRectBJ=Create Visibility Modifier Rect
CreateFogModifierRectBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," across ",~Rect

CreateFogModifierRadiusLocBJ=Create Visibility Modifier Circle
CreateFogModifierRadiusLocBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," from ",~Point," to a radius of ",~Radius

FogModifierStart=Enable Visibility Modifier
FogModifierStart="Enable ",~Visibility Modifier

FogModifierStop=Disable Visibility Modifier
FogModifierStop="Disable ",~Visibility Modifier

DestroyFogModifier=Destroy Visibility Modifier
DestroyFogModifier="Destroy ",~Visibility Modifier

DestroyTimer=Destroy
DestroyTimer="Destroy ",~Timer
DestroyTimerHint=Removes a timer from memory. Always destroy no longer needed timers. [UMSWE]

DialogDestroy=Destroy
DialogDestroy="Destroy ",~Dialog
DialogDestroyHint=Removes a dialog from memory. Always destroy no longer needed dialogs. [UMSWE]

DestroyForce=Destroy
DestroyForce="Destroy ",~Force
DestroyForceHint=Removes a Player Group from memory. Always destroy no longer needed Player Groups. [UMSWE]

DestroyGroup=Destroy Unit Group
DestroyGroup="Destroy unit group ",~Group
DestroyGroupHint=Destroy unit groups you don't need any mor to save memory [UMSWE]

DestroyTrigger=Destroy
DestroyTrigger="Destroy ",~Trigger
DestroyTriggerHint=Destroys a trigger [UMSWE]

RemoveRegion=Remove Region
RemoveRegion="Remove ",~Region
RemoveRegionHint=Use this to delete a region to save memory. The variable itself will remain without data [UMSWE]

MultiboardSetItemsValueColor=All Items - Set Item Lable Color
MultiboardSetItemsValueColor="Set item lable color for all items of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemsValueColorHint=Changes the color of all items. The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

MultiboardSetItemValueColor=Set Item Lable Color
MultiboardSetItemValueColor="Set item lable color for multiboard item ",~Item," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemValueColorHint=The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

AddLightningEx=Create Lightning Effect (Advanced)
AddLightningEx="Create a ",~Type,", ",~Visibility," lightning effect from source (",~X1,",",~Y1,",",~Z1,") to target (",~X2,",",~Y2,",",~Z2,") "
AddLightningExHint=Use coordinates, Z values are elevation [UMSWE]

MoveLightningEx=Move Lightning Effect (Advanced)
MoveLightningEx="Make ",~Bolt," ",~Boolean," and move it to reach from (",~X1,",",~Y1,",",~Z1,") to (",~X2,",",~Y2,",",~Z2,") "
MoveLightningExHint=Use coordinates, Z values are elevation [UMSWE]

SetHeroAgi=Set Hero Agility
SetHeroAgi="Set Agility of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroAgiHint=Changes the hero's agility [UMSWE]

SetHeroInt=Set Hero Intelligence
SetHeroInt="Set Intelligence of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroIntHint=Changes the hero's Intelligence [UMSWE]

SetHeroStr=Set Hero Strength
SetHeroStr="Set Strength of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroStrHint=Changes the hero's strength [UMSWE]

GroupTargetOrderBJ=Issue Order Targeting A Unit (takes string)
GroupTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetOrderById=Issue Order Targeting A Unit (takes ordercode)
GroupTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderBJ=Issue Order Targeting An Item (takes string)
GroupItemTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderById=Issue Order Targeting An Item (takes ordercode)
GroupItemTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLocBJ=Issue Order Targeting A Point (takes string)
GroupPointOrderLocBJ="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupPointOrderByIdLoc=Issue Order Targeting A Point (takes ordercode)
GroupPointOrderByIdLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderByIdLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetDestructableOrderS=Issue Order Targeting A Destructible (takes string)
GroupTargetDestructableOrderS="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderSHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderByIdD=Issue Order Targeting A Destructible (takes ordercode)
GroupTargetOrderByIdD="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetOrderByIdDHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderBJ=Issue Order With No Target (takes string)
GroupImmediateOrderBJ="Order ",~Unit Group," to ",~Order
GroupImmediateOrderBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderById=Issue Order With No Target (takes ordercode)
GroupImmediateOrderById="Order ",~Unit Group," to ",~Order
GroupImmediateOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupEnumUnitsOfType=Add Units of Type to Group
GroupEnumUnitsOfType="Take group ",~group," and add all units of type ",~unitname," matching condition ",~Condition
GroupEnumUnitsOfTypeHint=Use the names in the 6th column in UnitUI.slk as unitnames [UMSWE]

GroupEnumUnitsOfTypeCounted=Add Number Of Units Of Type
GroupEnumUnitsOfTypeCounted="To ",~Group" add units of type ","",~Type," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsOfTypeCountedHint=For the type use the unit names of the 6th column in UnitUI.slk [UMSWE]

GroupEnumUnitsOfPlayer=Add Units Of Player
GroupEnumUnitsOfPlayer="To ",~Group," add units of player ",~Player," matching ",~Condition
GroupEnumUnitsOfPlayerHint=[UMSWE]

GroupEnumUnitsInRect=Add Units In Rect
GroupEnumUnitsInRect="To ",~Group," add units in ",~Rect," matching ",~Condition
GroupEnumUnitsInRectHint=[UMSWE]

GroupEnumUnitsInRectCounted=Add Number Of Units In Rect
GroupEnumUnitsInRectCounted="To ",~Group," add units in ",~Rect," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRectCountedHint=[UMSWE]

GroupEnumUnitsInRangeOfLoc=Add Units in Range of Point
GroupEnumUnitsInRangeOfLoc="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition
GroupEnumUnitsInRangeOfLocHint=[UMSWE]

GroupEnumUnitsInRangeOfLocCounted=Add Number of Units in Range of Point
GroupEnumUnitsInRangeOfLocCounted="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRangeOfLocCountedHint=[UMSWE]

GroupEnumUnitsSelected=Add Units Selected by Player
GroupEnumUnitsSelected="To ",~Group," add units selected by ",~Player," matching ",~Condition
GroupEnumUnitsSelectedHint=[UMSWE]

SetPlayerTechMaxAllowed=Set Max Number Of Units by Type
SetPlayerTechMaxAllowed="For ",~Player,", set the maximun number of ",~Unit-Type," to ",~Number
SetPlayerTechMaxAllowedHint=Just here for COMPATIBILITY reasons. Use the specific functions provided by blizzard instead. [UMSWE]

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey: ",~Key
DialogAddButtonHint=Use ASCII numbers for the hotkey number [UMSWE]

DialogAddQuitButton=Create Quit Button
DialogAddQuitButton="Create a quit button for dialog ",~Dialog," (",~Show," score screen) labeled ",~Text," and use the shortcut ",~ASCII
DialogAddQuitButtonHint=Use ASCII numbers to add a shortcut [UMSWE]

DisplayTextToPlayer=Text Message to Player (Auto-Timed)
DisplayTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") the text: ",~Text
DisplayTextToPlayerHint=The text is shown for an amount of time that automatically increases with the text length. The offset is the X,Y position on the screen. [UMSWE]

DisplayTimedTextToPlayer=Text Message to Player (Explicitly Timed)
DisplayTimedTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") for ",~Time," seconds the text: ",~Text
DisplayTimedTextToPlayerHint=The offset is the X,Y position on the screen. [UMSWE]

EnumItemsInRect=Pick Every Item In Rect Matching Condition And Do Action
EnumItemsInRect="Pick every item in ",~Rect," matching ",~Condition," and do ",~Action
EnumItemsInRectHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function. [UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

SelectHeroSkill2=Learn Skill (Takes Abilcode)
SelectHeroSkill2="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkill2Hint=This only works if the Hero has at least one skill point to spend. [UMSWE]

TimerStart=Start Timer (With Callback)
TimerStart="Start ",~Timer," lasting ",~Time," and ",~Repeat," and execute ",~Action," when it expires"
TimerStartHint=[UMSWE]

PlayCinematic=Play Movie
PlayCinematic="Play the cinematic movie called ",~name
PlayCinematicHint=The Movie must be in the Movies folder of Warcraft and in the same format as the other movies. String without .mpq 

RandomDistAddItem=Add Item To Random Item Pool
RandomDistAddItem="Add the item type ",~id," to the pool and give it a chance of ",~percent," to be chosen"
RandomDistAddItemHint=Use 'Get Random Item From Pool' to use your own item pool, the chances of all items added to the pool are summed up to calculate the final chance [UMSWE]

RandomDistReset=Reset Random Item Pool
RandomDistReset="Reset your own pool for random items"
RandomDistResetHint=[UMSWE]

SetUnitLookAtS=Lock Body-Part Facing (Takes String)
SetUnitLookAtS="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtSHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet. Use this to specify any bone by it's name. [UMSWE]

UnitApplyTimedLifeB=Apply Life Timer (takes buffcode)
UnitApplyTimedLifeB="Set timed life for unit ",~Unit," with buff ID ",~Buff Type," and duration ",~Integer," seconds"
UnitApplyTimedLifeBHint=Gives a unit a life timer. [UMSWE]

UnitMakeAbilityPermanentBJ=Make Ability Permanent
UnitMakeAbilityPermanentBJ="For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentBJHint=[UMSWE]

SetUnitAnimationByIndex=Set Unit Animation by Index
SetUnitAnimationByIndex="Set current animation for ",~unit," to its ",~nr,"th animation"
SetUnitAnimationByIndexHint=Use the arrow buttons in the preview window to see all animations [UMSWE]

UnitIgnoreAlarm=Ignore Alarm
UnitIgnoreAlarm="Make unit ",~Unit," ignore alarms ",~Flag
UnitIgnoreAlarmHint=[UMSWE]

ExecuteFunc=Execute Function
ExecuteFunc="Execute ",~Function
ExecuteFuncHint=Use 'Conversion - Trigger Name To Function' to access the actions part of a trigger, the called function shouldn't have parameters [UMSWE]

EnableUserUI=Enable/Disable User UI
EnableUserUI=~Enable/Disable," User UI"
EnableUserUIHint=[UMSWE]

EndGame=End Game
EndGame="End game and ",~Show/Skip," scores"
EndGameHint=No victory or defeat dialog [UMSWE]

ChangeLevel=Load Next Map
ChangeLevel="End game, load the map ",~Mapname," and ",~Show/Skip," scores"
ChangeLevelHint=No victory or defeat dialog and no 'Connect to Server Bug' [UMSWE]

RestartGame=Restart Game
RestartGame="Restart the current map and ",~Show/Skip," scores"
RestartGameHint=No victory or defeat dialog [UMSWE]

DisableRestartMission=Disable Restart Mission
DisableRestartMission="Disable restart mission ",~Flag
DisableRestartMissionHint=[UMSWE]

DoNotSaveReplay=Do Not Save Replay
DoNotSaveReplay="Do not save replay"
DoNotSaveReplayHint=[UMSWE]

SetIntegerGameState=Set Game State
SetIntegerGameState="Set ",~Gamestate," to ",~Value
SetIntegerGameStateHint=[UMSWE]

SyncSelections=Synchronize Selections
SyncSelections="Synchronize the unit selections"
SyncSelectionsHint=Used to avoid desyncs before getting the selection state with custom script calls [UMSWE]

MoveLocation=Move Point
MoveLocation="Move ",~Point," to offset(",~X,", ",~Y,")"
MoveLocationHint=[UMSWE]

RemoveLocation=Remove Point
RemoveLocation="Remove ",~Location
RemoveLocationHint=Use this to delete a point to save memory. The variable itself will remain without data [UMSWE]

MoveRectTo=Move to Offset
MoveRectTo="Center ",~Rect," on offset(",~Real,", ",~Real,")"
MoveRectToHint=This has no effect unless the specified rect is a variable [UMSWE]

RemoveRect=Remove
RemoveRect="Remove ",~Rect
RemoveRectHint=Use this to delete a rect to save memory. The variable itself will remain without data [UMSWE]

TriggerAddCondition=Add Condition To Trigger
TriggerAddCondition="Take ",~Trigger," and add this condition: ",~Condition
TriggerAddConditionHint=[UMSWE]

TriggerAddAction=Add Action To Trigger
TriggerAddAction="Take ",~Trigger," and add this action: ",~Action
TriggerAddActionHint=[UMSWE]

TriggerRemoveCondition=Remove Condition
TriggerRemoveCondition="Take ",~Trigger," and remove the condition ",~Boolexp
TriggerRemoveConditionHint=Removes a condition from a trigger [UMSWE]

TriggerClearConditions=Clear Conditions
TriggerClearConditions="Take ",~Trigger," and remove all conditions "
TriggerClearConditionsHint=Removes all conditions from a trigger [UMSWE]

TriggerRemoveAction=Remove Action
TriggerRemoveAction="Take ",~Trigger," and remove the action ",~Action
TriggerRemoveActionHint=Removes an action from a trigger [UMSWE]

TriggerClearActions=Clear Actions
TriggerClearActions="Take ",~Trigger," and remove all actions"
TriggerClearActionsHint=Removes all actions from a trigger [UMSWE]

ResetTrigger=Reset Trigger
ResetTrigger="Reset ",~Trigger
ResetTriggerHint=Resets a trigger to its original state [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

IssueInstantTargetOrder=Give Item from Unit to Unit
IssueInstantTargetOrder="Order ",~Unit," to ",~Order," ",~Item," to ",~Unit
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueNeutralImmediateOrderById=Buy Unit from Store
IssueNeutralImmediateOrderById="For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

IssueTargetOrderBJ=Issue Order Targeting A Unit (Takes String)
IssueTargetOrderBJ="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderById=Issue Order Targeting A Unit (Takes Ordercode)
IssueTargetOrderById="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderByIdHint=[UMSWE]

IssuePointOrderLocBJ=Issue Order Targeting A Point (Takes String)
IssuePointOrderLocBJ="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssuePointOrderByIdLoc=Issue Order Targeting A Point (Takes Ordercode)
IssuePointOrderByIdLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderByIdLocHint=[UMSWE]

IssueTargetOrderD=Issue Order Targeting A Destructible (Takes String)
IssueTargetOrderD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderDHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderByIdD=Issue Order Targeting A Destructible (Takes Ordercode)
IssueTargetOrderByIdD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderByIdDHint=[UMSWE]

IssueImmediateOrderBJ=Issue Order With No Target (Takes String)
IssueImmediateOrderBJ="Order ",~Unit," to ",~Order
IssueImmediateOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueImmediateOrderById=Issue Order With No Target (Takes Ordercode)
IssueImmediateOrderById="Order ",~Unit," to ",~Order
IssueImmediateOrderByIdHint=[UMSWE]

IssueItemTargetOrderS=Issue Order Targeting An Item (Takes String)
IssueItemTargetOrderS="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderSHint=[UMSWE]

IssueItemTargetOrderId=Issue Order Targeting An Item (Takes Ordercode)
IssueItemTargetOrderId="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderIdHint=[UMSWE]

RegionAddCell=Add Cell To Region
RegionAddCell="Take ",~region," and add a cell at location (",~X,",",~Y,")"
RegionAddCellHint=[UMSWE]

RegionAddCellAtLoc=Region Add Cell At Location
RegionAddCellAtLoc="Take ",~region," and add a cell at ",~location
RegionAddCellAtLocHint=[UMSWE]

RegionAddRect=Add Rect To Region
RegionAddRect="Take ",~region," and add ",~rect," to it"
RegionAddRectHint=[UMSWE]

RegionClearCell=Remove Cell From Region
RegionClearCell="Take ",~region," and remove the cell at (",~X,",",~Y,")"
RegionClearCellHint=[UMSWE]

RegionClearCellAtLoc=Remove Cell At Location From Region
RegionClearCellAtLoc="Take ",~region," and remove the cell at",~location
RegionClearCellAtLocHint=[UMSWE]

RegionClearRect=Remove Rect From Region
RegionClearRect="Take ",~region," and remove ",~rect," from it"
RegionClearRectHint=[UMSWE]

FlushStoredInteger=Flush Stored Integer
FlushStoredInteger="Flush the Integer stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredIntegerHint=[UMSWE]

FlushStoredBoolean=Flush Stored Boolean
FlushStoredBoolean="Flush the Boolean stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredBooleanHint=[UMSWE]

FlushStoredReal=Flush Stored Real
FlushStoredReal="Flush the Real stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredRealHint=[UMSWE]

FlushStoredUnit=Flush Stored Unit
FlushStoredUnit="Flush the Unit stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredUnitHint=[UMSWE]

FlushStoredString=Flush Stored String
FlushStoredString="Flush the String stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredStringHint=[UMSWE]

CreateDestructableZA=Create With Z Offset
CreateDestructableZA="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

CreateDeadDestructableZA=Create With Z Offset (Dead)
CreateDeadDestructableZA="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

DialogAddButtonWithHotkeyBJ=Create Dialog Button with Hotkey (GU Version)
DialogAddButtonWithHotkeyBJ="Create a dialog button for ",~Dialog," labelled ",~Text," and keycode ",~Code
DialogAddButtonWithHotkeyBJHint=Just here for COMPATIBILITY reasons. Better use the common.j version of this action. [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=Just here for COMPATIBILITY reasons. Better use the function returning the trackable to save it to a variable. [UMSWE]

MultiboardDisplay=Display Multiboard
MultiboardDisplay="Take multiboard ",~board," and ",~ShowHide," it"
MultiboardDisplayHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

DestroyMultiboard=Destroy Multiboard
DestroyMultiboard="Destroy multiboard ",~board
DestroyMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardMinimize=Minimize Multiboard
MultiboardMinimize="Take multiboard ",~board," and ",~Min," it"
MultiboardMinimizeHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetTitleTextColor=Set Title Text Color
MultiboardSetTitleTextColor="Set title text color of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetTitleTextColorHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsStyle=All Items - Set Item Style
MultiboardSetItemsStyle="Set item style for all items of multiboard ",~board," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemsStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsValue=All Items - Set Item Value
MultiboardSetItemsValue="Set the label for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsWidth=All Items - Set Item Width
MultiboardSetItemsWidth="Set width for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsIcon=All Items - Set Item Icon
MultiboardSetItemsIcon="Set used icon for all items of multiboard ",~board," to ",~Icon
MultiboardSetItemsIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardReleaseItem=Release Multiboard Item
MultiboardReleaseItem="Release multiboard item ",~Item
MultiboardReleaseItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemStyle=Set Item Style
MultiboardSetItemStyle="Set item style of multiboard item ",~Item," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemValue=Set Item Value
MultiboardSetItemValue="Set the label for multiboard item ",~Item," to ",~Value
MultiboardSetItemValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemWidth=Set Item Width
MultiboardSetItemWidth="Set width for multiboard item ",~Item," to ",~Value
MultiboardSetItemWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemIcon=Set Item Icon
MultiboardSetItemIcon="Set used icon for multiboard item ",~Item," to ",~Icon
MultiboardSetItemIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Location
AddSpellEffectByIdLoc="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectByIdLocB=Create Buff Effect At Location
AddSpellEffectByIdLocB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetByIdB=Create Buff Effect On Unit
AddSpellEffectTargetByIdB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

UnitApplyTimedLife=Apply Life Timer
UnitApplyTimedLife="Set timed life for unit ",~Unit," with buff ID ",~Integer," and duration ",~Integer," seconds"
UnitApplyTimedLifeHint=Just here for COMPATIBILITY reasons. Better use the new official action. [UMSWE]

IssueItemTargetOrder=Issue Order Targeting An Item
IssueItemTargetOrder="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

GroupItemTargetOrder=Group Issue Order Targeting An Item
GroupItemTargetOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]


[TriggerCallStrings]

ConvertRace=ConvertRace
ConvertRace="ConvertRace(","integer ",,~i,")"
ConvertRaceHint="[NATIVE]  race ConvertRace (integer i)"


ConvertAllianceType=ConvertAllianceType
ConvertAllianceType="ConvertAllianceType(","integer ",,~i,")"
ConvertAllianceTypeHint="[NATIVE]  alliancetype ConvertAllianceType (integer i)"


ConvertRacePref=ConvertRacePref
ConvertRacePref="ConvertRacePref(","integer ",,~i,")"
ConvertRacePrefHint="[NATIVE]  racepreference ConvertRacePref (integer i)"


ConvertIGameState=ConvertIGameState
ConvertIGameState="ConvertIGameState(","integer ",,~i,")"
ConvertIGameStateHint="[NATIVE]  igamestate ConvertIGameState (integer i)"


ConvertFGameState=ConvertFGameState
ConvertFGameState="ConvertFGameState(","integer ",,~i,")"
ConvertFGameStateHint="[NATIVE]  fgamestate ConvertFGameState (integer i)"


ConvertPlayerState=ConvertPlayerState
ConvertPlayerState="ConvertPlayerState(","integer ",,~i,")"
ConvertPlayerStateHint="[NATIVE]  playerstate ConvertPlayerState (integer i)"


ConvertPlayerScore=ConvertPlayerScore
ConvertPlayerScore="ConvertPlayerScore(","integer ",,~i,")"
ConvertPlayerScoreHint="[NATIVE]  playerscore ConvertPlayerScore (integer i)"


ConvertPlayerGameResult=ConvertPlayerGameResult
ConvertPlayerGameResult="ConvertPlayerGameResult(","integer ",,~i,")"
ConvertPlayerGameResultHint="[NATIVE]  playergameresult ConvertPlayerGameResult (integer i)"


ConvertUnitState=ConvertUnitState
ConvertUnitState="ConvertUnitState(","integer ",,~i,")"
ConvertUnitStateHint="[NATIVE]  unitstate ConvertUnitState (integer i)"


ConvertAIDifficulty=ConvertAIDifficulty
ConvertAIDifficulty="ConvertAIDifficulty(","integer ",,~i,")"
ConvertAIDifficultyHint="[NATIVE]  aidifficulty ConvertAIDifficulty (integer i)"


ConvertGameEvent=ConvertGameEvent
ConvertGameEvent="ConvertGameEvent(","integer ",,~i,")"
ConvertGameEventHint="[NATIVE]  gameevent ConvertGameEvent (integer i)"


ConvertPlayerEvent=ConvertPlayerEvent
ConvertPlayerEvent="ConvertPlayerEvent(","integer ",,~i,")"
ConvertPlayerEventHint="[NATIVE]  playerevent ConvertPlayerEvent (integer i)"


ConvertPlayerUnitEvent=ConvertPlayerUnitEvent
ConvertPlayerUnitEvent="ConvertPlayerUnitEvent(","integer ",,~i,")"
ConvertPlayerUnitEventHint="[NATIVE]  playerunitevent ConvertPlayerUnitEvent (integer i)"


ConvertWidgetEvent=ConvertWidgetEvent
ConvertWidgetEvent="ConvertWidgetEvent(","integer ",,~i,")"
ConvertWidgetEventHint="[NATIVE]  widgetevent ConvertWidgetEvent (integer i)"


ConvertDialogEvent=ConvertDialogEvent
ConvertDialogEvent="ConvertDialogEvent(","integer ",,~i,")"
ConvertDialogEventHint="[NATIVE]  dialogevent ConvertDialogEvent (integer i)"


ConvertUnitEvent=ConvertUnitEvent
ConvertUnitEvent="ConvertUnitEvent(","integer ",,~i,")"
ConvertUnitEventHint="[NATIVE]  unitevent ConvertUnitEvent (integer i)"


ConvertLimitOp=ConvertLimitOp
ConvertLimitOp="ConvertLimitOp(","integer ",,~i,")"
ConvertLimitOpHint="[NATIVE]  limitop ConvertLimitOp (integer i)"


ConvertUnitType=ConvertUnitType
ConvertUnitType="ConvertUnitType(","integer ",,~i,")"
ConvertUnitTypeHint="[NATIVE]  unittype ConvertUnitType (integer i)"


ConvertGameSpeed=ConvertGameSpeed
ConvertGameSpeed="ConvertGameSpeed(","integer ",,~i,")"
ConvertGameSpeedHint="[NATIVE]  gamespeed ConvertGameSpeed (integer i)"


ConvertPlacement=ConvertPlacement
ConvertPlacement="ConvertPlacement(","integer ",,~i,")"
ConvertPlacementHint="[NATIVE]  placement ConvertPlacement (integer i)"


ConvertStartLocPrio=ConvertStartLocPrio
ConvertStartLocPrio="ConvertStartLocPrio(","integer ",,~i,")"
ConvertStartLocPrioHint="[NATIVE]  startlocprio ConvertStartLocPrio (integer i)"


ConvertGameDifficulty=ConvertGameDifficulty
ConvertGameDifficulty="ConvertGameDifficulty(","integer ",,~i,")"
ConvertGameDifficultyHint="[NATIVE]  gamedifficulty ConvertGameDifficulty (integer i)"


ConvertGameType=ConvertGameType
ConvertGameType="ConvertGameType(","integer ",,~i,")"
ConvertGameTypeHint="[NATIVE]  gametype ConvertGameType (integer i)"


ConvertMapFlag=ConvertMapFlag
ConvertMapFlag="ConvertMapFlag(","integer ",,~i,")"
ConvertMapFlagHint="[NATIVE]  mapflag ConvertMapFlag (integer i)"


ConvertMapVisibility=ConvertMapVisibility
ConvertMapVisibility="ConvertMapVisibility(","integer ",,~i,")"
ConvertMapVisibilityHint="[NATIVE]  mapvisibility ConvertMapVisibility (integer i)"


ConvertMapSetting=ConvertMapSetting
ConvertMapSetting="ConvertMapSetting(","integer ",,~i,")"
ConvertMapSettingHint="[NATIVE]  mapsetting ConvertMapSetting (integer i)"


ConvertMapDensity=ConvertMapDensity
ConvertMapDensity="ConvertMapDensity(","integer ",,~i,")"
ConvertMapDensityHint="[NATIVE]  mapdensity ConvertMapDensity (integer i)"


ConvertMapControl=ConvertMapControl
ConvertMapControl="ConvertMapControl(","integer ",,~i,")"
ConvertMapControlHint="[NATIVE]  mapcontrol ConvertMapControl (integer i)"


ConvertPlayerColor=ConvertPlayerColor
ConvertPlayerColor="ConvertPlayerColor(","integer ",,~i,")"
ConvertPlayerColorHint="[NATIVE]  playercolor ConvertPlayerColor (integer i)"


ConvertPlayerSlotState=ConvertPlayerSlotState
ConvertPlayerSlotState="ConvertPlayerSlotState(","integer ",,~i,")"
ConvertPlayerSlotStateHint="[NATIVE]  playerslotstate ConvertPlayerSlotState (integer i)"


ConvertVolumeGroup=ConvertVolumeGroup
ConvertVolumeGroup="ConvertVolumeGroup(","integer ",,~i,")"
ConvertVolumeGroupHint="[NATIVE]  volumegroup ConvertVolumeGroup (integer i)"


ConvertCameraField=ConvertCameraField
ConvertCameraField="ConvertCameraField(","integer ",,~i,")"
ConvertCameraFieldHint="[NATIVE]  camerafield ConvertCameraField (integer i)"


ConvertBlendMode=ConvertBlendMode
ConvertBlendMode="ConvertBlendMode(","integer ",,~i,")"
ConvertBlendModeHint="[NATIVE]  blendmode ConvertBlendMode (integer i)"


ConvertRarityControl=ConvertRarityControl
ConvertRarityControl="ConvertRarityControl(","integer ",,~i,")"
ConvertRarityControlHint="[NATIVE]  raritycontrol ConvertRarityControl (integer i)"


ConvertTexMapFlags=ConvertTexMapFlags
ConvertTexMapFlags="ConvertTexMapFlags(","integer ",,~i,")"
ConvertTexMapFlagsHint="[NATIVE]  texmapflags ConvertTexMapFlags (integer i)"


ConvertFogState=ConvertFogState
ConvertFogState="ConvertFogState(","integer ",,~i,")"
ConvertFogStateHint="[NATIVE]  fogstate ConvertFogState (integer i)"


ConvertEffectType=ConvertEffectType
ConvertEffectType="ConvertEffectType(","integer ",,~i,")"
ConvertEffectTypeHint="[NATIVE]  effecttype ConvertEffectType (integer i)"


ConvertVersion=ConvertVersion
ConvertVersion="ConvertVersion(","integer ",,~i,")"
ConvertVersionHint="[NATIVE]  version ConvertVersion (integer i)"


ConvertItemType=ConvertItemType
ConvertItemType="ConvertItemType(","integer ",,~i,")"
ConvertItemTypeHint="[NATIVE]  itemtype ConvertItemType (integer i)"


ConvertAttackType=ConvertAttackType
ConvertAttackType="ConvertAttackType(","integer ",,~i,")"
ConvertAttackTypeHint="[NATIVE]  attacktype ConvertAttackType (integer i)"


ConvertDamageType=ConvertDamageType
ConvertDamageType="ConvertDamageType(","integer ",,~i,")"
ConvertDamageTypeHint="[NATIVE]  damagetype ConvertDamageType (integer i)"


ConvertWeaponType=ConvertWeaponType
ConvertWeaponType="ConvertWeaponType(","integer ",,~i,")"
ConvertWeaponTypeHint="[NATIVE]  weapontype ConvertWeaponType (integer i)"


ConvertSoundType=ConvertSoundType
ConvertSoundType="ConvertSoundType(","integer ",,~i,")"
ConvertSoundTypeHint="[NATIVE]  soundtype ConvertSoundType (integer i)"


ConvertPathingType=ConvertPathingType
ConvertPathingType="ConvertPathingType(","integer ",,~i,")"
ConvertPathingTypeHint="[NATIVE]  pathingtype ConvertPathingType (integer i)"


ConvertProjectileType=ConvertProjectileType
ConvertProjectileType="ConvertProjectileType(","integer ",,~i,")"
ConvertProjectileTypeHint="[UjAPI]  projectiletype ConvertProjectileType (integer i)"


ConvertMappedField=ConvertMappedField
ConvertMappedField="ConvertMappedField(","integer ",,~i,")"
ConvertMappedFieldHint="[UjAPI]  mappedfield ConvertMappedField (integer i)"


ConvertAttachmentType=ConvertAttachmentType
ConvertAttachmentType="ConvertAttachmentType(","integer ",,~i,")"
ConvertAttachmentTypeHint="[UjAPI]  attachmenttype ConvertAttachmentType (integer i)"


ConvertBoneType=ConvertBoneType
ConvertBoneType="ConvertBoneType(","integer ",,~i,")"
ConvertBoneTypeHint="[UjAPI]  bonetype ConvertBoneType (integer i)"


ConvertAnimType=ConvertAnimType
ConvertAnimType="ConvertAnimType(","integer ",,~i,")"
ConvertAnimTypeHint="[UjAPI]  animtype ConvertAnimType (integer i)"


ConvertSubAnimType=ConvertSubAnimType
ConvertSubAnimType="ConvertSubAnimType(","integer ",,~i,")"
ConvertSubAnimTypeHint="[UjAPI]  subanimtype ConvertSubAnimType (integer i)"


ConvertCursorAnimType=ConvertCursorAnimType
ConvertCursorAnimType="ConvertCursorAnimType(","integer ",,~i,")"
ConvertCursorAnimTypeHint="[UjAPI]  cursoranimtype ConvertCursorAnimType (integer i)"


ConvertOriginFrameType=ConvertOriginFrameType
ConvertOriginFrameType="ConvertOriginFrameType(","integer ",,~i,")"
ConvertOriginFrameTypeHint="[UjAPI]  originframetype ConvertOriginFrameType (integer i)"


ConvertFramePointType=ConvertFramePointType
ConvertFramePointType="ConvertFramePointType(","integer ",,~i,")"
ConvertFramePointTypeHint="[UjAPI]  framepointtype ConvertFramePointType (integer i)"


ConvertTextAlignType=ConvertTextAlignType
ConvertTextAlignType="ConvertTextAlignType(","integer ",,~i,")"
ConvertTextAlignTypeHint="[UjAPI]  textaligntype ConvertTextAlignType (integer i)"


ConvertFrameEventType=ConvertFrameEventType
ConvertFrameEventType="ConvertFrameEventType(","integer ",,~i,")"
ConvertFrameEventTypeHint="[UjAPI]  frameeventtype ConvertFrameEventType (integer i)"


ConvertOsKeyType=ConvertOsKeyType
ConvertOsKeyType="ConvertOsKeyType(","integer ",,~i,")"
ConvertOsKeyTypeHint="[UjAPI]  oskeytype ConvertOsKeyType (integer i)"


ConvertMouseButtonType=ConvertMouseButtonType
ConvertMouseButtonType="ConvertMouseButtonType(","integer ",,~i,")"
ConvertMouseButtonTypeHint="[UjAPI]  mousebuttontype ConvertMouseButtonType (integer i)"


ConvertAbilityIntegerField=ConvertAbilityIntegerField
ConvertAbilityIntegerField="ConvertAbilityIntegerField(","integer ",,~i,")"
ConvertAbilityIntegerFieldHint="[UjAPI]  abilityintegerfield ConvertAbilityIntegerField (integer i)"


ConvertAbilityRealField=ConvertAbilityRealField
ConvertAbilityRealField="ConvertAbilityRealField(","integer ",,~i,")"
ConvertAbilityRealFieldHint="[UjAPI]  abilityrealfield ConvertAbilityRealField (integer i)"


ConvertAbilityBooleanField=ConvertAbilityBooleanField
ConvertAbilityBooleanField="ConvertAbilityBooleanField(","integer ",,~i,")"
ConvertAbilityBooleanFieldHint="[UjAPI]  abilitybooleanfield ConvertAbilityBooleanField (integer i)"


ConvertAbilityStringField=ConvertAbilityStringField
ConvertAbilityStringField="ConvertAbilityStringField(","integer ",,~i,")"
ConvertAbilityStringFieldHint="[UjAPI]  abilitystringfield ConvertAbilityStringField (integer i)"


ConvertAbilityIntegerLevelField=ConvertAbilityIntegerLevelField
ConvertAbilityIntegerLevelField="ConvertAbilityIntegerLevelField(","integer ",,~i,")"
ConvertAbilityIntegerLevelFieldHint="[UjAPI]  abilityintegerlevelfield ConvertAbilityIntegerLevelField (integer i)"


ConvertAbilityRealLevelField=ConvertAbilityRealLevelField
ConvertAbilityRealLevelField="ConvertAbilityRealLevelField(","integer ",,~i,")"
ConvertAbilityRealLevelFieldHint="[UjAPI]  abilityreallevelfield ConvertAbilityRealLevelField (integer i)"


ConvertAbilityBooleanLevelField=ConvertAbilityBooleanLevelField
ConvertAbilityBooleanLevelField="ConvertAbilityBooleanLevelField(","integer ",,~i,")"
ConvertAbilityBooleanLevelFieldHint="[UjAPI]  abilitybooleanlevelfield ConvertAbilityBooleanLevelField (integer i)"


ConvertAbilityStringLevelField=ConvertAbilityStringLevelField
ConvertAbilityStringLevelField="ConvertAbilityStringLevelField(","integer ",,~i,")"
ConvertAbilityStringLevelFieldHint="[UjAPI]  abilitystringlevelfield ConvertAbilityStringLevelField (integer i)"


ConvertAbilityIntegerLevelArrayField=ConvertAbilityIntegerLevelArrayField
ConvertAbilityIntegerLevelArrayField="ConvertAbilityIntegerLevelArrayField(","integer ",,~i,")"
ConvertAbilityIntegerLevelArrayFieldHint="[UjAPI]  abilityintegerlevelarrayfield ConvertAbilityIntegerLevelArrayField (integer i)"


ConvertAbilityRealLevelArrayField=ConvertAbilityRealLevelArrayField
ConvertAbilityRealLevelArrayField="ConvertAbilityRealLevelArrayField(","integer ",,~i,")"
ConvertAbilityRealLevelArrayFieldHint="[UjAPI]  abilityreallevelarrayfield ConvertAbilityRealLevelArrayField (integer i)"


ConvertAbilityBooleanLevelArrayField=ConvertAbilityBooleanLevelArrayField
ConvertAbilityBooleanLevelArrayField="ConvertAbilityBooleanLevelArrayField(","integer ",,~i,")"
ConvertAbilityBooleanLevelArrayFieldHint="[UjAPI]  abilitybooleanlevelarrayfield ConvertAbilityBooleanLevelArrayField (integer i)"


ConvertAbilityStringLevelArrayField=ConvertAbilityStringLevelArrayField
ConvertAbilityStringLevelArrayField="ConvertAbilityStringLevelArrayField(","integer ",,~i,")"
ConvertAbilityStringLevelArrayFieldHint="[UjAPI]  abilitystringlevelarrayfield ConvertAbilityStringLevelArrayField (integer i)"


ConvertDestructableStringField=ConvertDestructableStringField
ConvertDestructableStringField="ConvertDestructableStringField(","integer ",,~i,")"
ConvertDestructableStringFieldHint="[UjAPI]  destructablestringfield ConvertDestructableStringField (integer i)"


ConvertItemIntegerField=ConvertItemIntegerField
ConvertItemIntegerField="ConvertItemIntegerField(","integer ",,~i,")"
ConvertItemIntegerFieldHint="[UjAPI]  itemintegerfield ConvertItemIntegerField (integer i)"


ConvertItemRealField=ConvertItemRealField
ConvertItemRealField="ConvertItemRealField(","integer ",,~i,")"
ConvertItemRealFieldHint="[UjAPI]  itemrealfield ConvertItemRealField (integer i)"


ConvertItemBooleanField=ConvertItemBooleanField
ConvertItemBooleanField="ConvertItemBooleanField(","integer ",,~i,")"
ConvertItemBooleanFieldHint="[UjAPI]  itembooleanfield ConvertItemBooleanField (integer i)"


ConvertItemStringField=ConvertItemStringField
ConvertItemStringField="ConvertItemStringField(","integer ",,~i,")"
ConvertItemStringFieldHint="[UjAPI]  itemstringfield ConvertItemStringField (integer i)"


ConvertUnitIntegerField=ConvertUnitIntegerField
ConvertUnitIntegerField="ConvertUnitIntegerField(","integer ",,~i,")"
ConvertUnitIntegerFieldHint="[UjAPI]  unitintegerfield ConvertUnitIntegerField (integer i)"


ConvertUnitRealField=ConvertUnitRealField
ConvertUnitRealField="ConvertUnitRealField(","integer ",,~i,")"
ConvertUnitRealFieldHint="[UjAPI]  unitrealfield ConvertUnitRealField (integer i)"


ConvertUnitBooleanField=ConvertUnitBooleanField
ConvertUnitBooleanField="ConvertUnitBooleanField(","integer ",,~i,")"
ConvertUnitBooleanFieldHint="[UjAPI]  unitbooleanfield ConvertUnitBooleanField (integer i)"


ConvertUnitStringField=ConvertUnitStringField
ConvertUnitStringField="ConvertUnitStringField(","integer ",,~i,")"
ConvertUnitStringFieldHint="[UjAPI]  unitstringfield ConvertUnitStringField (integer i)"


ConvertUnitWeaponIntegerField=ConvertUnitWeaponIntegerField
ConvertUnitWeaponIntegerField="ConvertUnitWeaponIntegerField(","integer ",,~i,")"
ConvertUnitWeaponIntegerFieldHint="[UjAPI]  unitweaponintegerfield ConvertUnitWeaponIntegerField (integer i)"


ConvertUnitWeaponRealField=ConvertUnitWeaponRealField
ConvertUnitWeaponRealField="ConvertUnitWeaponRealField(","integer ",,~i,")"
ConvertUnitWeaponRealFieldHint="[UjAPI]  unitweaponrealfield ConvertUnitWeaponRealField (integer i)"


ConvertUnitWeaponBooleanField=ConvertUnitWeaponBooleanField
ConvertUnitWeaponBooleanField="ConvertUnitWeaponBooleanField(","integer ",,~i,")"
ConvertUnitWeaponBooleanFieldHint="[UjAPI]  unitweaponbooleanfield ConvertUnitWeaponBooleanField (integer i)"


ConvertUnitWeaponStringField=ConvertUnitWeaponStringField
ConvertUnitWeaponStringField="ConvertUnitWeaponStringField(","integer ",,~i,")"
ConvertUnitWeaponStringFieldHint="[UjAPI]  unitweaponstringfield ConvertUnitWeaponStringField (integer i)"


ConvertMoveType=ConvertMoveType
ConvertMoveType="ConvertMoveType(","integer ",,~i,")"
ConvertMoveTypeHint="[UjAPI]  movetype ConvertMoveType (integer i)"


ConvertPathingAIType=ConvertPathingAIType
ConvertPathingAIType="ConvertPathingAIType(","integer ",,~i,")"
ConvertPathingAITypeHint="[UjAPI]  pathingaitype ConvertPathingAIType (integer i)"


ConvertCollisionType=ConvertCollisionType
ConvertCollisionType="ConvertCollisionType(","integer ",,~i,")"
ConvertCollisionTypeHint="[UjAPI]  collisiontype ConvertCollisionType (integer i)"


ConvertTargetFlag=ConvertTargetFlag
ConvertTargetFlag="ConvertTargetFlag(","integer ",,~i,")"
ConvertTargetFlagHint="[UjAPI]  targetflag ConvertTargetFlag (integer i)"


ConvertArmorType=ConvertArmorType
ConvertArmorType="ConvertArmorType(","integer ",,~i,")"
ConvertArmorTypeHint="[UjAPI]  armortype ConvertArmorType (integer i)"


ConvertHeroAttribute=ConvertHeroAttribute
ConvertHeroAttribute="ConvertHeroAttribute(","integer ",,~i,")"
ConvertHeroAttributeHint="[UjAPI]  heroattribute ConvertHeroAttribute (integer i)"


ConvertDefenseType=ConvertDefenseType
ConvertDefenseType="ConvertDefenseType(","integer ",,~i,")"
ConvertDefenseTypeHint="[UjAPI]  defensetype ConvertDefenseType (integer i)"


ConvertRegenType=ConvertRegenType
ConvertRegenType="ConvertRegenType(","integer ",,~i,")"
ConvertRegenTypeHint="[UjAPI]  regentype ConvertRegenType (integer i)"


ConvertUnitCategory=ConvertUnitCategory
ConvertUnitCategory="ConvertUnitCategory(","integer ",,~i,")"
ConvertUnitCategoryHint="[UjAPI]  unitcategory ConvertUnitCategory (integer i)"


ConvertPathingFlag=ConvertPathingFlag
ConvertPathingFlag="ConvertPathingFlag(","integer ",,~i,")"
ConvertPathingFlagHint="[UjAPI]  pathingflag ConvertPathingFlag (integer i)"


ConvertTimeType=ConvertTimeType
ConvertTimeType="ConvertTimeType(","integer ",,~i,")"
ConvertTimeTypeHint="[UjAPI]  timetype ConvertTimeType (integer i)"


ConvertVariableType=ConvertVariableType
ConvertVariableType="ConvertVariableType(","integer ",,~i,")"
ConvertVariableTypeHint="[UjAPI]  variabletype ConvertVariableType (integer i)"


ConvertRenderStage=ConvertRenderStage
ConvertRenderStage="ConvertRenderStage(","integer ",,~i,")"
ConvertRenderStageHint="[UjAPI]  renderstage ConvertRenderStage (integer i)"


ConvertLayoutStyleFlag=ConvertLayoutStyleFlag
ConvertLayoutStyleFlag="ConvertLayoutStyleFlag(","integer ",,~i,")"
ConvertLayoutStyleFlagHint="[UjAPI]  layoutstyleflag ConvertLayoutStyleFlag (integer i)"


ConvertGridStyleFlag=ConvertGridStyleFlag
ConvertGridStyleFlag="ConvertGridStyleFlag(","integer ",,~i,")"
ConvertGridStyleFlagHint="[UjAPI]  gridstyleflag ConvertGridStyleFlag (integer i)"


ConvertLayerStyleFlag=ConvertLayerStyleFlag
ConvertLayerStyleFlag="ConvertLayerStyleFlag(","integer ",,~i,")"
ConvertLayerStyleFlagHint="[UjAPI]  layerstyleflag ConvertLayerStyleFlag (integer i)"


ConvertControlStyleFlag=ConvertControlStyleFlag
ConvertControlStyleFlag="ConvertControlStyleFlag(","integer ",,~i,")"
ConvertControlStyleFlagHint="[UjAPI]  controlstyleflag ConvertControlStyleFlag (integer i)"


ConvertFrameState=ConvertFrameState
ConvertFrameState="ConvertFrameState(","integer ",,~i,")"
ConvertFrameStateHint="[UjAPI]  framestate ConvertFrameState (integer i)"


ConvertAbilityType=ConvertAbilityType
ConvertAbilityType="ConvertAbilityType(","integer ",,~i,")"
ConvertAbilityTypeHint="[UjAPI]  abilitytype ConvertAbilityType (integer i)"


ConvertConnectionType=ConvertConnectionType
ConvertConnectionType="ConvertConnectionType(","integer ",,~i,")"
ConvertConnectionTypeHint="[UjAPI]  connectiontype ConvertConnectionType (integer i)"


ConvertTradeState=ConvertTradeState
ConvertTradeState="ConvertTradeState(","integer ",,~i,")"
ConvertTradeStateHint="[UjAPI]  tradestate ConvertTradeState (integer i)"


OrderId=OrderId
OrderId="OrderId(","string ",,~orderIdString,")"
OrderIdHint="[NATIVE]  integer OrderId (string orderIdString)"


OrderId2String=OrderId2String
OrderId2String="OrderId2String(","integer ",,~orderId,")"
OrderId2StringHint="[NATIVE]  string OrderId2String (integer orderId)"


UnitId=UnitId
UnitId="UnitId(","string ",,~unitIdString,")"
UnitIdHint="[NATIVE]  integer UnitId (string unitIdString)"


UnitId2String=UnitId2String
UnitId2String="UnitId2String(","integer ",,~unitId,")"
UnitId2StringHint="[NATIVE]  string UnitId2String (integer unitId)"


AbilityId=AbilityId
AbilityId="AbilityId(","string ",,~abilityIdString,")"
AbilityIdHint="[NATIVE]  integer AbilityId (string abilityIdString)"


AbilityId2String=AbilityId2String
AbilityId2String="AbilityId2String(","integer ",,~abilCode,")"
AbilityId2StringHint="[NATIVE]  string AbilityId2String (integer abilCode)"


GetObjectName=GetObjectName
GetObjectName="GetObjectName(","integer ",,~objectId,")"
GetObjectNameHint="[NATIVE]  string GetObjectName (integer objectId)"


GetBJMaxPlayers=GetBJMaxPlayers
GetBJMaxPlayers="GetBJMaxPlayers(",")"
GetBJMaxPlayersHint="[UjAPI]  integer GetBJMaxPlayers ()"


GetBJPlayerNeutralVictim=GetBJPlayerNeutralVictim
GetBJPlayerNeutralVictim="GetBJPlayerNeutralVictim(",")"
GetBJPlayerNeutralVictimHint="[UjAPI]  integer GetBJPlayerNeutralVictim ()"


GetBJPlayerNeutralExtra=GetBJPlayerNeutralExtra
GetBJPlayerNeutralExtra="GetBJPlayerNeutralExtra(",")"
GetBJPlayerNeutralExtraHint="[UjAPI]  integer GetBJPlayerNeutralExtra ()"


GetBJMaxPlayerSlots=GetBJMaxPlayerSlots
GetBJMaxPlayerSlots="GetBJMaxPlayerSlots(",")"
GetBJMaxPlayerSlotsHint="[UjAPI]  integer GetBJMaxPlayerSlots ()"


GetPlayerNeutralPassive=GetPlayerNeutralPassive
GetPlayerNeutralPassive="GetPlayerNeutralPassive(",")"
GetPlayerNeutralPassiveHint="[UjAPI]  integer GetPlayerNeutralPassive ()"


GetPlayerNeutralAggressive=GetPlayerNeutralAggressive
GetPlayerNeutralAggressive="GetPlayerNeutralAggressive(",")"
GetPlayerNeutralAggressiveHint="[UjAPI]  integer GetPlayerNeutralAggressive ()"


GetJassArrayLimit=GetJassArrayLimit
GetJassArrayLimit="GetJassArrayLimit(",")"
GetJassArrayLimitHint="[UjAPI]  integer GetJassArrayLimit ()"


GetTextTagLimit=GetTextTagLimit
GetTextTagLimit="GetTextTagLimit(",")"
GetTextTagLimitHint="[UjAPI]  integer GetTextTagLimit ()"


Sin=Sin
Sin="Sin(","real ",,~radians,")"
SinHint="[NATIVE]  real Sin (real radians)"


Cos=Cos
Cos="Cos(","real ",,~radians,")"
CosHint="[NATIVE]  real Cos (real radians)"


Tan=Tan
Tan="Tan(","real ",,~radians,")"
TanHint="[NATIVE]  real Tan (real radians)"


Asin=Asin
Asin="Asin(","real ",,~y,")"
AsinHint="[NATIVE]  real Asin (real y)"


Acos=Acos
Acos="Acos(","real ",,~x,")"
AcosHint="[NATIVE]  real Acos (real x)"


Atan=Atan
Atan="Atan(","real ",,~x,")"
AtanHint="[NATIVE]  real Atan (real x)"


Atan2=Atan2
Atan2="Atan2(","real ",,~y,", ","real ",,~x,")"
Atan2Hint="[NATIVE]  real Atan2 (real y, real x)"


GetHandleId=GetHandleId
GetHandleId="GetHandleId(","handle ",,~h,")"
GetHandleIdHint="[NATIVE]  integer GetHandleId (handle h)"


SubString=SubString
SubString="SubString(","string ",,~source,", ","integer ",,~start,", ","integer ",,~end,")"
SubStringHint="[NATIVE]  string SubString (string source, integer start, integer end)"


StringHash=StringHash
StringHash="StringHash(","string ",,~s,")"
StringHashHint="[NATIVE]  integer StringHash (string s)"


GetLocalizedString=GetLocalizedString
GetLocalizedString="GetLocalizedString(","string ",,~source,")"
GetLocalizedStringHint="[NATIVE]  string GetLocalizedString (string source)"


GetLocalizedHotkey=GetLocalizedHotkey
GetLocalizedHotkey="GetLocalizedHotkey(","string ",,~source,")"
GetLocalizedHotkeyHint="[NATIVE]  integer GetLocalizedHotkey (string source)"


GetStartLocPrioSlot=GetStartLocPrioSlot
GetStartLocPrioSlot="GetStartLocPrioSlot(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotIndex,")"
GetStartLocPrioSlotHint="[NATIVE]  integer GetStartLocPrioSlot (integer whichStartLoc, integer prioSlotIndex)"


GetStartLocPrio=GetStartLocPrio
GetStartLocPrio="GetStartLocPrio(","integer ",,~whichStartLoc,", ","integer ",,~prioSlotIndex,")"
GetStartLocPrioHint="[NATIVE]  startlocprio GetStartLocPrio (integer whichStartLoc, integer prioSlotIndex)"


IsGameTypeSupported=IsGameTypeSupported
IsGameTypeSupported="IsGameTypeSupported(","gametype ",,~whichGameType,")"
IsGameTypeSupportedHint="[NATIVE]  boolean IsGameTypeSupported (gametype whichGameType)"


GetGameTypeSelected=GetGameTypeSelected
GetGameTypeSelected="GetGameTypeSelected(",")"
GetGameTypeSelectedHint="[NATIVE]  gametype GetGameTypeSelected ()"


GetGamePlacement=GetGamePlacement
GetGamePlacement="GetGamePlacement(",")"
GetGamePlacementHint="[NATIVE]  placement GetGamePlacement ()"


GetResourceDensity=GetResourceDensity
GetResourceDensity="GetResourceDensity(",")"
GetResourceDensityHint="[NATIVE]  mapdensity GetResourceDensity ()"


GetCreatureDensity=GetCreatureDensity
GetCreatureDensity="GetCreatureDensity(",")"
GetCreatureDensityHint="[NATIVE]  mapdensity GetCreatureDensity ()"


GetStartLocationX=GetStartLocationX
GetStartLocationX="GetStartLocationX(","integer ",,~whichStartLocation,")"
GetStartLocationXHint="[NATIVE]  real GetStartLocationX (integer whichStartLocation)"


GetStartLocationY=GetStartLocationY
GetStartLocationY="GetStartLocationY(","integer ",,~whichStartLocation,")"
GetStartLocationYHint="[NATIVE]  real GetStartLocationY (integer whichStartLocation)"


GetStartLocationLoc=GetStartLocationLoc
GetStartLocationLoc="GetStartLocationLoc(","integer ",,~whichStartLocation,")"
GetStartLocationLocHint="[NATIVE]  location GetStartLocationLoc (integer whichStartLocation)"


GetPlayerStartLocation=GetPlayerStartLocation
GetPlayerStartLocation="GetPlayerStartLocation(","player ",,~whichPlayer,")"
GetPlayerStartLocationHint="[NATIVE]  integer GetPlayerStartLocation (player whichPlayer)"


GetPlayerSelectable=GetPlayerSelectable
GetPlayerSelectable="GetPlayerSelectable(","player ",,~whichPlayer,")"
GetPlayerSelectableHint="[NATIVE]  boolean GetPlayerSelectable (player whichPlayer)"


GetPlayerTaxRate=GetPlayerTaxRate
GetPlayerTaxRate="GetPlayerTaxRate(","player ",,~sourcePlayer,", ","player ",,~otherPlayer,", ","playerstate ",,~whichResource,")"
GetPlayerTaxRateHint="[NATIVE]  integer GetPlayerTaxRate (player sourcePlayer, player otherPlayer, playerstate whichResource)"


IsPlayerRacePrefSet=IsPlayerRacePrefSet
IsPlayerRacePrefSet="IsPlayerRacePrefSet(","player ",,~whichPlayer,", ","racepreference ",,~pref,")"
IsPlayerRacePrefSetHint="[NATIVE]  boolean IsPlayerRacePrefSet (player whichPlayer, racepreference pref)"


GroupImmediateOrderById=GroupImmediateOrderById
GroupImmediateOrderById="GroupImmediateOrderById(","group ",,~whichGroup,", ","integer ",,~order,")"
GroupImmediateOrderByIdHint="[NATIVE]  boolean GroupImmediateOrderById (group whichGroup, integer order)"


GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(","group ",,~whichGroup,", ","string ",,~order,", ","real ",,~x,", ","real ",,~y,")"
GroupPointOrderHint="[NATIVE]  boolean GroupPointOrder (group whichGroup, string order, real x, real y)"


GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(","group ",,~whichGroup,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,")"
GroupPointOrderByIdHint="[NATIVE]  boolean GroupPointOrderById (group whichGroup, integer order, real x, real y)"


GroupPointOrderByIdLoc=GroupPointOrderByIdLoc
GroupPointOrderByIdLoc="GroupPointOrderByIdLoc(","group ",,~whichGroup,", ","integer ",,~order,", ","location ",,~whichLocation,")"
GroupPointOrderByIdLocHint="[NATIVE]  boolean GroupPointOrderByIdLoc (group whichGroup, integer order, location whichLocation)"


GroupTargetOrderById=GroupTargetOrderById
GroupTargetOrderById="GroupTargetOrderById(","group ",,~whichGroup,", ","integer ",,~order,", ","widget ",,~targetWidget,")"
GroupTargetOrderByIdHint="[NATIVE]  boolean GroupTargetOrderById (group whichGroup, integer order, widget targetWidget)"


MoveRectTo=MoveRectTo
MoveRectTo="MoveRectTo(","rect ",,~whichRect,", ","real ",,~newCenterX,", ","real ",,~newCenterY,")"
MoveRectToHint="[NATIVE]  nothing MoveRectTo (rect whichRect, real newCenterX, real newCenterY)"


MoveRectToLoc=MoveRectToLoc
MoveRectToLoc="MoveRectToLoc(","rect ",,~whichRect,", ","location ",,~newCenterLoc,")"
MoveRectToLocHint="[NATIVE]  nothing MoveRectToLoc (rect whichRect, location newCenterLoc)"


GetLocationZ=GetLocationZ
GetLocationZ="GetLocationZ(","location ",,~whichLocation,")"
GetLocationZHint="[NATIVE]  real GetLocationZ (location whichLocation)"


GetWorldBounds=GetWorldBounds
GetWorldBounds="GetWorldBounds(",")"
GetWorldBoundsHint="[NATIVE]  rect GetWorldBounds ()"


IsTriggerWaitOnSleeps=IsTriggerWaitOnSleeps
IsTriggerWaitOnSleeps="IsTriggerWaitOnSleeps(","trigger ",,~whichTrigger,")"
IsTriggerWaitOnSleepsHint="[NATIVE]  boolean IsTriggerWaitOnSleeps (trigger whichTrigger)"


And=And
And="And(","boolexpr ",,~operandA,", ","boolexpr ",,~operandB,")"
AndHint="[NATIVE]  boolexpr And (boolexpr operandA, boolexpr operandB)"


Or=Or
Or="Or(","boolexpr ",,~operandA,", ","boolexpr ",,~operandB,")"
OrHint="[NATIVE]  boolexpr Or (boolexpr operandA, boolexpr operandB)"


Not=Not
Not="Not(","boolexpr ",,~operand,")"
NotHint="[NATIVE]  boolexpr Not (boolexpr operand)"


Condition=Condition
Condition="Condition(","code ",,~func,")"
ConditionHint="[NATIVE]  conditionfunc Condition (code func)"


Filter=Filter
Filter="Filter(","code ",,~func,")"
FilterHint="[NATIVE]  filterfunc Filter (code func)"


TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(","trigger ",,~whichTrigger,", ","real ",,~timeout,", ","boolean ",,~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE]  event TriggerRegisterTimerEvent (trigger whichTrigger, real timeout, boolean periodic)"


TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(","trigger ",,~whichTrigger,", ","gamestate ",,~whichState,", ","limitop ",,~opcode,", ","real ",,~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE]  event TriggerRegisterGameStateEvent (trigger whichTrigger, gamestate whichState, limitop opcode, real limitval)"


TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(","trigger ",,~whichTrigger,", ","trackable ",,~t,")"
TriggerRegisterTrackableHitEventHint="[NATIVE]  event TriggerRegisterTrackableHitEvent (trigger whichTrigger, trackable t)"


TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(","trigger ",,~whichTrigger,", ","trackable ",,~t,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE]  event TriggerRegisterTrackableTrackEvent (trigger whichTrigger, trackable t)"


GetClickedButton=GetClickedButton
GetClickedButton="GetClickedButton(",")"
GetClickedButtonHint="[NATIVE]  button GetClickedButton ()"


GetClickedDialog=GetClickedDialog
GetClickedDialog="GetClickedDialog(",")"
GetClickedDialogHint="[NATIVE]  dialog GetClickedDialog ()"


GetTournamentFinishNowPlayer=GetTournamentFinishNowPlayer
GetTournamentFinishNowPlayer="GetTournamentFinishNowPlayer(",")"
GetTournamentFinishNowPlayerHint="[NATIVE]  player GetTournamentFinishNowPlayer ()"


GetLearnedSkill=GetLearnedSkill
GetLearnedSkill="GetLearnedSkill(",")"
GetLearnedSkillHint="[NATIVE]  integer GetLearnedSkill ()"


GetKillingUnit=GetKillingUnit
GetKillingUnit="GetKillingUnit(",")"
GetKillingUnitHint="[NATIVE]  unit GetKillingUnit ()"


GetTransportUnit=GetTransportUnit
GetTransportUnit="GetTransportUnit(",")"
GetTransportUnitHint="[NATIVE]  unit GetTransportUnit ()"


GetLoadedUnit=GetLoadedUnit
GetLoadedUnit="GetLoadedUnit(",")"
GetLoadedUnitHint="[NATIVE]  unit GetLoadedUnit ()"


GetIssuedOrderId=GetIssuedOrderId
GetIssuedOrderId="GetIssuedOrderId(",")"
GetIssuedOrderIdHint="[NATIVE]  integer GetIssuedOrderId ()"


GetOrderPointX=GetOrderPointX
GetOrderPointX="GetOrderPointX(",")"
GetOrderPointXHint="[NATIVE]  real GetOrderPointX ()"


GetOrderPointY=GetOrderPointY
GetOrderPointY="GetOrderPointY(",")"
GetOrderPointYHint="[NATIVE]  real GetOrderPointY ()"


GetOrderTarget=GetOrderTarget
GetOrderTarget="GetOrderTarget(",")"
GetOrderTargetHint="[NATIVE]  widget GetOrderTarget ()"


GetSpellAbility=GetSpellAbility
GetSpellAbility="GetSpellAbility(",")"
GetSpellAbilityHint="[NATIVE]  ability GetSpellAbility ()"


GetSpellTargetX=GetSpellTargetX
GetSpellTargetX="GetSpellTargetX(",")"
GetSpellTargetXHint="[NATIVE]  real GetSpellTargetX ()"


GetSpellTargetY=GetSpellTargetY
GetSpellTargetY="GetSpellTargetY(",")"
GetSpellTargetYHint="[NATIVE]  real GetSpellTargetY ()"


TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","alliancetype ",,~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE]  event TriggerRegisterPlayerAllianceChange (trigger whichTrigger, player whichPlayer, alliancetype whichAlliance)"


TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","unitevent ",,~whichEvent,", ","boolexpr ",,~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE]  event TriggerRegisterFilterUnitEvent (trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter)"


TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(","trigger ",,~whichTrigger,", ","unit ",,~whichUnit,", ","real ",,~range,", ","boolexpr ",,~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE]  event TriggerRegisterUnitInRange (trigger whichTrigger, unit whichUnit, real range, boolexpr filter)"


GetWidgetLife=GetWidgetLife
GetWidgetLife="GetWidgetLife(","widget ",,~whichWidget,")"
GetWidgetLifeHint="[NATIVE]  real GetWidgetLife (widget whichWidget)"


GetWidgetX=GetWidgetX
GetWidgetX="GetWidgetX(","widget ",,~whichWidget,")"
GetWidgetXHint="[NATIVE]  real GetWidgetX (widget whichWidget)"


GetWidgetY=GetWidgetY
GetWidgetY="GetWidgetY(","widget ",,~whichWidget,")"
GetWidgetYHint="[NATIVE]  real GetWidgetY (widget whichWidget)"


GetTriggerWidget=GetTriggerWidget
GetTriggerWidget="GetTriggerWidget(",")"
GetTriggerWidgetHint="[NATIVE]  widget GetTriggerWidget ()"


CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDestructableHint="[NATIVE]  destructable CreateDestructable (integer objectid, real x, real y, real face, real scale, integer variation)"


CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDeadDestructableHint="[NATIVE]  destructable CreateDeadDestructable (integer objectid, real x, real y, real face, real scale, integer variation)"


IsDestructableInvulnerable=IsDestructableInvulnerable
IsDestructableInvulnerable="IsDestructableInvulnerable(","destructable ",,~d,")"
IsDestructableInvulnerableHint="[NATIVE]  boolean IsDestructableInvulnerable (destructable d)"


GetDestructableX=GetDestructableX
GetDestructableX="GetDestructableX(","destructable ",,~d,")"
GetDestructableXHint="[NATIVE]  real GetDestructableX (destructable d)"


GetDestructableY=GetDestructableY
GetDestructableY="GetDestructableY(","destructable ",,~d,")"
GetDestructableYHint="[NATIVE]  real GetDestructableY (destructable d)"


GetTriggerDestructable=GetTriggerDestructable
GetTriggerDestructable="GetTriggerDestructable(",")"
GetTriggerDestructableHint="[NATIVE]  destructable GetTriggerDestructable ()"


CreateItem=CreateItem
CreateItem="CreateItem(","integer ",,~itemid,", ","real ",,~x,", ","real ",,~y,")"
CreateItemHint="[NATIVE]  item CreateItem (integer itemid, real x, real y)"


GetItemX=GetItemX
GetItemX="GetItemX(","item ",,~i,")"
GetItemXHint="[NATIVE]  real GetItemX (item i)"


GetItemY=GetItemY
GetItemY="GetItemY(","item ",,~i,")"
GetItemYHint="[NATIVE]  real GetItemY (item i)"


IsItemVisible=IsItemVisible
IsItemVisible="IsItemVisible(","item ",,~whichItem,")"
IsItemVisibleHint="[NATIVE]  boolean IsItemVisible (item whichItem)"


IsItemPowerup=IsItemPowerup
IsItemPowerup="IsItemPowerup(","item ",,~whichItem,")"
IsItemPowerupHint="[NATIVE]  boolean IsItemPowerup (item whichItem)"


IsItemSellable=IsItemSellable
IsItemSellable="IsItemSellable(","item ",,~whichItem,")"
IsItemSellableHint="[NATIVE]  boolean IsItemSellable (item whichItem)"


IsItemPawnable=IsItemPawnable
IsItemPawnable="IsItemPawnable(","item ",,~whichItem,")"
IsItemPawnableHint="[NATIVE]  boolean IsItemPawnable (item whichItem)"


IsItemIdPowerup=IsItemIdPowerup
IsItemIdPowerup="IsItemIdPowerup(","integer ",,~itemId,")"
IsItemIdPowerupHint="[NATIVE]  boolean IsItemIdPowerup (integer itemId)"


IsItemIdSellable=IsItemIdSellable
IsItemIdSellable="IsItemIdSellable(","integer ",,~itemId,")"
IsItemIdSellableHint="[NATIVE]  boolean IsItemIdSellable (integer itemId)"


IsItemIdPawnable=IsItemIdPawnable
IsItemIdPawnable="IsItemIdPawnable(","integer ",,~itemId,")"
IsItemIdPawnableHint="[NATIVE]  boolean IsItemIdPawnable (integer itemId)"


CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(","player ",,~whichPlayer,", ","string ",,~unitname,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateUnitByNameHint="[NATIVE]  unit CreateUnitByName (player whichPlayer, string unitname, real x, real y, real face)"


CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(","player ",,~id,", ","string ",,~unitname,", ","location ",,~whichLocation,", ","real ",,~face,")"
CreateUnitAtLocByNameHint="[NATIVE]  unit CreateUnitAtLocByName (player id, string unitname, location whichLocation, real face)"


CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(","player ",,~whichPlayer,", ","integer ",,~unitid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateCorpseHint="[NATIVE]  unit CreateCorpse (player whichPlayer, integer unitid, real x, real y, real face)"


GetUnitPropWindow=GetUnitPropWindow
GetUnitPropWindow="GetUnitPropWindow(","unit ",,~whichUnit,")"
GetUnitPropWindowHint="[NATIVE]  real GetUnitPropWindow (unit whichUnit)"


GetUnitDefaultPropWindow=GetUnitDefaultPropWindow
GetUnitDefaultPropWindow="GetUnitDefaultPropWindow(","unit ",,~whichUnit,")"
GetUnitDefaultPropWindowHint="[NATIVE]  real GetUnitDefaultPropWindow (unit whichUnit)"


GetHeroStr=GetHeroStr
GetHeroStr="GetHeroStr(","unit ",,~whichHero,", ","boolean ",,~includeBonuses,")"
GetHeroStrHint="[NATIVE]  integer GetHeroStr (unit whichHero, boolean includeBonuses)"


GetHeroAgi=GetHeroAgi
GetHeroAgi="GetHeroAgi(","unit ",,~whichHero,", ","boolean ",,~includeBonuses,")"
GetHeroAgiHint="[NATIVE]  integer GetHeroAgi (unit whichHero, boolean includeBonuses)"


GetHeroInt=GetHeroInt
GetHeroInt="GetHeroInt(","unit ",,~whichHero,", ","boolean ",,~includeBonuses,")"
GetHeroIntHint="[NATIVE]  integer GetHeroInt (unit whichHero, boolean includeBonuses)"


UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(","unit ",,~whichHero,", ","integer ",,~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE]  boolean UnitStripHeroLevel (unit whichHero, integer howManyLevels)"


UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(","unit ",,~whichHero,", ","integer ",,~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE]  boolean UnitModifySkillPoints (unit whichHero, integer skillPointDelta)"


DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,")"
DecUnitAbilityLevelHint="[NATIVE]  integer DecUnitAbilityLevel (unit whichUnit, integer abilcode)"


IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,")"
IncUnitAbilityLevelHint="[NATIVE]  integer IncUnitAbilityLevel (unit whichUnit, integer abilcode)"


SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(","unit ",,~whichUnit,", ","integer ",,~abilcode,", ","integer ",,~level,")"
SetUnitAbilityLevelHint="[NATIVE]  integer SetUnitAbilityLevel (unit whichUnit, integer abilcode, integer level)"


ReviveHero=ReviveHero
ReviveHero="ReviveHero(","unit ",,~whichHero,", ","real ",,~x,", ","real ",,~y,", ","boolean ",,~doEyecandy,")"
ReviveHeroHint="[NATIVE]  boolean ReviveHero (unit whichHero, real x, real y, boolean doEyecandy)"


IsUnitPaused=IsUnitPaused
IsUnitPaused="IsUnitPaused(","unit ",,~whichHero,")"
IsUnitPausedHint="[NATIVE]  boolean IsUnitPaused (unit whichHero)"


UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(","unit ",,~whichUnit,", ","item ",,~whichItem,")"
UnitAddItemHint="[NATIVE]  boolean UnitAddItem (unit whichUnit, item whichItem)"


UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(","unit ",,~whichUnit,", ","integer ",,~itemId,")"
UnitAddItemByIdHint="[NATIVE]  item UnitAddItemById (unit whichUnit, integer itemId)"


UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(","unit ",,~whichUnit,", ","integer ",,~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE]  item UnitRemoveItemFromSlot (unit whichUnit, integer itemSlot)"


UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(","unit ",,~whichUnit,", ","integer ",,~itemSlot,")"
UnitItemInSlotHint="[NATIVE]  item UnitItemInSlot (unit whichUnit, integer itemSlot)"


UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(","unit ",,~whichUnit,")"
UnitInventorySizeHint="[NATIVE]  integer UnitInventorySize (unit whichUnit)"


UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,")"
UnitDropItemPointHint="[NATIVE]  boolean UnitDropItemPoint (unit whichUnit, item whichItem, real x, real y)"


UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","integer ",,~slot,")"
UnitDropItemSlotHint="[NATIVE]  boolean UnitDropItemSlot (unit whichUnit, item whichItem, integer slot)"


UnitDropItemTarget=UnitDropItemTarget
UnitDropItemTarget="UnitDropItemTarget(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","widget ",,~target,")"
UnitDropItemTargetHint="[NATIVE]  boolean UnitDropItemTarget (unit whichUnit, item whichItem, widget target)"


UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","real ",,~x,", ","real ",,~y,")"
UnitUseItemPointHint="[NATIVE]  boolean UnitUseItemPoint (unit whichUnit, item whichItem, real x, real y)"


GetUnitState=GetUnitState
GetUnitState="GetUnitState(","unit ",,~whichUnit,", ","unitstate ",,~whichUnitState,")"
GetUnitStateHint="[NATIVE]  real GetUnitState (unit whichUnit, unitstate whichUnitState)"


IsUnitDetected=IsUnitDetected
IsUnitDetected="IsUnitDetected(","unit ",,~whichUnit,", ","player ",,~whichPlayer,")"
IsUnitDetectedHint="[NATIVE]  boolean IsUnitDetected (unit whichUnit, player whichPlayer)"


IsUnit=IsUnit
IsUnit="IsUnit(","unit ",,~whichUnit,", ","unit ",,~whichSpecifiedUnit,")"
IsUnitHint="[NATIVE]  boolean IsUnit (unit whichUnit, unit whichSpecifiedUnit)"


IsUnitHidden=IsUnitHidden
IsUnitHidden="IsUnitHidden(","unit ",,~whichUnit,")"
IsUnitHiddenHint="[NATIVE]  boolean IsUnitHidden (unit whichUnit)"


IsUnitIllusion=IsUnitIllusion
IsUnitIllusion="IsUnitIllusion(","unit ",,~whichUnit,")"
IsUnitIllusionHint="[NATIVE]  boolean IsUnitIllusion (unit whichUnit)"


IsUnitInTransport=IsUnitInTransport
IsUnitInTransport="IsUnitInTransport(","unit ",,~whichUnit,", ","unit ",,~whichTransport,")"
IsUnitInTransportHint="[NATIVE]  boolean IsUnitInTransport (unit whichUnit, unit whichTransport)"


IsUnitLoaded=IsUnitLoaded
IsUnitLoaded="IsUnitLoaded(","unit ",,~whichUnit,")"
IsUnitLoadedHint="[NATIVE]  boolean IsUnitLoaded (unit whichUnit)"


IsHeroUnitId=IsHeroUnitId
IsHeroUnitId="IsHeroUnitId(","integer ",,~unitId,")"
IsHeroUnitIdHint="[NATIVE]  boolean IsHeroUnitId (integer unitId)"


UnitAddType=UnitAddType
UnitAddType="UnitAddType(","unit ",,~whichUnit,", ","unittype ",,~whichUnitType,")"
UnitAddTypeHint="[NATIVE]  boolean UnitAddType (unit whichUnit, unittype whichUnitType)"


UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(","unit ",,~whichUnit,", ","unittype ",,~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE]  boolean UnitRemoveType (unit whichUnit, unittype whichUnitType)"


UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,")"
UnitAddAbilityHint="[NATIVE]  boolean UnitAddAbility (unit whichUnit, integer abilCode)"


UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(","unit ",,~whichUnit,", ","integer ",,~abilCode,")"
UnitRemoveAbilityHint="[NATIVE]  boolean UnitRemoveAbility (unit whichUnit, integer abilCode)"


UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,", ","boolean ",,~magic,", ","boolean ",,~physical,", ","boolean ",,~timedLife,", ","boolean ",,~aura,", ","boolean ",,~autoDispel,")"
UnitHasBuffsExHint="[NATIVE]  boolean UnitHasBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)"


UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(","unit ",,~whichUnit,", ","boolean ",,~removePositive,", ","boolean ",,~removeNegative,", ","boolean ",,~magic,", ","boolean ",,~physical,", ","boolean ",,~timedLife,", ","boolean ",,~aura,", ","boolean ",,~autoDispel,")"
UnitCountBuffsExHint="[NATIVE]  integer UnitCountBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)"


UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(","unit ",,~whichUnit,")"
UnitCanSleepHint="[NATIVE]  boolean UnitCanSleep (unit whichUnit)"


UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(","unit ",,~whichUnit,")"
UnitIsSleepingHint="[NATIVE]  boolean UnitIsSleeping (unit whichUnit)"


UnitIgnoreAlarm=UnitIgnoreAlarm
UnitIgnoreAlarm="UnitIgnoreAlarm(","unit ",,~whichUnit,", ","boolean ",,~flag,")"
UnitIgnoreAlarmHint="[NATIVE]  boolean UnitIgnoreAlarm (unit whichUnit, boolean flag)"


UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(","unit ",,~whichUnit,", ","real ",,~delay,", ","real ",,~radius,", ","real ",,~x,", ","real ",,~y,", ","real ",,~amount,", ","boolean ",,~attack,", ","boolean ",,~ranged,", ","attacktype ",,~attackType,", ","damagetype ",,~damageType,", ","weapontype ",,~weaponType,")"
UnitDamagePointHint="[NATIVE]  boolean UnitDamagePoint (unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)"


UnitDamageTarget=UnitDamageTarget
UnitDamageTarget="UnitDamageTarget(","unit ",,~whichUnit,", ","widget ",,~target,", ","real ",,~amount,", ","boolean ",,~attack,", ","boolean ",,~ranged,", ","attacktype ",,~attackType,", ","damagetype ",,~damageType,", ","weapontype ",,~weaponType,")"
UnitDamageTargetHint="[NATIVE]  boolean UnitDamageTarget (unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)"


IssueImmediateOrderById=IssueImmediateOrderById
IssueImmediateOrderById="IssueImmediateOrderById(","unit ",,~whichUnit,", ","integer ",,~order,")"
IssueImmediateOrderByIdHint="[NATIVE]  boolean IssueImmediateOrderById (unit whichUnit, integer order)"


IssuePointOrder=IssuePointOrder
IssuePointOrder="IssuePointOrder(","unit ",,~whichUnit,", ","string ",,~order,", ","real ",,~x,", ","real ",,~y,")"
IssuePointOrderHint="[NATIVE]  boolean IssuePointOrder (unit whichUnit, string order, real x, real y)"


IssuePointOrderById=IssuePointOrderById
IssuePointOrderById="IssuePointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,")"
IssuePointOrderByIdHint="[NATIVE]  boolean IssuePointOrderById (unit whichUnit, integer order, real x, real y)"


IssuePointOrderByIdLoc=IssuePointOrderByIdLoc
IssuePointOrderByIdLoc="IssuePointOrderByIdLoc(","unit ",,~whichUnit,", ","integer ",,~order,", ","location ",,~whichLocation,")"
IssuePointOrderByIdLocHint="[NATIVE]  boolean IssuePointOrderByIdLoc (unit whichUnit, integer order, location whichLocation)"


IssueTargetOrderById=IssueTargetOrderById
IssueTargetOrderById="IssueTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,")"
IssueTargetOrderByIdHint="[NATIVE]  boolean IssueTargetOrderById (unit whichUnit, integer order, widget targetWidget)"


IssueInstantPointOrder=IssueInstantPointOrder
IssueInstantPointOrder="IssueInstantPointOrder(","unit ",,~whichUnit,", ","string ",,~order,", ","real ",,~x,", ","real ",,~y,", ","widget ",,~instantTargetWidget,")"
IssueInstantPointOrderHint="[NATIVE]  boolean IssueInstantPointOrder (unit whichUnit, string order, real x, real y, widget instantTargetWidget)"


IssueInstantPointOrderById=IssueInstantPointOrderById
IssueInstantPointOrderById="IssueInstantPointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,", ","widget ",,~instantTargetWidget,")"
IssueInstantPointOrderByIdHint="[NATIVE]  boolean IssueInstantPointOrderById (unit whichUnit, integer order, real x, real y, widget instantTargetWidget)"


IssueInstantTargetOrderById=IssueInstantTargetOrderById
IssueInstantTargetOrderById="IssueInstantTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,", ","widget ",,~instantTargetWidget,")"
IssueInstantTargetOrderByIdHint="[NATIVE]  boolean IssueInstantTargetOrderById (unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget)"


IssueBuildOrder=IssueBuildOrder
IssueBuildOrder="IssueBuildOrder(","unit ",,~whichPeon,", ","string ",,~unitToBuild,", ","real ",,~x,", ","real ",,~y,")"
IssueBuildOrderHint="[NATIVE]  boolean IssueBuildOrder (unit whichPeon, string unitToBuild, real x, real y)"


IssueBuildOrderById=IssueBuildOrderById
IssueBuildOrderById="IssueBuildOrderById(","unit ",,~whichPeon,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
IssueBuildOrderByIdHint="[NATIVE]  boolean IssueBuildOrderById (unit whichPeon, integer unitId, real x, real y)"


IssueNeutralImmediateOrder=IssueNeutralImmediateOrder
IssueNeutralImmediateOrder="IssueNeutralImmediateOrder(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","string ",,~unitToBuild,")"
IssueNeutralImmediateOrderHint="[NATIVE]  boolean IssueNeutralImmediateOrder (player forWhichPlayer, unit neutralStructure, string unitToBuild)"


IssueNeutralPointOrder=IssueNeutralPointOrder
IssueNeutralPointOrder="IssueNeutralPointOrder(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","string ",,~unitToBuild,", ","real ",,~x,", ","real ",,~y,")"
IssueNeutralPointOrderHint="[NATIVE]  boolean IssueNeutralPointOrder (player forWhichPlayer, unit neutralStructure, string unitToBuild, real x, real y)"


IssueNeutralPointOrderById=IssueNeutralPointOrderById
IssueNeutralPointOrderById="IssueNeutralPointOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
IssueNeutralPointOrderByIdHint="[NATIVE]  boolean IssueNeutralPointOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, real x, real y)"


IssueNeutralTargetOrder=IssueNeutralTargetOrder
IssueNeutralTargetOrder="IssueNeutralTargetOrder(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","string ",,~unitToBuild,", ","widget ",,~target,")"
IssueNeutralTargetOrderHint="[NATIVE]  boolean IssueNeutralTargetOrder (player forWhichPlayer, unit neutralStructure, string unitToBuild, widget target)"


IssueNeutralTargetOrderById=IssueNeutralTargetOrderById
IssueNeutralTargetOrderById="IssueNeutralTargetOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","widget ",,~target,")"
IssueNeutralTargetOrderByIdHint="[NATIVE]  boolean IssueNeutralTargetOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, widget target)"


WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(","unit ",,~waygate,")"
WaygateGetDestinationXHint="[NATIVE]  real WaygateGetDestinationX (unit waygate)"


WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(","unit ",,~waygate,")"
WaygateGetDestinationYHint="[NATIVE]  real WaygateGetDestinationY (unit waygate)"


WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(","unit ",,~waygate,")"
WaygateIsActiveHint="[NATIVE]  boolean WaygateIsActive (unit waygate)"


AddItemToAllStock=AddItemToAllStock
AddItemToAllStock="AddItemToAllStock(","integer ",,~itemId,", ","integer ",,~currentStock,", ","integer ",,~stockMax,")"
AddItemToAllStockHint="[NATIVE]  nothing AddItemToAllStock (integer itemId, integer currentStock, integer stockMax)"


AddItemToStock=AddItemToStock
AddItemToStock="AddItemToStock(","unit ",,~whichUnit,", ","integer ",,~itemId,", ","integer ",,~currentStock,", ","integer ",,~stockMax,")"
AddItemToStockHint="[NATIVE]  nothing AddItemToStock (unit whichUnit, integer itemId, integer currentStock, integer stockMax)"


AddUnitToAllStock=AddUnitToAllStock
AddUnitToAllStock="AddUnitToAllStock(","integer ",,~unitId,", ","integer ",,~currentStock,", ","integer ",,~stockMax,")"
AddUnitToAllStockHint="[NATIVE]  nothing AddUnitToAllStock (integer unitId, integer currentStock, integer stockMax)"


AddUnitToStock=AddUnitToStock
AddUnitToStock="AddUnitToStock(","unit ",,~whichUnit,", ","integer ",,~unitId,", ","integer ",,~currentStock,", ","integer ",,~stockMax,")"
AddUnitToStockHint="[NATIVE]  nothing AddUnitToStock (unit whichUnit, integer unitId, integer currentStock, integer stockMax)"


Player=Player
Player="Player(","integer ",,~number,")"
PlayerHint="[NATIVE]  player Player (integer number)"


IsPlayerObserver=IsPlayerObserver
IsPlayerObserver="IsPlayerObserver(","player ",,~whichPlayer,")"
IsPlayerObserverHint="[NATIVE]  boolean IsPlayerObserver (player whichPlayer)"


IsVisibleToPlayer=IsVisibleToPlayer
IsVisibleToPlayer="IsVisibleToPlayer(","real ",,~x,", ","real ",,~y,", ","player ",,~whichPlayer,")"
IsVisibleToPlayerHint="[NATIVE]  boolean IsVisibleToPlayer (real x, real y, player whichPlayer)"


IsFoggedToPlayer=IsFoggedToPlayer
IsFoggedToPlayer="IsFoggedToPlayer(","real ",,~x,", ","real ",,~y,", ","player ",,~whichPlayer,")"
IsFoggedToPlayerHint="[NATIVE]  boolean IsFoggedToPlayer (real x, real y, player whichPlayer)"


IsMaskedToPlayer=IsMaskedToPlayer
IsMaskedToPlayer="IsMaskedToPlayer(","real ",,~x,", ","real ",,~y,", ","player ",,~whichPlayer,")"
IsMaskedToPlayerHint="[NATIVE]  boolean IsMaskedToPlayer (real x, real y, player whichPlayer)"


GetPlayerId=GetPlayerId
GetPlayerId="GetPlayerId(","player ",,~whichPlayer,")"
GetPlayerIdHint="[NATIVE]  integer GetPlayerId (player whichPlayer)"


GetPlayerHandicap=GetPlayerHandicap
GetPlayerHandicap="GetPlayerHandicap(","player ",,~whichPlayer,")"
GetPlayerHandicapHint="[NATIVE]  real GetPlayerHandicap (player whichPlayer)"


GetPlayerHandicapXP=GetPlayerHandicapXP
GetPlayerHandicapXP="GetPlayerHandicapXP(","player ",,~whichPlayer,")"
GetPlayerHandicapXPHint="[NATIVE]  real GetPlayerHandicapXP (player whichPlayer)"


GetPlayerTechMaxAllowed=GetPlayerTechMaxAllowed
GetPlayerTechMaxAllowed="GetPlayerTechMaxAllowed(","player ",,~whichPlayer,", ","integer ",,~techid,")"
GetPlayerTechMaxAllowedHint="[NATIVE]  integer GetPlayerTechMaxAllowed (player whichPlayer, integer techid)"


GetPlayerTechResearched=GetPlayerTechResearched
GetPlayerTechResearched="GetPlayerTechResearched(","player ",,~whichPlayer,", ","integer ",,~techid,", ","boolean ",,~specificonly,")"
GetPlayerTechResearchedHint="[NATIVE]  boolean GetPlayerTechResearched (player whichPlayer, integer techid, boolean specificonly)"


GetPlayerTechCount=GetPlayerTechCount
GetPlayerTechCount="GetPlayerTechCount(","player ",,~whichPlayer,", ","integer ",,~techid,", ","boolean ",,~specificonly,")"
GetPlayerTechCountHint="[NATIVE]  integer GetPlayerTechCount (player whichPlayer, integer techid, boolean specificonly)"


CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","rect ",,~where,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRectHint="[NATIVE]  fogmodifier CreateFogModifierRect (player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision, boolean afterUnits)"


CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","real ",,~centerX,", ","real ",,~centerY,", ","real ",,~radius,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE]  fogmodifier CreateFogModifierRadius (player forWhichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits)"


CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(","player ",,~forWhichPlayer,", ","fogstate ",,~whichState,", ","location ",,~center,", ","real ",,~radius,", ","boolean ",,~useSharedVision,", ","boolean ",,~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE]  fogmodifier CreateFogModifierRadiusLoc (player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits)"


VersionGet=VersionGet
VersionGet="VersionGet(",")"
VersionGetHint="[NATIVE]  version VersionGet ()"


VersionCompatible=VersionCompatible
VersionCompatible="VersionCompatible(","version ",,~whichVersion,")"
VersionCompatibleHint="[NATIVE]  boolean VersionCompatible (version whichVersion)"


VersionSupported=VersionSupported
VersionSupported="VersionSupported(","version ",,~whichVersion,")"
VersionSupportedHint="[NATIVE]  boolean VersionSupported (version whichVersion)"


RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(","string ",,~sourceDirName,", ","string ",,~destDirName,")"
RenameSaveDirectoryHint="[NATIVE]  boolean RenameSaveDirectory (string sourceDirName, string destDirName)"


RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(","string ",,~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE]  boolean RemoveSaveDirectory (string sourceDirName)"


CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(","string ",,~sourceSaveName,", ","string ",,~destSaveName,")"
CopySaveGameHint="[NATIVE]  boolean CopySaveGame (string sourceSaveName, string destSaveName)"


GetFloatGameState=GetFloatGameState
GetFloatGameState="GetFloatGameState(","fgamestate ",,~whichFloatGameState,")"
GetFloatGameStateHint="[NATIVE]  real GetFloatGameState (fgamestate whichFloatGameState)"


GetDefaultDifficulty=GetDefaultDifficulty
GetDefaultDifficulty="GetDefaultDifficulty(",")"
GetDefaultDifficultyHint="[NATIVE]  gamedifficulty GetDefaultDifficulty ()"


GetCustomCampaignButtonVisible=GetCustomCampaignButtonVisible
GetCustomCampaignButtonVisible="GetCustomCampaignButtonVisible(","integer ",,~whichButton,")"
GetCustomCampaignButtonVisibleHint="[NATIVE]  boolean GetCustomCampaignButtonVisible (integer whichButton)"


DialogAddQuitButton=DialogAddQuitButton
DialogAddQuitButton="DialogAddQuitButton(","dialog ",,~whichDialog,", ","boolean ",,~doScoreScreen,", ","string ",,~buttonText,", ","integer ",,~hotkey,")"
DialogAddQuitButtonHint="[NATIVE]  button DialogAddQuitButton (dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey)"


ReloadGameCachesFromDisk=ReloadGameCachesFromDisk
ReloadGameCachesFromDisk="ReloadGameCachesFromDisk(",")"
ReloadGameCachesFromDiskHint="[NATIVE]  boolean ReloadGameCachesFromDisk ()"


SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(","gamecache ",,~whichCache,")"
SaveGameCacheHint="[NATIVE]  boolean SaveGameCache (gamecache whichCache)"


StoreUnit=StoreUnit
StoreUnit="StoreUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","unit ",,~whichUnit,")"
StoreUnitHint="[NATIVE]  boolean StoreUnit (gamecache cache, string missionKey, string key, unit whichUnit)"


StoreString=StoreString
StoreString="StoreString(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","string ",,~value,")"
StoreStringHint="[NATIVE]  boolean StoreString (gamecache cache, string missionKey, string key, string value)"


SyncStoredString=SyncStoredString
SyncStoredString="SyncStoredString(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
SyncStoredStringHint="[NATIVE]  nothing SyncStoredString (gamecache cache, string missionKey, string key)"


FlushStoredString=FlushStoredString
FlushStoredString="FlushStoredString(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
FlushStoredStringHint="[NATIVE]  nothing FlushStoredString (gamecache cache, string missionKey, string key)"


GetStoredInteger=GetStoredInteger
GetStoredInteger="GetStoredInteger(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
GetStoredIntegerHint="[NATIVE]  integer GetStoredInteger (gamecache cache, string missionKey, string key)"


GetStoredReal=GetStoredReal
GetStoredReal="GetStoredReal(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
GetStoredRealHint="[NATIVE]  real GetStoredReal (gamecache cache, string missionKey, string key)"


GetStoredBoolean=GetStoredBoolean
GetStoredBoolean="GetStoredBoolean(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
GetStoredBooleanHint="[NATIVE]  boolean GetStoredBoolean (gamecache cache, string missionKey, string key)"


GetStoredString=GetStoredString
GetStoredString="GetStoredString(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,")"
GetStoredStringHint="[NATIVE]  string GetStoredString (gamecache cache, string missionKey, string key)"


RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(","gamecache ",,~cache,", ","string ",,~missionKey,", ","string ",,~key,", ","player ",,~forWhichPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
RestoreUnitHint="[NATIVE]  unit RestoreUnit (gamecache cache, string missionKey, string key, player forWhichPlayer, real x, real y, real facing)"


InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE]  hashtable InitHashtable ()"


SaveStr=SaveStr
SaveStr="SaveStr(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","string ",,~value,")"
SaveStrHint="[NATIVE]  boolean SaveStr (hashtable table, integer parentKey, integer childKey, string value)"


SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","player ",,~whichPlayer,")"
SavePlayerHandleHint="[NATIVE]  boolean SavePlayerHandle (hashtable table, integer parentKey, integer childKey, player whichPlayer)"


SaveWidgetHandle=SaveWidgetHandle
SaveWidgetHandle="SaveWidgetHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","widget ",,~whichWidget,")"
SaveWidgetHandleHint="[NATIVE]  boolean SaveWidgetHandle (hashtable table, integer parentKey, integer childKey, widget whichWidget)"


SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","destructable ",,~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE]  boolean SaveDestructableHandle (hashtable table, integer parentKey, integer childKey, destructable whichDestructable)"


SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","item ",,~whichItem,")"
SaveItemHandleHint="[NATIVE]  boolean SaveItemHandle (hashtable table, integer parentKey, integer childKey, item whichItem)"


SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","unit ",,~whichUnit,")"
SaveUnitHandleHint="[NATIVE]  boolean SaveUnitHandle (hashtable table, integer parentKey, integer childKey, unit whichUnit)"


SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","ability ",,~whichAbility,")"
SaveAbilityHandleHint="[NATIVE]  boolean SaveAbilityHandle (hashtable table, integer parentKey, integer childKey, ability whichAbility)"


SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","timer ",,~whichTimer,")"
SaveTimerHandleHint="[NATIVE]  boolean SaveTimerHandle (hashtable table, integer parentKey, integer childKey, timer whichTimer)"


SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","trigger ",,~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE]  boolean SaveTriggerHandle (hashtable table, integer parentKey, integer childKey, trigger whichTrigger)"


SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","triggercondition ",,~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE]  boolean SaveTriggerConditionHandle (hashtable table, integer parentKey, integer childKey, triggercondition whichTriggercondition)"


SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","triggeraction ",,~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE]  boolean SaveTriggerActionHandle (hashtable table, integer parentKey, integer childKey, triggeraction whichTriggeraction)"


SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","event ",,~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE]  boolean SaveTriggerEventHandle (hashtable table, integer parentKey, integer childKey, event whichEvent)"


SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","force ",,~whichForce,")"
SaveForceHandleHint="[NATIVE]  boolean SaveForceHandle (hashtable table, integer parentKey, integer childKey, force whichForce)"


SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","group ",,~whichGroup,")"
SaveGroupHandleHint="[NATIVE]  boolean SaveGroupHandle (hashtable table, integer parentKey, integer childKey, group whichGroup)"


SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","location ",,~whichLocation,")"
SaveLocationHandleHint="[NATIVE]  boolean SaveLocationHandle (hashtable table, integer parentKey, integer childKey, location whichLocation)"


SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","rect ",,~whichRect,")"
SaveRectHandleHint="[NATIVE]  boolean SaveRectHandle (hashtable table, integer parentKey, integer childKey, rect whichRect)"


SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","boolexpr ",,~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE]  boolean SaveBooleanExprHandle (hashtable table, integer parentKey, integer childKey, boolexpr whichBoolexpr)"


SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","sound ",,~whichSound,")"
SaveSoundHandleHint="[NATIVE]  boolean SaveSoundHandle (hashtable table, integer parentKey, integer childKey, sound whichSound)"


SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","effect ",,~whichEffect,")"
SaveEffectHandleHint="[NATIVE]  boolean SaveEffectHandle (hashtable table, integer parentKey, integer childKey, effect whichEffect)"


SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","unitpool ",,~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE]  boolean SaveUnitPoolHandle (hashtable table, integer parentKey, integer childKey, unitpool whichUnitpool)"


SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","itempool ",,~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE]  boolean SaveItemPoolHandle (hashtable table, integer parentKey, integer childKey, itempool whichItempool)"


SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","quest ",,~whichQuest,")"
SaveQuestHandleHint="[NATIVE]  boolean SaveQuestHandle (hashtable table, integer parentKey, integer childKey, quest whichQuest)"


SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","questitem ",,~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE]  boolean SaveQuestItemHandle (hashtable table, integer parentKey, integer childKey, questitem whichQuestitem)"


SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","defeatcondition ",,~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE]  boolean SaveDefeatConditionHandle (hashtable table, integer parentKey, integer childKey, defeatcondition whichDefeatcondition)"


SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","timerdialog ",,~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE]  boolean SaveTimerDialogHandle (hashtable table, integer parentKey, integer childKey, timerdialog whichTimerdialog)"


SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","leaderboard ",,~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE]  boolean SaveLeaderboardHandle (hashtable table, integer parentKey, integer childKey, leaderboard whichLeaderboard)"


SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","multiboard ",,~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE]  boolean SaveMultiboardHandle (hashtable table, integer parentKey, integer childKey, multiboard whichMultiboard)"


SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","multiboarditem ",,~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE]  boolean SaveMultiboardItemHandle (hashtable table, integer parentKey, integer childKey, multiboarditem whichMultiboarditem)"


SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","trackable ",,~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE]  boolean SaveTrackableHandle (hashtable table, integer parentKey, integer childKey, trackable whichTrackable)"


SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","dialog ",,~whichDialog,")"
SaveDialogHandleHint="[NATIVE]  boolean SaveDialogHandle (hashtable table, integer parentKey, integer childKey, dialog whichDialog)"


SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","button ",,~whichButton,")"
SaveButtonHandleHint="[NATIVE]  boolean SaveButtonHandle (hashtable table, integer parentKey, integer childKey, button whichButton)"


SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","texttag ",,~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE]  boolean SaveTextTagHandle (hashtable table, integer parentKey, integer childKey, texttag whichTexttag)"


SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","lightning ",,~whichLightning,")"
SaveLightningHandleHint="[NATIVE]  boolean SaveLightningHandle (hashtable table, integer parentKey, integer childKey, lightning whichLightning)"


SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","image ",,~whichImage,")"
SaveImageHandleHint="[NATIVE]  boolean SaveImageHandle (hashtable table, integer parentKey, integer childKey, image whichImage)"


SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","ubersplat ",,~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE]  boolean SaveUbersplatHandle (hashtable table, integer parentKey, integer childKey, ubersplat whichUbersplat)"


SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","region ",,~whichRegion,")"
SaveRegionHandleHint="[NATIVE]  boolean SaveRegionHandle (hashtable table, integer parentKey, integer childKey, region whichRegion)"


SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","fogstate ",,~whichFogState,")"
SaveFogStateHandleHint="[NATIVE]  boolean SaveFogStateHandle (hashtable table, integer parentKey, integer childKey, fogstate whichFogState)"


SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","fogmodifier ",,~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE]  boolean SaveFogModifierHandle (hashtable table, integer parentKey, integer childKey, fogmodifier whichFogModifier)"


SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","agent ",,~whichAgent,")"
SaveAgentHandleHint="[NATIVE]  boolean SaveAgentHandle (hashtable table, integer parentKey, integer childKey, agent whichAgent)"


SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","hashtable ",,~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE]  boolean SaveHashtableHandle (hashtable table, integer parentKey, integer childKey, hashtable whichHashtable)"


LoadInteger=LoadInteger
LoadInteger="LoadInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadIntegerHint="[NATIVE]  integer LoadInteger (hashtable table, integer parentKey, integer childKey)"


LoadReal=LoadReal
LoadReal="LoadReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRealHint="[NATIVE]  real LoadReal (hashtable table, integer parentKey, integer childKey)"


LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBooleanHint="[NATIVE]  boolean LoadBoolean (hashtable table, integer parentKey, integer childKey)"


LoadStr=LoadStr
LoadStr="LoadStr(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadStrHint="[NATIVE]  string LoadStr (hashtable table, integer parentKey, integer childKey)"


LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadPlayerHandleHint="[NATIVE]  player LoadPlayerHandle (hashtable table, integer parentKey, integer childKey)"


LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWidgetHandleHint="[NATIVE]  widget LoadWidgetHandle (hashtable table, integer parentKey, integer childKey)"


LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDestructableHandleHint="[NATIVE]  destructable LoadDestructableHandle (hashtable table, integer parentKey, integer childKey)"


LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadItemHandleHint="[NATIVE]  item LoadItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUnitHandleHint="[NATIVE]  unit LoadUnitHandle (hashtable table, integer parentKey, integer childKey)"


LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadAbilityHandleHint="[NATIVE]  ability LoadAbilityHandle (hashtable table, integer parentKey, integer childKey)"


LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTimerHandleHint="[NATIVE]  timer LoadTimerHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerHandleHint="[NATIVE]  trigger LoadTriggerHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE]  triggercondition LoadTriggerConditionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerActionHandleHint="[NATIVE]  triggeraction LoadTriggerActionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTriggerEventHandleHint="[NATIVE]  event LoadTriggerEventHandle (hashtable table, integer parentKey, integer childKey)"


LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadForceHandleHint="[NATIVE]  force LoadForceHandle (hashtable table, integer parentKey, integer childKey)"


LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadGroupHandleHint="[NATIVE]  group LoadGroupHandle (hashtable table, integer parentKey, integer childKey)"


LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLocationHandleHint="[NATIVE]  location LoadLocationHandle (hashtable table, integer parentKey, integer childKey)"


LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRectHandleHint="[NATIVE]  rect LoadRectHandle (hashtable table, integer parentKey, integer childKey)"


LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBooleanExprHandleHint="[NATIVE]  boolexpr LoadBooleanExprHandle (hashtable table, integer parentKey, integer childKey)"


LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadSoundHandleHint="[NATIVE]  sound LoadSoundHandle (hashtable table, integer parentKey, integer childKey)"


LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadEffectHandleHint="[NATIVE]  effect LoadEffectHandle (hashtable table, integer parentKey, integer childKey)"


LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUnitPoolHandleHint="[NATIVE]  unitpool LoadUnitPoolHandle (hashtable table, integer parentKey, integer childKey)"


LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadItemPoolHandleHint="[NATIVE]  itempool LoadItemPoolHandle (hashtable table, integer parentKey, integer childKey)"


LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadQuestHandleHint="[NATIVE]  quest LoadQuestHandle (hashtable table, integer parentKey, integer childKey)"


LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadQuestItemHandleHint="[NATIVE]  questitem LoadQuestItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE]  defeatcondition LoadDefeatConditionHandle (hashtable table, integer parentKey, integer childKey)"


LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTimerDialogHandleHint="[NATIVE]  timerdialog LoadTimerDialogHandle (hashtable table, integer parentKey, integer childKey)"


LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLeaderboardHandleHint="[NATIVE]  leaderboard LoadLeaderboardHandle (hashtable table, integer parentKey, integer childKey)"


LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadMultiboardHandleHint="[NATIVE]  multiboard LoadMultiboardHandle (hashtable table, integer parentKey, integer childKey)"


LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE]  multiboarditem LoadMultiboardItemHandle (hashtable table, integer parentKey, integer childKey)"


LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTrackableHandleHint="[NATIVE]  trackable LoadTrackableHandle (hashtable table, integer parentKey, integer childKey)"


LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDialogHandleHint="[NATIVE]  dialog LoadDialogHandle (hashtable table, integer parentKey, integer childKey)"


LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadButtonHandleHint="[NATIVE]  button LoadButtonHandle (hashtable table, integer parentKey, integer childKey)"


LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTextTagHandleHint="[NATIVE]  texttag LoadTextTagHandle (hashtable table, integer parentKey, integer childKey)"


LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadLightningHandleHint="[NATIVE]  lightning LoadLightningHandle (hashtable table, integer parentKey, integer childKey)"


LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadImageHandleHint="[NATIVE]  image LoadImageHandle (hashtable table, integer parentKey, integer childKey)"


LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadUbersplatHandleHint="[NATIVE]  ubersplat LoadUbersplatHandle (hashtable table, integer parentKey, integer childKey)"


LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadRegionHandleHint="[NATIVE]  region LoadRegionHandle (hashtable table, integer parentKey, integer childKey)"


LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFogStateHandleHint="[NATIVE]  fogstate LoadFogStateHandle (hashtable table, integer parentKey, integer childKey)"


LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFogModifierHandleHint="[NATIVE]  fogmodifier LoadFogModifierHandle (hashtable table, integer parentKey, integer childKey)"


LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHashtableHandleHint="[NATIVE]  hashtable LoadHashtableHandle (hashtable table, integer parentKey, integer childKey)"


HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedIntegerHint="[NATIVE]  boolean HaveSavedInteger (hashtable table, integer parentKey, integer childKey)"


HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedRealHint="[NATIVE]  boolean HaveSavedReal (hashtable table, integer parentKey, integer childKey)"


HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedBooleanHint="[NATIVE]  boolean HaveSavedBoolean (hashtable table, integer parentKey, integer childKey)"


HaveSavedString=HaveSavedString
HaveSavedString="HaveSavedString(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedStringHint="[NATIVE]  boolean HaveSavedString (hashtable table, integer parentKey, integer childKey)"


HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
HaveSavedHandleHint="[NATIVE]  boolean HaveSavedHandle (hashtable table, integer parentKey, integer childKey)"


RemoveSavedString=RemoveSavedString
RemoveSavedString="RemoveSavedString(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
RemoveSavedStringHint="[NATIVE]  nothing RemoveSavedString (hashtable table, integer parentKey, integer childKey)"


CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE]  unitpool CreateUnitPool ()"


PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(","unitpool ",,~whichPool,", ","player ",,~forWhichPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
PlaceRandomUnitHint="[NATIVE]  unit PlaceRandomUnit (unitpool whichPool, player forWhichPlayer, real x, real y, real facing)"


CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE]  itempool CreateItemPool ()"


PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(","itempool ",,~whichItemPool,", ","real ",,~x,", ","real ",,~y,")"
PlaceRandomItemHint="[NATIVE]  item PlaceRandomItem (itempool whichItemPool, real x, real y)"


ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(","integer ",,~level,")"
ChooseRandomCreepHint="[NATIVE]  integer ChooseRandomCreep (integer level)"


ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE]  integer ChooseRandomNPBuilding ()"


ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(","integer ",,~level,")"
ChooseRandomItemHint="[NATIVE]  integer ChooseRandomItem (integer level)"


ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(","itemtype ",,~whichType,", ","integer ",,~level,")"
ChooseRandomItemExHint="[NATIVE]  integer ChooseRandomItemEx (itemtype whichType, integer level)"


DisplayTextToPlayer=DisplayTextToPlayer
DisplayTextToPlayer="DisplayTextToPlayer(","player ",,~toPlayer,", ","real ",,~x,", ","real ",,~y,", ","string ",,~message,")"
DisplayTextToPlayerHint="[NATIVE]  nothing DisplayTextToPlayer (player toPlayer, real x, real y, string message)"


DisplayTimedTextToPlayer=DisplayTimedTextToPlayer
DisplayTimedTextToPlayer="DisplayTimedTextToPlayer(","player ",,~toPlayer,", ","real ",,~x,", ","real ",,~y,", ","real ",,~duration,", ","string ",,~message,")"
DisplayTimedTextToPlayerHint="[NATIVE]  nothing DisplayTimedTextToPlayer (player toPlayer, real x, real y, real duration, string message)"


GetTimeOfDayScale=GetTimeOfDayScale
GetTimeOfDayScale="GetTimeOfDayScale(",")"
GetTimeOfDayScaleHint="[NATIVE]  real GetTimeOfDayScale ()"


CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE]  texttag CreateTextTag ()"


CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE]  quest CreateQuest ()"


QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(","quest ",,~whichQuest,")"
QuestCreateItemHint="[NATIVE]  questitem QuestCreateItem (quest whichQuest)"


CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE]  defeatcondition CreateDefeatCondition ()"


CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(","timer ",,~t,")"
CreateTimerDialogHint="[NATIVE]  timerdialog CreateTimerDialog (timer t)"


CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE]  leaderboard CreateLeaderboard ()"


LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(","leaderboard ",,~lb,", ","player ",,~p,")"
LeaderboardHasPlayerItemHint="[NATIVE]  boolean LeaderboardHasPlayerItem (leaderboard lb, player p)"


LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(","leaderboard ",,~lb,", ","player ",,~p,")"
LeaderboardGetPlayerIndexHint="[NATIVE]  integer LeaderboardGetPlayerIndex (leaderboard lb, player p)"


PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(","player ",,~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE]  leaderboard PlayerGetLeaderboard (player toPlayer)"


ResetToGameCamera=ResetToGameCamera
ResetToGameCamera="ResetToGameCamera(","real ",,~duration,")"
ResetToGameCameraHint="[NATIVE]  nothing ResetToGameCamera (real duration)"


PanCameraTo=PanCameraTo
PanCameraTo="PanCameraTo(","real ",,~x,", ","real ",,~y,")"
PanCameraToHint="[NATIVE]  nothing PanCameraTo (real x, real y)"


PanCameraToTimed=PanCameraToTimed
PanCameraToTimed="PanCameraToTimed(","real ",,~x,", ","real ",,~y,", ","real ",,~duration,")"
PanCameraToTimedHint="[NATIVE]  nothing PanCameraToTimed (real x, real y, real duration)"


PanCameraToWithZ=PanCameraToWithZ
PanCameraToWithZ="PanCameraToWithZ(","real ",,~x,", ","real ",,~y,", ","real ",,~zOffsetDest,")"
PanCameraToWithZHint="[NATIVE]  nothing PanCameraToWithZ (real x, real y, real zOffsetDest)"


PanCameraToTimedWithZ=PanCameraToTimedWithZ
PanCameraToTimedWithZ="PanCameraToTimedWithZ(","real ",,~x,", ","real ",,~y,", ","real ",,~zOffsetDest,", ","real ",,~duration,")"
PanCameraToTimedWithZHint="[NATIVE]  nothing PanCameraToTimedWithZ (real x, real y, real zOffsetDest, real duration)"


CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE]  camerasetup CreateCameraSetup ()"


CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(","camerasetup ",,~whichSetup,", ","camerafield ",,~whichField,")"
CameraSetupGetFieldHint="[NATIVE]  real CameraSetupGetField (camerasetup whichSetup, camerafield whichField)"


CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(","camerasetup ",,~whichSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE]  real CameraSetupGetDestPositionX (camerasetup whichSetup)"


CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(","camerasetup ",,~whichSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE]  real CameraSetupGetDestPositionY (camerasetup whichSetup)"


IsCineFilterDisplayed=IsCineFilterDisplayed
IsCineFilterDisplayed="IsCineFilterDisplayed(",")"
IsCineFilterDisplayedHint="[NATIVE]  boolean IsCineFilterDisplayed ()"


GetCameraMargin=GetCameraMargin
GetCameraMargin="GetCameraMargin(","integer ",,~whichMargin,")"
GetCameraMarginHint="[NATIVE]  real GetCameraMargin (integer whichMargin)"


GetCameraBoundMinX=GetCameraBoundMinX
GetCameraBoundMinX="GetCameraBoundMinX(",")"
GetCameraBoundMinXHint="[NATIVE]  real GetCameraBoundMinX ()"


GetCameraBoundMinY=GetCameraBoundMinY
GetCameraBoundMinY="GetCameraBoundMinY(",")"
GetCameraBoundMinYHint="[NATIVE]  real GetCameraBoundMinY ()"


GetCameraBoundMaxX=GetCameraBoundMaxX
GetCameraBoundMaxX="GetCameraBoundMaxX(",")"
GetCameraBoundMaxXHint="[NATIVE]  real GetCameraBoundMaxX ()"


GetCameraBoundMaxY=GetCameraBoundMaxY
GetCameraBoundMaxY="GetCameraBoundMaxY(",")"
GetCameraBoundMaxYHint="[NATIVE]  real GetCameraBoundMaxY ()"


CreateSound=CreateSound
CreateSound="CreateSound(","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~eaxSetting,")"
CreateSoundHint="[NATIVE]  sound CreateSound (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting)"


CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE]  sound CreateSoundFilenameWithLabel (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName)"


CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(","string ",,~soundLabel,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE]  sound CreateSoundFromLabel (string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate)"


CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(","string ",,~soundLabel,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE]  sound CreateMIDISound (string soundLabel, integer fadeInRate, integer fadeOutRate)"


AttachSoundToUnit=AttachSoundToUnit
AttachSoundToUnit="AttachSoundToUnit(","sound ",,~soundHandle,", ","unit ",,~whichUnit,")"
AttachSoundToUnitHint="[NATIVE]  nothing AttachSoundToUnit (sound soundHandle, unit whichUnit)"


GetSoundDuration=GetSoundDuration
GetSoundDuration="GetSoundDuration(","sound ",,~soundHandle,")"
GetSoundDurationHint="[NATIVE]  integer GetSoundDuration (sound soundHandle)"


GetSoundFileDuration=GetSoundFileDuration
GetSoundFileDuration="GetSoundFileDuration(","string ",,~musicFileName,")"
GetSoundFileDurationHint="[NATIVE]  integer GetSoundFileDuration (string musicFileName)"


GetSoundIsPlaying=GetSoundIsPlaying
GetSoundIsPlaying="GetSoundIsPlaying(","sound ",,~soundHandle,")"
GetSoundIsPlayingHint="[NATIVE]  boolean GetSoundIsPlaying (sound soundHandle)"


GetSoundIsLoading=GetSoundIsLoading
GetSoundIsLoading="GetSoundIsLoading(","sound ",,~soundHandle,")"
GetSoundIsLoadingHint="[NATIVE]  boolean GetSoundIsLoading (sound soundHandle)"


AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(","rect ",,~where,", ","integer ",,~effectID,")"
AddWeatherEffectHint="[NATIVE]  weathereffect AddWeatherEffect (rect where, integer effectID)"


TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~duration,", ","boolean ",,~permanent,")"
TerrainDeformCraterHint="[NATIVE]  terraindeformation TerrainDeformCrater (real x, real y, real radius, real depth, integer duration, boolean permanent)"


TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~duration,", ","integer ",,~count,", ","real ",,~spaceWaves,", ","real ",,~timeWaves,", ","real ",,~radiusStartPct,", ","boolean ",,~limitNeg,")"
TerrainDeformRippleHint="[NATIVE]  terraindeformation TerrainDeformRipple (real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg)"


TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(","real ",,~x,", ","real ",,~y,", ","real ",,~dirX,", ","real ",,~dirY,", ","real ",,~distance,", ","real ",,~speed,", ","real ",,~radius,", ","real ",,~depth,", ","integer ",,~trailTime,", ","integer ",,~count,")"
TerrainDeformWaveHint="[NATIVE]  terraindeformation TerrainDeformWave (real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count)"


TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(","real ",,~x,", ","real ",,~y,", ","real ",,~radius,", ","real ",,~minDelta,", ","real ",,~maxDelta,", ","integer ",,~duration,", ","integer ",,~updateInterval,")"
TerrainDeformRandomHint="[NATIVE]  terraindeformation TerrainDeformRandom (real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval)"


AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(","string ",,~abilityString,", ","effecttype ",,~t,", ","real ",,~x,", ","real ",,~y,")"
AddSpellEffectHint="[NATIVE]  effect AddSpellEffect (string abilityString, effecttype t, real x, real y)"


AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(","string ",,~abilityString,", ","effecttype ",,~t,", ","location ",,~where,")"
AddSpellEffectLocHint="[NATIVE]  effect AddSpellEffectLoc (string abilityString, effecttype t, location where)"


AddSpellEffectTarget=AddSpellEffectTarget
AddSpellEffectTarget="AddSpellEffectTarget(","string ",,~modelName,", ","effecttype ",,~t,", ","widget ",,~targetWidget,", ","string ",,~attachPoint,")"
AddSpellEffectTargetHint="[NATIVE]  effect AddSpellEffectTarget (string modelName, effecttype t, widget targetWidget, string attachPoint)"


AddLightning=AddLightning
AddLightning="AddLightning(","string ",,~codeName,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~x2,", ","real ",,~y2,")"
AddLightningHint="[NATIVE]  lightning AddLightning (string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2)"


AddLightningEx=AddLightningEx
AddLightningEx="AddLightningEx(","string ",,~codeName,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~z1,", ","real ",,~x2,", ","real ",,~y2,", ","real ",,~z2,")"
AddLightningExHint="[NATIVE]  lightning AddLightningEx (string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2)"


DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(","lightning ",,~whichBolt,")"
DestroyLightningHint="[NATIVE]  boolean DestroyLightning (lightning whichBolt)"


MoveLightning=MoveLightning
MoveLightning="MoveLightning(","lightning ",,~whichBolt,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~x2,", ","real ",,~y2,")"
MoveLightningHint="[NATIVE]  boolean MoveLightning (lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2)"


MoveLightningEx=MoveLightningEx
MoveLightningEx="MoveLightningEx(","lightning ",,~whichBolt,", ","boolean ",,~checkVisibility,", ","real ",,~x1,", ","real ",,~y1,", ","real ",,~z1,", ","real ",,~x2,", ","real ",,~y2,", ","real ",,~z2,")"
MoveLightningExHint="[NATIVE]  boolean MoveLightningEx (lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2)"


GetLightningColorA=GetLightningColorA
GetLightningColorA="GetLightningColorA(","lightning ",,~whichBolt,")"
GetLightningColorAHint="[NATIVE]  real GetLightningColorA (lightning whichBolt)"


GetLightningColorR=GetLightningColorR
GetLightningColorR="GetLightningColorR(","lightning ",,~whichBolt,")"
GetLightningColorRHint="[NATIVE]  real GetLightningColorR (lightning whichBolt)"


GetLightningColorG=GetLightningColorG
GetLightningColorG="GetLightningColorG(","lightning ",,~whichBolt,")"
GetLightningColorGHint="[NATIVE]  real GetLightningColorG (lightning whichBolt)"


GetLightningColorB=GetLightningColorB
GetLightningColorB="GetLightningColorB(","lightning ",,~whichBolt,")"
GetLightningColorBHint="[NATIVE]  real GetLightningColorB (lightning whichBolt)"


SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(","lightning ",,~whichBolt,", ","real ",,~r,", ","real ",,~g,", ","real ",,~b,", ","real ",,~a,")"
SetLightningColorHint="[NATIVE]  boolean SetLightningColor (lightning whichBolt, real r, real g, real b, real a)"


GetAbilityEffect=GetAbilityEffect
GetAbilityEffect="GetAbilityEffect(","string ",,~abilityString,", ","effecttype ",,~t,", ","integer ",,~index,")"
GetAbilityEffectHint="[NATIVE]  string GetAbilityEffect (string abilityString, effecttype t, integer index)"


GetAbilitySound=GetAbilitySound
GetAbilitySound="GetAbilitySound(","string ",,~abilityString,", ","soundtype ",,~t,")"
GetAbilitySoundHint="[NATIVE]  string GetAbilitySound (string abilityString, soundtype t)"


GetTerrainCliffLevel=GetTerrainCliffLevel
GetTerrainCliffLevel="GetTerrainCliffLevel(","real ",,~x,", ","real ",,~y,")"
GetTerrainCliffLevelHint="[NATIVE]  integer GetTerrainCliffLevel (real x, real y)"


GetTerrainType=GetTerrainType
GetTerrainType="GetTerrainType(","real ",,~x,", ","real ",,~y,")"
GetTerrainTypeHint="[NATIVE]  integer GetTerrainType (real x, real y)"


GetTerrainVariance=GetTerrainVariance
GetTerrainVariance="GetTerrainVariance(","real ",,~x,", ","real ",,~y,")"
GetTerrainVarianceHint="[NATIVE]  integer GetTerrainVariance (real x, real y)"


IsTerrainPathable=IsTerrainPathable
IsTerrainPathable="IsTerrainPathable(","real ",,~x,", ","real ",,~y,", ","pathingtype ",,~t,")"
IsTerrainPathableHint="[NATIVE]  boolean IsTerrainPathable (real x, real y, pathingtype t)"


CreateImage=CreateImage
CreateImage="CreateImage(","string ",,~file,", ","real ",,~sizeX,", ","real ",,~sizeY,", ","real ",,~sizeZ,", ","real ",,~posX,", ","real ",,~posY,", ","real ",,~posZ,", ","real ",,~originX,", ","real ",,~originY,", ","real ",,~originZ,", ","integer ",,~imageType,")"
CreateImageHint="[NATIVE]  image CreateImage (string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType)"


CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(","real ",,~x,", ","real ",,~y,", ","string ",,~name,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,", ","boolean ",,~forcePaused,", ","boolean ",,~noBirthTime,")"
CreateUbersplatHint="[NATIVE]  ubersplat CreateUbersplat (real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime)"


CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(","player ",,~id,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,")"
CreateBlightedGoldmineHint="[NATIVE]  unit CreateBlightedGoldmine (player id, real x, real y, real face)"


IsPointBlighted=IsPointBlighted
IsPointBlighted="IsPointBlighted(","real ",,~x,", ","real ",,~y,")"
IsPointBlightedHint="[NATIVE]  boolean IsPointBlighted (real x, real y)"


IsNoVictoryCheat=IsNoVictoryCheat
IsNoVictoryCheat="IsNoVictoryCheat(",")"
IsNoVictoryCheatHint="[NATIVE]  boolean IsNoVictoryCheat ()"


IsNoDefeatCheat=IsNoDefeatCheat
IsNoDefeatCheat="IsNoDefeatCheat(",")"
IsNoDefeatCheatHint="[NATIVE]  boolean IsNoDefeatCheat ()"


BitwiseGetBit=BitwiseGetBit
BitwiseGetBit="BitwiseGetBit(","integer ",,~i,", ","integer ",,~bitIndex,")"
BitwiseGetBitHint="[UjAPI]  integer BitwiseGetBit (integer i, integer bitIndex)"


BitwiseSetBit=BitwiseSetBit
BitwiseSetBit="BitwiseSetBit(","integer ",,~i,", ","integer ",,~bitIndex,", ","integer ",,~bitValue,")"
BitwiseSetBitHint="[UjAPI]  integer BitwiseSetBit (integer i, integer bitIndex, integer bitValue)"


BitwiseGetByte=BitwiseGetByte
BitwiseGetByte="BitwiseGetByte(","integer ",,~i,", ","integer ",,~byteIndex,")"
BitwiseGetByteHint="[UjAPI]  integer BitwiseGetByte (integer i, integer byteIndex)"


BitwiseSetByte=BitwiseSetByte
BitwiseSetByte="BitwiseSetByte(","integer ",,~i,", ","integer ",,~byteIndex,", ","integer ",,~byteValue,")"
BitwiseSetByteHint="[UjAPI]  integer BitwiseSetByte (integer i, integer byteIndex, integer byteValue)"


BitwiseNOT=BitwiseNOT
BitwiseNOT="BitwiseNOT(","integer ",,~i,")"
BitwiseNOTHint="[UjAPI]  integer BitwiseNOT (integer i)"


BitwiseAND=BitwiseAND
BitwiseAND="BitwiseAND(","integer ",,~bit1,", ","integer ",,~bit2,")"
BitwiseANDHint="[UjAPI]  integer BitwiseAND (integer bit1, integer bit2)"


BitwiseOR=BitwiseOR
BitwiseOR="BitwiseOR(","integer ",,~bit1,", ","integer ",,~bit2,")"
BitwiseORHint="[UjAPI]  integer BitwiseOR (integer bit1, integer bit2)"


BitwiseXOR=BitwiseXOR
BitwiseXOR="BitwiseXOR(","integer ",,~bit1,", ","integer ",,~bit2,")"
BitwiseXORHint="[UjAPI]  integer BitwiseXOR (integer bit1, integer bit2)"


BitwiseShiftLeft=BitwiseShiftLeft
BitwiseShiftLeft="BitwiseShiftLeft(","integer ",,~i,", ","integer ",,~bitsToShift,")"
BitwiseShiftLeftHint="[UjAPI]  integer BitwiseShiftLeft (integer i, integer bitsToShift)"


BitwiseShiftLeftLogical=BitwiseShiftLeftLogical
BitwiseShiftLeftLogical="BitwiseShiftLeftLogical(","integer ",,~i,", ","integer ",,~bitsToShift,")"
BitwiseShiftLeftLogicalHint="[UjAPI]  integer BitwiseShiftLeftLogical (integer i, integer bitsToShift)"


BitwiseShiftRight=BitwiseShiftRight
BitwiseShiftRight="BitwiseShiftRight(","integer ",,~i,", ","integer ",,~bitsToShift,")"
BitwiseShiftRightHint="[UjAPI]  integer BitwiseShiftRight (integer i, integer bitsToShift)"


BitwiseShiftRightLogical=BitwiseShiftRightLogical
BitwiseShiftRightLogical="BitwiseShiftRightLogical(","integer ",,~i,", ","integer ",,~bitsToShift,")"
BitwiseShiftRightLogicalHint="[UjAPI]  integer BitwiseShiftRightLogical (integer i, integer bitsToShift)"


BitwiseToInteger=BitwiseToInteger
BitwiseToInteger="BitwiseToInteger(","integer ",,~byte1,", ","integer ",,~byte2,", ","integer ",,~byte3,", ","integer ",,~byte4,")"
BitwiseToIntegerHint="[UjAPI]  integer BitwiseToInteger (integer byte1, integer byte2, integer byte3, integer byte4)"


Id2String=Id2String
Id2String="Id2String(","integer ",,~i,")"
Id2StringHint="[UjAPI]  string Id2String (integer i)"


String2Id=String2Id
String2Id="String2Id(","string ",,~idString,")"
String2IdHint="[UjAPI]  integer String2Id (string idString)"


IntToHex=IntToHex
IntToHex="IntToHex(","integer ",,~i,")"
IntToHexHint="[UjAPI]  string IntToHex (integer i)"


IntToChar=IntToChar
IntToChar="IntToChar(","integer ",,~i,")"
IntToCharHint="[UjAPI]  string IntToChar (integer i)"


IntToRoman=IntToRoman
IntToRoman="IntToRoman(","integer ",,~i,")"
IntToRomanHint="[UjAPI]  string IntToRoman (integer i)"


HexToInt=HexToInt
HexToInt="HexToInt(","string ",,~hex,")"
HexToIntHint="[UjAPI]  integer HexToInt (string hex)"


ConvertColour=ConvertColour
ConvertColour="ConvertColour(","integer ",,~alpha,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,")"
ConvertColourHint="[UjAPI]  integer ConvertColour (integer alpha, integer red, integer green, integer blue)"


IntegerToHandle=IntegerToHandle
IntegerToHandle="IntegerToHandle(","integer ",,~i,")"
IntegerToHandleHint="[UjAPI]  handle IntegerToHandle (integer i)"


AddressToHandle=AddressToHandle
AddressToHandle="AddressToHandle(","integer ",,~i,")"
AddressToHandleHint="[UjAPI]  handle AddressToHandle (integer i)"


HandleToAddress=HandleToAddress
HandleToAddress="HandleToAddress(","handle ",,~h,")"
HandleToAddressHint="[UjAPI]  integer HandleToAddress (handle h)"


I2C=I2C
I2C="I2C(","integer ",,~i,")"
I2CHint="[UjAPI]  code I2C (integer i)"


C2I=C2I
C2I="C2I(","code ",,~c,")"
C2IHint="[UjAPI]  integer C2I (code c)"


HandleToHandle=HandleToHandle
HandleToHandle="HandleToHandle(","handle ",,~h,")"
HandleToHandleHint="[UjAPI]  handle HandleToHandle (handle h)"


HandleToAgent=HandleToAgent
HandleToAgent="HandleToAgent(","handle ",,~h,")"
HandleToAgentHint="[UjAPI]  agent HandleToAgent (handle h)"


HandleToEvent=HandleToEvent
HandleToEvent="HandleToEvent(","handle ",,~h,")"
HandleToEventHint="[UjAPI]  event HandleToEvent (handle h)"


HandleToWidget=HandleToWidget
HandleToWidget="HandleToWidget(","handle ",,~h,")"
HandleToWidgetHint="[UjAPI]  widget HandleToWidget (handle h)"


HandleToUnit=HandleToUnit
HandleToUnit="HandleToUnit(","handle ",,~h,")"
HandleToUnitHint="[UjAPI]  unit HandleToUnit (handle h)"


HandleToDestructable=HandleToDestructable
HandleToDestructable="HandleToDestructable(","handle ",,~h,")"
HandleToDestructableHint="[UjAPI]  destructable HandleToDestructable (handle h)"


HandleToItem=HandleToItem
HandleToItem="HandleToItem(","handle ",,~h,")"
HandleToItemHint="[UjAPI]  item HandleToItem (handle h)"


HandleToAbility=HandleToAbility
HandleToAbility="HandleToAbility(","handle ",,~h,")"
HandleToAbilityHint="[UjAPI]  ability HandleToAbility (handle h)"


HandleToBuff=HandleToBuff
HandleToBuff="HandleToBuff(","handle ",,~h,")"
HandleToBuffHint="[UjAPI]  buff HandleToBuff (handle h)"


HandleToForce=HandleToForce
HandleToForce="HandleToForce(","handle ",,~h,")"
HandleToForceHint="[UjAPI]  force HandleToForce (handle h)"


HandleToGroup=HandleToGroup
HandleToGroup="HandleToGroup(","handle ",,~h,")"
HandleToGroupHint="[UjAPI]  group HandleToGroup (handle h)"


HandleToTrigger=HandleToTrigger
HandleToTrigger="HandleToTrigger(","handle ",,~h,")"
HandleToTriggerHint="[UjAPI]  trigger HandleToTrigger (handle h)"


HandleToTriggercondition=HandleToTriggercondition
HandleToTriggercondition="HandleToTriggercondition(","handle ",,~h,")"
HandleToTriggerconditionHint="[UjAPI]  triggercondition HandleToTriggercondition (handle h)"


HandleToTriggeraction=HandleToTriggeraction
HandleToTriggeraction="HandleToTriggeraction(","handle ",,~h,")"
HandleToTriggeractionHint="[UjAPI]  triggeraction HandleToTriggeraction (handle h)"


HandleToTimer=HandleToTimer
HandleToTimer="HandleToTimer(","handle ",,~h,")"
HandleToTimerHint="[UjAPI]  timer HandleToTimer (handle h)"


HandleToLocation=HandleToLocation
HandleToLocation="HandleToLocation(","handle ",,~h,")"
HandleToLocationHint="[UjAPI]  location HandleToLocation (handle h)"


HandleToRegion=HandleToRegion
HandleToRegion="HandleToRegion(","handle ",,~h,")"
HandleToRegionHint="[UjAPI]  region HandleToRegion (handle h)"


HandleToRect=HandleToRect
HandleToRect="HandleToRect(","handle ",,~h,")"
HandleToRectHint="[UjAPI]  rect HandleToRect (handle h)"


HandleToBoolexpr=HandleToBoolexpr
HandleToBoolexpr="HandleToBoolexpr(","handle ",,~h,")"
HandleToBoolexprHint="[UjAPI]  boolexpr HandleToBoolexpr (handle h)"


HandleToSound=HandleToSound
HandleToSound="HandleToSound(","handle ",,~h,")"
HandleToSoundHint="[UjAPI]  sound HandleToSound (handle h)"


HandleToConditionfunc=HandleToConditionfunc
HandleToConditionfunc="HandleToConditionfunc(","handle ",,~h,")"
HandleToConditionfuncHint="[UjAPI]  conditionfunc HandleToConditionfunc (handle h)"


HandleToFilterfunc=HandleToFilterfunc
HandleToFilterfunc="HandleToFilterfunc(","handle ",,~h,")"
HandleToFilterfuncHint="[UjAPI]  filterfunc HandleToFilterfunc (handle h)"


HandleToUnitpool=HandleToUnitpool
HandleToUnitpool="HandleToUnitpool(","handle ",,~h,")"
HandleToUnitpoolHint="[UjAPI]  unitpool HandleToUnitpool (handle h)"


HandleToItempool=HandleToItempool
HandleToItempool="HandleToItempool(","handle ",,~h,")"
HandleToItempoolHint="[UjAPI]  itempool HandleToItempool (handle h)"


HandleToRace=HandleToRace
HandleToRace="HandleToRace(","handle ",,~h,")"
HandleToRaceHint="[UjAPI]  race HandleToRace (handle h)"


HandleToAlliancetype=HandleToAlliancetype
HandleToAlliancetype="HandleToAlliancetype(","handle ",,~h,")"
HandleToAlliancetypeHint="[UjAPI]  alliancetype HandleToAlliancetype (handle h)"


HandleToRacepreference=HandleToRacepreference
HandleToRacepreference="HandleToRacepreference(","handle ",,~h,")"
HandleToRacepreferenceHint="[UjAPI]  racepreference HandleToRacepreference (handle h)"


HandleToGamestate=HandleToGamestate
HandleToGamestate="HandleToGamestate(","handle ",,~h,")"
HandleToGamestateHint="[UjAPI]  gamestate HandleToGamestate (handle h)"


HandleToIGamestate=HandleToIGamestate
HandleToIGamestate="HandleToIGamestate(","handle ",,~h,")"
HandleToIGamestateHint="[UjAPI]  igamestate HandleToIGamestate (handle h)"


HandleToFGamestate=HandleToFGamestate
HandleToFGamestate="HandleToFGamestate(","handle ",,~h,")"
HandleToFGamestateHint="[UjAPI]  fgamestate HandleToFGamestate (handle h)"


HandleToPlayerstate=HandleToPlayerstate
HandleToPlayerstate="HandleToPlayerstate(","handle ",,~h,")"
HandleToPlayerstateHint="[UjAPI]  playerstate HandleToPlayerstate (handle h)"


HandleToPlayerscore=HandleToPlayerscore
HandleToPlayerscore="HandleToPlayerscore(","handle ",,~h,")"
HandleToPlayerscoreHint="[UjAPI]  playerscore HandleToPlayerscore (handle h)"


HandleToPlayergameresult=HandleToPlayergameresult
HandleToPlayergameresult="HandleToPlayergameresult(","handle ",,~h,")"
HandleToPlayergameresultHint="[UjAPI]  playergameresult HandleToPlayergameresult (handle h)"


HandleToUnitstate=HandleToUnitstate
HandleToUnitstate="HandleToUnitstate(","handle ",,~h,")"
HandleToUnitstateHint="[UjAPI]  unitstate HandleToUnitstate (handle h)"


HandleToAIDifficulty=HandleToAIDifficulty
HandleToAIDifficulty="HandleToAIDifficulty(","handle ",,~h,")"
HandleToAIDifficultyHint="[UjAPI]  aidifficulty HandleToAIDifficulty (handle h)"


HandleToEventid=HandleToEventid
HandleToEventid="HandleToEventid(","handle ",,~h,")"
HandleToEventidHint="[UjAPI]  eventid HandleToEventid (handle h)"


HandleToGameevent=HandleToGameevent
HandleToGameevent="HandleToGameevent(","handle ",,~h,")"
HandleToGameeventHint="[UjAPI]  gameevent HandleToGameevent (handle h)"


HandleToPlayerevent=HandleToPlayerevent
HandleToPlayerevent="HandleToPlayerevent(","handle ",,~h,")"
HandleToPlayereventHint="[UjAPI]  playerevent HandleToPlayerevent (handle h)"


HandleToPlayerunitevent=HandleToPlayerunitevent
HandleToPlayerunitevent="HandleToPlayerunitevent(","handle ",,~h,")"
HandleToPlayeruniteventHint="[UjAPI]  playerunitevent HandleToPlayerunitevent (handle h)"


HandleToUnitevent=HandleToUnitevent
HandleToUnitevent="HandleToUnitevent(","handle ",,~h,")"
HandleToUniteventHint="[UjAPI]  unitevent HandleToUnitevent (handle h)"


HandleToLimitop=HandleToLimitop
HandleToLimitop="HandleToLimitop(","handle ",,~h,")"
HandleToLimitopHint="[UjAPI]  limitop HandleToLimitop (handle h)"


HandleToWidgetevent=HandleToWidgetevent
HandleToWidgetevent="HandleToWidgetevent(","handle ",,~h,")"
HandleToWidgeteventHint="[UjAPI]  widgetevent HandleToWidgetevent (handle h)"


HandleToDialogevent=HandleToDialogevent
HandleToDialogevent="HandleToDialogevent(","handle ",,~h,")"
HandleToDialogeventHint="[UjAPI]  dialogevent HandleToDialogevent (handle h)"


HandleToUnittype=HandleToUnittype
HandleToUnittype="HandleToUnittype(","handle ",,~h,")"
HandleToUnittypeHint="[UjAPI]  unittype HandleToUnittype (handle h)"


HandleToGamespeed=HandleToGamespeed
HandleToGamespeed="HandleToGamespeed(","handle ",,~h,")"
HandleToGamespeedHint="[UjAPI]  gamespeed HandleToGamespeed (handle h)"


HandleToGamedifficulty=HandleToGamedifficulty
HandleToGamedifficulty="HandleToGamedifficulty(","handle ",,~h,")"
HandleToGamedifficultyHint="[UjAPI]  gamedifficulty HandleToGamedifficulty (handle h)"


HandleToGametype=HandleToGametype
HandleToGametype="HandleToGametype(","handle ",,~h,")"
HandleToGametypeHint="[UjAPI]  gametype HandleToGametype (handle h)"


HandleToMapflag=HandleToMapflag
HandleToMapflag="HandleToMapflag(","handle ",,~h,")"
HandleToMapflagHint="[UjAPI]  mapflag HandleToMapflag (handle h)"


HandleToMapvisibility=HandleToMapvisibility
HandleToMapvisibility="HandleToMapvisibility(","handle ",,~h,")"
HandleToMapvisibilityHint="[UjAPI]  mapvisibility HandleToMapvisibility (handle h)"


HandleToMapsetting=HandleToMapsetting
HandleToMapsetting="HandleToMapsetting(","handle ",,~h,")"
HandleToMapsettingHint="[UjAPI]  mapsetting HandleToMapsetting (handle h)"


HandleToMapdensity=HandleToMapdensity
HandleToMapdensity="HandleToMapdensity(","handle ",,~h,")"
HandleToMapdensityHint="[UjAPI]  mapdensity HandleToMapdensity (handle h)"


HandleToMapcontrol=HandleToMapcontrol
HandleToMapcontrol="HandleToMapcontrol(","handle ",,~h,")"
HandleToMapcontrolHint="[UjAPI]  mapcontrol HandleToMapcontrol (handle h)"


HandleToPlayerslotstate=HandleToPlayerslotstate
HandleToPlayerslotstate="HandleToPlayerslotstate(","handle ",,~h,")"
HandleToPlayerslotstateHint="[UjAPI]  playerslotstate HandleToPlayerslotstate (handle h)"


HandleToVolumegroup=HandleToVolumegroup
HandleToVolumegroup="HandleToVolumegroup(","handle ",,~h,")"
HandleToVolumegroupHint="[UjAPI]  volumegroup HandleToVolumegroup (handle h)"


HandleToCamerafield=HandleToCamerafield
HandleToCamerafield="HandleToCamerafield(","handle ",,~h,")"
HandleToCamerafieldHint="[UjAPI]  camerafield HandleToCamerafield (handle h)"


HandleToCamerasetup=HandleToCamerasetup
HandleToCamerasetup="HandleToCamerasetup(","handle ",,~h,")"
HandleToCamerasetupHint="[UjAPI]  camerasetup HandleToCamerasetup (handle h)"


HandleToPlayercolor=HandleToPlayercolor
HandleToPlayercolor="HandleToPlayercolor(","handle ",,~h,")"
HandleToPlayercolorHint="[UjAPI]  playercolor HandleToPlayercolor (handle h)"


HandleToPlacement=HandleToPlacement
HandleToPlacement="HandleToPlacement(","handle ",,~h,")"
HandleToPlacementHint="[UjAPI]  placement HandleToPlacement (handle h)"


HandleToStartlocprio=HandleToStartlocprio
HandleToStartlocprio="HandleToStartlocprio(","handle ",,~h,")"
HandleToStartlocprioHint="[UjAPI]  startlocprio HandleToStartlocprio (handle h)"


HandleToRaritycontrol=HandleToRaritycontrol
HandleToRaritycontrol="HandleToRaritycontrol(","handle ",,~h,")"
HandleToRaritycontrolHint="[UjAPI]  raritycontrol HandleToRaritycontrol (handle h)"


HandleToBlendmode=HandleToBlendmode
HandleToBlendmode="HandleToBlendmode(","handle ",,~h,")"
HandleToBlendmodeHint="[UjAPI]  blendmode HandleToBlendmode (handle h)"


HandleToTexmapflags=HandleToTexmapflags
HandleToTexmapflags="HandleToTexmapflags(","handle ",,~h,")"
HandleToTexmapflagsHint="[UjAPI]  texmapflags HandleToTexmapflags (handle h)"


HandleToEffect=HandleToEffect
HandleToEffect="HandleToEffect(","handle ",,~h,")"
HandleToEffectHint="[UjAPI]  effect HandleToEffect (handle h)"


HandleToEffecttype=HandleToEffecttype
HandleToEffecttype="HandleToEffecttype(","handle ",,~h,")"
HandleToEffecttypeHint="[UjAPI]  effecttype HandleToEffecttype (handle h)"


HandleToWeathereffect=HandleToWeathereffect
HandleToWeathereffect="HandleToWeathereffect(","handle ",,~h,")"
HandleToWeathereffectHint="[UjAPI]  weathereffect HandleToWeathereffect (handle h)"


HandleToTerraindeformation=HandleToTerraindeformation
HandleToTerraindeformation="HandleToTerraindeformation(","handle ",,~h,")"
HandleToTerraindeformationHint="[UjAPI]  terraindeformation HandleToTerraindeformation (handle h)"


HandleToFogstate=HandleToFogstate
HandleToFogstate="HandleToFogstate(","handle ",,~h,")"
HandleToFogstateHint="[UjAPI]  fogstate HandleToFogstate (handle h)"


HandleToFogmodifier=HandleToFogmodifier
HandleToFogmodifier="HandleToFogmodifier(","handle ",,~h,")"
HandleToFogmodifierHint="[UjAPI]  fogmodifier HandleToFogmodifier (handle h)"


HandleToDialog=HandleToDialog
HandleToDialog="HandleToDialog(","handle ",,~h,")"
HandleToDialogHint="[UjAPI]  dialog HandleToDialog (handle h)"


HandleToButton=HandleToButton
HandleToButton="HandleToButton(","handle ",,~h,")"
HandleToButtonHint="[UjAPI]  button HandleToButton (handle h)"


HandleToQuest=HandleToQuest
HandleToQuest="HandleToQuest(","handle ",,~h,")"
HandleToQuestHint="[UjAPI]  quest HandleToQuest (handle h)"


HandleToQuestitem=HandleToQuestitem
HandleToQuestitem="HandleToQuestitem(","handle ",,~h,")"
HandleToQuestitemHint="[UjAPI]  questitem HandleToQuestitem (handle h)"


HandleToDefeatcondition=HandleToDefeatcondition
HandleToDefeatcondition="HandleToDefeatcondition(","handle ",,~h,")"
HandleToDefeatconditionHint="[UjAPI]  defeatcondition HandleToDefeatcondition (handle h)"


HandleToTimerdialog=HandleToTimerdialog
HandleToTimerdialog="HandleToTimerdialog(","handle ",,~h,")"
HandleToTimerdialogHint="[UjAPI]  timerdialog HandleToTimerdialog (handle h)"


HandleToLeaderboard=HandleToLeaderboard
HandleToLeaderboard="HandleToLeaderboard(","handle ",,~h,")"
HandleToLeaderboardHint="[UjAPI]  leaderboard HandleToLeaderboard (handle h)"


HandleToMultiboard=HandleToMultiboard
HandleToMultiboard="HandleToMultiboard(","handle ",,~h,")"
HandleToMultiboardHint="[UjAPI]  multiboard HandleToMultiboard (handle h)"


HandleToMultiboarditem=HandleToMultiboarditem
HandleToMultiboarditem="HandleToMultiboarditem(","handle ",,~h,")"
HandleToMultiboarditemHint="[UjAPI]  multiboarditem HandleToMultiboarditem (handle h)"


HandleToTrackable=HandleToTrackable
HandleToTrackable="HandleToTrackable(","handle ",,~h,")"
HandleToTrackableHint="[UjAPI]  trackable HandleToTrackable (handle h)"


HandleToGamecache=HandleToGamecache
HandleToGamecache="HandleToGamecache(","handle ",,~h,")"
HandleToGamecacheHint="[UjAPI]  gamecache HandleToGamecache (handle h)"


HandleToVersion=HandleToVersion
HandleToVersion="HandleToVersion(","handle ",,~h,")"
HandleToVersionHint="[UjAPI]  version HandleToVersion (handle h)"


HandleToItemtype=HandleToItemtype
HandleToItemtype="HandleToItemtype(","handle ",,~h,")"
HandleToItemtypeHint="[UjAPI]  itemtype HandleToItemtype (handle h)"


HandleToTexttag=HandleToTexttag
HandleToTexttag="HandleToTexttag(","handle ",,~h,")"
HandleToTexttagHint="[UjAPI]  texttag HandleToTexttag (handle h)"


HandleToAttacktype=HandleToAttacktype
HandleToAttacktype="HandleToAttacktype(","handle ",,~h,")"
HandleToAttacktypeHint="[UjAPI]  attacktype HandleToAttacktype (handle h)"


HandleToDamagetype=HandleToDamagetype
HandleToDamagetype="HandleToDamagetype(","handle ",,~h,")"
HandleToDamagetypeHint="[UjAPI]  damagetype HandleToDamagetype (handle h)"


HandleToWeapontype=HandleToWeapontype
HandleToWeapontype="HandleToWeapontype(","handle ",,~h,")"
HandleToWeapontypeHint="[UjAPI]  weapontype HandleToWeapontype (handle h)"


HandleToSoundtype=HandleToSoundtype
HandleToSoundtype="HandleToSoundtype(","handle ",,~h,")"
HandleToSoundtypeHint="[UjAPI]  soundtype HandleToSoundtype (handle h)"


HandleToLightning=HandleToLightning
HandleToLightning="HandleToLightning(","handle ",,~h,")"
HandleToLightningHint="[UjAPI]  lightning HandleToLightning (handle h)"


HandleToPathingtype=HandleToPathingtype
HandleToPathingtype="HandleToPathingtype(","handle ",,~h,")"
HandleToPathingtypeHint="[UjAPI]  pathingtype HandleToPathingtype (handle h)"


HandleToImage=HandleToImage
HandleToImage="HandleToImage(","handle ",,~h,")"
HandleToImageHint="[UjAPI]  image HandleToImage (handle h)"


HandleToUbersplat=HandleToUbersplat
HandleToUbersplat="HandleToUbersplat(","handle ",,~h,")"
HandleToUbersplatHint="[UjAPI]  ubersplat HandleToUbersplat (handle h)"


HandleToHashtable=HandleToHashtable
HandleToHashtable="HandleToHashtable(","handle ",,~h,")"
HandleToHashtableHint="[UjAPI]  hashtable HandleToHashtable (handle h)"


HandleToAnimType=HandleToAnimType
HandleToAnimType="HandleToAnimType(","handle ",,~h,")"
HandleToAnimTypeHint="[UjAPI]  animtype HandleToAnimType (handle h)"


HandleToSubAnimType=HandleToSubAnimType
HandleToSubAnimType="HandleToSubAnimType(","handle ",,~h,")"
HandleToSubAnimTypeHint="[UjAPI]  subanimtype HandleToSubAnimType (handle h)"


GetHandleCount=GetHandleCount
GetHandleCount="GetHandleCount(",")"
GetHandleCountHint="[UjAPI]  integer GetHandleCount ()"


GetNextHandleIndex=GetNextHandleIndex
GetNextHandleIndex="GetNextHandleIndex(",")"
GetNextHandleIndexHint="[UjAPI]  integer GetNextHandleIndex ()"


GetStringCount=GetStringCount
GetStringCount="GetStringCount(",")"
GetStringCountHint="[UjAPI]  integer GetStringCount ()"


GetJassMainThread=GetJassMainThread
GetJassMainThread="GetJassMainThread(",")"
GetJassMainThreadHint="[UjAPI]  jassthread GetJassMainThread ()"


GetJassCurrentThread=GetJassCurrentThread
GetJassCurrentThread="GetJassCurrentThread(",")"
GetJassCurrentThreadHint="[UjAPI]  jassthread GetJassCurrentThread ()"


RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(","string ",,~parentScriptFile,", ","string ",,~helperScriptFile,", ","string ",,~jassScriptFile,")"
RunJassScriptExHint="[UjAPI]  jassthread RunJassScriptEx (string parentScriptFile, string helperScriptFile, string jassScriptFile)"


RunJassScript=RunJassScript
RunJassScript="RunJassScript(","string ",,~helperScriptFile,", ","string ",,~jassScriptFile,")"
RunJassScriptHint="[UjAPI]  jassthread RunJassScript (string helperScriptFile, string jassScriptFile)"


RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(","string ",,~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI]  jassthread RunJassScriptSimple (string jassScriptFile)"


StopJassThread=StopJassThread
StopJassThread="StopJassThread(","jassthread ",,~thread,")"
StopJassThreadHint="[UjAPI]  boolean StopJassThread (jassthread thread)"


GetJassGlobalInteger=GetJassGlobalInteger
GetJassGlobalInteger="GetJassGlobalInteger(","jassthread ",,~thread,", ","string ",,~variableName,")"
GetJassGlobalIntegerHint="[UjAPI]  integer GetJassGlobalInteger (jassthread thread, string variableName)"


GetJassGlobalReal=GetJassGlobalReal
GetJassGlobalReal="GetJassGlobalReal(","jassthread ",,~thread,", ","string ",,~variableName,")"
GetJassGlobalRealHint="[UjAPI]  real GetJassGlobalReal (jassthread thread, string variableName)"


GetJassGlobalString=GetJassGlobalString
GetJassGlobalString="GetJassGlobalString(","jassthread ",,~thread,", ","string ",,~variableName,")"
GetJassGlobalStringHint="[UjAPI]  string GetJassGlobalString (jassthread thread, string variableName)"


GetJassGlobalHandle=GetJassGlobalHandle
GetJassGlobalHandle="GetJassGlobalHandle(","jassthread ",,~thread,", ","string ",,~variableName,")"
GetJassGlobalHandleHint="[UjAPI]  handle GetJassGlobalHandle (jassthread thread, string variableName)"


GetJassGlobalBoolean=GetJassGlobalBoolean
GetJassGlobalBoolean="GetJassGlobalBoolean(","jassthread ",,~thread,", ","string ",,~variableName,")"
GetJassGlobalBooleanHint="[UjAPI]  boolean GetJassGlobalBoolean (jassthread thread, string variableName)"


SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(","jassthread ",,~thread,", ","string ",,~variableName,", ","integer ",,~value,")"
SetJassGlobalIntegerHint="[UjAPI]  boolean SetJassGlobalInteger (jassthread thread, string variableName, integer value)"


SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(","jassthread ",,~thread,", ","string ",,~variableName,", ","real ",,~value,")"
SetJassGlobalRealHint="[UjAPI]  boolean SetJassGlobalReal (jassthread thread, string variableName, real value)"


SetJassGlobalString=SetJassGlobalString
SetJassGlobalString="SetJassGlobalString(","jassthread ",,~thread,", ","string ",,~variableName,", ","string ",,~value,")"
SetJassGlobalStringHint="[UjAPI]  boolean SetJassGlobalString (jassthread thread, string variableName, string value)"


SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(","jassthread ",,~thread,", ","string ",,~variableName,", ","handle ",,~value,")"
SetJassGlobalHandleHint="[UjAPI]  boolean SetJassGlobalHandle (jassthread thread, string variableName, handle value)"


SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(","jassthread ",,~thread,", ","string ",,~variableName,", ","boolean ",,~value,")"
SetJassGlobalBooleanHint="[UjAPI]  boolean SetJassGlobalBoolean (jassthread thread, string variableName, boolean value)"


GetJassLocalInteger=GetJassLocalInteger
GetJassLocalInteger="GetJassLocalInteger(","string ",,~variableName,")"
GetJassLocalIntegerHint="[UjAPI]  integer GetJassLocalInteger (string variableName)"


GetJassLocalReal=GetJassLocalReal
GetJassLocalReal="GetJassLocalReal(","string ",,~variableName,")"
GetJassLocalRealHint="[UjAPI]  real GetJassLocalReal (string variableName)"


GetJassLocalString=GetJassLocalString
GetJassLocalString="GetJassLocalString(","string ",,~variableName,")"
GetJassLocalStringHint="[UjAPI]  string GetJassLocalString (string variableName)"


GetJassLocalHandle=GetJassLocalHandle
GetJassLocalHandle="GetJassLocalHandle(","string ",,~variableName,")"
GetJassLocalHandleHint="[UjAPI]  handle GetJassLocalHandle (string variableName)"


GetJassLocalBoolean=GetJassLocalBoolean
GetJassLocalBoolean="GetJassLocalBoolean(","string ",,~variableName,")"
GetJassLocalBooleanHint="[UjAPI]  boolean GetJassLocalBoolean (string variableName)"


SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(","string ",,~variableName,", ","integer ",,~value,")"
SetJassLocalIntegerHint="[UjAPI]  boolean SetJassLocalInteger (string variableName, integer value)"


SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(","string ",,~variableName,", ","real ",,~value,")"
SetJassLocalRealHint="[UjAPI]  boolean SetJassLocalReal (string variableName, real value)"


SetJassLocalString=SetJassLocalString
SetJassLocalString="SetJassLocalString(","string ",,~variableName,", ","string ",,~value,")"
SetJassLocalStringHint="[UjAPI]  boolean SetJassLocalString (string variableName, string value)"


SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(","string ",,~variableName,", ","handle ",,~value,")"
SetJassLocalHandleHint="[UjAPI]  boolean SetJassLocalHandle (string variableName, handle value)"


SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(","string ",,~variableName,", ","boolean ",,~value,")"
SetJassLocalBooleanHint="[UjAPI]  boolean SetJassLocalBoolean (string variableName, boolean value)"


IsOperationLimitEnabled=IsOperationLimitEnabled
IsOperationLimitEnabled="IsOperationLimitEnabled(",")"
IsOperationLimitEnabledHint="[UjAPI]  boolean IsOperationLimitEnabled ()"


GetOperationLimit=GetOperationLimit
GetOperationLimit="GetOperationLimit(",")"
GetOperationLimitHint="[UjAPI]  integer GetOperationLimit ()"


GetCodeByName=GetCodeByName
GetCodeByName="GetCodeByName(","string ",,~funcName,")"
GetCodeByNameHint="[UjAPI]  code GetCodeByName (string funcName)"


MathRound=MathRound
MathRound="MathRound(","real ",,~r,")"
MathRoundHint="[UjAPI]  integer MathRound (real r)"


MathRealRound=MathRealRound
MathRealRound="MathRealRound(","real ",,~r,")"
MathRealRoundHint="[UjAPI]  real MathRealRound (real r)"


MathRealFloor=MathRealFloor
MathRealFloor="MathRealFloor(","real ",,~r,")"
MathRealFloorHint="[UjAPI]  real MathRealFloor (real r)"


MathRealCeil=MathRealCeil
MathRealCeil="MathRealCeil(","real ",,~r,")"
MathRealCeilHint="[UjAPI]  real MathRealCeil (real r)"


MathRealAbs=MathRealAbs
MathRealAbs="MathRealAbs(","real ",,~r,")"
MathRealAbsHint="[UjAPI]  real MathRealAbs (real r)"


MathRealLog=MathRealLog
MathRealLog="MathRealLog(","real ",,~r,")"
MathRealLogHint="[UjAPI]  real MathRealLog (real r)"


MathRealLn=MathRealLn
MathRealLn="MathRealLn(","real ",,~r,")"
MathRealLnHint="[UjAPI]  real MathRealLn (real r)"


MathRealModulo=MathRealModulo
MathRealModulo="MathRealModulo(","real ",,~dividend,", ","real ",,~divisor,")"
MathRealModuloHint="[UjAPI]  real MathRealModulo (real dividend, real divisor)"


MathRealMin=MathRealMin
MathRealMin="MathRealMin(","real ",,~a,", ","real ",,~b,")"
MathRealMinHint="[UjAPI]  real MathRealMin (real a, real b)"


MathRealMax=MathRealMax
MathRealMax="MathRealMax(","real ",,~a,", ","real ",,~b,")"
MathRealMaxHint="[UjAPI]  real MathRealMax (real a, real b)"


MathRealSign=MathRealSign
MathRealSign="MathRealSign(","real ",,~r,")"
MathRealSignHint="[UjAPI]  integer MathRealSign (real r)"


MathRealClamp=MathRealClamp
MathRealClamp="MathRealClamp(","real ",,~value,", ","real ",,~min,", ","real ",,~max,")"
MathRealClampHint="[UjAPI]  real MathRealClamp (real value, real min, real max)"


MathRealLerp=MathRealLerp
MathRealLerp="MathRealLerp(","real ",,~a,", ","real ",,~b,", ","real ",,~t,")"
MathRealLerpHint="[UjAPI]  real MathRealLerp (real a, real b, real t)"


MathIntegerAbs=MathIntegerAbs
MathIntegerAbs="MathIntegerAbs(","integer ",,~i,")"
MathIntegerAbsHint="[UjAPI]  integer MathIntegerAbs (integer i)"


MathIntegerLog=MathIntegerLog
MathIntegerLog="MathIntegerLog(","integer ",,~i,")"
MathIntegerLogHint="[UjAPI]  real MathIntegerLog (integer i)"


MathIntegerLn=MathIntegerLn
MathIntegerLn="MathIntegerLn(","integer ",,~i,")"
MathIntegerLnHint="[UjAPI]  real MathIntegerLn (integer i)"


MathIntegerModulo=MathIntegerModulo
MathIntegerModulo="MathIntegerModulo(","integer ",,~dividend,", ","integer ",,~divisor,")"
MathIntegerModuloHint="[UjAPI]  integer MathIntegerModulo (integer dividend, integer divisor)"


MathIntegerMin=MathIntegerMin
MathIntegerMin="MathIntegerMin(","integer ",,~a,", ","integer ",,~b,")"
MathIntegerMinHint="[UjAPI]  integer MathIntegerMin (integer a, integer b)"


MathIntegerMax=MathIntegerMax
MathIntegerMax="MathIntegerMax(","integer ",,~a,", ","integer ",,~b,")"
MathIntegerMaxHint="[UjAPI]  integer MathIntegerMax (integer a, integer b)"


MathIntegerSign=MathIntegerSign
MathIntegerSign="MathIntegerSign(","integer ",,~i,")"
MathIntegerSignHint="[UjAPI]  integer MathIntegerSign (integer i)"


MathIntegerClamp=MathIntegerClamp
MathIntegerClamp="MathIntegerClamp(","integer ",,~value,", ","integer ",,~min,", ","integer ",,~max,")"
MathIntegerClampHint="[UjAPI]  integer MathIntegerClamp (integer value, integer min, integer max)"


MathSinDeg=MathSinDeg
MathSinDeg="MathSinDeg(","real ",,~r,")"
MathSinDegHint="[UjAPI]  real MathSinDeg (real r)"


MathCosDeg=MathCosDeg
MathCosDeg="MathCosDeg(","real ",,~r,")"
MathCosDegHint="[UjAPI]  real MathCosDeg (real r)"


MathTanDeg=MathTanDeg
MathTanDeg="MathTanDeg(","real ",,~r,")"
MathTanDegHint="[UjAPI]  real MathTanDeg (real r)"


MathPointProjectionX=MathPointProjectionX
MathPointProjectionX="MathPointProjectionX(","real ",,~x,", ","real ",,~angle,", ","real ",,~distance,")"
MathPointProjectionXHint="[UjAPI]  real MathPointProjectionX (real x, real angle, real distance)"


MathPointProjectionY=MathPointProjectionY
MathPointProjectionY="MathPointProjectionY(","real ",,~y,", ","real ",,~angle,", ","real ",,~distance,")"
MathPointProjectionYHint="[UjAPI]  real MathPointProjectionY (real y, real angle, real distance)"


MathAngleBetweenPoints=MathAngleBetweenPoints
MathAngleBetweenPoints="MathAngleBetweenPoints(","real ",,~fromX,", ","real ",,~fromY,", ","real ",,~toX,", ","real ",,~toY,")"
MathAngleBetweenPointsHint="[UjAPI]  real MathAngleBetweenPoints (real fromX, real fromY, real toX, real toY)"


MathDistanceBetweenPoints=MathDistanceBetweenPoints
MathDistanceBetweenPoints="MathDistanceBetweenPoints(","real ",,~fromX,", ","real ",,~fromY,", ","real ",,~toX,", ","real ",,~toY,")"
MathDistanceBetweenPointsHint="[UjAPI]  real MathDistanceBetweenPoints (real fromX, real fromY, real toX, real toY)"


MathAngleBetweenLocations=MathAngleBetweenLocations
MathAngleBetweenLocations="MathAngleBetweenLocations(","location ",,~fromLoc,", ","location ",,~toLoc,")"
MathAngleBetweenLocationsHint="[UjAPI]  real MathAngleBetweenLocations (location fromLoc, location toLoc)"


MathDistanceBetweenLocations=MathDistanceBetweenLocations
MathDistanceBetweenLocations="MathDistanceBetweenLocations(","location ",,~fromLoc,", ","location ",,~toLoc,")"
MathDistanceBetweenLocationsHint="[UjAPI]  real MathDistanceBetweenLocations (location fromLoc, location toLoc)"


GetAxisZ=GetAxisZ
GetAxisZ="GetAxisZ(","real ",,~x,", ","real ",,~y,")"
GetAxisZHint="[UjAPI]  real GetAxisZ (real x, real y)"


StringContains=StringContains
StringContains="StringContains(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringContainsHint="[UjAPI]  boolean StringContains (string s, string whichString, boolean caseSensitive)"


StringFind=StringFind
StringFind="StringFind(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringFindHint="[UjAPI]  integer StringFind (string s, string whichString, boolean caseSensitive)"


StringFindFirstOf=StringFindFirstOf
StringFindFirstOf="StringFindFirstOf(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringFindFirstOfHint="[UjAPI]  integer StringFindFirstOf (string s, string whichString, boolean caseSensitive)"


StringFindFirstNotOf=StringFindFirstNotOf
StringFindFirstNotOf="StringFindFirstNotOf(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringFindFirstNotOfHint="[UjAPI]  integer StringFindFirstNotOf (string s, string whichString, boolean caseSensitive)"


StringFindLastOf=StringFindLastOf
StringFindLastOf="StringFindLastOf(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringFindLastOfHint="[UjAPI]  integer StringFindLastOf (string s, string whichString, boolean caseSensitive)"


StringFindLastNotOf=StringFindLastNotOf
StringFindLastNotOf="StringFindLastNotOf(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringFindLastNotOfHint="[UjAPI]  integer StringFindLastNotOf (string s, string whichString, boolean caseSensitive)"


StringCount=StringCount
StringCount="StringCount(","string ",,~s,", ","string ",,~whichString,", ","boolean ",,~caseSensitive,")"
StringCountHint="[UjAPI]  integer StringCount (string s, string whichString, boolean caseSensitive)"


StringTrimLeft=StringTrimLeft
StringTrimLeft="StringTrimLeft(","string ",,~s,", ","boolean ",,~caseSensitive,")"
StringTrimLeftHint="[UjAPI]  string StringTrimLeft (string s, boolean caseSensitive)"


StringTrimRight=StringTrimRight
StringTrimRight="StringTrimRight(","string ",,~s,", ","boolean ",,~caseSensitive,")"
StringTrimRightHint="[UjAPI]  string StringTrimRight (string s, boolean caseSensitive)"


StringTrim=StringTrim
StringTrim="StringTrim(","string ",,~s,", ","boolean ",,~caseSensitive,")"
StringTrimHint="[UjAPI]  string StringTrim (string s, boolean caseSensitive)"


StringReverse=StringReverse
StringReverse="StringReverse(","string ",,~s,", ","boolean ",,~caseSensitive,")"
StringReverseHint="[UjAPI]  string StringReverse (string s, boolean caseSensitive)"


StringReplace=StringReplace
StringReplace="StringReplace(","string ",,~s,", ","string ",,~whichString,", ","string ",,~replaceWith,", ","boolean ",,~caseSensitive,")"
StringReplaceHint="[UjAPI]  string StringReplace (string s, string whichString, string replaceWith, boolean caseSensitive)"


StringInsert=StringInsert
StringInsert="StringInsert(","string ",,~s,", ","string ",,~whichString,", ","integer ",,~whichPosition,", ","boolean ",,~caseSensitive,")"
StringInsertHint="[UjAPI]  string StringInsert (string s, string whichString, integer whichPosition, boolean caseSensitive)"


TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(","string ",,~filePath,")"
TextFileOpenHint="[UjAPI]  textfilehandle TextFileOpen (string filePath)"


TextFileExists=TextFileExists
TextFileExists="TextFileExists(","string ",,~filePath,")"
TextFileExistsHint="[UjAPI]  boolean TextFileExists (string filePath)"


TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(","string ",,~filePath,")"
TextFileGetSizeByPathHint="[UjAPI]  integer TextFileGetSizeByPath (string filePath)"


TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(","textfilehandle ",,~whichTextFile,")"
TextFileGetSizeHint="[UjAPI]  integer TextFileGetSize (textfilehandle whichTextFile)"


TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(","textfilehandle ",,~whichTextFile,")"
TextFileGetPathHint="[UjAPI]  string TextFileGetPath (textfilehandle whichTextFile)"


TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(","textfilehandle ",,~whichTextFile,")"
TextFileCountLinesHint="[UjAPI]  integer TextFileCountLines (textfilehandle whichTextFile)"


TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(","textfilehandle ",,~whichTextFile,", ","integer ",,~lineNumber,")"
TextFileReadLineHint="[UjAPI]  string TextFileReadLine (textfilehandle whichTextFile, integer lineNumber)"


TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(","textfilehandle ",,~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI]  string TextFileReadAllLines (textfilehandle whichTextFile)"


TextFileRead=TextFileRead
TextFileRead="TextFileRead(","textfilehandle ",,~whichTextFile,")"
TextFileReadHint="[UjAPI]  string TextFileRead (textfilehandle whichTextFile)"


GetUjAPIVersion=GetUjAPIVersion
GetUjAPIVersion="GetUjAPIVersion(",")"
GetUjAPIVersionHint="[UjAPI]  string GetUjAPIVersion ()"


GetGameVersion=GetGameVersion
GetGameVersion="GetGameVersion(",")"
GetGameVersionHint="[UjAPI]  string GetGameVersion ()"


GetLocale=GetLocale
GetLocale="GetLocale(",")"
GetLocaleHint="[UjAPI]  string GetLocale ()"


GetMiscDataString=GetMiscDataString
GetMiscDataString="GetMiscDataString(","string ",,~sectionName,", ","string ",,~optionName,", ","integer ",,~index,")"
GetMiscDataStringHint="[UjAPI]  string GetMiscDataString (string sectionName, string optionName, integer index)"


SetMiscDataString=SetMiscDataString
SetMiscDataString="SetMiscDataString(","string ",,~sectionName,", ","string ",,~optionName,", ","integer ",,~index,", ","string ",,~value,")"
SetMiscDataStringHint="[UjAPI]  nothing SetMiscDataString (string sectionName, string optionName, integer index, string value)"


GetSkinDataString=GetSkinDataString
GetSkinDataString="GetSkinDataString(","string ",,~raceName,", ","string ",,~sectionName,", ","string ",,~optionName,", ","integer ",,~index,")"
GetSkinDataStringHint="[UjAPI]  string GetSkinDataString (string raceName, string sectionName, string optionName, integer index)"


SetSkinDataString=SetSkinDataString
SetSkinDataString="SetSkinDataString(","string ",,~raceName,", ","string ",,~sectionName,", ","string ",,~optionName,", ","integer ",,~index,", ","string ",,~value,")"
SetSkinDataStringHint="[UjAPI]  nothing SetSkinDataString (string raceName, string sectionName, string optionName, integer index, string value)"


GetFDFDataString=GetFDFDataString
GetFDFDataString="GetFDFDataString(","string ",,~sectionName,")"
GetFDFDataStringHint="[UjAPI]  string GetFDFDataString (string sectionName)"


SetFDFDataString=SetFDFDataString
SetFDFDataString="SetFDFDataString(","string ",,~sectionName,", ","string ",,~value,")"
SetFDFDataStringHint="[UjAPI]  nothing SetFDFDataString (string sectionName, string value)"


GetWheelDelta=GetWheelDelta
GetWheelDelta="GetWheelDelta(",")"
GetWheelDeltaHint="[UjAPI]  integer GetWheelDelta ()"


GetFPS=GetFPS
GetFPS="GetFPS(",")"
GetFPSHint="[UjAPI]  real GetFPS ()"


GetVisionMax=GetVisionMax
GetVisionMax="GetVisionMax(",")"
GetVisionMaxHint="[UjAPI]  real GetVisionMax ()"


GetAttackSpeedMinBonus=GetAttackSpeedMinBonus
GetAttackSpeedMinBonus="GetAttackSpeedMinBonus(",")"
GetAttackSpeedMinBonusHint="[UjAPI]  real GetAttackSpeedMinBonus ()"


GetAttackSpeedMaxBonus=GetAttackSpeedMaxBonus
GetAttackSpeedMaxBonus="GetAttackSpeedMaxBonus(",")"
GetAttackSpeedMaxBonusHint="[UjAPI]  real GetAttackSpeedMaxBonus ()"


GetMoveSpeedMinAllowed=GetMoveSpeedMinAllowed
GetMoveSpeedMinAllowed="GetMoveSpeedMinAllowed(",")"
GetMoveSpeedMinAllowedHint="[UjAPI]  real GetMoveSpeedMinAllowed ()"


GetMoveSpeedMaxAllowed=GetMoveSpeedMaxAllowed
GetMoveSpeedMaxAllowed="GetMoveSpeedMaxAllowed(",")"
GetMoveSpeedMaxAllowedHint="[UjAPI]  real GetMoveSpeedMaxAllowed ()"


GetMappedTypeName=GetMappedTypeName
GetMappedTypeName="GetMappedTypeName(","mappedfield ",,~whichField,", ","mappedtype ",,~whichMapType,")"
GetMappedTypeNameHint="[UjAPI]  string GetMappedTypeName (mappedfield whichField, mappedtype whichMapType)"


IsSelectionEnabled=IsSelectionEnabled
IsSelectionEnabled="IsSelectionEnabled(",")"
IsSelectionEnabledHint="[UjAPI]  boolean IsSelectionEnabled ()"


IsSelectionCircleEnabled=IsSelectionCircleEnabled
IsSelectionCircleEnabled="IsSelectionCircleEnabled(",")"
IsSelectionCircleEnabledHint="[UjAPI]  boolean IsSelectionCircleEnabled ()"


IsTargetIndicatorEnabled=IsTargetIndicatorEnabled
IsTargetIndicatorEnabled="IsTargetIndicatorEnabled(",")"
IsTargetIndicatorEnabledHint="[UjAPI]  boolean IsTargetIndicatorEnabled ()"


IsRenderStage=IsRenderStage
IsRenderStage="IsRenderStage(","renderstage ",,~renderStage,")"
IsRenderStageHint="[UjAPI]  boolean IsRenderStage (renderstage renderStage)"


IsStatbarEnabled=IsStatbarEnabled
IsStatbarEnabled="IsStatbarEnabled(",")"
IsStatbarEnabledHint="[UjAPI]  boolean IsStatbarEnabled ()"


GetMapFogZ=GetMapFogZ
GetMapFogZ="GetMapFogZ(",")"
GetMapFogZHint="[UjAPI]  real GetMapFogZ ()"


GetMapFogColour=GetMapFogColour
GetMapFogColour="GetMapFogColour(",")"
GetMapFogColourHint="[UjAPI]  integer GetMapFogColour ()"


TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(","trigger ",,~whichTrigger,")"
TriggerCountEventsHint="[UjAPI]  integer TriggerCountEvents (trigger whichTrigger)"


TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(","trigger ",,~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI]  integer TriggerCountConditions (trigger whichTrigger)"


TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(","trigger ",,~whichTrigger,")"
TriggerCountActionsHint="[UjAPI]  integer TriggerCountActions (trigger whichTrigger)"


ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(","sound ",,~whichSound,", ","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~eaxSetting,")"
ReplaceSoundHint="[UjAPI]  sound ReplaceSound (sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting)"


ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(","sound ",,~whichSound,", ","string ",,~fileName,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,", ","string ",,~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI]  sound ReplaceSoundWithLabel (sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName)"


ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(","sound ",,~whichSound,", ","string ",,~soundLabel,", ","boolean ",,~looping,", ","boolean ",,~is3D,", ","boolean ",,~stopwhenoutofrange,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI]  sound ReplaceSoundFromLabel (sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate)"


ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(","sound ",,~whichSound,", ","string ",,~soundLabel,", ","integer ",,~fadeInRate,", ","integer ",,~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI]  sound ReplaceMIDISound (sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate)"


GetSystemTime=GetSystemTime
GetSystemTime="GetSystemTime(","timetype ",,~whichTimeType,")"
GetSystemTimeHint="[UjAPI]  integer GetSystemTime (timetype whichTimeType)"


GetLocalTime=GetLocalTime
GetLocalTime="GetLocalTime(","timetype ",,~whichTimeType,")"
GetLocalTimeHint="[UjAPI]  integer GetLocalTime (timetype whichTimeType)"


GetTimeStamp=GetTimeStamp
GetTimeStamp="GetTimeStamp(","boolean ",,~isLocalTime,", ","integer ",,~isMiliseconds,")"
GetTimeStampHint="[UjAPI]  string GetTimeStamp (boolean isLocalTime, integer isMiliseconds)"


GetTickCount=GetTickCount
GetTickCount="GetTickCount(",")"
GetTickCountHint="[UjAPI]  integer GetTickCount ()"


BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(","integer ",,~benchType,")"
BenchmarkGetElapsedHint="[UjAPI]  string BenchmarkGetElapsed (integer benchType)"


IsWindowActive=IsWindowActive
IsWindowActive="IsWindowActive(",")"
IsWindowActiveHint="[UjAPI]  boolean IsWindowActive ()"


GetWindowWidth=GetWindowWidth
GetWindowWidth="GetWindowWidth(",")"
GetWindowWidthHint="[UjAPI]  integer GetWindowWidth ()"


GetWindowHeight=GetWindowHeight
GetWindowHeight="GetWindowHeight(",")"
GetWindowHeightHint="[UjAPI]  integer GetWindowHeight ()"


GetClientWidth=GetClientWidth
GetClientWidth="GetClientWidth(",")"
GetClientWidthHint="[UjAPI]  integer GetClientWidth ()"


GetClientHeight=GetClientHeight
GetClientHeight="GetClientHeight(",")"
GetClientHeightHint="[UjAPI]  integer GetClientHeight ()"


GetWindowX=GetWindowX
GetWindowX="GetWindowX(",")"
GetWindowXHint="[UjAPI]  integer GetWindowX ()"


GetWindowY=GetWindowY
GetWindowY="GetWindowY(",")"
GetWindowYHint="[UjAPI]  integer GetWindowY ()"


GetWindowCenterX=GetWindowCenterX
GetWindowCenterX="GetWindowCenterX(",")"
GetWindowCenterXHint="[UjAPI]  integer GetWindowCenterX ()"


GetWindowCenterY=GetWindowCenterY
GetWindowCenterY="GetWindowCenterY(",")"
GetWindowCenterYHint="[UjAPI]  integer GetWindowCenterY ()"


IsCursorEnabled=IsCursorEnabled
IsCursorEnabled="IsCursorEnabled(",")"
IsCursorEnabledHint="[UjAPI]  boolean IsCursorEnabled ()"


IsCursorAnimationLocked=IsCursorAnimationLocked
IsCursorAnimationLocked="IsCursorAnimationLocked(",")"
IsCursorAnimationLockedHint="[UjAPI]  boolean IsCursorAnimationLocked ()"


GetMouseScreenX=GetMouseScreenX
GetMouseScreenX="GetMouseScreenX(",")"
GetMouseScreenXHint="[UjAPI]  real GetMouseScreenX ()"


GetMouseScreenY=GetMouseScreenY
GetMouseScreenY="GetMouseScreenY(",")"
GetMouseScreenYHint="[UjAPI]  real GetMouseScreenY ()"


GetMouseScreenPixelX=GetMouseScreenPixelX
GetMouseScreenPixelX="GetMouseScreenPixelX(",")"
GetMouseScreenPixelXHint="[UjAPI]  integer GetMouseScreenPixelX ()"


GetMouseScreenPixelY=GetMouseScreenPixelY
GetMouseScreenPixelY="GetMouseScreenPixelY(",")"
GetMouseScreenPixelYHint="[UjAPI]  integer GetMouseScreenPixelY ()"


GetMouseWorldX=GetMouseWorldX
GetMouseWorldX="GetMouseWorldX(",")"
GetMouseWorldXHint="[UjAPI]  real GetMouseWorldX ()"


GetMouseWorldY=GetMouseWorldY
GetMouseWorldY="GetMouseWorldY(",")"
GetMouseWorldYHint="[UjAPI]  real GetMouseWorldY ()"


GetMouseWorldZ=GetMouseWorldZ
GetMouseWorldZ="GetMouseWorldZ(",")"
GetMouseWorldZHint="[UjAPI]  real GetMouseWorldZ ()"


DisplayTopMessage=DisplayTopMessage
DisplayTopMessage="DisplayTopMessage(","player ",,~toPlayer,", ","string ",,~message,")"
DisplayTopMessageHint="[UjAPI]  nothing DisplayTopMessage (player toPlayer, string message)"


DisplayTimedTopMessage=DisplayTimedTopMessage
DisplayTimedTopMessage="DisplayTimedTopMessage(","player ",,~toPlayer,", ","real ",,~duration,", ","string ",,~message,")"
DisplayTimedTopMessageHint="[UjAPI]  nothing DisplayTimedTopMessage (player toPlayer, real duration, string message)"


IsHandleDestroyed=IsHandleDestroyed
IsHandleDestroyed="IsHandleDestroyed(","handle ",,~whichHandle,")"
IsHandleDestroyedHint="[UjAPI]  boolean IsHandleDestroyed (handle whichHandle)"


GetHandleReferenceCount=GetHandleReferenceCount
GetHandleReferenceCount="GetHandleReferenceCount(","handle ",,~whichHandle,")"
GetHandleReferenceCountHint="[UjAPI]  integer GetHandleReferenceCount (handle whichHandle)"


GetHandleBaseTypeId=GetHandleBaseTypeId
GetHandleBaseTypeId="GetHandleBaseTypeId(","handle ",,~whichHandle,")"
GetHandleBaseTypeIdHint="[UjAPI]  integer GetHandleBaseTypeId (handle whichHandle)"


GetHandleBaseTypeName=GetHandleBaseTypeName
GetHandleBaseTypeName="GetHandleBaseTypeName(","handle ",,~whichHandle,")"
GetHandleBaseTypeNameHint="[UjAPI]  string GetHandleBaseTypeName (handle whichHandle)"


GetFilterHandle=GetFilterHandle
GetFilterHandle="GetFilterHandle(",")"
GetFilterHandleHint="[UjAPI]  handle GetFilterHandle ()"


GetEnumHandle=GetEnumHandle
GetEnumHandle="GetEnumHandle(",")"
GetEnumHandleHint="[UjAPI]  handle GetEnumHandle ()"


GetTriggerHackId=GetTriggerHackId
GetTriggerHackId="GetTriggerHackId(",")"
GetTriggerHackIdHint="[UjAPI]  integer GetTriggerHackId ()"


GetTriggerHackType=GetTriggerHackType
GetTriggerHackType="GetTriggerHackType(",")"
GetTriggerHackTypeHint="[UjAPI]  integer GetTriggerHackType ()"


GetTriggerHackLine=GetTriggerHackLine
GetTriggerHackLine="GetTriggerHackLine(",")"
GetTriggerHackLineHint="[UjAPI]  integer GetTriggerHackLine ()"


SaveHandle=SaveHandle
SaveHandle="SaveHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","handle ",,~whichHandle,")"
SaveHandleHint="[UjAPI]  boolean SaveHandle (hashtable table, integer parentKey, integer childKey, handle whichHandle)"


SaveCode=SaveCode
SaveCode="SaveCode(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","code ",,~whichCode,")"
SaveCodeHint="[UjAPI]  boolean SaveCode (hashtable table, integer parentKey, integer childKey, code whichCode)"


SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","attacktype ",,~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI]  boolean SaveAttackTypeHandle (hashtable table, integer parentKey, integer childKey, attacktype whichAttackType)"


SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","damagetype ",,~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI]  boolean SaveDamageTypeHandle (hashtable table, integer parentKey, integer childKey, damagetype whichDamageType)"


SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","weapontype ",,~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI]  boolean SaveWeaponTypeHandle (hashtable table, integer parentKey, integer childKey, weapontype whichWeaponType)"


SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","buff ",,~whichBuff,")"
SaveBuffHandleHint="[UjAPI]  boolean SaveBuffHandle (hashtable table, integer parentKey, integer childKey, buff whichBuff)"


SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","sprite ",,~whichsprite,")"
SaveSpriteHandleHint="[UjAPI]  boolean SaveSpriteHandle (hashtable table, integer parentKey, integer childKey, sprite whichsprite)"


SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","war3image ",,~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI]  boolean SaveWar3ImageHandle (hashtable table, integer parentKey, integer childKey, war3image whichWar3Image)"


SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","doodad ",,~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI]  boolean SaveDoodadHandle (hashtable table, integer parentKey, integer childKey, doodad whichDoodad)"


SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","textfilehandle ",,~whichFile,")"
SaveTextFileHandleHint="[UjAPI]  boolean SaveTextFileHandle (hashtable table, integer parentKey, integer childKey, textfilehandle whichFile)"


SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","projectile ",,~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI]  boolean SaveProjectileHandle (hashtable table, integer parentKey, integer childKey, projectile whichProjectile)"


SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","framehandle ",,~whichFrame,")"
SaveFrameHandleHint="[UjAPI]  boolean SaveFrameHandle (hashtable table, integer parentKey, integer childKey, framehandle whichFrame)"


SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,", ","handlelist ",,~whichHandleList,")"
SaveHandleListHint="[UjAPI]  boolean SaveHandleList (hashtable table, integer parentKey, integer childKey, handlelist whichHandleList)"


LoadHandle=LoadHandle
LoadHandle="LoadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHandleHint="[UjAPI]  handle LoadHandle (hashtable table, integer parentKey, integer childKey)"


LoadCode=LoadCode
LoadCode="LoadCode(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadCodeHint="[UjAPI]  code LoadCode (hashtable table, integer parentKey, integer childKey)"


LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadAttackTypeHandleHint="[UjAPI]  attacktype LoadAttackTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDamageTypeHandleHint="[UjAPI]  damagetype LoadDamageTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI]  weapontype LoadWeaponTypeHandle (hashtable table, integer parentKey, integer childKey)"


LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadBuffHandleHint="[UjAPI]  buff LoadBuffHandle (hashtable table, integer parentKey, integer childKey)"


LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadSpriteHandleHint="[UjAPI]  sprite LoadSpriteHandle (hashtable table, integer parentKey, integer childKey)"


LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadWar3ImageHandleHint="[UjAPI]  war3image LoadWar3ImageHandle (hashtable table, integer parentKey, integer childKey)"


LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadDoodadHandleHint="[UjAPI]  doodad LoadDoodadHandle (hashtable table, integer parentKey, integer childKey)"


LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadTextFileHandleHint="[UjAPI]  textfilehandle LoadTextFileHandle (hashtable table, integer parentKey, integer childKey)"


LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadProjectileHandleHint="[UjAPI]  projectile LoadProjectileHandle (hashtable table, integer parentKey, integer childKey)"


LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadFrameHandleHint="[UjAPI]  framehandle LoadFrameHandle (hashtable table, integer parentKey, integer childKey)"


LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
LoadHandleListHint="[UjAPI]  handlelist LoadHandleList (hashtable table, integer parentKey, integer childKey)"


GetHostPlayer=GetHostPlayer
GetHostPlayer="GetHostPlayer(",")"
GetHostPlayerHint="[UjAPI]  player GetHostPlayer ()"


ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(","force ",,~whichForce,", ","player ",,~whichPlayer,")"
ForceHasPlayerHint="[UjAPI]  boolean ForceHasPlayer (force whichForce, player whichPlayer)"


ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(","force ",,~whichForce,")"
ForceCountPlayersHint="[UjAPI]  integer ForceCountPlayers (force whichForce)"


GetConnectionType=GetConnectionType
GetConnectionType="GetConnectionType(",")"
GetConnectionTypeHint="[UjAPI]  connectiontype GetConnectionType ()"


IsReplay=IsReplay
IsReplay="IsReplay(",")"
IsReplayHint="[UjAPI]  boolean IsReplay ()"


GetFogModifierForPlayer=GetFogModifierForPlayer
GetFogModifierForPlayer="GetFogModifierForPlayer(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierForPlayerHint="[UjAPI]  player GetFogModifierForPlayer (fogmodifier whichFogModifier)"


IsFogModifierFogState=IsFogModifierFogState
IsFogModifierFogState="IsFogModifierFogState(","fogmodifier ",,~whichFogModifier,", ","fogstate ",,~whichState,")"
IsFogModifierFogStateHint="[UjAPI]  boolean IsFogModifierFogState (fogmodifier whichFogModifier, fogstate whichState)"


GetFogModifierX=GetFogModifierX
GetFogModifierX="GetFogModifierX(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierXHint="[UjAPI]  real GetFogModifierX (fogmodifier whichFogModifier)"


GetFogModifierY=GetFogModifierY
GetFogModifierY="GetFogModifierY(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierYHint="[UjAPI]  real GetFogModifierY (fogmodifier whichFogModifier)"


GetFogModifierZ=GetFogModifierZ
GetFogModifierZ="GetFogModifierZ(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierZHint="[UjAPI]  real GetFogModifierZ (fogmodifier whichFogModifier)"


GetFogModifierRadius=GetFogModifierRadius
GetFogModifierRadius="GetFogModifierRadius(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierRadiusHint="[UjAPI]  real GetFogModifierRadius (fogmodifier whichFogModifier)"


GetFogModifierRect=GetFogModifierRect
GetFogModifierRect="GetFogModifierRect(","fogmodifier ",,~whichFogModifier,")"
GetFogModifierRectHint="[UjAPI]  rect GetFogModifierRect (fogmodifier whichFogModifier)"


GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(","group ",,~whichGroup,")"
GroupGetCountHint="[UjAPI]  integer GroupGetCount (group whichGroup)"


GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(","group ",,~whichGroup,", ","unit ",,~whichUnit,")"
GroupContainsUnitHint="[UjAPI]  boolean GroupContainsUnit (group whichGroup, unit whichUnit)"


GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(","group ",,~whichGroup,", ","integer ",,~index,")"
GroupGetUnitByIndexHint="[UjAPI]  unit GroupGetUnitByIndex (group whichGroup, integer index)"


GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(","group ",,~whichGroup,")"
GroupForEachUnitHint="[UjAPI]  unit GroupForEachUnit (group whichGroup)"


GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(","group ",,~destGroup,", ","group ",,~sourceGroup,")"
GroupAddGroupExHint="[UjAPI]  integer GroupAddGroupEx (group destGroup, group sourceGroup)"


GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(","group ",,~destGroup,", ","group ",,~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI]  integer GroupRemoveGroupEx (group destGroup, group sourceGroup)"


GetTradeSource=GetTradeSource
GetTradeSource="GetTradeSource(",")"
GetTradeSourceHint="[UjAPI]  player GetTradeSource ()"


GetTradeTarget=GetTradeTarget
GetTradeTarget="GetTradeTarget(",")"
GetTradeTargetHint="[UjAPI]  player GetTradeTarget ()"


GetTradeGold=GetTradeGold
GetTradeGold="GetTradeGold(",")"
GetTradeGoldHint="[UjAPI]  integer GetTradeGold ()"


GetTradeLumber=GetTradeLumber
GetTradeLumber="GetTradeLumber(",")"
GetTradeLumberHint="[UjAPI]  integer GetTradeLumber ()"


IsTradeState=IsTradeState
IsTradeState="IsTradeState(","tradestate ",,~whichTradeState,")"
IsTradeStateHint="[UjAPI]  boolean IsTradeState (tradestate whichTradeState)"


HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI]  handlelist HandleListCreate ()"


HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(","handlelist ",,~destHandleList,", ","handlelist ",,~sourceHandleList,")"
HandleListAddListHint="[UjAPI]  integer HandleListAddList (handlelist destHandleList, handlelist sourceHandleList)"


HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(","handlelist ",,~destHandleList,", ","handlelist ",,~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI]  integer HandleListRemoveList (handlelist destHandleList, handlelist sourceHandleList)"


HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(","handlelist ",,~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI]  integer HandleListRemoveEmpty (handlelist whichHandleList)"


HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(","handlelist ",,~whichHandleList,", ","handle ",,~whichHandle,")"
HandleListContainsHandleHint="[UjAPI]  boolean HandleListContainsHandle (handlelist whichHandleList, handle whichHandle)"


HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(","handlelist ",,~whichHandleList,", ","integer ",,~typeId,")"
HandleListContainsTypeIdHint="[UjAPI]  boolean HandleListContainsTypeId (handlelist whichHandleList, integer typeId)"


HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(","handlelist ",,~whichHandleList,")"
HandleListGetCountHint="[UjAPI]  integer HandleListGetCount (handlelist whichHandleList)"


HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,")"
HandleListGetCountExHint="[UjAPI]  integer HandleListGetCountEx (handlelist whichHandleList, integer handleTypeId)"


HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(","handlelist ",,~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI]  integer HandleListGetAgentCount (handlelist whichHandleList)"


HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(","handlelist ",,~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI]  integer HandleListGetWidgetCount (handlelist whichHandleList)"


HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(","handlelist ",,~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI]  integer HandleListGetUnitCount (handlelist whichHandleList)"


HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(","handlelist ",,~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI]  integer HandleListGetItemCount (handlelist whichHandleList)"


HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(","handlelist ",,~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI]  integer HandleListGetDestructableCount (handlelist whichHandleList)"


HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(","handlelist ",,~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI]  integer HandleListGetDoodadCount (handlelist whichHandleList)"


HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(","handlelist ",,~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI]  integer HandleListGetAbilityCount (handlelist whichHandleList)"


HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(","handlelist ",,~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI]  integer HandleListGetBuffCount (handlelist whichHandleList)"


HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(","handlelist ",,~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI]  integer HandleListGetSpriteCount (handlelist whichHandleList)"


HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(","handlelist ",,~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI]  integer HandleListGetEffectCount (handlelist whichHandleList)"


HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(","handlelist ",,~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI]  integer HandleListGetProjectileCount (handlelist whichHandleList)"


HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(","handlelist ",,~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI]  integer HandleListGetFrameCount (handlelist whichHandleList)"


HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(","handlelist ",,~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI]  integer HandleListGetOrderCount (handlelist whichHandleList)"


HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetHandleByIndexHint="[UjAPI]  handle HandleListGetHandleByIndex (handlelist whichHandleList, integer index)"


HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(","handlelist ",,~whichHandleList,", ","integer ",,~handleTypeId,", ","integer ",,~index,")"
HandleListGetHandleByIndexExHint="[UjAPI]  handle HandleListGetHandleByIndexEx (handlelist whichHandleList, integer handleTypeId, integer index)"


HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(","handlelist ",,~whichHandleList,", ","integer ",,~typeId,", ","integer ",,~index,")"
HandleListGetHandleByIdHint="[UjAPI]  handle HandleListGetHandleById (handlelist whichHandleList, integer typeId, integer index)"


HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetAgentByIndexHint="[UjAPI]  agent HandleListGetAgentByIndex (handlelist whichHandleList, integer index)"


HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetWidgetByIndexHint="[UjAPI]  widget HandleListGetWidgetByIndex (handlelist whichHandleList, integer index)"


HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetUnitByIndexHint="[UjAPI]  unit HandleListGetUnitByIndex (handlelist whichHandleList, integer index)"


HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetItemByIndexHint="[UjAPI]  item HandleListGetItemByIndex (handlelist whichHandleList, integer index)"


HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetDestructableByIndexHint="[UjAPI]  destructable HandleListGetDestructableByIndex (handlelist whichHandleList, integer index)"


HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetDoodadByIndexHint="[UjAPI]  doodad HandleListGetDoodadByIndex (handlelist whichHandleList, integer index)"


HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetAbilityByIndexHint="[UjAPI]  ability HandleListGetAbilityByIndex (handlelist whichHandleList, integer index)"


HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetBuffByIndexHint="[UjAPI]  buff HandleListGetBuffByIndex (handlelist whichHandleList, integer index)"


HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetSpriteByIndexHint="[UjAPI]  sprite HandleListGetSpriteByIndex (handlelist whichHandleList, integer index)"


HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetEffectByIndexHint="[UjAPI]  effect HandleListGetEffectByIndex (handlelist whichHandleList, integer index)"


HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetProjectileByIndexHint="[UjAPI]  projectile HandleListGetProjectileByIndex (handlelist whichHandleList, integer index)"


HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetFrameByIndexHint="[UjAPI]  framehandle HandleListGetFrameByIndex (handlelist whichHandleList, integer index)"


HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(","handlelist ",,~whichHandleList,", ","integer ",,~index,")"
HandleListGetOrderByIndexHint="[UjAPI]  orderhandle HandleListGetOrderByIndex (handlelist whichHandleList, integer index)"


HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI]  handle HandleListGetFilterHandle ()"


HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI]  agent HandleListGetFilterAgent ()"


HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI]  widget HandleListGetFilterWidget ()"


HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI]  unit HandleListGetFilterUnit ()"


HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI]  item HandleListGetFilterItem ()"


HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI]  destructable HandleListGetFilterDestructable ()"


HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI]  doodad HandleListGetFilterDoodad ()"


HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI]  ability HandleListGetFilterAbility ()"


HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI]  buff HandleListGetFilterBuff ()"


HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI]  sprite HandleListGetFilterSprite ()"


HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI]  effect HandleListGetFilterEffect ()"


HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI]  projectile HandleListGetFilterProjectile ()"


HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI]  framehandle HandleListGetFilterFrame ()"


HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI]  orderhandle HandleListGetFilterOrder ()"


HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI]  handle HandleListGetEnumHandle ()"


HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI]  agent HandleListGetEnumAgent ()"


HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI]  widget HandleListGetEnumWidget ()"


HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI]  unit HandleListGetEnumUnit ()"


HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI]  item HandleListGetEnumItem ()"


HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI]  destructable HandleListGetEnumDestructable ()"


HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI]  doodad HandleListGetEnumDoodad ()"


HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI]  ability HandleListGetEnumAbility ()"


HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI]  buff HandleListGetEnumBuff ()"


HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI]  sprite HandleListGetEnumSprite ()"


HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI]  effect HandleListGetEnumEffect ()"


HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI]  projectile HandleListGetEnumProjectile ()"


HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI]  framehandle HandleListGetEnumFrame ()"


HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI]  orderhandle HandleListGetEnumOrder ()"


IsTextTagVisible=IsTextTagVisible
IsTextTagVisible="IsTextTagVisible(","texttag ",,~whichTextTag,")"
IsTextTagVisibleHint="[UjAPI]  boolean IsTextTagVisible (texttag whichTextTag)"


IsTextTagSuspended=IsTextTagSuspended
IsTextTagSuspended="IsTextTagSuspended(","texttag ",,~whichTextTag,")"
IsTextTagSuspendedHint="[UjAPI]  boolean IsTextTagSuspended (texttag whichTextTag)"


IsTextTagPermanent=IsTextTagPermanent
IsTextTagPermanent="IsTextTagPermanent(","texttag ",,~whichTextTag,")"
IsTextTagPermanentHint="[UjAPI]  real IsTextTagPermanent (texttag whichTextTag)"


GetTextTagX=GetTextTagX
GetTextTagX="GetTextTagX(","texttag ",,~whichTextTag,")"
GetTextTagXHint="[UjAPI]  real GetTextTagX (texttag whichTextTag)"


GetTextTagY=GetTextTagY
GetTextTagY="GetTextTagY(","texttag ",,~whichTextTag,")"
GetTextTagYHint="[UjAPI]  real GetTextTagY (texttag whichTextTag)"


GetTextTagZ=GetTextTagZ
GetTextTagZ="GetTextTagZ(","texttag ",,~whichTextTag,")"
GetTextTagZHint="[UjAPI]  real GetTextTagZ (texttag whichTextTag)"


GetTextTagScreenX=GetTextTagScreenX
GetTextTagScreenX="GetTextTagScreenX(","texttag ",,~whichTextTag,")"
GetTextTagScreenXHint="[UjAPI]  real GetTextTagScreenX (texttag whichTextTag)"


GetTextTagScreenY=GetTextTagScreenY
GetTextTagScreenY="GetTextTagScreenY(","texttag ",,~whichTextTag,")"
GetTextTagScreenYHint="[UjAPI]  real GetTextTagScreenY (texttag whichTextTag)"


GetTextTagHeight=GetTextTagHeight
GetTextTagHeight="GetTextTagHeight(","texttag ",,~whichTextTag,")"
GetTextTagHeightHint="[UjAPI]  real GetTextTagHeight (texttag whichTextTag)"


GetTextTagPositionLoc=GetTextTagPositionLoc
GetTextTagPositionLoc="GetTextTagPositionLoc(","texttag ",,~whichTextTag,")"
GetTextTagPositionLocHint="[UjAPI]  location GetTextTagPositionLoc (texttag whichTextTag)"


GetTextTagColour=GetTextTagColour
GetTextTagColour="GetTextTagColour(","texttag ",,~whichTextTag,")"
GetTextTagColourHint="[UjAPI]  integer GetTextTagColour (texttag whichTextTag)"


GetTextTagAlpha=GetTextTagAlpha
GetTextTagAlpha="GetTextTagAlpha(","texttag ",,~whichTextTag,")"
GetTextTagAlphaHint="[UjAPI]  integer GetTextTagAlpha (texttag whichTextTag)"


GetTextTagVelocityX=GetTextTagVelocityX
GetTextTagVelocityX="GetTextTagVelocityX(","texttag ",,~whichTextTag,")"
GetTextTagVelocityXHint="[UjAPI]  real GetTextTagVelocityX (texttag whichTextTag)"


GetTextTagVelocityY=GetTextTagVelocityY
GetTextTagVelocityY="GetTextTagVelocityY(","texttag ",,~whichTextTag,")"
GetTextTagVelocityYHint="[UjAPI]  real GetTextTagVelocityY (texttag whichTextTag)"


GetTextTagVelocityZ=GetTextTagVelocityZ
GetTextTagVelocityZ="GetTextTagVelocityZ(","texttag ",,~whichTextTag,")"
GetTextTagVelocityZHint="[UjAPI]  real GetTextTagVelocityZ (texttag whichTextTag)"


GetTextTagAge=GetTextTagAge
GetTextTagAge="GetTextTagAge(","texttag ",,~whichTextTag,")"
GetTextTagAgeHint="[UjAPI]  real GetTextTagAge (texttag whichTextTag)"


GetTextTagLifespan=GetTextTagLifespan
GetTextTagLifespan="GetTextTagLifespan(","texttag ",,~whichTextTag,")"
GetTextTagLifespanHint="[UjAPI]  real GetTextTagLifespan (texttag whichTextTag)"


GetTextTagFadepoint=GetTextTagFadepoint
GetTextTagFadepoint="GetTextTagFadepoint(","texttag ",,~whichTextTag,")"
GetTextTagFadepointHint="[UjAPI]  real GetTextTagFadepoint (texttag whichTextTag)"


GetTextTagShadowColour=GetTextTagShadowColour
GetTextTagShadowColour="GetTextTagShadowColour(","texttag ",,~whichTextTag,")"
GetTextTagShadowColourHint="[UjAPI]  integer GetTextTagShadowColour (texttag whichTextTag)"


GetTextTagShadowAlpha=GetTextTagShadowAlpha
GetTextTagShadowAlpha="GetTextTagShadowAlpha(","texttag ",,~whichTextTag,")"
GetTextTagShadowAlphaHint="[UjAPI]  integer GetTextTagShadowAlpha (texttag whichTextTag)"


GetTextTagText=GetTextTagText
GetTextTagText="GetTextTagText(","texttag ",,~whichTextTag,")"
GetTextTagTextHint="[UjAPI]  string GetTextTagText (texttag whichTextTag)"


GetLightningSourceX=GetLightningSourceX
GetLightningSourceX="GetLightningSourceX(","lightning ",,~whichBolt,")"
GetLightningSourceXHint="[UjAPI]  real GetLightningSourceX (lightning whichBolt)"


GetLightningSourceY=GetLightningSourceY
GetLightningSourceY="GetLightningSourceY(","lightning ",,~whichBolt,")"
GetLightningSourceYHint="[UjAPI]  real GetLightningSourceY (lightning whichBolt)"


GetLightningSourceZ=GetLightningSourceZ
GetLightningSourceZ="GetLightningSourceZ(","lightning ",,~whichBolt,")"
GetLightningSourceZHint="[UjAPI]  real GetLightningSourceZ (lightning whichBolt)"


GetLightningSourcePositionLoc=GetLightningSourcePositionLoc
GetLightningSourcePositionLoc="GetLightningSourcePositionLoc(","lightning ",,~whichBolt,")"
GetLightningSourcePositionLocHint="[UjAPI]  location GetLightningSourcePositionLoc (lightning whichBolt)"


GetLightningTargetX=GetLightningTargetX
GetLightningTargetX="GetLightningTargetX(","lightning ",,~whichBolt,")"
GetLightningTargetXHint="[UjAPI]  real GetLightningTargetX (lightning whichBolt)"


GetLightningTargetY=GetLightningTargetY
GetLightningTargetY="GetLightningTargetY(","lightning ",,~whichBolt,")"
GetLightningTargetYHint="[UjAPI]  real GetLightningTargetY (lightning whichBolt)"


GetLightningTargetZ=GetLightningTargetZ
GetLightningTargetZ="GetLightningTargetZ(","lightning ",,~whichBolt,")"
GetLightningTargetZHint="[UjAPI]  real GetLightningTargetZ (lightning whichBolt)"


GetLightningTargetPositionLoc=GetLightningTargetPositionLoc
GetLightningTargetPositionLoc="GetLightningTargetPositionLoc(","lightning ",,~whichBolt,")"
GetLightningTargetPositionLocHint="[UjAPI]  location GetLightningTargetPositionLoc (lightning whichBolt)"


GetLightningScreenX=GetLightningScreenX
GetLightningScreenX="GetLightningScreenX(","lightning ",,~whichBolt,")"
GetLightningScreenXHint="[UjAPI]  real GetLightningScreenX (lightning whichBolt)"


GetLightningScreenY=GetLightningScreenY
GetLightningScreenY="GetLightningScreenY(","lightning ",,~whichBolt,")"
GetLightningScreenYHint="[UjAPI]  real GetLightningScreenY (lightning whichBolt)"


GetLightningColour=GetLightningColour
GetLightningColour="GetLightningColour(","lightning ",,~whichBolt,")"
GetLightningColourHint="[UjAPI]  integer GetLightningColour (lightning whichBolt)"


GetLightningColourA=GetLightningColourA
GetLightningColourA="GetLightningColourA(","lightning ",,~whichBolt,")"
GetLightningColourAHint="[UjAPI]  integer GetLightningColourA (lightning whichBolt)"


GetLightningColourR=GetLightningColourR
GetLightningColourR="GetLightningColourR(","lightning ",,~whichBolt,")"
GetLightningColourRHint="[UjAPI]  integer GetLightningColourR (lightning whichBolt)"


GetLightningColourG=GetLightningColourG
GetLightningColourG="GetLightningColourG(","lightning ",,~whichBolt,")"
GetLightningColourGHint="[UjAPI]  integer GetLightningColourG (lightning whichBolt)"


GetLightningColourB=GetLightningColourB
GetLightningColourB="GetLightningColourB(","lightning ",,~whichBolt,")"
GetLightningColourBHint="[UjAPI]  integer GetLightningColourB (lightning whichBolt)"


SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(","lightning ",,~whichBolt,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetLightningColourHint="[UjAPI]  boolean SetLightningColour (lightning whichBolt, integer red, integer green, integer blue, integer alpha)"


GetLightningLength=GetLightningLength
GetLightningLength="GetLightningLength(","lightning ",,~whichBolt,")"
GetLightningLengthHint="[UjAPI]  real GetLightningLength (lightning whichBolt)"


GetLightningWidth=GetLightningWidth
GetLightningWidth="GetLightningWidth(","lightning ",,~whichBolt,")"
GetLightningWidthHint="[UjAPI]  real GetLightningWidth (lightning whichBolt)"


GetLightningNoiseScaling=GetLightningNoiseScaling
GetLightningNoiseScaling="GetLightningNoiseScaling(","lightning ",,~whichBolt,")"
GetLightningNoiseScalingHint="[UjAPI]  real GetLightningNoiseScaling (lightning whichBolt)"


GetLightningTextureCoordinates=GetLightningTextureCoordinates
GetLightningTextureCoordinates="GetLightningTextureCoordinates(","lightning ",,~whichBolt,")"
GetLightningTextureCoordinatesHint="[UjAPI]  real GetLightningTextureCoordinates (lightning whichBolt)"


GetLightningDuration=GetLightningDuration
GetLightningDuration="GetLightningDuration(","lightning ",,~whichBolt,")"
GetLightningDurationHint="[UjAPI]  real GetLightningDuration (lightning whichBolt)"


GetLightningTexture=GetLightningTexture
GetLightningTexture="GetLightningTexture(","lightning ",,~whichBolt,")"
GetLightningTextureHint="[UjAPI]  string GetLightningTexture (lightning whichBolt)"


CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(","string ",,~file,", ","real ",,~sizeX,", ","real ",,~sizeY,", ","real ",,~posX,", ","real ",,~posY,", ","real ",,~posZ,", ","integer ",,~imageType,")"
CreateImageSimpleHint="[UjAPI]  image CreateImageSimple (string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType)"


GetImageType=GetImageType
GetImageType="GetImageType(","image ",,~whichImage,")"
GetImageTypeHint="[UjAPI]  integer GetImageType (image whichImage)"


GetImageX=GetImageX
GetImageX="GetImageX(","image ",,~whichImage,")"
GetImageXHint="[UjAPI]  real GetImageX (image whichImage)"


GetImageY=GetImageY
GetImageY="GetImageY(","image ",,~whichImage,")"
GetImageYHint="[UjAPI]  real GetImageY (image whichImage)"


GetImageZ=GetImageZ
GetImageZ="GetImageZ(","image ",,~whichImage,")"
GetImageZHint="[UjAPI]  real GetImageZ (image whichImage)"


GetImagePositionLoc=GetImagePositionLoc
GetImagePositionLoc="GetImagePositionLoc(","image ",,~whichImage,")"
GetImagePositionLocHint="[UjAPI]  location GetImagePositionLoc (image whichImage)"


GetImageScreenX=GetImageScreenX
GetImageScreenX="GetImageScreenX(","image ",,~whichImage,")"
GetImageScreenXHint="[UjAPI]  real GetImageScreenX (image whichImage)"


GetImageScreenY=GetImageScreenY
GetImageScreenY="GetImageScreenY(","image ",,~whichImage,")"
GetImageScreenYHint="[UjAPI]  real GetImageScreenY (image whichImage)"


GetImageOriginX=GetImageOriginX
GetImageOriginX="GetImageOriginX(","image ",,~whichImage,")"
GetImageOriginXHint="[UjAPI]  real GetImageOriginX (image whichImage)"


GetImageOriginY=GetImageOriginY
GetImageOriginY="GetImageOriginY(","image ",,~whichImage,")"
GetImageOriginYHint="[UjAPI]  real GetImageOriginY (image whichImage)"


GetImageSizeX=GetImageSizeX
GetImageSizeX="GetImageSizeX(","image ",,~whichImage,")"
GetImageSizeXHint="[UjAPI]  real GetImageSizeX (image whichImage)"


GetImageSizeY=GetImageSizeY
GetImageSizeY="GetImageSizeY(","image ",,~whichImage,")"
GetImageSizeYHint="[UjAPI]  real GetImageSizeY (image whichImage)"


GetImageColour=GetImageColour
GetImageColour="GetImageColour(","image ",,~whichImage,")"
GetImageColourHint="[UjAPI]  integer GetImageColour (image whichImage)"


IsImageRendered=IsImageRendered
IsImageRendered="IsImageRendered(","image ",,~whichImage,")"
IsImageRenderedHint="[UjAPI]  boolean IsImageRendered (image whichImage)"


IsImageRenderAlways=IsImageRenderAlways
IsImageRenderAlways="IsImageRenderAlways(","image ",,~whichImage,")"
IsImageRenderAlwaysHint="[UjAPI]  boolean IsImageRenderAlways (image whichImage)"


IsImageRenderAboveWater=IsImageRenderAboveWater
IsImageRenderAboveWater="IsImageRenderAboveWater(","image ",,~whichImage,")"
IsImageRenderAboveWaterHint="[UjAPI]  boolean IsImageRenderAboveWater (image whichImage)"


IsImageVisible=IsImageVisible
IsImageVisible="IsImageVisible(","image ",,~whichImage,")"
IsImageVisibleHint="[UjAPI]  boolean IsImageVisible (image whichImage)"


GetImageConstantHeight=GetImageConstantHeight
GetImageConstantHeight="GetImageConstantHeight(","image ",,~whichImage,")"
GetImageConstantHeightHint="[UjAPI]  real GetImageConstantHeight (image whichImage)"


GetImageTexture=GetImageTexture
GetImageTexture="GetImageTexture(","image ",,~whichImage,")"
GetImageTextureHint="[UjAPI]  string GetImageTexture (image whichImage)"


TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(","timer ",,~whichTimer,")"
TimerIsPausedHint="[UjAPI]  boolean TimerIsPaused (timer whichTimer)"


TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(","timer ",,~whichTimer,")"
TimerIsPeriodicHint="[UjAPI]  boolean TimerIsPeriodic (timer whichTimer)"


TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(","timer ",,~whichTimer,")"
TimerGetCallbackHint="[UjAPI]  code TimerGetCallback (timer whichTimer)"


CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDoodadHint="[UjAPI]  doodad CreateDoodad (integer objectid, real x, real y, real face, real scale, integer variation)"


CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(","integer ",,~objectid,", ","real ",,~x,", ","real ",,~y,", ","real ",,~z,", ","real ",,~face,", ","real ",,~scale,", ","integer ",,~variation,")"
CreateDoodadZHint="[UjAPI]  doodad CreateDoodadZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)"


GetDoodadCount=GetDoodadCount
GetDoodadCount="GetDoodadCount(",")"
GetDoodadCountHint="[UjAPI]  integer GetDoodadCount ()"


GetDoodadByIndex=GetDoodadByIndex
GetDoodadByIndex="GetDoodadByIndex(","integer ",,~index,")"
GetDoodadByIndexHint="[UjAPI]  doodad GetDoodadByIndex (integer index)"


GetDoodadIndex=GetDoodadIndex
GetDoodadIndex="GetDoodadIndex(","doodad ",,~whichDoodad,")"
GetDoodadIndexHint="[UjAPI]  integer GetDoodadIndex (doodad whichDoodad)"


GetDoodadColour=GetDoodadColour
GetDoodadColour="GetDoodadColour(","doodad ",,~whichDoodad,")"
GetDoodadColourHint="[UjAPI]  integer GetDoodadColour (doodad whichDoodad)"


GetDoodadScale=GetDoodadScale
GetDoodadScale="GetDoodadScale(","doodad ",,~whichDoodad,")"
GetDoodadScaleHint="[UjAPI]  real GetDoodadScale (doodad whichDoodad)"


GetDoodadTimeScale=GetDoodadTimeScale
GetDoodadTimeScale="GetDoodadTimeScale(","doodad ",,~whichDoodad,")"
GetDoodadTimeScaleHint="[UjAPI]  real GetDoodadTimeScale (doodad whichDoodad)"


GetDoodadX=GetDoodadX
GetDoodadX="GetDoodadX(","doodad ",,~whichDoodad,")"
GetDoodadXHint="[UjAPI]  real GetDoodadX (doodad whichDoodad)"


GetDoodadY=GetDoodadY
GetDoodadY="GetDoodadY(","doodad ",,~whichDoodad,")"
GetDoodadYHint="[UjAPI]  real GetDoodadY (doodad whichDoodad)"


GetDoodadZ=GetDoodadZ
GetDoodadZ="GetDoodadZ(","doodad ",,~whichDoodad,")"
GetDoodadZHint="[UjAPI]  real GetDoodadZ (doodad whichDoodad)"


GetDoodadPositionLoc=GetDoodadPositionLoc
GetDoodadPositionLoc="GetDoodadPositionLoc(","doodad ",,~whichDoodad,")"
GetDoodadPositionLocHint="[UjAPI]  location GetDoodadPositionLoc (doodad whichDoodad)"


GetDoodadScreenX=GetDoodadScreenX
GetDoodadScreenX="GetDoodadScreenX(","doodad ",,~whichDoodad,")"
GetDoodadScreenXHint="[UjAPI]  real GetDoodadScreenX (doodad whichDoodad)"


GetDoodadScreenY=GetDoodadScreenY
GetDoodadScreenY="GetDoodadScreenY(","doodad ",,~whichDoodad,")"
GetDoodadScreenYHint="[UjAPI]  real GetDoodadScreenY (doodad whichDoodad)"


GetDoodadYaw=GetDoodadYaw
GetDoodadYaw="GetDoodadYaw(","doodad ",,~whichDoodad,")"
GetDoodadYawHint="[UjAPI]  real GetDoodadYaw (doodad whichDoodad)"


GetDoodadFacing=GetDoodadFacing
GetDoodadFacing="GetDoodadFacing(","doodad ",,~whichDoodad,")"
GetDoodadFacingHint="[UjAPI]  real GetDoodadFacing (doodad whichDoodad)"


GetDoodadPitch=GetDoodadPitch
GetDoodadPitch="GetDoodadPitch(","doodad ",,~whichDoodad,")"
GetDoodadPitchHint="[UjAPI]  real GetDoodadPitch (doodad whichDoodad)"


GetDoodadRoll=GetDoodadRoll
GetDoodadRoll="GetDoodadRoll(","doodad ",,~whichDoodad,")"
GetDoodadRollHint="[UjAPI]  real GetDoodadRoll (doodad whichDoodad)"


GetDoodadPlayerColour=GetDoodadPlayerColour
GetDoodadPlayerColour="GetDoodadPlayerColour(","doodad ",,~whichDoodad,")"
GetDoodadPlayerColourHint="[UjAPI]  playercolor GetDoodadPlayerColour (doodad whichDoodad)"


GetDoodadModel=GetDoodadModel
GetDoodadModel="GetDoodadModel(","doodad ",,~whichDoodad,")"
GetDoodadModelHint="[UjAPI]  string GetDoodadModel (doodad whichDoodad)"


IsDoodadVisible=IsDoodadVisible
IsDoodadVisible="IsDoodadVisible(","doodad ",,~whichDoodad,")"
IsDoodadVisibleHint="[UjAPI]  boolean IsDoodadVisible (doodad whichDoodad)"


GetDoodadAnimationOffsetPercent=GetDoodadAnimationOffsetPercent
GetDoodadAnimationOffsetPercent="GetDoodadAnimationOffsetPercent(","doodad ",,~whichDoodad,")"
GetDoodadAnimationOffsetPercentHint="[UjAPI]  real GetDoodadAnimationOffsetPercent (doodad whichDoodad)"


GetFilterDoodad=GetFilterDoodad
GetFilterDoodad="GetFilterDoodad(",")"
GetFilterDoodadHint="[UjAPI]  doodad GetFilterDoodad ()"


GetEnumDoodad=GetEnumDoodad
GetEnumDoodad="GetEnumDoodad(",")"
GetEnumDoodadHint="[UjAPI]  doodad GetEnumDoodad ()"


GetAbilityBaseIntegerFieldById=GetAbilityBaseIntegerFieldById
GetAbilityBaseIntegerFieldById="GetAbilityBaseIntegerFieldById(","integer ",,~aid,", ","abilityintegerfield ",,~whichField,")"
GetAbilityBaseIntegerFieldByIdHint="[UjAPI]  integer GetAbilityBaseIntegerFieldById (integer aid, abilityintegerfield whichField)"


SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(","integer ",,~aid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerFieldById (integer aid, abilityintegerfield whichField, integer value)"


GetAbilityBaseBooleanFieldById=GetAbilityBaseBooleanFieldById
GetAbilityBaseBooleanFieldById="GetAbilityBaseBooleanFieldById(","integer ",,~aid,", ","abilitybooleanfield ",,~whichField,")"
GetAbilityBaseBooleanFieldByIdHint="[UjAPI]  boolean GetAbilityBaseBooleanFieldById (integer aid, abilitybooleanfield whichField)"


SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(","integer ",,~aid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanFieldById (integer aid, abilitybooleanfield whichField, boolean value)"


GetAbilityBaseRealFieldById=GetAbilityBaseRealFieldById
GetAbilityBaseRealFieldById="GetAbilityBaseRealFieldById(","integer ",,~aid,", ","abilityrealfield ",,~whichField,")"
GetAbilityBaseRealFieldByIdHint="[UjAPI]  real GetAbilityBaseRealFieldById (integer aid, abilityrealfield whichField)"


SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(","integer ",,~aid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealFieldById (integer aid, abilityrealfield whichField, real value)"


GetAbilityBaseStringFieldById=GetAbilityBaseStringFieldById
GetAbilityBaseStringFieldById="GetAbilityBaseStringFieldById(","integer ",,~aid,", ","abilitystringfield ",,~whichField,")"
GetAbilityBaseStringFieldByIdHint="[UjAPI]  string GetAbilityBaseStringFieldById (integer aid, abilitystringfield whichField)"


SetAbilityBaseStringFieldById=SetAbilityBaseStringFieldById
SetAbilityBaseStringFieldById="SetAbilityBaseStringFieldById(","integer ",,~aid,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
SetAbilityBaseStringFieldByIdHint="[UjAPI]  boolean SetAbilityBaseStringFieldById (integer aid, abilitystringfield whichField, string value)"


GetAbilityBaseIntegerLevelFieldById=GetAbilityBaseIntegerLevelFieldById
GetAbilityBaseIntegerLevelFieldById="GetAbilityBaseIntegerLevelFieldById(","integer ",,~aid,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  integer GetAbilityBaseIntegerLevelFieldById (integer aid, abilityintegerlevelfield whichField, integer level)"


SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(","integer ",,~aid,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerLevelFieldById (integer aid, abilityintegerlevelfield whichField, integer level, integer value)"


GetAbilityBaseBooleanLevelFieldById=GetAbilityBaseBooleanLevelFieldById
GetAbilityBaseBooleanLevelFieldById="GetAbilityBaseBooleanLevelFieldById(","integer ",,~aid,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  boolean GetAbilityBaseBooleanLevelFieldById (integer aid, abilitybooleanlevelfield whichField, integer level)"


SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(","integer ",,~aid,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanLevelFieldById (integer aid, abilitybooleanlevelfield whichField, integer level, boolean value)"


GetAbilityBaseRealLevelFieldById=GetAbilityBaseRealLevelFieldById
GetAbilityBaseRealLevelFieldById="GetAbilityBaseRealLevelFieldById(","integer ",,~aid,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  real GetAbilityBaseRealLevelFieldById (integer aid, abilityreallevelfield whichField, integer level)"


SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(","integer ",,~aid,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealLevelFieldById (integer aid, abilityreallevelfield whichField, integer level, real value)"


GetAbilityBaseStringLevelFieldById=GetAbilityBaseStringLevelFieldById
GetAbilityBaseStringLevelFieldById="GetAbilityBaseStringLevelFieldById(","integer ",,~aid,", ","abilitystringlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityBaseStringLevelFieldByIdHint="[UjAPI]  string GetAbilityBaseStringLevelFieldById (integer aid, abilitystringlevelfield whichField, integer level)"


SetAbilityBaseStringLevelFieldById=SetAbilityBaseStringLevelFieldById
SetAbilityBaseStringLevelFieldById="SetAbilityBaseStringLevelFieldById(","integer ",,~aid,", ","abilitystringlevelfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
SetAbilityBaseStringLevelFieldByIdHint="[UjAPI]  boolean SetAbilityBaseStringLevelFieldById (integer aid, abilitystringlevelfield whichField, integer level, string value)"


GetAbilityBaseIntegerLevelArrayFieldById=GetAbilityBaseIntegerLevelArrayFieldById
GetAbilityBaseIntegerLevelArrayFieldById="GetAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  integer GetAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index)"


SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","integer ",,~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)"


AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value)"


RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(","integer ",,~aid,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseIntegerLevelArrayFieldById (integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value)"


GetAbilityBaseBooleanLevelArrayFieldById=GetAbilityBaseBooleanLevelArrayFieldById
GetAbilityBaseBooleanLevelArrayFieldById="GetAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean GetAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index)"


SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","boolean ",,~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)"


AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(","integer ",,~aid,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseBooleanLevelArrayFieldById (integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


GetAbilityBaseRealLevelArrayFieldById=GetAbilityBaseRealLevelArrayFieldById
GetAbilityBaseRealLevelArrayFieldById="GetAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  real GetAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, integer index)"


SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","real ",,~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, integer index, real value)"


AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, real value)"


RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(","integer ",,~aid,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseRealLevelArrayFieldById (integer aid, abilityreallevelarrayfield whichField, integer level, real value)"


GetAbilityBaseStringLevelArrayFieldById=GetAbilityBaseStringLevelArrayFieldById
GetAbilityBaseStringLevelArrayFieldById="GetAbilityBaseStringLevelArrayFieldById(","integer ",,~aid,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  string GetAbilityBaseStringLevelArrayFieldById (integer aid, abilitystringlevelarrayfield whichField, integer level, integer index)"


SetAbilityBaseStringLevelArrayFieldById=SetAbilityBaseStringLevelArrayFieldById
SetAbilityBaseStringLevelArrayFieldById="SetAbilityBaseStringLevelArrayFieldById(","integer ",,~aid,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","string ",,~value,")"
SetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  boolean SetAbilityBaseStringLevelArrayFieldById (integer aid, abilitystringlevelarrayfield whichField, integer level, integer index, string value)"


AddAbilityBaseStringLevelArrayFieldById=AddAbilityBaseStringLevelArrayFieldById
AddAbilityBaseStringLevelArrayFieldById="AddAbilityBaseStringLevelArrayFieldById(","integer ",,~aid,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
AddAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  boolean AddAbilityBaseStringLevelArrayFieldById (integer aid, abilitystringlevelarrayfield whichField, integer level, string value)"


RemoveAbilityBaseStringLevelArrayFieldById=RemoveAbilityBaseStringLevelArrayFieldById
RemoveAbilityBaseStringLevelArrayFieldById="RemoveAbilityBaseStringLevelArrayFieldById(","integer ",,~aid,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
RemoveAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  boolean RemoveAbilityBaseStringLevelArrayFieldById (integer aid, abilitystringlevelarrayfield whichField, integer level, string value)"


GetAbilityIntegerField=GetAbilityIntegerField
GetAbilityIntegerField="GetAbilityIntegerField(","ability ",,~whichAbility,", ","abilityintegerfield ",,~whichField,")"
GetAbilityIntegerFieldHint="[UjAPI]  integer GetAbilityIntegerField (ability whichAbility, abilityintegerfield whichField)"


SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(","ability ",,~whichAbility,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetAbilityIntegerFieldHint="[UjAPI]  boolean SetAbilityIntegerField (ability whichAbility, abilityintegerfield whichField, integer value)"


GetAbilityBooleanField=GetAbilityBooleanField
GetAbilityBooleanField="GetAbilityBooleanField(","ability ",,~whichAbility,", ","abilitybooleanfield ",,~whichField,")"
GetAbilityBooleanFieldHint="[UjAPI]  boolean GetAbilityBooleanField (ability whichAbility, abilitybooleanfield whichField)"


SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(","ability ",,~whichAbility,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetAbilityBooleanFieldHint="[UjAPI]  boolean SetAbilityBooleanField (ability whichAbility, abilitybooleanfield whichField, boolean value)"


GetAbilityRealField=GetAbilityRealField
GetAbilityRealField="GetAbilityRealField(","ability ",,~whichAbility,", ","abilityrealfield ",,~whichField,")"
GetAbilityRealFieldHint="[UjAPI]  real GetAbilityRealField (ability whichAbility, abilityrealfield whichField)"


SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(","ability ",,~whichAbility,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetAbilityRealFieldHint="[UjAPI]  boolean SetAbilityRealField (ability whichAbility, abilityrealfield whichField, real value)"


GetAbilityStringField=GetAbilityStringField
GetAbilityStringField="GetAbilityStringField(","ability ",,~whichAbility,", ","abilitystringfield ",,~whichField,")"
GetAbilityStringFieldHint="[UjAPI]  string GetAbilityStringField (ability whichAbility, abilitystringfield whichField)"


SetAbilityStringField=SetAbilityStringField
SetAbilityStringField="SetAbilityStringField(","ability ",,~whichAbility,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
SetAbilityStringFieldHint="[UjAPI]  boolean SetAbilityStringField (ability whichAbility, abilitystringfield whichField, string value)"


GetAbilityIntegerLevelField=GetAbilityIntegerLevelField
GetAbilityIntegerLevelField="GetAbilityIntegerLevelField(","ability ",,~whichAbility,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityIntegerLevelFieldHint="[UjAPI]  integer GetAbilityIntegerLevelField (ability whichAbility, abilityintegerlevelfield whichField, integer level)"


SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(","ability ",,~whichAbility,", ","abilityintegerlevelfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI]  boolean SetAbilityIntegerLevelField (ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value)"


GetAbilityBooleanLevelField=GetAbilityBooleanLevelField
GetAbilityBooleanLevelField="GetAbilityBooleanLevelField(","ability ",,~whichAbility,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityBooleanLevelFieldHint="[UjAPI]  boolean GetAbilityBooleanLevelField (ability whichAbility, abilitybooleanlevelfield whichField, integer level)"


SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(","ability ",,~whichAbility,", ","abilitybooleanlevelfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI]  boolean SetAbilityBooleanLevelField (ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value)"


GetAbilityRealLevelField=GetAbilityRealLevelField
GetAbilityRealLevelField="GetAbilityRealLevelField(","ability ",,~whichAbility,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityRealLevelFieldHint="[UjAPI]  real GetAbilityRealLevelField (ability whichAbility, abilityreallevelfield whichField, integer level)"


SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(","ability ",,~whichAbility,", ","abilityreallevelfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
SetAbilityRealLevelFieldHint="[UjAPI]  boolean SetAbilityRealLevelField (ability whichAbility, abilityreallevelfield whichField, integer level, real value)"


GetAbilityStringLevelField=GetAbilityStringLevelField
GetAbilityStringLevelField="GetAbilityStringLevelField(","ability ",,~whichAbility,", ","abilitystringlevelfield ",,~whichField,", ","integer ",,~level,")"
GetAbilityStringLevelFieldHint="[UjAPI]  string GetAbilityStringLevelField (ability whichAbility, abilitystringlevelfield whichField, integer level)"


SetAbilityStringLevelField=SetAbilityStringLevelField
SetAbilityStringLevelField="SetAbilityStringLevelField(","ability ",,~whichAbility,", ","abilitystringlevelfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
SetAbilityStringLevelFieldHint="[UjAPI]  boolean SetAbilityStringLevelField (ability whichAbility, abilitystringlevelfield whichField, integer level, string value)"


GetAbilityIntegerLevelArrayField=GetAbilityIntegerLevelArrayField
GetAbilityIntegerLevelArrayField="GetAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityIntegerLevelArrayFieldHint="[UjAPI]  integer GetAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index)"


SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","integer ",,~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean SetAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)"


AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean AddAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)"


RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(","ability ",,~whichAbility,", ","abilityintegerlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)"


GetAbilityBooleanLevelArrayField=GetAbilityBooleanLevelArrayField
GetAbilityBooleanLevelArrayField="GetAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean GetAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index)"


SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","boolean ",,~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean SetAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)"


AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean AddAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(","ability ",,~whichAbility,", ","abilitybooleanlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","boolean ",,~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)"


GetAbilityRealLevelArrayField=GetAbilityRealLevelArrayField
GetAbilityRealLevelArrayField="GetAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityRealLevelArrayFieldHint="[UjAPI]  real GetAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index)"


SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","real ",,~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI]  boolean SetAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value)"


AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI]  boolean AddAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)"


RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(","ability ",,~whichAbility,", ","abilityreallevelarrayfield ",,~whichField,", ","integer ",,~level,", ","real ",,~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)"


GetAbilityStringLevelArrayField=GetAbilityStringLevelArrayField
GetAbilityStringLevelArrayField="GetAbilityStringLevelArrayField(","ability ",,~whichAbility,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,")"
GetAbilityStringLevelArrayFieldHint="[UjAPI]  string GetAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index)"


SetAbilityStringLevelArrayField=SetAbilityStringLevelArrayField
SetAbilityStringLevelArrayField="SetAbilityStringLevelArrayField(","ability ",,~whichAbility,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","integer ",,~index,", ","string ",,~value,")"
SetAbilityStringLevelArrayFieldHint="[UjAPI]  boolean SetAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index, string value)"


AddAbilityStringLevelArrayField=AddAbilityStringLevelArrayField
AddAbilityStringLevelArrayField="AddAbilityStringLevelArrayField(","ability ",,~whichAbility,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
AddAbilityStringLevelArrayFieldHint="[UjAPI]  boolean AddAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)"


RemoveAbilityStringLevelArrayField=RemoveAbilityStringLevelArrayField
RemoveAbilityStringLevelArrayField="RemoveAbilityStringLevelArrayField(","ability ",,~whichAbility,", ","abilitystringlevelarrayfield ",,~whichField,", ","integer ",,~level,", ","string ",,~value,")"
RemoveAbilityStringLevelArrayFieldHint="[UjAPI]  boolean RemoveAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)"


ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(","ability ",,~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI]  boolean ResetAbilityFieldData (ability whichAbility)"


IsAbilityBaseTargetAllowed=IsAbilityBaseTargetAllowed
IsAbilityBaseTargetAllowed="IsAbilityBaseTargetAllowed(","integer ",,~abilCode,", ","widget ",,~source,", ","widget ",,~target,")"
IsAbilityBaseTargetAllowedHint="[UjAPI]  boolean IsAbilityBaseTargetAllowed (integer abilCode, widget source, widget target)"


CreateAbility=CreateAbility
CreateAbility="CreateAbility(","integer ",,~abilCode,")"
CreateAbilityHint="[UjAPI]  ability CreateAbility (integer abilCode)"


GetTriggerAbility=GetTriggerAbility
GetTriggerAbility="GetTriggerAbility(",")"
GetTriggerAbilityHint="[UjAPI]  ability GetTriggerAbility ()"


IsAbilityType=IsAbilityType
IsAbilityType="IsAbilityType(","ability ",,~whichAbility,", ","abilitytype ",,~whichAbilityType,")"
IsAbilityTypeHint="[UjAPI]  boolean IsAbilityType (ability whichAbility, abilitytype whichAbilityType)"


GetAbilityOwner=GetAbilityOwner
GetAbilityOwner="GetAbilityOwner(","ability ",,~whichAbility,")"
GetAbilityOwnerHint="[UjAPI]  unit GetAbilityOwner (ability whichAbility)"


GetAbilityOwningAbility=GetAbilityOwningAbility
GetAbilityOwningAbility="GetAbilityOwningAbility(","ability ",,~whichAbility,")"
GetAbilityOwningAbilityHint="[UjAPI]  ability GetAbilityOwningAbility (ability whichAbility)"


GetAbilityOwningItem=GetAbilityOwningItem
GetAbilityOwningItem="GetAbilityOwningItem(","ability ",,~whichAbility,")"
GetAbilityOwningItemHint="[UjAPI]  item GetAbilityOwningItem (ability whichAbility)"


GetAbilityOrderId=GetAbilityOrderId
GetAbilityOrderId="GetAbilityOrderId(","ability ",,~whichAbility,")"
GetAbilityOrderIdHint="[UjAPI]  integer GetAbilityOrderId (ability whichAbility)"


GetAbilityLevel=GetAbilityLevel
GetAbilityLevel="GetAbilityLevel(","ability ",,~whichAbility,")"
GetAbilityLevelHint="[UjAPI]  integer GetAbilityLevel (ability whichAbility)"


SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(","ability ",,~whichAbility,", ","integer ",,~level,")"
SetAbilityLevelHint="[UjAPI]  integer SetAbilityLevel (ability whichAbility, integer level)"


GetAbilityBaseTypeId=GetAbilityBaseTypeId
GetAbilityBaseTypeId="GetAbilityBaseTypeId(","ability ",,~whichAbility,")"
GetAbilityBaseTypeIdHint="[UjAPI]  integer GetAbilityBaseTypeId (ability whichAbility)"


GetAbilityTypeId=GetAbilityTypeId
GetAbilityTypeId="GetAbilityTypeId(","ability ",,~whichAbility,")"
GetAbilityTypeIdHint="[UjAPI]  integer GetAbilityTypeId (ability whichAbility)"


IsAbilityTargetAllowed=IsAbilityTargetAllowed
IsAbilityTargetAllowed="IsAbilityTargetAllowed(","ability ",,~whichAbility,", ","widget ",,~whichWidget,")"
IsAbilityTargetAllowedHint="[UjAPI]  boolean IsAbilityTargetAllowed (ability whichAbility, widget whichWidget)"


IsAbilityOnCooldown=IsAbilityOnCooldown
IsAbilityOnCooldown="IsAbilityOnCooldown(","ability ",,~whichAbility,")"
IsAbilityOnCooldownHint="[UjAPI]  boolean IsAbilityOnCooldown (ability whichAbility)"


IsAbilityEnabled=IsAbilityEnabled
IsAbilityEnabled="IsAbilityEnabled(","ability ",,~whichAbility,")"
IsAbilityEnabledHint="[UjAPI]  boolean IsAbilityEnabled (ability whichAbility)"


IsAbilityVisible=IsAbilityVisible
IsAbilityVisible="IsAbilityVisible(","ability ",,~whichAbility,")"
IsAbilityVisibleHint="[UjAPI]  boolean IsAbilityVisible (ability whichAbility)"


IsAbilityEnabledEx=IsAbilityEnabledEx
IsAbilityEnabledEx="IsAbilityEnabledEx(","ability ",,~whichAbility,")"
IsAbilityEnabledExHint="[UjAPI]  boolean IsAbilityEnabledEx (ability whichAbility)"


IsAbilityUsable=IsAbilityUsable
IsAbilityUsable="IsAbilityUsable(","ability ",,~whichAbility,")"
IsAbilityUsableHint="[UjAPI]  boolean IsAbilityUsable (ability whichAbility)"


IsAbilityAutocastEnabled=IsAbilityAutocastEnabled
IsAbilityAutocastEnabled="IsAbilityAutocastEnabled(","ability ",,~whichAbility,")"
IsAbilityAutocastEnabledHint="[UjAPI]  boolean IsAbilityAutocastEnabled (ability whichAbility)"


GetAbilityCastTime=GetAbilityCastTime
GetAbilityCastTime="GetAbilityCastTime(","ability ",,~whichAbility,")"
GetAbilityCastTimeHint="[UjAPI]  real GetAbilityCastTime (ability whichAbility)"


GetAbilityCastPoint=GetAbilityCastPoint
GetAbilityCastPoint="GetAbilityCastPoint(","ability ",,~whichAbility,")"
GetAbilityCastPointHint="[UjAPI]  real GetAbilityCastPoint (ability whichAbility)"


GetAbilityBackswing=GetAbilityBackswing
GetAbilityBackswing="GetAbilityBackswing(","ability ",,~whichAbility,")"
GetAbilityBackswingHint="[UjAPI]  real GetAbilityBackswing (ability whichAbility)"


GetAbilityCooldown=GetAbilityCooldown
GetAbilityCooldown="GetAbilityCooldown(","ability ",,~whichAbility,")"
GetAbilityCooldownHint="[UjAPI]  real GetAbilityCooldown (ability whichAbility)"


GetAbilityRemainingCooldown=GetAbilityRemainingCooldown
GetAbilityRemainingCooldown="GetAbilityRemainingCooldown(","ability ",,~whichAbility,")"
GetAbilityRemainingCooldownHint="[UjAPI]  real GetAbilityRemainingCooldown (ability whichAbility)"


CastAbility=CastAbility
CastAbility="CastAbility(","ability ",,~whichAbility,")"
CastAbilityHint="[UjAPI]  boolean CastAbility (ability whichAbility)"


CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(","ability ",,~whichAbility,", ","real ",,~targX,", ","real ",,~targY,")"
CastAbilityGroundHint="[UjAPI]  boolean CastAbilityGround (ability whichAbility, real targX, real targY)"


CastAbilityTarget=CastAbilityTarget
CastAbilityTarget="CastAbilityTarget(","ability ",,~whichAbility,", ","widget ",,~target,")"
CastAbilityTargetHint="[UjAPI]  boolean CastAbilityTarget (ability whichAbility, widget target)"


GetFilterAbility=GetFilterAbility
GetFilterAbility="GetFilterAbility(",")"
GetFilterAbilityHint="[UjAPI]  ability GetFilterAbility ()"


GetEnumAbility=GetEnumAbility
GetEnumAbility="GetEnumAbility(",")"
GetEnumAbilityHint="[UjAPI]  ability GetEnumAbility ()"


EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(","unit ",,~whichUnit,", ","boolexpr ",,~whichBoolexpr,", ","code ",,~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI]  boolean EnumUnitAbilities (unit whichUnit, boolexpr whichBoolexpr, code whichCode)"


GetBuffBaseIntegerFieldById=GetBuffBaseIntegerFieldById
GetBuffBaseIntegerFieldById="GetBuffBaseIntegerFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,")"
GetBuffBaseIntegerFieldByIdHint="[UjAPI]  integer GetBuffBaseIntegerFieldById (integer bid, abilityintegerfield whichField)"


SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI]  boolean SetBuffBaseIntegerFieldById (integer bid, abilityintegerfield whichField, integer value)"


GetBuffBaseBooleanFieldById=GetBuffBaseBooleanFieldById
GetBuffBaseBooleanFieldById="GetBuffBaseBooleanFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,")"
GetBuffBaseBooleanFieldByIdHint="[UjAPI]  boolean GetBuffBaseBooleanFieldById (integer bid, abilitybooleanfield whichField)"


SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI]  boolean SetBuffBaseBooleanFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


GetBuffBaseRealFieldById=GetBuffBaseRealFieldById
GetBuffBaseRealFieldById="GetBuffBaseRealFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,")"
GetBuffBaseRealFieldByIdHint="[UjAPI]  real GetBuffBaseRealFieldById (integer bid, abilityrealfield whichField)"


SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI]  boolean SetBuffBaseRealFieldById (integer bid, abilityrealfield whichField, real value)"


GetBuffBaseStringFieldById=GetBuffBaseStringFieldById
GetBuffBaseStringFieldById="GetBuffBaseStringFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,")"
GetBuffBaseStringFieldByIdHint="[UjAPI]  string GetBuffBaseStringFieldById (integer bid, abilitystringfield whichField)"


SetBuffBaseStringFieldById=SetBuffBaseStringFieldById
SetBuffBaseStringFieldById="SetBuffBaseStringFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
SetBuffBaseStringFieldByIdHint="[UjAPI]  boolean SetBuffBaseStringFieldById (integer bid, abilitystringfield whichField, string value)"


GetBuffBaseIntegerArrayFieldById=GetBuffBaseIntegerArrayFieldById
GetBuffBaseIntegerArrayFieldById="GetBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,")"
GetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  integer GetBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer index)"


SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer index, integer value)"


AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer value)"


RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(","integer ",,~bid,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseIntegerArrayFieldById (integer bid, abilityintegerfield whichField, integer value)"


GetBuffBaseBooleanArrayFieldById=GetBuffBaseBooleanArrayFieldById
GetBuffBaseBooleanArrayFieldById="GetBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,")"
GetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean GetBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, integer index)"


SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, integer index, boolean value)"


AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(","integer ",,~bid,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseBooleanArrayFieldById (integer bid, abilitybooleanfield whichField, boolean value)"


GetBuffBaseRealArrayFieldById=GetBuffBaseRealArrayFieldById
GetBuffBaseRealArrayFieldById="GetBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,")"
GetBuffBaseRealArrayFieldByIdHint="[UjAPI]  real GetBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, integer index)"


SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, integer index, real value)"


AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, real value)"


RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(","integer ",,~bid,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseRealArrayFieldById (integer bid, abilityrealfield whichField, real value)"


GetBuffBaseStringArrayFieldById=GetBuffBaseStringArrayFieldById
GetBuffBaseStringArrayFieldById="GetBuffBaseStringArrayFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,", ","integer ",,~index,")"
GetBuffBaseStringArrayFieldByIdHint="[UjAPI]  string GetBuffBaseStringArrayFieldById (integer bid, abilitystringfield whichField, integer index)"


SetBuffBaseStringArrayFieldById=SetBuffBaseStringArrayFieldById
SetBuffBaseStringArrayFieldById="SetBuffBaseStringArrayFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,", ","integer ",,~index,", ","string ",,~value,")"
SetBuffBaseStringArrayFieldByIdHint="[UjAPI]  boolean SetBuffBaseStringArrayFieldById (integer bid, abilitystringfield whichField, integer index, string value)"


AddBuffBaseStringArrayFieldById=AddBuffBaseStringArrayFieldById
AddBuffBaseStringArrayFieldById="AddBuffBaseStringArrayFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
AddBuffBaseStringArrayFieldByIdHint="[UjAPI]  boolean AddBuffBaseStringArrayFieldById (integer bid, abilitystringfield whichField, string value)"


RemoveBuffBaseStringArrayFieldById=RemoveBuffBaseStringArrayFieldById
RemoveBuffBaseStringArrayFieldById="RemoveBuffBaseStringArrayFieldById(","integer ",,~bid,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
RemoveBuffBaseStringArrayFieldByIdHint="[UjAPI]  boolean RemoveBuffBaseStringArrayFieldById (integer bid, abilitystringfield whichField, string value)"


GetBuffIntegerField=GetBuffIntegerField
GetBuffIntegerField="GetBuffIntegerField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,")"
GetBuffIntegerFieldHint="[UjAPI]  integer GetBuffIntegerField (buff whichBuff, abilityintegerfield whichField)"


SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBuffIntegerFieldHint="[UjAPI]  boolean SetBuffIntegerField (buff whichBuff, abilityintegerfield whichField, integer value)"


GetBuffBooleanField=GetBuffBooleanField
GetBuffBooleanField="GetBuffBooleanField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,")"
GetBuffBooleanFieldHint="[UjAPI]  boolean GetBuffBooleanField (buff whichBuff, abilitybooleanfield whichField)"


SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBuffBooleanFieldHint="[UjAPI]  boolean SetBuffBooleanField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


GetBuffRealField=GetBuffRealField
GetBuffRealField="GetBuffRealField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,")"
GetBuffRealFieldHint="[UjAPI]  real GetBuffRealField (buff whichBuff, abilityrealfield whichField)"


SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
SetBuffRealFieldHint="[UjAPI]  boolean SetBuffRealField (buff whichBuff, abilityrealfield whichField, real value)"


GetBuffStringField=GetBuffStringField
GetBuffStringField="GetBuffStringField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,")"
GetBuffStringFieldHint="[UjAPI]  string GetBuffStringField (buff whichBuff, abilitystringfield whichField)"


SetBuffStringField=SetBuffStringField
SetBuffStringField="SetBuffStringField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
SetBuffStringFieldHint="[UjAPI]  boolean SetBuffStringField (buff whichBuff, abilitystringfield whichField, string value)"


GetBuffIntegerArrayField=GetBuffIntegerArrayField
GetBuffIntegerArrayField="GetBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,")"
GetBuffIntegerArrayFieldHint="[UjAPI]  integer GetBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer index)"


SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI]  boolean SetBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer index, integer value)"


AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI]  boolean AddBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer value)"


RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(","buff ",,~whichBuff,", ","abilityintegerfield ",,~whichField,", ","integer ",,~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI]  boolean RemoveBuffIntegerArrayField (buff whichBuff, abilityintegerfield whichField, integer value)"


GetBuffBooleanArrayField=GetBuffBooleanArrayField
GetBuffBooleanArrayField="GetBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,")"
GetBuffBooleanArrayFieldHint="[UjAPI]  boolean GetBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, integer index)"


SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI]  boolean SetBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, integer index, boolean value)"


AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI]  boolean AddBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(","buff ",,~whichBuff,", ","abilitybooleanfield ",,~whichField,", ","boolean ",,~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI]  boolean RemoveBuffBooleanArrayField (buff whichBuff, abilitybooleanfield whichField, boolean value)"


GetBuffRealArrayField=GetBuffRealArrayField
GetBuffRealArrayField="GetBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,")"
GetBuffRealArrayFieldHint="[UjAPI]  real GetBuffRealArrayField (buff whichBuff, abilityrealfield whichField, integer index)"


SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetBuffRealArrayFieldHint="[UjAPI]  boolean SetBuffRealArrayField (buff whichBuff, abilityrealfield whichField, integer index, real value)"


AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
AddBuffRealArrayFieldHint="[UjAPI]  boolean AddBuffRealArrayField (buff whichBuff, abilityrealfield whichField, real value)"


RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(","buff ",,~whichBuff,", ","abilityrealfield ",,~whichField,", ","real ",,~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI]  boolean RemoveBuffRealArrayField (buff whichBuff, abilityrealfield whichField, real value)"


GetBuffStringArrayField=GetBuffStringArrayField
GetBuffStringArrayField="GetBuffStringArrayField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,", ","integer ",,~index,")"
GetBuffStringArrayFieldHint="[UjAPI]  string GetBuffStringArrayField (buff whichBuff, abilitystringfield whichField, integer index)"


SetBuffStringArrayField=SetBuffStringArrayField
SetBuffStringArrayField="SetBuffStringArrayField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,", ","integer ",,~index,", ","string ",,~value,")"
SetBuffStringArrayFieldHint="[UjAPI]  boolean SetBuffStringArrayField (buff whichBuff, abilitystringfield whichField, integer index, string value)"


AddBuffStringArrayField=AddBuffStringArrayField
AddBuffStringArrayField="AddBuffStringArrayField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
AddBuffStringArrayFieldHint="[UjAPI]  boolean AddBuffStringArrayField (buff whichBuff, abilitystringfield whichField, string value)"


RemoveBuffStringArrayField=RemoveBuffStringArrayField
RemoveBuffStringArrayField="RemoveBuffStringArrayField(","buff ",,~whichBuff,", ","abilitystringfield ",,~whichField,", ","string ",,~value,")"
RemoveBuffStringArrayFieldHint="[UjAPI]  boolean RemoveBuffStringArrayField (buff whichBuff, abilitystringfield whichField, string value)"


ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(","buff ",,~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI]  boolean ResetBuffFieldData (buff whichBuff)"


CreateBuff=CreateBuff
CreateBuff="CreateBuff(","integer ",,~buffId,")"
CreateBuffHint="[UjAPI]  buff CreateBuff (integer buffId)"


GetBuffTypeId=GetBuffTypeId
GetBuffTypeId="GetBuffTypeId(","buff ",,~whichBuff,")"
GetBuffTypeIdHint="[UjAPI]  integer GetBuffTypeId (buff whichBuff)"


GetBuffBaseTypeId=GetBuffBaseTypeId
GetBuffBaseTypeId="GetBuffBaseTypeId(","buff ",,~whichBuff,")"
GetBuffBaseTypeIdHint="[UjAPI]  integer GetBuffBaseTypeId (buff whichBuff)"


GetBuffOwner=GetBuffOwner
GetBuffOwner="GetBuffOwner(","buff ",,~whichbuff,")"
GetBuffOwnerHint="[UjAPI]  unit GetBuffOwner (buff whichbuff)"


GetBuffOwningAbility=GetBuffOwningAbility
GetBuffOwningAbility="GetBuffOwningAbility(","buff ",,~whichbuff,")"
GetBuffOwningAbilityHint="[UjAPI]  ability GetBuffOwningAbility (buff whichbuff)"


IsBuffDispellable=IsBuffDispellable
IsBuffDispellable="IsBuffDispellable(","buff ",,~whichBuff,")"
IsBuffDispellableHint="[UjAPI]  boolean IsBuffDispellable (buff whichBuff)"


GetBuffLevel=GetBuffLevel
GetBuffLevel="GetBuffLevel(","buff ",,~whichBuff,")"
GetBuffLevelHint="[UjAPI]  integer GetBuffLevel (buff whichBuff)"


GetBuffRemainingDuration=GetBuffRemainingDuration
GetBuffRemainingDuration="GetBuffRemainingDuration(","buff ",,~whichBuff,")"
GetBuffRemainingDurationHint="[UjAPI]  real GetBuffRemainingDuration (buff whichBuff)"


GetFilterBuff=GetFilterBuff
GetFilterBuff="GetFilterBuff(",")"
GetFilterBuffHint="[UjAPI]  buff GetFilterBuff ()"


GetEnumBuff=GetEnumBuff
GetEnumBuff="GetEnumBuff(",")"
GetEnumBuffHint="[UjAPI]  buff GetEnumBuff ()"


EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(","unit ",,~whichUnit,", ","boolexpr ",,~whichBoolexpr,", ","code ",,~whichCode,")"
EnumUnitBuffsHint="[UjAPI]  boolean EnumUnitBuffs (unit whichUnit, boolexpr whichBoolexpr, code whichCode)"


GetTriggerBuff=GetTriggerBuff
GetTriggerBuff="GetTriggerBuff(",")"
GetTriggerBuffHint="[UjAPI]  buff GetTriggerBuff ()"


GetTriggerBuffSourceAbility=GetTriggerBuffSourceAbility
GetTriggerBuffSourceAbility="GetTriggerBuffSourceAbility(",")"
GetTriggerBuffSourceAbilityHint="[UjAPI]  ability GetTriggerBuffSourceAbility ()"


GetTriggerBuffSourceUnit=GetTriggerBuffSourceUnit
GetTriggerBuffSourceUnit="GetTriggerBuffSourceUnit(",")"
GetTriggerBuffSourceUnitHint="[UjAPI]  unit GetTriggerBuffSourceUnit ()"


GetTriggerBuffTarget=GetTriggerBuffTarget
GetTriggerBuffTarget="GetTriggerBuffTarget(",")"
GetTriggerBuffTargetHint="[UjAPI]  unit GetTriggerBuffTarget ()"


GetWar3ImageSprite=GetWar3ImageSprite
GetWar3ImageSprite="GetWar3ImageSprite(","war3image ",,~whichWar3Image,")"
GetWar3ImageSpriteHint="[UjAPI]  sprite GetWar3ImageSprite (war3image whichWar3Image)"


IsWar3ImageVisible=IsWar3ImageVisible
IsWar3ImageVisible="IsWar3ImageVisible(","war3image ",,~whichWar3Image,")"
IsWar3ImageVisibleHint="[UjAPI]  boolean IsWar3ImageVisible (war3image whichWar3Image)"


IsWar3ImageInvulnerable=IsWar3ImageInvulnerable
IsWar3ImageInvulnerable="IsWar3ImageInvulnerable(","war3image ",,~whichWar3Image,")"
IsWar3ImageInvulnerableHint="[UjAPI]  boolean IsWar3ImageInvulnerable (war3image whichWar3Image)"


GetWar3ImageX=GetWar3ImageX
GetWar3ImageX="GetWar3ImageX(","war3image ",,~whichWar3Image,")"
GetWar3ImageXHint="[UjAPI]  real GetWar3ImageX (war3image whichWar3Image)"


GetWar3ImageY=GetWar3ImageY
GetWar3ImageY="GetWar3ImageY(","war3image ",,~whichWar3Image,")"
GetWar3ImageYHint="[UjAPI]  real GetWar3ImageY (war3image whichWar3Image)"


GetWar3ImageZ=GetWar3ImageZ
GetWar3ImageZ="GetWar3ImageZ(","war3image ",,~whichWar3Image,")"
GetWar3ImageZHint="[UjAPI]  real GetWar3ImageZ (war3image whichWar3Image)"


GetWar3ImagePositionLoc=GetWar3ImagePositionLoc
GetWar3ImagePositionLoc="GetWar3ImagePositionLoc(","war3image ",,~whichWar3Image,")"
GetWar3ImagePositionLocHint="[UjAPI]  location GetWar3ImagePositionLoc (war3image whichWar3Image)"


GetWar3ImageHeight=GetWar3ImageHeight
GetWar3ImageHeight="GetWar3ImageHeight(","war3image ",,~whichWar3Image,")"
GetWar3ImageHeightHint="[UjAPI]  real GetWar3ImageHeight (war3image whichWar3Image)"


GetWar3ImageScreenX=GetWar3ImageScreenX
GetWar3ImageScreenX="GetWar3ImageScreenX(","war3image ",,~whichWar3Image,")"
GetWar3ImageScreenXHint="[UjAPI]  real GetWar3ImageScreenX (war3image whichWar3Image)"


GetWar3ImageScreenY=GetWar3ImageScreenY
GetWar3ImageScreenY="GetWar3ImageScreenY(","war3image ",,~whichWar3Image,")"
GetWar3ImageScreenYHint="[UjAPI]  real GetWar3ImageScreenY (war3image whichWar3Image)"


GetWar3ImagePlayerColour=GetWar3ImagePlayerColour
GetWar3ImagePlayerColour="GetWar3ImagePlayerColour(","war3image ",,~whichWar3Image,")"
GetWar3ImagePlayerColourHint="[UjAPI]  playercolor GetWar3ImagePlayerColour (war3image whichWar3Image)"


GetWar3ImageVertexColour=GetWar3ImageVertexColour
GetWar3ImageVertexColour="GetWar3ImageVertexColour(","war3image ",,~whichWar3Image,")"
GetWar3ImageVertexColourHint="[UjAPI]  integer GetWar3ImageVertexColour (war3image whichWar3Image)"


GetWar3ImageTimeScale=GetWar3ImageTimeScale
GetWar3ImageTimeScale="GetWar3ImageTimeScale(","war3image ",,~whichWar3Image,")"
GetWar3ImageTimeScaleHint="[UjAPI]  real GetWar3ImageTimeScale (war3image whichWar3Image)"


GetWar3ImageScale=GetWar3ImageScale
GetWar3ImageScale="GetWar3ImageScale(","war3image ",,~whichWar3Image,")"
GetWar3ImageScaleHint="[UjAPI]  real GetWar3ImageScale (war3image whichWar3Image)"


GetWar3ImageFacing=GetWar3ImageFacing
GetWar3ImageFacing="GetWar3ImageFacing(","war3image ",,~whichWar3Image,")"
GetWar3ImageFacingHint="[UjAPI]  real GetWar3ImageFacing (war3image whichWar3Image)"


GetWar3ImageYaw=GetWar3ImageYaw
GetWar3ImageYaw="GetWar3ImageYaw(","war3image ",,~whichWar3Image,")"
GetWar3ImageYawHint="[UjAPI]  real GetWar3ImageYaw (war3image whichWar3Image)"


GetWar3ImagePitch=GetWar3ImagePitch
GetWar3ImagePitch="GetWar3ImagePitch(","war3image ",,~whichWar3Image,")"
GetWar3ImagePitchHint="[UjAPI]  real GetWar3ImagePitch (war3image whichWar3Image)"


GetWar3ImageRoll=GetWar3ImageRoll
GetWar3ImageRoll="GetWar3ImageRoll(","war3image ",,~whichWar3Image,")"
GetWar3ImageRollHint="[UjAPI]  real GetWar3ImageRoll (war3image whichWar3Image)"


GetWar3ImageModel=GetWar3ImageModel
GetWar3ImageModel="GetWar3ImageModel(","war3image ",,~whichWar3Image,")"
GetWar3ImageModelHint="[UjAPI]  string GetWar3ImageModel (war3image whichWar3Image)"


GetWar3ImageModelObjectX=GetWar3ImageModelObjectX
GetWar3ImageModelObjectX="GetWar3ImageModelObjectX(","war3image ",,~whichWar3Image,", ","string ",,~whichObject,")"
GetWar3ImageModelObjectXHint="[UjAPI]  real GetWar3ImageModelObjectX (war3image whichWar3Image, string whichObject)"


GetWar3ImageModelObjectY=GetWar3ImageModelObjectY
GetWar3ImageModelObjectY="GetWar3ImageModelObjectY(","war3image ",,~whichWar3Image,", ","string ",,~whichObject,")"
GetWar3ImageModelObjectYHint="[UjAPI]  real GetWar3ImageModelObjectY (war3image whichWar3Image, string whichObject)"


GetWar3ImageModelObjectZ=GetWar3ImageModelObjectZ
GetWar3ImageModelObjectZ="GetWar3ImageModelObjectZ(","war3image ",,~whichWar3Image,", ","string ",,~whichObject,")"
GetWar3ImageModelObjectZHint="[UjAPI]  real GetWar3ImageModelObjectZ (war3image whichWar3Image, string whichObject)"


GetWar3ImageModelObjectPositionLoc=GetWar3ImageModelObjectPositionLoc
GetWar3ImageModelObjectPositionLoc="GetWar3ImageModelObjectPositionLoc(","war3image ",,~whichWar3Image,", ","string ",,~whichObject,")"
GetWar3ImageModelObjectPositionLocHint="[UjAPI]  location GetWar3ImageModelObjectPositionLoc (war3image whichWar3Image, string whichObject)"


GetWar3ImageCurrentAnimationId=GetWar3ImageCurrentAnimationId
GetWar3ImageCurrentAnimationId="GetWar3ImageCurrentAnimationId(","war3image ",,~whichWar3Image,")"
GetWar3ImageCurrentAnimationIdHint="[UjAPI]  integer GetWar3ImageCurrentAnimationId (war3image whichWar3Image)"


GetWar3ImageCurrentAnimationName=GetWar3ImageCurrentAnimationName
GetWar3ImageCurrentAnimationName="GetWar3ImageCurrentAnimationName(","war3image ",,~whichWar3Image,")"
GetWar3ImageCurrentAnimationNameHint="[UjAPI]  string GetWar3ImageCurrentAnimationName (war3image whichWar3Image)"


GetWar3ImageAnimationOffsetPercent=GetWar3ImageAnimationOffsetPercent
GetWar3ImageAnimationOffsetPercent="GetWar3ImageAnimationOffsetPercent(","war3image ",,~whichWar3Image,")"
GetWar3ImageAnimationOffsetPercentHint="[UjAPI]  real GetWar3ImageAnimationOffsetPercent (war3image whichWar3Image)"


CreateSprite=CreateSprite
CreateSprite="CreateSprite(","boolean ",,~isUber,")"
CreateSpriteHint="[UjAPI]  sprite CreateSprite (boolean isUber)"


AttachSpriteToTarget=AttachSpriteToTarget
AttachSpriteToTarget="AttachSpriteToTarget(","sprite ",,~whichSprite,", ","sprite ",,~targetSprite,", ","string ",,~attachPointName,")"
AttachSpriteToTargetHint="[UjAPI]  sprite AttachSpriteToTarget (sprite whichSprite, sprite targetSprite, string attachPointName)"


AddSpriteToTarget=AddSpriteToTarget
AddSpriteToTarget="AddSpriteToTarget(","string ",,~modelName,", ","sprite ",,~targetSprite,", ","string ",,~attachPointName,")"
AddSpriteToTargetHint="[UjAPI]  sprite AddSpriteToTarget (string modelName, sprite targetSprite, string attachPointName)"


GetSpriteChildrenCount=GetSpriteChildrenCount
GetSpriteChildrenCount="GetSpriteChildrenCount(","sprite ",,~whichSprite,")"
GetSpriteChildrenCountHint="[UjAPI]  integer GetSpriteChildrenCount (sprite whichSprite)"


GetSpriteChildById=GetSpriteChildById
GetSpriteChildById="GetSpriteChildById(","sprite ",,~whichSprite,", ","integer ",,~index,")"
GetSpriteChildByIdHint="[UjAPI]  sprite GetSpriteChildById (sprite whichSprite, integer index)"


IsSpriteUber=IsSpriteUber
IsSpriteUber="IsSpriteUber(","sprite ",,~whichSprite,")"
IsSpriteUberHint="[UjAPI]  boolean IsSpriteUber (sprite whichSprite)"


GetSpriteX=GetSpriteX
GetSpriteX="GetSpriteX(","sprite ",,~whichSprite,")"
GetSpriteXHint="[UjAPI]  real GetSpriteX (sprite whichSprite)"


GetSpriteY=GetSpriteY
GetSpriteY="GetSpriteY(","sprite ",,~whichSprite,")"
GetSpriteYHint="[UjAPI]  real GetSpriteY (sprite whichSprite)"


GetSpriteZ=GetSpriteZ
GetSpriteZ="GetSpriteZ(","sprite ",,~whichSprite,")"
GetSpriteZHint="[UjAPI]  real GetSpriteZ (sprite whichSprite)"


GetSpriteHeight=GetSpriteHeight
GetSpriteHeight="GetSpriteHeight(","sprite ",,~whichSprite,")"
GetSpriteHeightHint="[UjAPI]  real GetSpriteHeight (sprite whichSprite)"


GetSpritePositionLoc=GetSpritePositionLoc
GetSpritePositionLoc="GetSpritePositionLoc(","sprite ",,~whichSprite,")"
GetSpritePositionLocHint="[UjAPI]  location GetSpritePositionLoc (sprite whichSprite)"


GetSpriteScreenX=GetSpriteScreenX
GetSpriteScreenX="GetSpriteScreenX(","sprite ",,~whichSprite,")"
GetSpriteScreenXHint="[UjAPI]  real GetSpriteScreenX (sprite whichSprite)"


GetSpriteScreenY=GetSpriteScreenY
GetSpriteScreenY="GetSpriteScreenY(","sprite ",,~whichSprite,")"
GetSpriteScreenYHint="[UjAPI]  real GetSpriteScreenY (sprite whichSprite)"


GetSpriteScale=GetSpriteScale
GetSpriteScale="GetSpriteScale(","sprite ",,~whichSprite,")"
GetSpriteScaleHint="[UjAPI]  real GetSpriteScale (sprite whichSprite)"


GetSpriteTimeScale=GetSpriteTimeScale
GetSpriteTimeScale="GetSpriteTimeScale(","sprite ",,~whichSprite,")"
GetSpriteTimeScaleHint="[UjAPI]  real GetSpriteTimeScale (sprite whichSprite)"


GetSpritePlayerColour=GetSpritePlayerColour
GetSpritePlayerColour="GetSpritePlayerColour(","sprite ",,~whichSprite,")"
GetSpritePlayerColourHint="[UjAPI]  playercolor GetSpritePlayerColour (sprite whichSprite)"


GetSpriteColour=GetSpriteColour
GetSpriteColour="GetSpriteColour(","sprite ",,~whichSprite,")"
GetSpriteColourHint="[UjAPI]  integer GetSpriteColour (sprite whichSprite)"


GetSpriteYaw=GetSpriteYaw
GetSpriteYaw="GetSpriteYaw(","sprite ",,~whichSprite,")"
GetSpriteYawHint="[UjAPI]  real GetSpriteYaw (sprite whichSprite)"


GetSpriteFacing=GetSpriteFacing
GetSpriteFacing="GetSpriteFacing(","sprite ",,~whichSprite,")"
GetSpriteFacingHint="[UjAPI]  real GetSpriteFacing (sprite whichSprite)"


GetSpritePitch=GetSpritePitch
GetSpritePitch="GetSpritePitch(","sprite ",,~whichSprite,")"
GetSpritePitchHint="[UjAPI]  real GetSpritePitch (sprite whichSprite)"


GetSpriteRoll=GetSpriteRoll
GetSpriteRoll="GetSpriteRoll(","sprite ",,~whichSprite,")"
GetSpriteRollHint="[UjAPI]  real GetSpriteRoll (sprite whichSprite)"


GetSpriteModel=GetSpriteModel
GetSpriteModel="GetSpriteModel(","sprite ",,~whichSprite,")"
GetSpriteModelHint="[UjAPI]  string GetSpriteModel (sprite whichSprite)"


GetSpriteModelObjectX=GetSpriteModelObjectX
GetSpriteModelObjectX="GetSpriteModelObjectX(","sprite ",,~whichSprite,", ","string ",,~whichObject,")"
GetSpriteModelObjectXHint="[UjAPI]  real GetSpriteModelObjectX (sprite whichSprite, string whichObject)"


GetSpriteModelObjectY=GetSpriteModelObjectY
GetSpriteModelObjectY="GetSpriteModelObjectY(","sprite ",,~whichSprite,", ","string ",,~whichObject,")"
GetSpriteModelObjectYHint="[UjAPI]  real GetSpriteModelObjectY (sprite whichSprite, string whichObject)"


GetSpriteModelObjectZ=GetSpriteModelObjectZ
GetSpriteModelObjectZ="GetSpriteModelObjectZ(","sprite ",,~whichSprite,", ","string ",,~whichObject,")"
GetSpriteModelObjectZHint="[UjAPI]  real GetSpriteModelObjectZ (sprite whichSprite, string whichObject)"


GetSpriteModelObjectPositionLoc=GetSpriteModelObjectPositionLoc
GetSpriteModelObjectPositionLoc="GetSpriteModelObjectPositionLoc(","sprite ",,~whichSprite,", ","string ",,~whichObject,")"
GetSpriteModelObjectPositionLocHint="[UjAPI]  location GetSpriteModelObjectPositionLoc (sprite whichSprite, string whichObject)"


GetSpriteCurrentAnimationId=GetSpriteCurrentAnimationId
GetSpriteCurrentAnimationId="GetSpriteCurrentAnimationId(","sprite ",,~whichSprite,")"
GetSpriteCurrentAnimationIdHint="[UjAPI]  integer GetSpriteCurrentAnimationId (sprite whichSprite)"


GetSpriteCurrentAnimationName=GetSpriteCurrentAnimationName
GetSpriteCurrentAnimationName="GetSpriteCurrentAnimationName(","sprite ",,~whichSprite,")"
GetSpriteCurrentAnimationNameHint="[UjAPI]  string GetSpriteCurrentAnimationName (sprite whichSprite)"


GetSpriteAnimationOffsetPercent=GetSpriteAnimationOffsetPercent
GetSpriteAnimationOffsetPercent="GetSpriteAnimationOffsetPercent(","sprite ",,~whichSprite,")"
GetSpriteAnimationOffsetPercentHint="[UjAPI]  real GetSpriteAnimationOffsetPercent (sprite whichSprite)"


GetSpecialEffectSprite=GetSpecialEffectSprite
GetSpecialEffectSprite="GetSpecialEffectSprite(","effect ",,~whichEffect,")"
GetSpecialEffectSpriteHint="[UjAPI]  sprite GetSpecialEffectSprite (effect whichEffect)"


IsSpecialEffectVisible=IsSpecialEffectVisible
IsSpecialEffectVisible="IsSpecialEffectVisible(","effect ",,~whichEffect,")"
IsSpecialEffectVisibleHint="[UjAPI]  boolean IsSpecialEffectVisible (effect whichEffect)"


GetSpecialEffectX=GetSpecialEffectX
GetSpecialEffectX="GetSpecialEffectX(","effect ",,~whichEffect,")"
GetSpecialEffectXHint="[UjAPI]  real GetSpecialEffectX (effect whichEffect)"


GetSpecialEffectY=GetSpecialEffectY
GetSpecialEffectY="GetSpecialEffectY(","effect ",,~whichEffect,")"
GetSpecialEffectYHint="[UjAPI]  real GetSpecialEffectY (effect whichEffect)"


GetSpecialEffectZ=GetSpecialEffectZ
GetSpecialEffectZ="GetSpecialEffectZ(","effect ",,~whichEffect,")"
GetSpecialEffectZHint="[UjAPI]  real GetSpecialEffectZ (effect whichEffect)"


GetSpecialEffectHeight=GetSpecialEffectHeight
GetSpecialEffectHeight="GetSpecialEffectHeight(","effect ",,~whichEffect,")"
GetSpecialEffectHeightHint="[UjAPI]  real GetSpecialEffectHeight (effect whichEffect)"


GetSpecialEffectPositionLoc=GetSpecialEffectPositionLoc
GetSpecialEffectPositionLoc="GetSpecialEffectPositionLoc(","effect ",,~whichEffect,")"
GetSpecialEffectPositionLocHint="[UjAPI]  location GetSpecialEffectPositionLoc (effect whichEffect)"


GetSpecialEffectScreenX=GetSpecialEffectScreenX
GetSpecialEffectScreenX="GetSpecialEffectScreenX(","effect ",,~whichEffect,")"
GetSpecialEffectScreenXHint="[UjAPI]  real GetSpecialEffectScreenX (effect whichEffect)"


GetSpecialEffectScreenY=GetSpecialEffectScreenY
GetSpecialEffectScreenY="GetSpecialEffectScreenY(","effect ",,~whichEffect,")"
GetSpecialEffectScreenYHint="[UjAPI]  real GetSpecialEffectScreenY (effect whichEffect)"


GetSpecialEffectScale=GetSpecialEffectScale
GetSpecialEffectScale="GetSpecialEffectScale(","effect ",,~whichEffect,")"
GetSpecialEffectScaleHint="[UjAPI]  real GetSpecialEffectScale (effect whichEffect)"


GetSpecialEffectTimeScale=GetSpecialEffectTimeScale
GetSpecialEffectTimeScale="GetSpecialEffectTimeScale(","effect ",,~whichEffect,")"
GetSpecialEffectTimeScaleHint="[UjAPI]  real GetSpecialEffectTimeScale (effect whichEffect)"


GetSpecialEffectPlayerColour=GetSpecialEffectPlayerColour
GetSpecialEffectPlayerColour="GetSpecialEffectPlayerColour(","effect ",,~whichEffect,")"
GetSpecialEffectPlayerColourHint="[UjAPI]  playercolor GetSpecialEffectPlayerColour (effect whichEffect)"


GetSpecialEffectColour=GetSpecialEffectColour
GetSpecialEffectColour="GetSpecialEffectColour(","effect ",,~whichEffect,")"
GetSpecialEffectColourHint="[UjAPI]  integer GetSpecialEffectColour (effect whichEffect)"


GetSpecialEffectYaw=GetSpecialEffectYaw
GetSpecialEffectYaw="GetSpecialEffectYaw(","effect ",,~whichEffect,")"
GetSpecialEffectYawHint="[UjAPI]  real GetSpecialEffectYaw (effect whichEffect)"


GetSpecialEffectFacing=GetSpecialEffectFacing
GetSpecialEffectFacing="GetSpecialEffectFacing(","effect ",,~whichEffect,")"
GetSpecialEffectFacingHint="[UjAPI]  real GetSpecialEffectFacing (effect whichEffect)"


GetSpecialEffectPitch=GetSpecialEffectPitch
GetSpecialEffectPitch="GetSpecialEffectPitch(","effect ",,~whichEffect,")"
GetSpecialEffectPitchHint="[UjAPI]  real GetSpecialEffectPitch (effect whichEffect)"


GetSpecialEffectRoll=GetSpecialEffectRoll
GetSpecialEffectRoll="GetSpecialEffectRoll(","effect ",,~whichEffect,")"
GetSpecialEffectRollHint="[UjAPI]  real GetSpecialEffectRoll (effect whichEffect)"


GetSpecialEffectModel=GetSpecialEffectModel
GetSpecialEffectModel="GetSpecialEffectModel(","effect ",,~whichEffect,")"
GetSpecialEffectModelHint="[UjAPI]  string GetSpecialEffectModel (effect whichEffect)"


GetSpecialEffectModelObjectX=GetSpecialEffectModelObjectX
GetSpecialEffectModelObjectX="GetSpecialEffectModelObjectX(","effect ",,~whichEffect,", ","string ",,~whichObject,")"
GetSpecialEffectModelObjectXHint="[UjAPI]  real GetSpecialEffectModelObjectX (effect whichEffect, string whichObject)"


GetSpecialEffectModelObjectY=GetSpecialEffectModelObjectY
GetSpecialEffectModelObjectY="GetSpecialEffectModelObjectY(","effect ",,~whichEffect,", ","string ",,~whichObject,")"
GetSpecialEffectModelObjectYHint="[UjAPI]  real GetSpecialEffectModelObjectY (effect whichEffect, string whichObject)"


GetSpecialEffectModelObjectZ=GetSpecialEffectModelObjectZ
GetSpecialEffectModelObjectZ="GetSpecialEffectModelObjectZ(","effect ",,~whichEffect,", ","string ",,~whichObject,")"
GetSpecialEffectModelObjectZHint="[UjAPI]  real GetSpecialEffectModelObjectZ (effect whichEffect, string whichObject)"


GetSpecialEffectModelObjectPositionLoc=GetSpecialEffectModelObjectPositionLoc
GetSpecialEffectModelObjectPositionLoc="GetSpecialEffectModelObjectPositionLoc(","effect ",,~whichEffect,", ","string ",,~whichObject,")"
GetSpecialEffectModelObjectPositionLocHint="[UjAPI]  location GetSpecialEffectModelObjectPositionLoc (effect whichEffect, string whichObject)"


GetSpecialEffectCurrentAnimationId=GetSpecialEffectCurrentAnimationId
GetSpecialEffectCurrentAnimationId="GetSpecialEffectCurrentAnimationId(","effect ",,~whichEffect,")"
GetSpecialEffectCurrentAnimationIdHint="[UjAPI]  integer GetSpecialEffectCurrentAnimationId (effect whichEffect)"


GetSpecialEffectCurrentAnimationName=GetSpecialEffectCurrentAnimationName
GetSpecialEffectCurrentAnimationName="GetSpecialEffectCurrentAnimationName(","effect ",,~whichEffect,")"
GetSpecialEffectCurrentAnimationNameHint="[UjAPI]  string GetSpecialEffectCurrentAnimationName (effect whichEffect)"


GetSpecialEffectAnimationOffsetPercent=GetSpecialEffectAnimationOffsetPercent
GetSpecialEffectAnimationOffsetPercent="GetSpecialEffectAnimationOffsetPercent(","effect ",,~whichEffect,")"
GetSpecialEffectAnimationOffsetPercentHint="[UjAPI]  real GetSpecialEffectAnimationOffsetPercent (effect whichEffect)"


GetTriggerSpecialEffect=GetTriggerSpecialEffect
GetTriggerSpecialEffect="GetTriggerSpecialEffect(",")"
GetTriggerSpecialEffectHint="[UjAPI]  effect GetTriggerSpecialEffect ()"


GetFilterSpecialEffect=GetFilterSpecialEffect
GetFilterSpecialEffect="GetFilterSpecialEffect(",")"
GetFilterSpecialEffectHint="[UjAPI]  effect GetFilterSpecialEffect ()"


GetEnumSpecialEffect=GetEnumSpecialEffect
GetEnumSpecialEffect="GetEnumSpecialEffect(",")"
GetEnumSpecialEffectHint="[UjAPI]  effect GetEnumSpecialEffect ()"


GetTrackableSprite=GetTrackableSprite
GetTrackableSprite="GetTrackableSprite(","trackable ",,~whichTrackable,")"
GetTrackableSpriteHint="[UjAPI]  sprite GetTrackableSprite (trackable whichTrackable)"


IsTrackableVisible=IsTrackableVisible
IsTrackableVisible="IsTrackableVisible(","trackable ",,~whichTrackable,")"
IsTrackableVisibleHint="[UjAPI]  boolean IsTrackableVisible (trackable whichTrackable)"


GetTrackableX=GetTrackableX
GetTrackableX="GetTrackableX(","trackable ",,~whichTrackable,")"
GetTrackableXHint="[UjAPI]  real GetTrackableX (trackable whichTrackable)"


GetTrackableY=GetTrackableY
GetTrackableY="GetTrackableY(","trackable ",,~whichTrackable,")"
GetTrackableYHint="[UjAPI]  real GetTrackableY (trackable whichTrackable)"


GetTrackableZ=GetTrackableZ
GetTrackableZ="GetTrackableZ(","trackable ",,~whichTrackable,")"
GetTrackableZHint="[UjAPI]  real GetTrackableZ (trackable whichTrackable)"


GetTrackableHeight=GetTrackableHeight
GetTrackableHeight="GetTrackableHeight(","trackable ",,~whichTrackable,")"
GetTrackableHeightHint="[UjAPI]  real GetTrackableHeight (trackable whichTrackable)"


GetTrackablePositionLoc=GetTrackablePositionLoc
GetTrackablePositionLoc="GetTrackablePositionLoc(","trackable ",,~whichTrackable,")"
GetTrackablePositionLocHint="[UjAPI]  location GetTrackablePositionLoc (trackable whichTrackable)"


GetTrackableScreenX=GetTrackableScreenX
GetTrackableScreenX="GetTrackableScreenX(","trackable ",,~whichTrackable,")"
GetTrackableScreenXHint="[UjAPI]  real GetTrackableScreenX (trackable whichTrackable)"


GetTrackableScreenY=GetTrackableScreenY
GetTrackableScreenY="GetTrackableScreenY(","trackable ",,~whichTrackable,")"
GetTrackableScreenYHint="[UjAPI]  real GetTrackableScreenY (trackable whichTrackable)"


GetTrackableScale=GetTrackableScale
GetTrackableScale="GetTrackableScale(","trackable ",,~whichTrackable,")"
GetTrackableScaleHint="[UjAPI]  real GetTrackableScale (trackable whichTrackable)"


GetTrackableTimeScale=GetTrackableTimeScale
GetTrackableTimeScale="GetTrackableTimeScale(","trackable ",,~whichTrackable,")"
GetTrackableTimeScaleHint="[UjAPI]  real GetTrackableTimeScale (trackable whichTrackable)"


GetTrackablePlayerColour=GetTrackablePlayerColour
GetTrackablePlayerColour="GetTrackablePlayerColour(","trackable ",,~whichTrackable,")"
GetTrackablePlayerColourHint="[UjAPI]  playercolor GetTrackablePlayerColour (trackable whichTrackable)"


GetTrackableColour=GetTrackableColour
GetTrackableColour="GetTrackableColour(","trackable ",,~whichTrackable,")"
GetTrackableColourHint="[UjAPI]  integer GetTrackableColour (trackable whichTrackable)"


GetTrackableYaw=GetTrackableYaw
GetTrackableYaw="GetTrackableYaw(","trackable ",,~whichTrackable,")"
GetTrackableYawHint="[UjAPI]  real GetTrackableYaw (trackable whichTrackable)"


GetTrackableFacing=GetTrackableFacing
GetTrackableFacing="GetTrackableFacing(","trackable ",,~whichTrackable,")"
GetTrackableFacingHint="[UjAPI]  real GetTrackableFacing (trackable whichTrackable)"


GetTrackablePitch=GetTrackablePitch
GetTrackablePitch="GetTrackablePitch(","trackable ",,~whichTrackable,")"
GetTrackablePitchHint="[UjAPI]  real GetTrackablePitch (trackable whichTrackable)"


GetTrackableRoll=GetTrackableRoll
GetTrackableRoll="GetTrackableRoll(","trackable ",,~whichTrackable,")"
GetTrackableRollHint="[UjAPI]  real GetTrackableRoll (trackable whichTrackable)"


GetTrackableModel=GetTrackableModel
GetTrackableModel="GetTrackableModel(","trackable ",,~whichTrackable,")"
GetTrackableModelHint="[UjAPI]  string GetTrackableModel (trackable whichTrackable)"


GetTrackableModelObjectX=GetTrackableModelObjectX
GetTrackableModelObjectX="GetTrackableModelObjectX(","trackable ",,~whichTrackable,", ","string ",,~whichObject,")"
GetTrackableModelObjectXHint="[UjAPI]  real GetTrackableModelObjectX (trackable whichTrackable, string whichObject)"


GetTrackableModelObjectY=GetTrackableModelObjectY
GetTrackableModelObjectY="GetTrackableModelObjectY(","trackable ",,~whichTrackable,", ","string ",,~whichObject,")"
GetTrackableModelObjectYHint="[UjAPI]  real GetTrackableModelObjectY (trackable whichTrackable, string whichObject)"


GetTrackableModelObjectZ=GetTrackableModelObjectZ
GetTrackableModelObjectZ="GetTrackableModelObjectZ(","trackable ",,~whichTrackable,", ","string ",,~whichObject,")"
GetTrackableModelObjectZHint="[UjAPI]  real GetTrackableModelObjectZ (trackable whichTrackable, string whichObject)"


GetTrackableModelObjectPositionLoc=GetTrackableModelObjectPositionLoc
GetTrackableModelObjectPositionLoc="GetTrackableModelObjectPositionLoc(","trackable ",,~whichTrackable,", ","string ",,~whichObject,")"
GetTrackableModelObjectPositionLocHint="[UjAPI]  location GetTrackableModelObjectPositionLoc (trackable whichTrackable, string whichObject)"


GetTrackableCurrentAnimationId=GetTrackableCurrentAnimationId
GetTrackableCurrentAnimationId="GetTrackableCurrentAnimationId(","trackable ",,~whichTrackable,")"
GetTrackableCurrentAnimationIdHint="[UjAPI]  integer GetTrackableCurrentAnimationId (trackable whichTrackable)"


GetTrackableCurrentAnimationName=GetTrackableCurrentAnimationName
GetTrackableCurrentAnimationName="GetTrackableCurrentAnimationName(","trackable ",,~whichTrackable,")"
GetTrackableCurrentAnimationNameHint="[UjAPI]  string GetTrackableCurrentAnimationName (trackable whichTrackable)"


GetTrackableAnimationOffsetPercent=GetTrackableAnimationOffsetPercent
GetTrackableAnimationOffsetPercent="GetTrackableAnimationOffsetPercent(","trackable ",,~whichTrackable,")"
GetTrackableAnimationOffsetPercentHint="[UjAPI]  real GetTrackableAnimationOffsetPercent (trackable whichTrackable)"


GetTriggerTrackable=GetTriggerTrackable
GetTriggerTrackable="GetTriggerTrackable(",")"
GetTriggerTrackableHint="[UjAPI]  trackable GetTriggerTrackable ()"


GetFilterTrackable=GetFilterTrackable
GetFilterTrackable="GetFilterTrackable(",")"
GetFilterTrackableHint="[UjAPI]  trackable GetFilterTrackable ()"


GetEnumTrackable=GetEnumTrackable
GetEnumTrackable="GetEnumTrackable(",")"
GetEnumTrackableHint="[UjAPI]  trackable GetEnumTrackable ()"


GetWidgetUnderCursor=GetWidgetUnderCursor
GetWidgetUnderCursor="GetWidgetUnderCursor(",")"
GetWidgetUnderCursorHint="[UjAPI]  widget GetWidgetUnderCursor ()"


GetWidgetSprite=GetWidgetSprite
GetWidgetSprite="GetWidgetSprite(","widget ",,~whichWidget,")"
GetWidgetSpriteHint="[UjAPI]  sprite GetWidgetSprite (widget whichWidget)"


GetWidgetTypeId=GetWidgetTypeId
GetWidgetTypeId="GetWidgetTypeId(","widget ",,~whichWidget,")"
GetWidgetTypeIdHint="[UjAPI]  integer GetWidgetTypeId (widget whichWidget)"


GetWidgetName=GetWidgetName
GetWidgetName="GetWidgetName(","widget ",,~whichWidget,")"
GetWidgetNameHint="[UjAPI]  string GetWidgetName (widget whichWidget)"


IsWidgetTipEnabled=IsWidgetTipEnabled
IsWidgetTipEnabled="IsWidgetTipEnabled(",")"
IsWidgetTipEnabledHint="[UjAPI]  boolean IsWidgetTipEnabled ()"


IsWidgetVisible=IsWidgetVisible
IsWidgetVisible="IsWidgetVisible(","widget ",,~whichWidget,")"
IsWidgetVisibleHint="[UjAPI]  boolean IsWidgetVisible (widget whichWidget)"


IsWidgetInvulnerable=IsWidgetInvulnerable
IsWidgetInvulnerable="IsWidgetInvulnerable(","widget ",,~whichWidget,")"
IsWidgetInvulnerableHint="[UjAPI]  boolean IsWidgetInvulnerable (widget whichWidget)"


IsWidgetTargetAllowed=IsWidgetTargetAllowed
IsWidgetTargetAllowed="IsWidgetTargetAllowed(","widget ",,~whichWidget,", ","widget ",,~target,", ","targetflag ",,~whichFlags,")"
IsWidgetTargetAllowedHint="[UjAPI]  boolean IsWidgetTargetAllowed (widget whichWidget, widget target, targetflag whichFlags)"


GetWidgetZ=GetWidgetZ
GetWidgetZ="GetWidgetZ(","widget ",,~whichWidget,")"
GetWidgetZHint="[UjAPI]  real GetWidgetZ (widget whichWidget)"


GetWidgetPositionLoc=GetWidgetPositionLoc
GetWidgetPositionLoc="GetWidgetPositionLoc(","widget ",,~whichWidget,")"
GetWidgetPositionLocHint="[UjAPI]  location GetWidgetPositionLoc (widget whichWidget)"


GetWidgetHeight=GetWidgetHeight
GetWidgetHeight="GetWidgetHeight(","widget ",,~whichWidget,")"
GetWidgetHeightHint="[UjAPI]  real GetWidgetHeight (widget whichWidget)"


GetWidgetScreenX=GetWidgetScreenX
GetWidgetScreenX="GetWidgetScreenX(","widget ",,~whichWidget,")"
GetWidgetScreenXHint="[UjAPI]  real GetWidgetScreenX (widget whichWidget)"


GetWidgetScreenY=GetWidgetScreenY
GetWidgetScreenY="GetWidgetScreenY(","widget ",,~whichWidget,")"
GetWidgetScreenYHint="[UjAPI]  real GetWidgetScreenY (widget whichWidget)"


GetWidgetPlayerColour=GetWidgetPlayerColour
GetWidgetPlayerColour="GetWidgetPlayerColour(","widget ",,~whichWidget,")"
GetWidgetPlayerColourHint="[UjAPI]  playercolor GetWidgetPlayerColour (widget whichWidget)"


GetWidgetVertexColour=GetWidgetVertexColour
GetWidgetVertexColour="GetWidgetVertexColour(","widget ",,~whichWidget,")"
GetWidgetVertexColourHint="[UjAPI]  integer GetWidgetVertexColour (widget whichWidget)"


GetWidgetTimeScale=GetWidgetTimeScale
GetWidgetTimeScale="GetWidgetTimeScale(","widget ",,~whichWidget,")"
GetWidgetTimeScaleHint="[UjAPI]  real GetWidgetTimeScale (widget whichWidget)"


GetWidgetScale=GetWidgetScale
GetWidgetScale="GetWidgetScale(","widget ",,~whichWidget,")"
GetWidgetScaleHint="[UjAPI]  real GetWidgetScale (widget whichWidget)"


GetWidgetFacing=GetWidgetFacing
GetWidgetFacing="GetWidgetFacing(","widget ",,~whichWidget,")"
GetWidgetFacingHint="[UjAPI]  real GetWidgetFacing (widget whichWidget)"


GetWidgetYaw=GetWidgetYaw
GetWidgetYaw="GetWidgetYaw(","widget ",,~whichWidget,")"
GetWidgetYawHint="[UjAPI]  real GetWidgetYaw (widget whichWidget)"


GetWidgetPitch=GetWidgetPitch
GetWidgetPitch="GetWidgetPitch(","widget ",,~whichWidget,")"
GetWidgetPitchHint="[UjAPI]  real GetWidgetPitch (widget whichWidget)"


GetWidgetRoll=GetWidgetRoll
GetWidgetRoll="GetWidgetRoll(","widget ",,~whichWidget,")"
GetWidgetRollHint="[UjAPI]  real GetWidgetRoll (widget whichWidget)"


GetWidgetModel=GetWidgetModel
GetWidgetModel="GetWidgetModel(","widget ",,~whichWidget,")"
GetWidgetModelHint="[UjAPI]  string GetWidgetModel (widget whichWidget)"


GetWidgetModelObjectX=GetWidgetModelObjectX
GetWidgetModelObjectX="GetWidgetModelObjectX(","widget ",,~whichWidget,", ","string ",,~whichObject,")"
GetWidgetModelObjectXHint="[UjAPI]  real GetWidgetModelObjectX (widget whichWidget, string whichObject)"


GetWidgetModelObjectY=GetWidgetModelObjectY
GetWidgetModelObjectY="GetWidgetModelObjectY(","widget ",,~whichWidget,", ","string ",,~whichObject,")"
GetWidgetModelObjectYHint="[UjAPI]  real GetWidgetModelObjectY (widget whichWidget, string whichObject)"


GetWidgetModelObjectZ=GetWidgetModelObjectZ
GetWidgetModelObjectZ="GetWidgetModelObjectZ(","widget ",,~whichWidget,", ","string ",,~whichObject,")"
GetWidgetModelObjectZHint="[UjAPI]  real GetWidgetModelObjectZ (widget whichWidget, string whichObject)"


GetWidgetModelObjectPositionLoc=GetWidgetModelObjectPositionLoc
GetWidgetModelObjectPositionLoc="GetWidgetModelObjectPositionLoc(","widget ",,~whichWidget,", ","string ",,~whichObject,")"
GetWidgetModelObjectPositionLocHint="[UjAPI]  location GetWidgetModelObjectPositionLoc (widget whichWidget, string whichObject)"


GetWidgetCurrentAnimationId=GetWidgetCurrentAnimationId
GetWidgetCurrentAnimationId="GetWidgetCurrentAnimationId(","widget ",,~whichWidget,")"
GetWidgetCurrentAnimationIdHint="[UjAPI]  integer GetWidgetCurrentAnimationId (widget whichWidget)"


GetWidgetCurrentAnimationName=GetWidgetCurrentAnimationName
GetWidgetCurrentAnimationName="GetWidgetCurrentAnimationName(","widget ",,~whichWidget,")"
GetWidgetCurrentAnimationNameHint="[UjAPI]  string GetWidgetCurrentAnimationName (widget whichWidget)"


GetWidgetAnimationOffsetPercent=GetWidgetAnimationOffsetPercent
GetWidgetAnimationOffsetPercent="GetWidgetAnimationOffsetPercent(","widget ",,~whichWidget,")"
GetWidgetAnimationOffsetPercentHint="[UjAPI]  real GetWidgetAnimationOffsetPercent (widget whichWidget)"


TriggerRegisterWidgetEvent=TriggerRegisterWidgetEvent
TriggerRegisterWidgetEvent="TriggerRegisterWidgetEvent(","trigger ",,~whichTrigger,", ","widget ",,~whichWidget,", ","widgetevent ",,~whichWidgetEvent,")"
TriggerRegisterWidgetEventHint="[UjAPI]  event TriggerRegisterWidgetEvent (trigger whichTrigger, widget whichWidget, widgetevent whichWidgetEvent)"


GetDestructableUnderCursor=GetDestructableUnderCursor
GetDestructableUnderCursor="GetDestructableUnderCursor(",")"
GetDestructableUnderCursorHint="[UjAPI]  destructable GetDestructableUnderCursor ()"


GetDestructableStringField=GetDestructableStringField
GetDestructableStringField="GetDestructableStringField(","destructable ",,~whichDestructable,", ","destructablestringfield ",,~whichField,")"
GetDestructableStringFieldHint="[UjAPI]  string GetDestructableStringField (destructable whichDestructable, destructablestringfield whichField)"


SetDestructableStringField=SetDestructableStringField
SetDestructableStringField="SetDestructableStringField(","destructable ",,~whichDestructable,", ","destructablestringfield ",,~whichField,", ","string ",,~value,")"
SetDestructableStringFieldHint="[UjAPI]  boolean SetDestructableStringField (destructable whichDestructable, destructablestringfield whichField, string value)"


GetDestructableVariation=GetDestructableVariation
GetDestructableVariation="GetDestructableVariation(","destructable ",,~whichDestructable,")"
GetDestructableVariationHint="[UjAPI]  integer GetDestructableVariation (destructable whichDestructable)"


IsDestructableBlighted=IsDestructableBlighted
IsDestructableBlighted="IsDestructableBlighted(","destructable ",,~whichDestructable,")"
IsDestructableBlightedHint="[UjAPI]  boolean IsDestructableBlighted (destructable whichDestructable)"


GetDestructableSprite=GetDestructableSprite
GetDestructableSprite="GetDestructableSprite(","destructable ",,~whichDestructable,")"
GetDestructableSpriteHint="[UjAPI]  sprite GetDestructableSprite (destructable whichDestructable)"


GetDestructableZ=GetDestructableZ
GetDestructableZ="GetDestructableZ(","destructable ",,~whichDestructable,")"
GetDestructableZHint="[UjAPI]  real GetDestructableZ (destructable whichDestructable)"


GetDestructableHeight=GetDestructableHeight
GetDestructableHeight="GetDestructableHeight(","destructable ",,~whichDestructable,")"
GetDestructableHeightHint="[UjAPI]  real GetDestructableHeight (destructable whichDestructable)"


GetDestructablePositionLoc=GetDestructablePositionLoc
GetDestructablePositionLoc="GetDestructablePositionLoc(","destructable ",,~whichDestructable,")"
GetDestructablePositionLocHint="[UjAPI]  location GetDestructablePositionLoc (destructable whichDestructable)"


GetDestructableScreenX=GetDestructableScreenX
GetDestructableScreenX="GetDestructableScreenX(","destructable ",,~whichDestructable,")"
GetDestructableScreenXHint="[UjAPI]  real GetDestructableScreenX (destructable whichDestructable)"


GetDestructableScreenY=GetDestructableScreenY
GetDestructableScreenY="GetDestructableScreenY(","destructable ",,~whichDestructable,")"
GetDestructableScreenYHint="[UjAPI]  real GetDestructableScreenY (destructable whichDestructable)"


GetDestructablePlayerColour=GetDestructablePlayerColour
GetDestructablePlayerColour="GetDestructablePlayerColour(","destructable ",,~whichDestructable,")"
GetDestructablePlayerColourHint="[UjAPI]  playercolor GetDestructablePlayerColour (destructable whichDestructable)"


GetDestructableVertexColour=GetDestructableVertexColour
GetDestructableVertexColour="GetDestructableVertexColour(","destructable ",,~whichDestructable,")"
GetDestructableVertexColourHint="[UjAPI]  integer GetDestructableVertexColour (destructable whichDestructable)"


GetDestructableTimeScale=GetDestructableTimeScale
GetDestructableTimeScale="GetDestructableTimeScale(","destructable ",,~whichDestructable,")"
GetDestructableTimeScaleHint="[UjAPI]  real GetDestructableTimeScale (destructable whichDestructable)"


GetDestructableScale=GetDestructableScale
GetDestructableScale="GetDestructableScale(","destructable ",,~whichDestructable,")"
GetDestructableScaleHint="[UjAPI]  real GetDestructableScale (destructable whichDestructable)"


GetDestructableFacing=GetDestructableFacing
GetDestructableFacing="GetDestructableFacing(","destructable ",,~whichDestructable,")"
GetDestructableFacingHint="[UjAPI]  real GetDestructableFacing (destructable whichDestructable)"


GetDestructableYaw=GetDestructableYaw
GetDestructableYaw="GetDestructableYaw(","destructable ",,~whichDestructable,")"
GetDestructableYawHint="[UjAPI]  real GetDestructableYaw (destructable whichDestructable)"


GetDestructablePitch=GetDestructablePitch
GetDestructablePitch="GetDestructablePitch(","destructable ",,~whichDestructable,")"
GetDestructablePitchHint="[UjAPI]  real GetDestructablePitch (destructable whichDestructable)"


GetDestructableRoll=GetDestructableRoll
GetDestructableRoll="GetDestructableRoll(","destructable ",,~whichDestructable,")"
GetDestructableRollHint="[UjAPI]  real GetDestructableRoll (destructable whichDestructable)"


GetDestructableModel=GetDestructableModel
GetDestructableModel="GetDestructableModel(","destructable ",,~whichDestructable,")"
GetDestructableModelHint="[UjAPI]  string GetDestructableModel (destructable whichDestructable)"


GetDestructableModelObjectX=GetDestructableModelObjectX
GetDestructableModelObjectX="GetDestructableModelObjectX(","destructable ",,~whichDestructable,", ","string ",,~whichObject,")"
GetDestructableModelObjectXHint="[UjAPI]  real GetDestructableModelObjectX (destructable whichDestructable, string whichObject)"


GetDestructableModelObjectY=GetDestructableModelObjectY
GetDestructableModelObjectY="GetDestructableModelObjectY(","destructable ",,~whichDestructable,", ","string ",,~whichObject,")"
GetDestructableModelObjectYHint="[UjAPI]  real GetDestructableModelObjectY (destructable whichDestructable, string whichObject)"


GetDestructableModelObjectZ=GetDestructableModelObjectZ
GetDestructableModelObjectZ="GetDestructableModelObjectZ(","destructable ",,~whichDestructable,", ","string ",,~whichObject,")"
GetDestructableModelObjectZHint="[UjAPI]  real GetDestructableModelObjectZ (destructable whichDestructable, string whichObject)"


GetDestructableModelObjectPositionLoc=GetDestructableModelObjectPositionLoc
GetDestructableModelObjectPositionLoc="GetDestructableModelObjectPositionLoc(","destructable ",,~whichDestructable,", ","string ",,~whichObject,")"
GetDestructableModelObjectPositionLocHint="[UjAPI]  location GetDestructableModelObjectPositionLoc (destructable whichDestructable, string whichObject)"


GetDestructableCurrentAnimationId=GetDestructableCurrentAnimationId
GetDestructableCurrentAnimationId="GetDestructableCurrentAnimationId(","destructable ",,~whichDestructable,")"
GetDestructableCurrentAnimationIdHint="[UjAPI]  integer GetDestructableCurrentAnimationId (destructable whichDestructable)"


GetDestructableCurrentAnimationName=GetDestructableCurrentAnimationName
GetDestructableCurrentAnimationName="GetDestructableCurrentAnimationName(","destructable ",,~whichDestructable,")"
GetDestructableCurrentAnimationNameHint="[UjAPI]  string GetDestructableCurrentAnimationName (destructable whichDestructable)"


GetDestructableAnimationOffsetPercent=GetDestructableAnimationOffsetPercent
GetDestructableAnimationOffsetPercent="GetDestructableAnimationOffsetPercent(","destructable ",,~whichDestructable,")"
GetDestructableAnimationOffsetPercentHint="[UjAPI]  real GetDestructableAnimationOffsetPercent (destructable whichDestructable)"


GetBaseItemIntegerFieldById=GetBaseItemIntegerFieldById
GetBaseItemIntegerFieldById="GetBaseItemIntegerFieldById(","integer ",,~itemId,", ","itemintegerfield ",,~whichField,")"
GetBaseItemIntegerFieldByIdHint="[UjAPI]  integer GetBaseItemIntegerFieldById (integer itemId, itemintegerfield whichField)"


SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(","integer ",,~itemId,", ","itemintegerfield ",,~whichField,", ","integer ",,~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI]  boolean SetBaseItemIntegerFieldById (integer itemId, itemintegerfield whichField, integer value)"


GetBaseItemBooleanFieldById=GetBaseItemBooleanFieldById
GetBaseItemBooleanFieldById="GetBaseItemBooleanFieldById(","integer ",,~itemId,", ","itembooleanfield ",,~whichField,")"
GetBaseItemBooleanFieldByIdHint="[UjAPI]  boolean GetBaseItemBooleanFieldById (integer itemId, itembooleanfield whichField)"


SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(","integer ",,~itemId,", ","itembooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI]  boolean SetBaseItemBooleanFieldById (integer itemId, itembooleanfield whichField, boolean value)"


GetBaseItemRealFieldById=GetBaseItemRealFieldById
GetBaseItemRealFieldById="GetBaseItemRealFieldById(","integer ",,~itemId,", ","itemrealfield ",,~whichField,")"
GetBaseItemRealFieldByIdHint="[UjAPI]  real GetBaseItemRealFieldById (integer itemId, itemrealfield whichField)"


SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(","integer ",,~itemId,", ","itemrealfield ",,~whichField,", ","real ",,~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI]  boolean SetBaseItemRealFieldById (integer itemId, itemrealfield whichField, real value)"


GetBaseItemStringFieldById=GetBaseItemStringFieldById
GetBaseItemStringFieldById="GetBaseItemStringFieldById(","integer ",,~itemId,", ","itemstringfield ",,~whichField,")"
GetBaseItemStringFieldByIdHint="[UjAPI]  string GetBaseItemStringFieldById (integer itemId, itemstringfield whichField)"


SetBaseItemStringFieldById=SetBaseItemStringFieldById
SetBaseItemStringFieldById="SetBaseItemStringFieldById(","integer ",,~itemId,", ","itemstringfield ",,~whichField,", ","string ",,~value,")"
SetBaseItemStringFieldByIdHint="[UjAPI]  boolean SetBaseItemStringFieldById (integer itemId, itemstringfield whichField, string value)"


GetItemIntegerField=GetItemIntegerField
GetItemIntegerField="GetItemIntegerField(","item ",,~whichItem,", ","itemintegerfield ",,~whichField,")"
GetItemIntegerFieldHint="[UjAPI]  integer GetItemIntegerField (item whichItem, itemintegerfield whichField)"


SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(","item ",,~whichItem,", ","itemintegerfield ",,~whichField,", ","integer ",,~value,")"
SetItemIntegerFieldHint="[UjAPI]  boolean SetItemIntegerField (item whichItem, itemintegerfield whichField, integer value)"


GetItemBooleanField=GetItemBooleanField
GetItemBooleanField="GetItemBooleanField(","item ",,~whichItem,", ","itembooleanfield ",,~whichField,")"
GetItemBooleanFieldHint="[UjAPI]  boolean GetItemBooleanField (item whichItem, itembooleanfield whichField)"


SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(","item ",,~whichItem,", ","itembooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetItemBooleanFieldHint="[UjAPI]  boolean SetItemBooleanField (item whichItem, itembooleanfield whichField, boolean value)"


GetItemRealField=GetItemRealField
GetItemRealField="GetItemRealField(","item ",,~whichItem,", ","itemrealfield ",,~whichField,")"
GetItemRealFieldHint="[UjAPI]  real GetItemRealField (item whichItem, itemrealfield whichField)"


SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(","item ",,~whichItem,", ","itemrealfield ",,~whichField,", ","real ",,~value,")"
SetItemRealFieldHint="[UjAPI]  boolean SetItemRealField (item whichItem, itemrealfield whichField, real value)"


GetItemStringField=GetItemStringField
GetItemStringField="GetItemStringField(","item ",,~whichItem,", ","itemstringfield ",,~whichField,")"
GetItemStringFieldHint="[UjAPI]  string GetItemStringField (item whichItem, itemstringfield whichField)"


SetItemStringField=SetItemStringField
SetItemStringField="SetItemStringField(","item ",,~whichItem,", ","itemstringfield ",,~whichField,", ","string ",,~value,")"
SetItemStringFieldHint="[UjAPI]  boolean SetItemStringField (item whichItem, itemstringfield whichField, string value)"


GetTriggerItem=GetTriggerItem
GetTriggerItem="GetTriggerItem(",")"
GetTriggerItemHint="[UjAPI]  item GetTriggerItem ()"


GetItemUnderCursor=GetItemUnderCursor
GetItemUnderCursor="GetItemUnderCursor(",")"
GetItemUnderCursorHint="[UjAPI]  item GetItemUnderCursor ()"


GetItemOwner=GetItemOwner
GetItemOwner="GetItemOwner(","item ",,~whichItem,")"
GetItemOwnerHint="[UjAPI]  unit GetItemOwner (item whichItem)"


IsItemDroppable=IsItemDroppable
IsItemDroppable="IsItemDroppable(","item ",,~whichItem,")"
IsItemDroppableHint="[UjAPI]  boolean IsItemDroppable (item whichItem)"


GetItemSprite=GetItemSprite
GetItemSprite="GetItemSprite(","item ",,~whichItem,")"
GetItemSpriteHint="[UjAPI]  sprite GetItemSprite (item whichItem)"


GetItemZ=GetItemZ
GetItemZ="GetItemZ(","item ",,~whichItem,")"
GetItemZHint="[UjAPI]  real GetItemZ (item whichItem)"


GetItemHeight=GetItemHeight
GetItemHeight="GetItemHeight(","item ",,~whichItem,")"
GetItemHeightHint="[UjAPI]  real GetItemHeight (item whichItem)"


GetItemScreenX=GetItemScreenX
GetItemScreenX="GetItemScreenX(","item ",,~whichItem,")"
GetItemScreenXHint="[UjAPI]  real GetItemScreenX (item whichItem)"


GetItemScreenY=GetItemScreenY
GetItemScreenY="GetItemScreenY(","item ",,~whichItem,")"
GetItemScreenYHint="[UjAPI]  real GetItemScreenY (item whichItem)"


GetItemLife=GetItemLife
GetItemLife="GetItemLife(","item ",,~whichItem,")"
GetItemLifeHint="[UjAPI]  real GetItemLife (item whichItem)"


GetItemMaxLife=GetItemMaxLife
GetItemMaxLife="GetItemMaxLife(","item ",,~whichItem,")"
GetItemMaxLifeHint="[UjAPI]  real GetItemMaxLife (item whichItem)"


GetItemAbilityById=GetItemAbilityById
GetItemAbilityById="GetItemAbilityById(","item ",,~whichItem,", ","integer ",,~abilCode,")"
GetItemAbilityByIdHint="[UjAPI]  ability GetItemAbilityById (item whichItem, integer abilCode)"


GetItemAbilityByIndex=GetItemAbilityByIndex
GetItemAbilityByIndex="GetItemAbilityByIndex(","item ",,~whichItem,", ","integer ",,~index,")"
GetItemAbilityByIndexHint="[UjAPI]  ability GetItemAbilityByIndex (item whichItem, integer index)"


ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(","item ",,~whichItem,", ","ability ",,~whichAbility,")"
ItemAddAbilityHint="[UjAPI]  boolean ItemAddAbility (item whichItem, ability whichAbility)"


ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(","item ",,~whichItem,", ","ability ",,~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI]  boolean ItemRemoveAbility (item whichItem, ability whichAbility)"


ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(","item ",,~whichItem,", ","integer ",,~abilCode,")"
ItemAddAbilityByIdHint="[UjAPI]  boolean ItemAddAbilityById (item whichItem, integer abilCode)"


ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(","item ",,~whichItem,", ","integer ",,~abilCode,")"
ItemRemoveAbilityByIdHint="[UjAPI]  boolean ItemRemoveAbilityById (item whichItem, integer abilCode)"


GetItemCooldown=GetItemCooldown
GetItemCooldown="GetItemCooldown(","item ",,~whichItem,")"
GetItemCooldownHint="[UjAPI]  real GetItemCooldown (item whichItem)"


GetItemRemainingCooldown=GetItemRemainingCooldown
GetItemRemainingCooldown="GetItemRemainingCooldown(","item ",,~whichItem,")"
GetItemRemainingCooldownHint="[UjAPI]  real GetItemRemainingCooldown (item whichItem)"


GetItemPlayerColour=GetItemPlayerColour
GetItemPlayerColour="GetItemPlayerColour(","item ",,~whichItem,")"
GetItemPlayerColourHint="[UjAPI]  playercolor GetItemPlayerColour (item whichItem)"


GetItemVertexColour=GetItemVertexColour
GetItemVertexColour="GetItemVertexColour(","item ",,~whichItem,")"
GetItemVertexColourHint="[UjAPI]  integer GetItemVertexColour (item whichItem)"


GetItemTimeScale=GetItemTimeScale
GetItemTimeScale="GetItemTimeScale(","item ",,~whichItem,")"
GetItemTimeScaleHint="[UjAPI]  real GetItemTimeScale (item whichItem)"


GetItemScale=GetItemScale
GetItemScale="GetItemScale(","item ",,~whichItem,")"
GetItemScaleHint="[UjAPI]  real GetItemScale (item whichItem)"


GetItemFacing=GetItemFacing
GetItemFacing="GetItemFacing(","item ",,~whichItem,")"
GetItemFacingHint="[UjAPI]  real GetItemFacing (item whichItem)"


GetItemYaw=GetItemYaw
GetItemYaw="GetItemYaw(","item ",,~whichItem,")"
GetItemYawHint="[UjAPI]  real GetItemYaw (item whichItem)"


GetItemPitch=GetItemPitch
GetItemPitch="GetItemPitch(","item ",,~whichItem,")"
GetItemPitchHint="[UjAPI]  real GetItemPitch (item whichItem)"


GetItemRoll=GetItemRoll
GetItemRoll="GetItemRoll(","item ",,~whichItem,")"
GetItemRollHint="[UjAPI]  real GetItemRoll (item whichItem)"


GetItemModel=GetItemModel
GetItemModel="GetItemModel(","item ",,~whichItem,")"
GetItemModelHint="[UjAPI]  string GetItemModel (item whichItem)"


GetItemModelObjectX=GetItemModelObjectX
GetItemModelObjectX="GetItemModelObjectX(","item ",,~whichItem,", ","string ",,~whichObject,")"
GetItemModelObjectXHint="[UjAPI]  real GetItemModelObjectX (item whichItem, string whichObject)"


GetItemModelObjectY=GetItemModelObjectY
GetItemModelObjectY="GetItemModelObjectY(","item ",,~whichItem,", ","string ",,~whichObject,")"
GetItemModelObjectYHint="[UjAPI]  real GetItemModelObjectY (item whichItem, string whichObject)"


GetItemModelObjectZ=GetItemModelObjectZ
GetItemModelObjectZ="GetItemModelObjectZ(","item ",,~whichItem,", ","string ",,~whichObject,")"
GetItemModelObjectZHint="[UjAPI]  real GetItemModelObjectZ (item whichItem, string whichObject)"


GetItemModelObjectPositionLoc=GetItemModelObjectPositionLoc
GetItemModelObjectPositionLoc="GetItemModelObjectPositionLoc(","item ",,~whichItem,", ","string ",,~whichObject,")"
GetItemModelObjectPositionLocHint="[UjAPI]  location GetItemModelObjectPositionLoc (item whichItem, string whichObject)"


GetItemCurrentAnimationId=GetItemCurrentAnimationId
GetItemCurrentAnimationId="GetItemCurrentAnimationId(","item ",,~whichItem,")"
GetItemCurrentAnimationIdHint="[UjAPI]  integer GetItemCurrentAnimationId (item whichItem)"


GetItemCurrentAnimationName=GetItemCurrentAnimationName
GetItemCurrentAnimationName="GetItemCurrentAnimationName(","item ",,~whichItem,")"
GetItemCurrentAnimationNameHint="[UjAPI]  string GetItemCurrentAnimationName (item whichItem)"


GetItemAnimationOffsetPercent=GetItemAnimationOffsetPercent
GetItemAnimationOffsetPercent="GetItemAnimationOffsetPercent(","item ",,~whichItem,")"
GetItemAnimationOffsetPercentHint="[UjAPI]  real GetItemAnimationOffsetPercent (item whichItem)"


GetUnitBaseIntegerFieldById=GetUnitBaseIntegerFieldById
GetUnitBaseIntegerFieldById="GetUnitBaseIntegerFieldById(","integer ",,~unitTypeId,", ","unitintegerfield ",,~whichField,")"
GetUnitBaseIntegerFieldByIdHint="[UjAPI]  integer GetUnitBaseIntegerFieldById (integer unitTypeId, unitintegerfield whichField)"


SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(","integer ",,~unitTypeId,", ","unitintegerfield ",,~whichField,", ","integer ",,~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI]  boolean SetUnitBaseIntegerFieldById (integer unitTypeId, unitintegerfield whichField, integer value)"


GetUnitBaseBooleanFieldById=GetUnitBaseBooleanFieldById
GetUnitBaseBooleanFieldById="GetUnitBaseBooleanFieldById(","integer ",,~unitTypeId,", ","unitbooleanfield ",,~whichField,")"
GetUnitBaseBooleanFieldByIdHint="[UjAPI]  boolean GetUnitBaseBooleanFieldById (integer unitTypeId, unitbooleanfield whichField)"


SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(","integer ",,~unitTypeId,", ","unitbooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI]  boolean SetUnitBaseBooleanFieldById (integer unitTypeId, unitbooleanfield whichField, boolean value)"


GetUnitBaseRealFieldById=GetUnitBaseRealFieldById
GetUnitBaseRealFieldById="GetUnitBaseRealFieldById(","integer ",,~unitTypeId,", ","unitrealfield ",,~whichField,")"
GetUnitBaseRealFieldByIdHint="[UjAPI]  real GetUnitBaseRealFieldById (integer unitTypeId, unitrealfield whichField)"


SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(","integer ",,~unitTypeId,", ","unitrealfield ",,~whichField,", ","real ",,~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI]  boolean SetUnitBaseRealFieldById (integer unitTypeId, unitrealfield whichField, real value)"


GetUnitBaseStringFieldById=GetUnitBaseStringFieldById
GetUnitBaseStringFieldById="GetUnitBaseStringFieldById(","integer ",,~unitTypeId,", ","unitstringfield ",,~whichField,")"
GetUnitBaseStringFieldByIdHint="[UjAPI]  string GetUnitBaseStringFieldById (integer unitTypeId, unitstringfield whichField)"


SetUnitBaseStringFieldById=SetUnitBaseStringFieldById
SetUnitBaseStringFieldById="SetUnitBaseStringFieldById(","integer ",,~unitTypeId,", ","unitstringfield ",,~whichField,", ","string ",,~value,")"
SetUnitBaseStringFieldByIdHint="[UjAPI]  boolean SetUnitBaseStringFieldById (integer unitTypeId, unitstringfield whichField, string value)"


GetUnitBaseWeaponIntegerFieldById=GetUnitBaseWeaponIntegerFieldById
GetUnitBaseWeaponIntegerFieldById="GetUnitBaseWeaponIntegerFieldById(","integer ",,~unitTypeId,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,")"
GetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  integer GetUnitBaseWeaponIntegerFieldById (integer unitTypeId, unitweaponintegerfield whichField, integer index)"


SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(","integer ",,~unitTypeId,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponIntegerFieldById (integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value)"


GetUnitBaseWeaponBooleanFieldById=GetUnitBaseWeaponBooleanFieldById
GetUnitBaseWeaponBooleanFieldById="GetUnitBaseWeaponBooleanFieldById(","integer ",,~unitTypeId,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,")"
GetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  boolean GetUnitBaseWeaponBooleanFieldById (integer unitTypeId, unitweaponbooleanfield whichField, integer index)"


SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(","integer ",,~unitTypeId,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponBooleanFieldById (integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value)"


GetUnitBaseWeaponRealFieldById=GetUnitBaseWeaponRealFieldById
GetUnitBaseWeaponRealFieldById="GetUnitBaseWeaponRealFieldById(","integer ",,~unitTypeId,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,")"
GetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  real GetUnitBaseWeaponRealFieldById (integer unitTypeId, unitweaponrealfield whichField, integer index)"


SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(","integer ",,~unitTypeId,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponRealFieldById (integer unitTypeId, unitweaponrealfield whichField, integer index, real value)"


GetUnitBaseWeaponStringFieldById=GetUnitBaseWeaponStringFieldById
GetUnitBaseWeaponStringFieldById="GetUnitBaseWeaponStringFieldById(","integer ",,~unitTypeId,", ","unitweaponstringfield ",,~whichField,", ","integer ",,~index,")"
GetUnitBaseWeaponStringFieldByIdHint="[UjAPI]  string GetUnitBaseWeaponStringFieldById (integer unitTypeId, unitweaponstringfield whichField, integer index)"


SetUnitBaseWeaponStringFieldById=SetUnitBaseWeaponStringFieldById
SetUnitBaseWeaponStringFieldById="SetUnitBaseWeaponStringFieldById(","integer ",,~unitTypeId,", ","unitweaponstringfield ",,~whichField,", ","integer ",,~index,", ","string ",,~value,")"
SetUnitBaseWeaponStringFieldByIdHint="[UjAPI]  boolean SetUnitBaseWeaponStringFieldById (integer unitTypeId, unitweaponstringfield whichField, integer index, string value)"


GetUnitIntegerField=GetUnitIntegerField
GetUnitIntegerField="GetUnitIntegerField(","unit ",,~whichUnit,", ","unitintegerfield ",,~whichField,")"
GetUnitIntegerFieldHint="[UjAPI]  integer GetUnitIntegerField (unit whichUnit, unitintegerfield whichField)"


SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(","unit ",,~whichUnit,", ","unitintegerfield ",,~whichField,", ","integer ",,~value,")"
SetUnitIntegerFieldHint="[UjAPI]  boolean SetUnitIntegerField (unit whichUnit, unitintegerfield whichField, integer value)"


GetUnitBooleanField=GetUnitBooleanField
GetUnitBooleanField="GetUnitBooleanField(","unit ",,~whichUnit,", ","unitbooleanfield ",,~whichField,")"
GetUnitBooleanFieldHint="[UjAPI]  boolean GetUnitBooleanField (unit whichUnit, unitbooleanfield whichField)"


SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(","unit ",,~whichUnit,", ","unitbooleanfield ",,~whichField,", ","boolean ",,~value,")"
SetUnitBooleanFieldHint="[UjAPI]  boolean SetUnitBooleanField (unit whichUnit, unitbooleanfield whichField, boolean value)"


GetUnitRealField=GetUnitRealField
GetUnitRealField="GetUnitRealField(","unit ",,~whichUnit,", ","unitrealfield ",,~whichField,")"
GetUnitRealFieldHint="[UjAPI]  real GetUnitRealField (unit whichUnit, unitrealfield whichField)"


SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(","unit ",,~whichUnit,", ","unitrealfield ",,~whichField,", ","real ",,~value,")"
SetUnitRealFieldHint="[UjAPI]  boolean SetUnitRealField (unit whichUnit, unitrealfield whichField, real value)"


GetUnitStringField=GetUnitStringField
GetUnitStringField="GetUnitStringField(","unit ",,~whichUnit,", ","unitstringfield ",,~whichField,")"
GetUnitStringFieldHint="[UjAPI]  string GetUnitStringField (unit whichUnit, unitstringfield whichField)"


SetUnitStringField=SetUnitStringField
SetUnitStringField="SetUnitStringField(","unit ",,~whichUnit,", ","unitstringfield ",,~whichField,", ","string ",,~value,")"
SetUnitStringFieldHint="[UjAPI]  boolean SetUnitStringField (unit whichUnit, unitstringfield whichField, string value)"


GetUnitWeaponIntegerField=GetUnitWeaponIntegerField
GetUnitWeaponIntegerField="GetUnitWeaponIntegerField(","unit ",,~whichUnit,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,")"
GetUnitWeaponIntegerFieldHint="[UjAPI]  integer GetUnitWeaponIntegerField (unit whichUnit, unitweaponintegerfield whichField, integer index)"


SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(","unit ",,~whichUnit,", ","unitweaponintegerfield ",,~whichField,", ","integer ",,~index,", ","integer ",,~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI]  boolean SetUnitWeaponIntegerField (unit whichUnit, unitweaponintegerfield whichField, integer index, integer value)"


GetUnitWeaponBooleanField=GetUnitWeaponBooleanField
GetUnitWeaponBooleanField="GetUnitWeaponBooleanField(","unit ",,~whichUnit,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,")"
GetUnitWeaponBooleanFieldHint="[UjAPI]  boolean GetUnitWeaponBooleanField (unit whichUnit, unitweaponbooleanfield whichField, integer index)"


SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(","unit ",,~whichUnit,", ","unitweaponbooleanfield ",,~whichField,", ","integer ",,~index,", ","boolean ",,~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI]  boolean SetUnitWeaponBooleanField (unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value)"


GetUnitWeaponRealField=GetUnitWeaponRealField
GetUnitWeaponRealField="GetUnitWeaponRealField(","unit ",,~whichUnit,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,")"
GetUnitWeaponRealFieldHint="[UjAPI]  real GetUnitWeaponRealField (unit whichUnit, unitweaponrealfield whichField, integer index)"


SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(","unit ",,~whichUnit,", ","unitweaponrealfield ",,~whichField,", ","integer ",,~index,", ","real ",,~value,")"
SetUnitWeaponRealFieldHint="[UjAPI]  boolean SetUnitWeaponRealField (unit whichUnit, unitweaponrealfield whichField, integer index, real value)"


GetUnitWeaponStringField=GetUnitWeaponStringField
GetUnitWeaponStringField="GetUnitWeaponStringField(","unit ",,~whichUnit,", ","unitweaponstringfield ",,~whichField,", ","integer ",,~index,")"
GetUnitWeaponStringFieldHint="[UjAPI]  string GetUnitWeaponStringField (unit whichUnit, unitweaponstringfield whichField, integer index)"


SetUnitWeaponStringField=SetUnitWeaponStringField
SetUnitWeaponStringField="SetUnitWeaponStringField(","unit ",,~whichUnit,", ","unitweaponstringfield ",,~whichField,", ","integer ",,~index,", ","string ",,~value,")"
SetUnitWeaponStringFieldHint="[UjAPI]  boolean SetUnitWeaponStringField (unit whichUnit, unitweaponstringfield whichField, integer index, string value)"


GetUnitUnderCursor=GetUnitUnderCursor
GetUnitUnderCursor="GetUnitUnderCursor(",")"
GetUnitUnderCursorHint="[UjAPI]  unit GetUnitUnderCursor ()"


GetUnitSprite=GetUnitSprite
GetUnitSprite="GetUnitSprite(","unit ",,~whichUnit,")"
GetUnitSpriteHint="[UjAPI]  sprite GetUnitSprite (unit whichUnit)"


GetUnitHeight=GetUnitHeight
GetUnitHeight="GetUnitHeight(","unit ",,~whichUnit,")"
GetUnitHeightHint="[UjAPI]  real GetUnitHeight (unit whichUnit)"


GetUnitScreenX=GetUnitScreenX
GetUnitScreenX="GetUnitScreenX(","unit ",,~whichUnit,")"
GetUnitScreenXHint="[UjAPI]  real GetUnitScreenX (unit whichUnit)"


GetUnitScreenY=GetUnitScreenY
GetUnitScreenY="GetUnitScreenY(","unit ",,~whichUnit,")"
GetUnitScreenYHint="[UjAPI]  real GetUnitScreenY (unit whichUnit)"


GetUnitSelectedCountByPlayer=GetUnitSelectedCountByPlayer
GetUnitSelectedCountByPlayer="GetUnitSelectedCountByPlayer(","player ",,~whichPlayer,")"
GetUnitSelectedCountByPlayerHint="[UjAPI]  integer GetUnitSelectedCountByPlayer (player whichPlayer)"


GetUnitSelected=GetUnitSelected
GetUnitSelected="GetUnitSelected(","player ",,~whichPlayer,")"
GetUnitSelectedHint="[UjAPI]  unit GetUnitSelected (player whichPlayer)"


GetUnitInSelectionByIndex=GetUnitInSelectionByIndex
GetUnitInSelectionByIndex="GetUnitInSelectionByIndex(","player ",,~whichPlayer,", ","integer ",,~index,")"
GetUnitInSelectionByIndexHint="[UjAPI]  unit GetUnitInSelectionByIndex (player whichPlayer, integer index)"


GetFirstUnitInSelection=GetFirstUnitInSelection
GetFirstUnitInSelection="GetFirstUnitInSelection(","player ",,~whichPlayer,")"
GetFirstUnitInSelectionHint="[UjAPI]  unit GetFirstUnitInSelection (player whichPlayer)"


GetLastUnitInSelection=GetLastUnitInSelection
GetLastUnitInSelection="GetLastUnitInSelection(","player ",,~whichPlayer,")"
GetLastUnitInSelectionHint="[UjAPI]  unit GetLastUnitInSelection (player whichPlayer)"


IsUnitAlive=IsUnitAlive
IsUnitAlive="IsUnitAlive(","unit ",,~whichUnit,")"
IsUnitAliveHint="[UjAPI]  boolean IsUnitAlive (unit whichUnit)"


IsUnitDead=IsUnitDead
IsUnitDead="IsUnitDead(","unit ",,~whichUnit,")"
IsUnitDeadHint="[UjAPI]  boolean IsUnitDead (unit whichUnit)"


IsUnitMoving=IsUnitMoving
IsUnitMoving="IsUnitMoving(","unit ",,~whichUnit,")"
IsUnitMovingHint="[UjAPI]  boolean IsUnitMoving (unit whichUnit)"


IsUnitStunned=IsUnitStunned
IsUnitStunned="IsUnitStunned(","unit ",,~whichUnit,")"
IsUnitStunnedHint="[UjAPI]  boolean IsUnitStunned (unit whichUnit)"


IsUnitInvulnerable=IsUnitInvulnerable
IsUnitInvulnerable="IsUnitInvulnerable(","unit ",,~whichUnit,")"
IsUnitInvulnerableHint="[UjAPI]  boolean IsUnitInvulnerable (unit whichUnit)"


IsUnitHero=IsUnitHero
IsUnitHero="IsUnitHero(","unit ",,~whichUnit,")"
IsUnitHeroHint="[UjAPI]  boolean IsUnitHero (unit whichUnit)"


IsUnitTower=IsUnitTower
IsUnitTower="IsUnitTower(","unit ",,~whichUnit,")"
IsUnitTowerHint="[UjAPI]  boolean IsUnitTower (unit whichUnit)"


IsUnitShop=IsUnitShop
IsUnitShop="IsUnitShop(","unit ",,~whichUnit,")"
IsUnitShopHint="[UjAPI]  boolean IsUnitShop (unit whichUnit)"


IsUnitInventoryEnabled=IsUnitInventoryEnabled
IsUnitInventoryEnabled="IsUnitInventoryEnabled(","unit ",,~whichUnit,")"
IsUnitInventoryEnabledHint="[UjAPI]  boolean IsUnitInventoryEnabled (unit whichUnit)"


IsUnitMovementEnabled=IsUnitMovementEnabled
IsUnitMovementEnabled="IsUnitMovementEnabled(","unit ",,~whichUnit,")"
IsUnitMovementEnabledHint="[UjAPI]  boolean IsUnitMovementEnabled (unit whichUnit)"


IsUnitAttackEnabled=IsUnitAttackEnabled
IsUnitAttackEnabled="IsUnitAttackEnabled(","unit ",,~whichUnit,")"
IsUnitAttackEnabledHint="[UjAPI]  boolean IsUnitAttackEnabled (unit whichUnit)"


IsUnitStateNormal=IsUnitStateNormal
IsUnitStateNormal="IsUnitStateNormal(","unit ",,~whichUnit,", ","boolean ",,~additionalCheck,")"
IsUnitStateNormalHint="[UjAPI]  boolean IsUnitStateNormal (unit whichUnit, boolean additionalCheck)"


UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI]  boolean UnitAddAbilityEx (unit whichUnit, integer abilCode, boolean checkForDuplicates)"


UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(","unit ",,~whichUnit,", ","integer ",,~abilCode,", ","boolean ",,~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI]  boolean UnitRemoveAbilityEx (unit whichUnit, integer abilCode, boolean removeDuplicates)"


CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(","unit ",,~whichUnit,", ","boolean ",,~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI]  integer CountUnitAbilities (unit whichUnit, boolean alsoCountBuffs)"


GetUnitAbility=GetUnitAbility
GetUnitAbility="GetUnitAbility(","unit ",,~whichUnit,", ","integer ",,~aid,")"
GetUnitAbilityHint="[UjAPI]  ability GetUnitAbility (unit whichUnit, integer aid)"


GetUnitAbilityEx=GetUnitAbilityEx
GetUnitAbilityEx="GetUnitAbilityEx(","unit ",,~whichUnit,", ","integer ",,~aid,", ","integer ",,~id,")"
GetUnitAbilityExHint="[UjAPI]  ability GetUnitAbilityEx (unit whichUnit, integer aid, integer id)"


GetUnitAbilityByIndex=GetUnitAbilityByIndex
GetUnitAbilityByIndex="GetUnitAbilityByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
GetUnitAbilityByIndexHint="[UjAPI]  ability GetUnitAbilityByIndex (unit whichUnit, integer index)"


IsUnitAbilityVisible=IsUnitAbilityVisible
IsUnitAbilityVisible="IsUnitAbilityVisible(","unit ",,~whichUnit,", ","integer ",,~abilCode,")"
IsUnitAbilityVisibleHint="[UjAPI]  boolean IsUnitAbilityVisible (unit whichUnit, integer abilCode)"


UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(","unit ",,~whichUnit,", ","buff ",,~whichBuff,")"
UnitAddBuffHint="[UjAPI]  boolean UnitAddBuff (unit whichUnit, buff whichBuff)"


UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(","unit ",,~whichUnit,", ","buff ",,~whichBuff,", ","boolean ",,~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI]  boolean UnitAddBuffEx (unit whichUnit, buff whichBuff, boolean checkForDuplicates)"


UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(","unit ",,~whichUnit,", ","integer ",,~buffId,")"
UnitAddBuffByIdHint="[UjAPI]  boolean UnitAddBuffById (unit whichUnit, integer buffId)"


UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(","unit ",,~whichUnit,", ","integer ",,~buffId,", ","boolean ",,~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI]  boolean UnitAddBuffByIdEx (unit whichUnit, integer buffId, boolean checkForDuplicates)"


CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(","unit ",,~whichUnit,")"
CountUnitBuffsHint="[UjAPI]  integer CountUnitBuffs (unit whichUnit)"


GetUnitBuff=GetUnitBuff
GetUnitBuff="GetUnitBuff(","unit ",,~whichUnit,", ","integer ",,~buffId,")"
GetUnitBuffHint="[UjAPI]  buff GetUnitBuff (unit whichUnit, integer buffId)"


GetUnitBuffEx=GetUnitBuffEx
GetUnitBuffEx="GetUnitBuffEx(","unit ",,~whichUnit,", ","integer ",,~buffId,", ","integer ",,~id,")"
GetUnitBuffExHint="[UjAPI]  buff GetUnitBuffEx (unit whichUnit, integer buffId, integer id)"


GetUnitBuffByIndex=GetUnitBuffByIndex
GetUnitBuffByIndex="GetUnitBuffByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
GetUnitBuffByIndexHint="[UjAPI]  buff GetUnitBuffByIndex (unit whichUnit, integer index)"


GetUnitBuffLevel=GetUnitBuffLevel
GetUnitBuffLevel="GetUnitBuffLevel(","unit ",,~whichUnit,", ","integer ",,~buffId,")"
GetUnitBuffLevelHint="[UjAPI]  integer GetUnitBuffLevel (unit whichUnit, integer buffId)"


GetUnitRemainingTimedLife=GetUnitRemainingTimedLife
GetUnitRemainingTimedLife="GetUnitRemainingTimedLife(","unit ",,~whichUnit,")"
GetUnitRemainingTimedLifeHint="[UjAPI]  real GetUnitRemainingTimedLife (unit whichUnit)"


IsUnitGhosted=IsUnitGhosted
IsUnitGhosted="IsUnitGhosted(","unit ",,~whichUnit,")"
IsUnitGhostedHint="[UjAPI]  boolean IsUnitGhosted (unit whichUnit)"


IsUnitSelectable=IsUnitSelectable
IsUnitSelectable="IsUnitSelectable(","unit ",,~whichUnit,")"
IsUnitSelectableHint="[UjAPI]  boolean IsUnitSelectable (unit whichUnit)"


IsUnitTargetable=IsUnitTargetable
IsUnitTargetable="IsUnitTargetable(","unit ",,~whichUnit,")"
IsUnitTargetableHint="[UjAPI]  boolean IsUnitTargetable (unit whichUnit)"


IsUnitTruesightImmune=IsUnitTruesightImmune
IsUnitTruesightImmune="IsUnitTruesightImmune(","unit ",,~whichUnit,")"
IsUnitTruesightImmuneHint="[UjAPI]  boolean IsUnitTruesightImmune (unit whichUnit)"


GetUnitZ=GetUnitZ
GetUnitZ="GetUnitZ(","unit ",,~whichUnit,")"
GetUnitZHint="[UjAPI]  real GetUnitZ (unit whichUnit)"


GetUnitDamageReduction=GetUnitDamageReduction
GetUnitDamageReduction="GetUnitDamageReduction(","unit ",,~whichUnit,")"
GetUnitDamageReductionHint="[UjAPI]  real GetUnitDamageReduction (unit whichUnit)"


GetUnitMagicResistByType=GetUnitMagicResistByType
GetUnitMagicResistByType="GetUnitMagicResistByType(","unit ",,~whichUnit,", ","integer ",,~resistType,")"
GetUnitMagicResistByTypeHint="[UjAPI]  real GetUnitMagicResistByType (unit whichUnit, integer resistType)"


GetUnitEluneMagicResist=GetUnitEluneMagicResist
GetUnitEluneMagicResist="GetUnitEluneMagicResist(","unit ",,~whichUnit,")"
GetUnitEluneMagicResistHint="[UjAPI]  real GetUnitEluneMagicResist (unit whichUnit)"


GetUnitRunicMagicResist=GetUnitRunicMagicResist
GetUnitRunicMagicResist="GetUnitRunicMagicResist(","unit ",,~whichUnit,")"
GetUnitRunicMagicResistHint="[UjAPI]  real GetUnitRunicMagicResist (unit whichUnit)"


GetUnitTotalMagicResist=GetUnitTotalMagicResist
GetUnitTotalMagicResist="GetUnitTotalMagicResist(","unit ",,~whichUnit,")"
GetUnitTotalMagicResistHint="[UjAPI]  real GetUnitTotalMagicResist (unit whichUnit)"


IsUnitFlyHeightEnabled=IsUnitFlyHeightEnabled
IsUnitFlyHeightEnabled="IsUnitFlyHeightEnabled(","unit ",,~whichUnit,")"
IsUnitFlyHeightEnabledHint="[UjAPI]  boolean IsUnitFlyHeightEnabled (unit whichUnit)"


IsUnitGatherer=IsUnitGatherer
IsUnitGatherer="IsUnitGatherer(","unit ",,~whichUnit,")"
IsUnitGathererHint="[UjAPI]  boolean IsUnitGatherer (unit whichUnit)"


GetUnitResourceCurrent=GetUnitResourceCurrent
GetUnitResourceCurrent="GetUnitResourceCurrent(","unit ",,~whichUnit,")"
GetUnitResourceCurrentHint="[UjAPI]  integer GetUnitResourceCurrent (unit whichUnit)"


GetUnitResourceCapacity=GetUnitResourceCapacity
GetUnitResourceCapacity="GetUnitResourceCapacity(","unit ",,~whichUnit,", ","integer ",,~resourceType,")"
GetUnitResourceCapacityHint="[UjAPI]  integer GetUnitResourceCapacity (unit whichUnit, integer resourceType)"


GetUnitResourcePerGather=GetUnitResourcePerGather
GetUnitResourcePerGather="GetUnitResourcePerGather(","unit ",,~whichUnit,", ","integer ",,~resourceType,")"
GetUnitResourcePerGatherHint="[UjAPI]  integer GetUnitResourcePerGather (unit whichUnit, integer resourceType)"


GetUnitResourceGatherInterval=GetUnitResourceGatherInterval
GetUnitResourceGatherInterval="GetUnitResourceGatherInterval(","unit ",,~whichUnit,")"
GetUnitResourceGatherIntervalHint="[UjAPI]  real GetUnitResourceGatherInterval (unit whichUnit)"


GetUnitCurrentSight=GetUnitCurrentSight
GetUnitCurrentSight="GetUnitCurrentSight(","unit ",,~whichUnit,")"
GetUnitCurrentSightHint="[UjAPI]  real GetUnitCurrentSight (unit whichUnit)"


GetUnitAttackRemainingCooldown=GetUnitAttackRemainingCooldown
GetUnitAttackRemainingCooldown="GetUnitAttackRemainingCooldown(","unit ",,~whichUnit,")"
GetUnitAttackRemainingCooldownHint="[UjAPI]  real GetUnitAttackRemainingCooldown (unit whichUnit)"


GetUnitAttackRemainingDamagePoint=GetUnitAttackRemainingDamagePoint
GetUnitAttackRemainingDamagePoint="GetUnitAttackRemainingDamagePoint(","unit ",,~whichUnit,")"
GetUnitAttackRemainingDamagePointHint="[UjAPI]  real GetUnitAttackRemainingDamagePoint (unit whichUnit)"


GetUnitAttackRemainingBackswing=GetUnitAttackRemainingBackswing
GetUnitAttackRemainingBackswing="GetUnitAttackRemainingBackswing(","unit ",,~whichUnit,")"
GetUnitAttackRemainingBackswingHint="[UjAPI]  real GetUnitAttackRemainingBackswing (unit whichUnit)"


UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(","unit ",,~whichUnit,")"
UnitAttackCancelHint="[UjAPI]  boolean UnitAttackCancel (unit whichUnit)"


UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(","unit ",,~whichUnit,")"
UnitAttackRestartHint="[UjAPI]  boolean UnitAttackRestart (unit whichUnit)"


UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(","unit ",,~whichUnit,")"
UnitAttackFinishHint="[UjAPI]  boolean UnitAttackFinish (unit whichUnit)"


GetUnitAttackTypeByIndex=GetUnitAttackTypeByIndex
GetUnitAttackTypeByIndex="GetUnitAttackTypeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitAttackTypeByIndexHint="[UjAPI]  attacktype GetUnitAttackTypeByIndex (unit whichUnit, integer attackIndex)"


GetUnitWeaponTypeByIndex=GetUnitWeaponTypeByIndex
GetUnitWeaponTypeByIndex="GetUnitWeaponTypeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitWeaponTypeByIndexHint="[UjAPI]  weapontype GetUnitWeaponTypeByIndex (unit whichUnit, integer attackIndex)"


GetUnitWeaponSoundByIndex=GetUnitWeaponSoundByIndex
GetUnitWeaponSoundByIndex="GetUnitWeaponSoundByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitWeaponSoundByIndexHint="[UjAPI]  integer GetUnitWeaponSoundByIndex (unit whichUnit, integer attackIndex)"


GetUnitBaseDamageByIndex=GetUnitBaseDamageByIndex
GetUnitBaseDamageByIndex="GetUnitBaseDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitBaseDamageByIndexHint="[UjAPI]  integer GetUnitBaseDamageByIndex (unit whichUnit, integer attackIndex)"


GetUnitBonusDamageByIndex=GetUnitBonusDamageByIndex
GetUnitBonusDamageByIndex="GetUnitBonusDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitBonusDamageByIndexHint="[UjAPI]  integer GetUnitBonusDamageByIndex (unit whichUnit, integer attackIndex)"


GetUnitDamageDicesSideByIndex=GetUnitDamageDicesSideByIndex
GetUnitDamageDicesSideByIndex="GetUnitDamageDicesSideByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitDamageDicesSideByIndexHint="[UjAPI]  integer GetUnitDamageDicesSideByIndex (unit whichUnit, integer attackIndex)"


GetUnitDamageDicesByIndex=GetUnitDamageDicesByIndex
GetUnitDamageDicesByIndex="GetUnitDamageDicesByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitDamageDicesByIndexHint="[UjAPI]  integer GetUnitDamageDicesByIndex (unit whichUnit, integer attackIndex)"


GetUnitMinimumDamageByIndex=GetUnitMinimumDamageByIndex
GetUnitMinimumDamageByIndex="GetUnitMinimumDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitMinimumDamageByIndexHint="[UjAPI]  integer GetUnitMinimumDamageByIndex (unit whichUnit, integer attackIndex)"


GetUnitMaximumDamageByIndex=GetUnitMaximumDamageByIndex
GetUnitMaximumDamageByIndex="GetUnitMaximumDamageByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitMaximumDamageByIndexHint="[UjAPI]  integer GetUnitMaximumDamageByIndex (unit whichUnit, integer attackIndex)"


GetUnitAttackRangeByIndex=GetUnitAttackRangeByIndex
GetUnitAttackRangeByIndex="GetUnitAttackRangeByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitAttackRangeByIndexHint="[UjAPI]  real GetUnitAttackRangeByIndex (unit whichUnit, integer attackIndex)"


GetUnitAttackSpeed=GetUnitAttackSpeed
GetUnitAttackSpeed="GetUnitAttackSpeed(","unit ",,~whichUnit,")"
GetUnitAttackSpeedHint="[UjAPI]  real GetUnitAttackSpeed (unit whichUnit)"


GetUnitAttackCooldownByIndex=GetUnitAttackCooldownByIndex
GetUnitAttackCooldownByIndex="GetUnitAttackCooldownByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitAttackCooldownByIndexHint="[UjAPI]  real GetUnitAttackCooldownByIndex (unit whichUnit, integer attackIndex)"


GetUnitBackswingPointByIndex=GetUnitBackswingPointByIndex
GetUnitBackswingPointByIndex="GetUnitBackswingPointByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitBackswingPointByIndexHint="[UjAPI]  real GetUnitBackswingPointByIndex (unit whichUnit, integer attackIndex)"


GetUnitDamagePointByIndex=GetUnitDamagePointByIndex
GetUnitDamagePointByIndex="GetUnitDamagePointByIndex(","unit ",,~whichUnit,", ","integer ",,~attackIndex,")"
GetUnitDamagePointByIndexHint="[UjAPI]  real GetUnitDamagePointByIndex (unit whichUnit, integer attackIndex)"


GetUnitAttacksEnabledIndex=GetUnitAttacksEnabledIndex
GetUnitAttacksEnabledIndex="GetUnitAttacksEnabledIndex(","unit ",,~whichUnit,")"
GetUnitAttacksEnabledIndexHint="[UjAPI]  integer GetUnitAttacksEnabledIndex (unit whichUnit)"


GetUnitArmourType=GetUnitArmourType
GetUnitArmourType="GetUnitArmourType(","unit ",,~whichUnit,")"
GetUnitArmourTypeHint="[UjAPI]  defensetype GetUnitArmourType (unit whichUnit)"


GetUnitArmour=GetUnitArmour
GetUnitArmour="GetUnitArmour(","unit ",,~whichUnit,")"
GetUnitArmourHint="[UjAPI]  real GetUnitArmour (unit whichUnit)"


GetUnitTimeScale=GetUnitTimeScale
GetUnitTimeScale="GetUnitTimeScale(","unit ",,~whichUnit,")"
GetUnitTimeScaleHint="[UjAPI]  real GetUnitTimeScale (unit whichUnit)"


GetUnitTotalMoveSpeed=GetUnitTotalMoveSpeed
GetUnitTotalMoveSpeed="GetUnitTotalMoveSpeed(","unit ",,~whichUnit,")"
GetUnitTotalMoveSpeedHint="[UjAPI]  real GetUnitTotalMoveSpeed (unit whichUnit)"


GetUnitBaseMoveSpeed=GetUnitBaseMoveSpeed
GetUnitBaseMoveSpeed="GetUnitBaseMoveSpeed(","unit ",,~whichUnit,")"
GetUnitBaseMoveSpeedHint="[UjAPI]  real GetUnitBaseMoveSpeed (unit whichUnit)"


GetUnitBonusMoveSpeedPercent=GetUnitBonusMoveSpeedPercent
GetUnitBonusMoveSpeedPercent="GetUnitBonusMoveSpeedPercent(","unit ",,~whichUnit,")"
GetUnitBonusMoveSpeedPercentHint="[UjAPI]  real GetUnitBonusMoveSpeedPercent (unit whichUnit)"


GetUnitPlayerColour=GetUnitPlayerColour
GetUnitPlayerColour="GetUnitPlayerColour(","unit ",,~whichUnit,")"
GetUnitPlayerColourHint="[UjAPI]  playercolor GetUnitPlayerColour (unit whichUnit)"


GetUnitVertexColour=GetUnitVertexColour
GetUnitVertexColour="GetUnitVertexColour(","unit ",,~whichUnit,")"
GetUnitVertexColourHint="[UjAPI]  integer GetUnitVertexColour (unit whichUnit)"


UnitAddItemToSlot=UnitAddItemToSlot
UnitAddItemToSlot="UnitAddItemToSlot(","unit ",,~whichUnit,", ","item ",,~whichItem,", ","integer ",,~itemSlot,")"
UnitAddItemToSlotHint="[UjAPI]  boolean UnitAddItemToSlot (unit whichUnit, item whichItem, integer itemSlot)"


ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(","unit ",,~whichUnit,", ","real ",,~x,", ","real ",,~y,")"
ReviveUnitHint="[UjAPI]  boolean ReviveUnit (unit whichUnit, real x, real y)"


ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(","unit ",,~whichUnit,", ","location ",,~loc,")"
ReviveUnitLocHint="[UjAPI]  boolean ReviveUnitLoc (unit whichUnit, location loc)"


GetUnitCurrentLife=GetUnitCurrentLife
GetUnitCurrentLife="GetUnitCurrentLife(","unit ",,~whichUnit,")"
GetUnitCurrentLifeHint="[UjAPI]  real GetUnitCurrentLife (unit whichUnit)"


GetUnitMaxLife=GetUnitMaxLife
GetUnitMaxLife="GetUnitMaxLife(","unit ",,~whichUnit,")"
GetUnitMaxLifeHint="[UjAPI]  real GetUnitMaxLife (unit whichUnit)"


GetUnitLifeRegen=GetUnitLifeRegen
GetUnitLifeRegen="GetUnitLifeRegen(","unit ",,~whichUnit,")"
GetUnitLifeRegenHint="[UjAPI]  real GetUnitLifeRegen (unit whichUnit)"


GetUnitCurrentMana=GetUnitCurrentMana
GetUnitCurrentMana="GetUnitCurrentMana(","unit ",,~whichUnit,")"
GetUnitCurrentManaHint="[UjAPI]  real GetUnitCurrentMana (unit whichUnit)"


GetUnitMaxMana=GetUnitMaxMana
GetUnitMaxMana="GetUnitMaxMana(","unit ",,~whichUnit,")"
GetUnitMaxManaHint="[UjAPI]  real GetUnitMaxMana (unit whichUnit)"


GetUnitManaRegen=GetUnitManaRegen
GetUnitManaRegen="GetUnitManaRegen(","unit ",,~whichUnit,")"
GetUnitManaRegenHint="[UjAPI]  real GetUnitManaRegen (unit whichUnit)"


GetHeroPrimaryAttribute=GetHeroPrimaryAttribute
GetHeroPrimaryAttribute="GetHeroPrimaryAttribute(","unit ",,~whichUnit,")"
GetHeroPrimaryAttributeHint="[UjAPI]  heroattribute GetHeroPrimaryAttribute (unit whichUnit)"


GetUnitModel=GetUnitModel
GetUnitModel="GetUnitModel(","unit ",,~whichUnit,")"
GetUnitModelHint="[UjAPI]  string GetUnitModel (unit whichUnit)"


GetUnitCollisionType=GetUnitCollisionType
GetUnitCollisionType="GetUnitCollisionType(","unit ",,~whichUnit,")"
GetUnitCollisionTypeHint="[UjAPI]  collisiontype GetUnitCollisionType (unit whichUnit)"


GetUnitPathingAIType=GetUnitPathingAIType
GetUnitPathingAIType="GetUnitPathingAIType(","unit ",,~whichUnit,")"
GetUnitPathingAITypeHint="[UjAPI]  pathingaitype GetUnitPathingAIType (unit whichUnit)"


GetUnitPathingType=GetUnitPathingType
GetUnitPathingType="GetUnitPathingType(","unit ",,~whichUnit,")"
GetUnitPathingTypeHint="[UjAPI]  pathingtype GetUnitPathingType (unit whichUnit)"


GetUnitItemSlots=GetUnitItemSlots
GetUnitItemSlots="GetUnitItemSlots(","unit ",,~whichUnit,")"
GetUnitItemSlotsHint="[UjAPI]  integer GetUnitItemSlots (unit whichUnit)"


GetUnitMinimapX=GetUnitMinimapX
GetUnitMinimapX="GetUnitMinimapX(","unit ",,~whichUnit,")"
GetUnitMinimapXHint="[UjAPI]  real GetUnitMinimapX (unit whichUnit)"


GetUnitMinimapY=GetUnitMinimapY
GetUnitMinimapY="GetUnitMinimapY(","unit ",,~whichUnit,")"
GetUnitMinimapYHint="[UjAPI]  real GetUnitMinimapY (unit whichUnit)"


GetUnitRallyPointX=GetUnitRallyPointX
GetUnitRallyPointX="GetUnitRallyPointX(","unit ",,~whichUnit,")"
GetUnitRallyPointXHint="[UjAPI]  real GetUnitRallyPointX (unit whichUnit)"


GetUnitRallyPointY=GetUnitRallyPointY
GetUnitRallyPointY="GetUnitRallyPointY(","unit ",,~whichUnit,")"
GetUnitRallyPointYHint="[UjAPI]  real GetUnitRallyPointY (unit whichUnit)"


GetHeroMaxLevelExperienceNeeded=GetHeroMaxLevelExperienceNeeded
GetHeroMaxLevelExperienceNeeded="GetHeroMaxLevelExperienceNeeded(","unit ",,~whichUnit,")"
GetHeroMaxLevelExperienceNeededHint="[UjAPI]  integer GetHeroMaxLevelExperienceNeeded (unit whichUnit)"


GetHeroExperienceNeeded=GetHeroExperienceNeeded
GetHeroExperienceNeeded="GetHeroExperienceNeeded(","unit ",,~whichUnit,", ","integer ",,~forLevel,")"
GetHeroExperienceNeededHint="[UjAPI]  integer GetHeroExperienceNeeded (unit whichUnit, integer forLevel)"


GetUnitStunCounter=GetUnitStunCounter
GetUnitStunCounter="GetUnitStunCounter(","unit ",,~whichUnit,")"
GetUnitStunCounterHint="[UjAPI]  integer GetUnitStunCounter (unit whichUnit)"


GetUnitTarget=GetUnitTarget
GetUnitTarget="GetUnitTarget(","unit ",,~whichUnit,")"
GetUnitTargetHint="[UjAPI]  widget GetUnitTarget (unit whichUnit)"


GetUnitTargetUnit=GetUnitTargetUnit
GetUnitTargetUnit="GetUnitTargetUnit(","unit ",,~whichUnit,")"
GetUnitTargetUnitHint="[UjAPI]  unit GetUnitTargetUnit (unit whichUnit)"


GetUnitTargetItem=GetUnitTargetItem
GetUnitTargetItem="GetUnitTargetItem(","unit ",,~whichUnit,")"
GetUnitTargetItemHint="[UjAPI]  item GetUnitTargetItem (unit whichUnit)"


GetUnitTargetDestructable=GetUnitTargetDestructable
GetUnitTargetDestructable="GetUnitTargetDestructable(","unit ",,~whichUnit,")"
GetUnitTargetDestructableHint="[UjAPI]  destructable GetUnitTargetDestructable (unit whichUnit)"


MorphUnitToTypeIdEx=MorphUnitToTypeIdEx
MorphUnitToTypeIdEx="MorphUnitToTypeIdEx(","unit ",,~whichUnit,", ","integer ",,~uid,", ","integer ",,~unitFlags,", ","boolean ",,~updateHealthState,", ","boolean ",,~updateManaState,", ","integer ",,~healthStateId,", ","integer ",,~manaStateId,", ","boolean ",,~updateScale,", ","boolean ",,~replaceAbilities,", ","ability ",,~whichAbility,", ","boolean ",,~resetBuildingAnimation,")"
MorphUnitToTypeIdExHint="[UjAPI]  nothing MorphUnitToTypeIdEx (unit whichUnit, integer uid, integer unitFlags, boolean updateHealthState, boolean updateManaState, integer healthStateId, integer manaStateId, boolean updateScale, boolean replaceAbilities, ability whichAbility, boolean resetBuildingAnimation)"


MorphUnitToTypeId=MorphUnitToTypeId
MorphUnitToTypeId="MorphUnitToTypeId(","unit ",,~whichUnit,", ","integer ",,~uid,")"
MorphUnitToTypeIdHint="[UjAPI]  nothing MorphUnitToTypeId (unit whichUnit, integer uid)"


GetUnitModelObjectX=GetUnitModelObjectX
GetUnitModelObjectX="GetUnitModelObjectX(","unit ",,~whichUnit,", ","string ",,~whichObject,")"
GetUnitModelObjectXHint="[UjAPI]  real GetUnitModelObjectX (unit whichUnit, string whichObject)"


GetUnitModelObjectY=GetUnitModelObjectY
GetUnitModelObjectY="GetUnitModelObjectY(","unit ",,~whichUnit,", ","string ",,~whichObject,")"
GetUnitModelObjectYHint="[UjAPI]  real GetUnitModelObjectY (unit whichUnit, string whichObject)"


GetUnitModelObjectZ=GetUnitModelObjectZ
GetUnitModelObjectZ="GetUnitModelObjectZ(","unit ",,~whichUnit,", ","string ",,~whichObject,")"
GetUnitModelObjectZHint="[UjAPI]  real GetUnitModelObjectZ (unit whichUnit, string whichObject)"


GetUnitModelObjectPositionLoc=GetUnitModelObjectPositionLoc
GetUnitModelObjectPositionLoc="GetUnitModelObjectPositionLoc(","unit ",,~whichUnit,", ","string ",,~whichObject,")"
GetUnitModelObjectPositionLocHint="[UjAPI]  location GetUnitModelObjectPositionLoc (unit whichUnit, string whichObject)"


GetUnitCurrentAnimationId=GetUnitCurrentAnimationId
GetUnitCurrentAnimationId="GetUnitCurrentAnimationId(","unit ",,~whichUnit,")"
GetUnitCurrentAnimationIdHint="[UjAPI]  integer GetUnitCurrentAnimationId (unit whichUnit)"


GetUnitCurrentAnimationName=GetUnitCurrentAnimationName
GetUnitCurrentAnimationName="GetUnitCurrentAnimationName(","unit ",,~whichUnit,")"
GetUnitCurrentAnimationNameHint="[UjAPI]  string GetUnitCurrentAnimationName (unit whichUnit)"


GetUnitAnimationOffsetPercent=GetUnitAnimationOffsetPercent
GetUnitAnimationOffsetPercent="GetUnitAnimationOffsetPercent(","unit ",,~whichUnit,")"
GetUnitAnimationOffsetPercentHint="[UjAPI]  real GetUnitAnimationOffsetPercent (unit whichUnit)"


IsUnitAutoOrientationEnabled=IsUnitAutoOrientationEnabled
IsUnitAutoOrientationEnabled="IsUnitAutoOrientationEnabled(","unit ",,~whichUnit,")"
IsUnitAutoOrientationEnabledHint="[UjAPI]  boolean IsUnitAutoOrientationEnabled (unit whichUnit)"


GetUnitYaw=GetUnitYaw
GetUnitYaw="GetUnitYaw(","unit ",,~whichUnit,")"
GetUnitYawHint="[UjAPI]  real GetUnitYaw (unit whichUnit)"


GetUnitPitch=GetUnitPitch
GetUnitPitch="GetUnitPitch(","unit ",,~whichUnit,")"
GetUnitPitchHint="[UjAPI]  real GetUnitPitch (unit whichUnit)"


GetUnitRoll=GetUnitRoll
GetUnitRoll="GetUnitRoll(","unit ",,~whichUnit,")"
GetUnitRollHint="[UjAPI]  real GetUnitRoll (unit whichUnit)"


CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
CreateBuildingHint="[UjAPI]  unit CreateBuilding (player whichPlayer, integer unitTypeId, real x, real y, real facing)"


CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,", ","boolean ",,~isAutoBuild,", ","boolean ",,~workersCanAssist,")"
CreateBuildingExHint="[UjAPI]  unit CreateBuildingEx (player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist)"


UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(","unit ",,~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI]  real UnitGetConstructionProgress (unit whichUnit)"


UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(","unit ",,~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI]  real UnitGetConstructionRemainingTime (unit whichUnit)"


UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(","unit ",,~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI]  real UnitGetUpgradeProgress (unit whichUnit)"


UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(","unit ",,~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI]  real UnitGetUpgradeRemainingTime (unit whichUnit)"


UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(","unit ",,~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI]  real UnitGetTrainingProgress (unit whichUnit)"


UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(","unit ",,~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI]  real UnitGetTrainingRemainingTime (unit whichUnit)"


UnitGetTrainingTypeIdAt=UnitGetTrainingTypeIdAt
UnitGetTrainingTypeIdAt="UnitGetTrainingTypeIdAt(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitGetTrainingTypeIdAtHint="[UjAPI]  integer UnitGetTrainingTypeIdAt (unit whichUnit, integer index)"


UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(","unit ",,~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI]  real UnitGetResearchProgress (unit whichUnit)"


UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(","unit ",,~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI]  real UnitGetResearchRemainingTime (unit whichUnit)"


UnitGetResearchTypeIdAt=UnitGetResearchTypeIdAt
UnitGetResearchTypeIdAt="UnitGetResearchTypeIdAt(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitGetResearchTypeIdAtHint="[UjAPI]  integer UnitGetResearchTypeIdAt (unit whichUnit, integer index)"


CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","real ",,~x,", ","real ",,~y,", ","real ",,~facing,")"
CreateIllusionHint="[UjAPI]  unit CreateIllusion (player whichPlayer, integer unitTypeId, real x, real y, real facing)"


CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(","player ",,~whichPlayer,", ","integer ",,~unitTypeId,", ","location ",,~whichLocation,", ","real ",,~facing,")"
CreateIllusionAtLocHint="[UjAPI]  unit CreateIllusionAtLoc (player whichPlayer, integer unitTypeId, location whichLocation, real facing)"


CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(","unit ",,~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI]  unit CreateIllusionFromUnit (unit whichUnit)"


CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(","unit ",,~whichUnit,", ","boolean ",,~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI]  unit CreateIllusionFromUnitEx (unit whichUnit, boolean copyPassives)"


GetIllusionDamageDealt=GetIllusionDamageDealt
GetIllusionDamageDealt="GetIllusionDamageDealt(","unit ",,~whichUnit,")"
GetIllusionDamageDealtHint="[UjAPI]  real GetIllusionDamageDealt (unit whichUnit)"


GetIllusionDamageReceived=GetIllusionDamageReceived
GetIllusionDamageReceived="GetIllusionDamageReceived(","unit ",,~whichUnit,")"
GetIllusionDamageReceivedHint="[UjAPI]  real GetIllusionDamageReceived (unit whichUnit)"


QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(","unit ",,~whichUnit,", ","integer ",,~order,")"
QueueImmediateOrderByIdHint="[UjAPI]  boolean QueueImmediateOrderById (unit whichUnit, integer order)"


QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,")"
QueuePointOrderByIdHint="[UjAPI]  boolean QueuePointOrderById (unit whichUnit, integer order, real x, real y)"


QueueTargetOrderById=QueueTargetOrderById
QueueTargetOrderById="QueueTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,")"
QueueTargetOrderByIdHint="[UjAPI]  boolean QueueTargetOrderById (unit whichUnit, integer order, widget targetWidget)"


QueueInstantPointOrderById=QueueInstantPointOrderById
QueueInstantPointOrderById="QueueInstantPointOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","real ",,~x,", ","real ",,~y,", ","widget ",,~instantTargetWidget,")"
QueueInstantPointOrderByIdHint="[UjAPI]  boolean QueueInstantPointOrderById (unit whichUnit, integer order, real x, real y, widget instantTargetWidget)"


QueueInstantTargetOrderById=QueueInstantTargetOrderById
QueueInstantTargetOrderById="QueueInstantTargetOrderById(","unit ",,~whichUnit,", ","integer ",,~order,", ","widget ",,~targetWidget,", ","widget ",,~instantTargetWidget,")"
QueueInstantTargetOrderByIdHint="[UjAPI]  boolean QueueInstantTargetOrderById (unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget)"


QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(","unit ",,~whichPeon,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
QueueBuildOrderByIdHint="[UjAPI]  boolean QueueBuildOrderById (unit whichPeon, integer unitId, real x, real y)"


QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI]  boolean QueueNeutralImmediateOrderById (player forWhichPlayer, unit neutralStructure, integer unitId)"


QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","real ",,~x,", ","real ",,~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI]  boolean QueueNeutralPointOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, real x, real y)"


QueueNeutralTargetOrderById=QueueNeutralTargetOrderById
QueueNeutralTargetOrderById="QueueNeutralTargetOrderById(","player ",,~forWhichPlayer,", ","unit ",,~neutralStructure,", ","integer ",,~unitId,", ","widget ",,~target,")"
QueueNeutralTargetOrderByIdHint="[UjAPI]  boolean QueueNeutralTargetOrderById (player forWhichPlayer, unit neutralStructure, integer unitId, widget target)"


GetUnitOrderCount=GetUnitOrderCount
GetUnitOrderCount="GetUnitOrderCount(","unit ",,~whichUnit,")"
GetUnitOrderCountHint="[UjAPI]  integer GetUnitOrderCount (unit whichUnit)"


GetUnitOrderByIndex=GetUnitOrderByIndex
GetUnitOrderByIndex="GetUnitOrderByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
GetUnitOrderByIndexHint="[UjAPI]  orderhandle GetUnitOrderByIndex (unit whichUnit, integer index)"


GetUnitOrderByOrderId=GetUnitOrderByOrderId
GetUnitOrderByOrderId="GetUnitOrderByOrderId(","unit ",,~whichUnit,", ","integer ",,~orderId,", ","integer ",,~index,")"
GetUnitOrderByOrderIdHint="[UjAPI]  orderhandle GetUnitOrderByOrderId (unit whichUnit, integer orderId, integer index)"


GetUnitOrderIdByIndex=GetUnitOrderIdByIndex
GetUnitOrderIdByIndex="GetUnitOrderIdByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
GetUnitOrderIdByIndexHint="[UjAPI]  integer GetUnitOrderIdByIndex (unit whichUnit, integer index)"


UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(","unit ",,~whichUnit,", ","integer ",,~index,")"
UnitRemoveOrderByIndexHint="[UjAPI]  boolean UnitRemoveOrderByIndex (unit whichUnit, integer index)"


UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(","unit ",,~whichUnit,", ","integer ",,~orderId,", ","boolean ",,~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI]  boolean UnitRemoveOrderByOrderId (unit whichUnit, integer orderId, boolean eraseAllSimilar)"


GetTriggerOrder=GetTriggerOrder
GetTriggerOrder="GetTriggerOrder(",")"
GetTriggerOrderHint="[UjAPI]  orderhandle GetTriggerOrder ()"


OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(","orderhandle ",,~whichOrder,")"
OrderGetNextHint="[UjAPI]  orderhandle OrderGetNext (orderhandle whichOrder)"


OrderGetId=OrderGetId
OrderGetId="OrderGetId(","orderhandle ",,~whichOrder,")"
OrderGetIdHint="[UjAPI]  integer OrderGetId (orderhandle whichOrder)"


OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(","orderhandle ",,~whichOrder,")"
OrderGetTargetXHint="[UjAPI]  real OrderGetTargetX (orderhandle whichOrder)"


OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(","orderhandle ",,~whichOrder,")"
OrderGetTargetYHint="[UjAPI]  real OrderGetTargetY (orderhandle whichOrder)"


OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(","orderhandle ",,~whichOrder,")"
OrderGetTargetLocHint="[UjAPI]  location OrderGetTargetLoc (orderhandle whichOrder)"


OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(","orderhandle ",,~whichOrder,")"
OrderGetSourceXHint="[UjAPI]  real OrderGetSourceX (orderhandle whichOrder)"


OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(","orderhandle ",,~whichOrder,")"
OrderGetSourceYHint="[UjAPI]  real OrderGetSourceY (orderhandle whichOrder)"


OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(","orderhandle ",,~whichOrder,")"
OrderGetSourceLocHint="[UjAPI]  location OrderGetSourceLoc (orderhandle whichOrder)"


OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(","orderhandle ",,~whichOrder,")"
OrderGetTargetHint="[UjAPI]  widget OrderGetTarget (orderhandle whichOrder)"


OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(","orderhandle ",,~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI]  destructable OrderGetTargetDestructable (orderhandle whichOrder)"


OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(","orderhandle ",,~whichOrder,")"
OrderGetTargetItemHint="[UjAPI]  item OrderGetTargetItem (orderhandle whichOrder)"


OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(","orderhandle ",,~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI]  unit OrderGetTargetUnit (orderhandle whichOrder)"


CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(","integer ",,~projectileTypeId,")"
CreateProjectileHint="[UjAPI]  projectile CreateProjectile (integer projectileTypeId)"


CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(","unit ",,~owner,", ","integer ",,~projectileTypeId,", ","integer ",,~attackIndex,")"
CreateProjectileExHint="[UjAPI]  projectile CreateProjectileEx (unit owner, integer projectileTypeId, integer attackIndex)"


GetProjectileSprite=GetProjectileSprite
GetProjectileSprite="GetProjectileSprite(","projectile ",,~whichProjectile,")"
GetProjectileSpriteHint="[UjAPI]  sprite GetProjectileSprite (projectile whichProjectile)"


IsProjectileType=IsProjectileType
IsProjectileType="IsProjectileType(","projectile ",,~whichProjectile,", ","projectiletype ",,~whichType,")"
IsProjectileTypeHint="[UjAPI]  boolean IsProjectileType (projectile whichProjectile, projectiletype whichType)"


IsProjectileAlive=IsProjectileAlive
IsProjectileAlive="IsProjectileAlive(","projectile ",,~whichProjectile,")"
IsProjectileAliveHint="[UjAPI]  boolean IsProjectileAlive (projectile whichProjectile)"


IsProjectileVisible=IsProjectileVisible
IsProjectileVisible="IsProjectileVisible(","projectile ",,~whichProjectile,")"
IsProjectileVisibleHint="[UjAPI]  boolean IsProjectileVisible (projectile whichProjectile)"


GetProjectileX=GetProjectileX
GetProjectileX="GetProjectileX(","projectile ",,~whichProjectile,")"
GetProjectileXHint="[UjAPI]  real GetProjectileX (projectile whichProjectile)"


GetProjectileY=GetProjectileY
GetProjectileY="GetProjectileY(","projectile ",,~whichProjectile,")"
GetProjectileYHint="[UjAPI]  real GetProjectileY (projectile whichProjectile)"


GetProjectileZ=GetProjectileZ
GetProjectileZ="GetProjectileZ(","projectile ",,~whichProjectile,")"
GetProjectileZHint="[UjAPI]  real GetProjectileZ (projectile whichProjectile)"


GetProjectileScreenX=GetProjectileScreenX
GetProjectileScreenX="GetProjectileScreenX(","projectile ",,~whichProjectile,")"
GetProjectileScreenXHint="[UjAPI]  real GetProjectileScreenX (projectile whichProjectile)"


GetProjectileScreenY=GetProjectileScreenY
GetProjectileScreenY="GetProjectileScreenY(","projectile ",,~whichProjectile,")"
GetProjectileScreenYHint="[UjAPI]  real GetProjectileScreenY (projectile whichProjectile)"


GetProjectileHeight=GetProjectileHeight
GetProjectileHeight="GetProjectileHeight(","projectile ",,~whichProjectile,")"
GetProjectileHeightHint="[UjAPI]  real GetProjectileHeight (projectile whichProjectile)"


GetProjectilePositionLoc=GetProjectilePositionLoc
GetProjectilePositionLoc="GetProjectilePositionLoc(","projectile ",,~whichProjectile,")"
GetProjectilePositionLocHint="[UjAPI]  location GetProjectilePositionLoc (projectile whichProjectile)"


GetProjectileScale=GetProjectileScale
GetProjectileScale="GetProjectileScale(","projectile ",,~whichProjectile,")"
GetProjectileScaleHint="[UjAPI]  real GetProjectileScale (projectile whichProjectile)"


GetProjectileTimeScale=GetProjectileTimeScale
GetProjectileTimeScale="GetProjectileTimeScale(","projectile ",,~whichProjectile,")"
GetProjectileTimeScaleHint="[UjAPI]  real GetProjectileTimeScale (projectile whichProjectile)"


GetProjectilePlayerColour=GetProjectilePlayerColour
GetProjectilePlayerColour="GetProjectilePlayerColour(","projectile ",,~whichProjectile,")"
GetProjectilePlayerColourHint="[UjAPI]  playercolor GetProjectilePlayerColour (projectile whichProjectile)"


GetProjectileColour=GetProjectileColour
GetProjectileColour="GetProjectileColour(","projectile ",,~whichProjectile,")"
GetProjectileColourHint="[UjAPI]  integer GetProjectileColour (projectile whichProjectile)"


GetProjectileYaw=GetProjectileYaw
GetProjectileYaw="GetProjectileYaw(","projectile ",,~whichProjectile,")"
GetProjectileYawHint="[UjAPI]  real GetProjectileYaw (projectile whichProjectile)"


GetProjectileFacing=GetProjectileFacing
GetProjectileFacing="GetProjectileFacing(","projectile ",,~whichProjectile,")"
GetProjectileFacingHint="[UjAPI]  real GetProjectileFacing (projectile whichProjectile)"


GetProjectilePitch=GetProjectilePitch
GetProjectilePitch="GetProjectilePitch(","projectile ",,~whichProjectile,")"
GetProjectilePitchHint="[UjAPI]  real GetProjectilePitch (projectile whichProjectile)"


GetProjectileRoll=GetProjectileRoll
GetProjectileRoll="GetProjectileRoll(","projectile ",,~whichProjectile,")"
GetProjectileRollHint="[UjAPI]  real GetProjectileRoll (projectile whichProjectile)"


GetProjectileModel=GetProjectileModel
GetProjectileModel="GetProjectileModel(","projectile ",,~whichProjectile,")"
GetProjectileModelHint="[UjAPI]  string GetProjectileModel (projectile whichProjectile)"


GetProjectileModelObjectX=GetProjectileModelObjectX
GetProjectileModelObjectX="GetProjectileModelObjectX(","projectile ",,~whichProjectile,", ","string ",,~whichObject,")"
GetProjectileModelObjectXHint="[UjAPI]  real GetProjectileModelObjectX (projectile whichProjectile, string whichObject)"


GetProjectileModelObjectY=GetProjectileModelObjectY
GetProjectileModelObjectY="GetProjectileModelObjectY(","projectile ",,~whichProjectile,", ","string ",,~whichObject,")"
GetProjectileModelObjectYHint="[UjAPI]  real GetProjectileModelObjectY (projectile whichProjectile, string whichObject)"


GetProjectileModelObjectZ=GetProjectileModelObjectZ
GetProjectileModelObjectZ="GetProjectileModelObjectZ(","projectile ",,~whichProjectile,", ","string ",,~whichObject,")"
GetProjectileModelObjectZHint="[UjAPI]  real GetProjectileModelObjectZ (projectile whichProjectile, string whichObject)"


GetProjectileModelObjectPositionLoc=GetProjectileModelObjectPositionLoc
GetProjectileModelObjectPositionLoc="GetProjectileModelObjectPositionLoc(","projectile ",,~whichProjectile,", ","string ",,~whichObject,")"
GetProjectileModelObjectPositionLocHint="[UjAPI]  location GetProjectileModelObjectPositionLoc (projectile whichProjectile, string whichObject)"


GetProjectileCurrentAnimationId=GetProjectileCurrentAnimationId
GetProjectileCurrentAnimationId="GetProjectileCurrentAnimationId(","projectile ",,~whichProjectile,")"
GetProjectileCurrentAnimationIdHint="[UjAPI]  integer GetProjectileCurrentAnimationId (projectile whichProjectile)"


GetProjectileCurrentAnimationName=GetProjectileCurrentAnimationName
GetProjectileCurrentAnimationName="GetProjectileCurrentAnimationName(","projectile ",,~whichProjectile,")"
GetProjectileCurrentAnimationNameHint="[UjAPI]  string GetProjectileCurrentAnimationName (projectile whichProjectile)"


GetProjectileAnimationOffsetPercent=GetProjectileAnimationOffsetPercent
GetProjectileAnimationOffsetPercent="GetProjectileAnimationOffsetPercent(","projectile ",,~whichProjectile,")"
GetProjectileAnimationOffsetPercentHint="[UjAPI]  real GetProjectileAnimationOffsetPercent (projectile whichProjectile)"


GetProjectileSource=GetProjectileSource
GetProjectileSource="GetProjectileSource(","projectile ",,~whichProjectile,")"
GetProjectileSourceHint="[UjAPI]  unit GetProjectileSource (projectile whichProjectile)"


GetProjectileSourceAbility=GetProjectileSourceAbility
GetProjectileSourceAbility="GetProjectileSourceAbility(","projectile ",,~whichProjectile,")"
GetProjectileSourceAbilityHint="[UjAPI]  ability GetProjectileSourceAbility (projectile whichProjectile)"


GetProjectileTargetX=GetProjectileTargetX
GetProjectileTargetX="GetProjectileTargetX(","projectile ",,~whichProjectile,")"
GetProjectileTargetXHint="[UjAPI]  real GetProjectileTargetX (projectile whichProjectile)"


GetProjectileTargetY=GetProjectileTargetY
GetProjectileTargetY="GetProjectileTargetY(","projectile ",,~whichProjectile,")"
GetProjectileTargetYHint="[UjAPI]  real GetProjectileTargetY (projectile whichProjectile)"


GetProjectileTargetZ=GetProjectileTargetZ
GetProjectileTargetZ="GetProjectileTargetZ(","projectile ",,~whichProjectile,")"
GetProjectileTargetZHint="[UjAPI]  real GetProjectileTargetZ (projectile whichProjectile)"


GetProjectileTargetPositionLoc=GetProjectileTargetPositionLoc
GetProjectileTargetPositionLoc="GetProjectileTargetPositionLoc(","projectile ",,~whichProjectile,")"
GetProjectileTargetPositionLocHint="[UjAPI]  location GetProjectileTargetPositionLoc (projectile whichProjectile)"


GetProjectileTarget=GetProjectileTarget
GetProjectileTarget="GetProjectileTarget(","projectile ",,~whichProjectile,")"
GetProjectileTargetHint="[UjAPI]  widget GetProjectileTarget (projectile whichProjectile)"


GetProjectileTargetUnit=GetProjectileTargetUnit
GetProjectileTargetUnit="GetProjectileTargetUnit(","projectile ",,~whichProjectile,")"
GetProjectileTargetUnitHint="[UjAPI]  unit GetProjectileTargetUnit (projectile whichProjectile)"


GetProjectileTargetItem=GetProjectileTargetItem
GetProjectileTargetItem="GetProjectileTargetItem(","projectile ",,~whichProjectile,")"
GetProjectileTargetItemHint="[UjAPI]  item GetProjectileTargetItem (projectile whichProjectile)"


GetProjectileTargetDestructable=GetProjectileTargetDestructable
GetProjectileTargetDestructable="GetProjectileTargetDestructable(","projectile ",,~whichProjectile,")"
GetProjectileTargetDestructableHint="[UjAPI]  destructable GetProjectileTargetDestructable (projectile whichProjectile)"


GetProjectileAttackType=GetProjectileAttackType
GetProjectileAttackType="GetProjectileAttackType(","projectile ",,~whichProjectile,")"
GetProjectileAttackTypeHint="[UjAPI]  attacktype GetProjectileAttackType (projectile whichProjectile)"


GetProjectileDamage=GetProjectileDamage
GetProjectileDamage="GetProjectileDamage(","projectile ",,~whichProjectile,")"
GetProjectileDamageHint="[UjAPI]  real GetProjectileDamage (projectile whichProjectile)"


GetProjectileAreaOfEffectFullDamage=GetProjectileAreaOfEffectFullDamage
GetProjectileAreaOfEffectFullDamage="GetProjectileAreaOfEffectFullDamage(","projectile ",,~whichProjectile,")"
GetProjectileAreaOfEffectFullDamageHint="[UjAPI]  real GetProjectileAreaOfEffectFullDamage (projectile whichProjectile)"


GetProjectileAreaOfEffectMediumDamage=GetProjectileAreaOfEffectMediumDamage
GetProjectileAreaOfEffectMediumDamage="GetProjectileAreaOfEffectMediumDamage(","projectile ",,~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageHint="[UjAPI]  real GetProjectileAreaOfEffectMediumDamage (projectile whichProjectile)"


GetProjectileAreaOfEffectSmallDamage=GetProjectileAreaOfEffectSmallDamage
GetProjectileAreaOfEffectSmallDamage="GetProjectileAreaOfEffectSmallDamage(","projectile ",,~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageHint="[UjAPI]  real GetProjectileAreaOfEffectSmallDamage (projectile whichProjectile)"


GetProjectileAreaOfEffectMediumDamageFactor=GetProjectileAreaOfEffectMediumDamageFactor
GetProjectileAreaOfEffectMediumDamageFactor="GetProjectileAreaOfEffectMediumDamageFactor(","projectile ",,~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI]  real GetProjectileAreaOfEffectMediumDamageFactor (projectile whichProjectile)"


GetProjectileAreaOfEffectSmallDamageFactor=GetProjectileAreaOfEffectSmallDamageFactor
GetProjectileAreaOfEffectSmallDamageFactor="GetProjectileAreaOfEffectSmallDamageFactor(","projectile ",,~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI]  real GetProjectileAreaOfEffectSmallDamageFactor (projectile whichProjectile)"


GetProjectileSpeed=GetProjectileSpeed
GetProjectileSpeed="GetProjectileSpeed(","projectile ",,~whichProjectile,")"
GetProjectileSpeedHint="[UjAPI]  real GetProjectileSpeed (projectile whichProjectile)"


GetProjectileArc=GetProjectileArc
GetProjectileArc="GetProjectileArc(","projectile ",,~whichProjectile,")"
GetProjectileArcHint="[UjAPI]  real GetProjectileArc (projectile whichProjectile)"


GetProjectileWeaponType=GetProjectileWeaponType
GetProjectileWeaponType="GetProjectileWeaponType(","projectile ",,~whichProjectile,")"
GetProjectileWeaponTypeHint="[UjAPI]  weapontype GetProjectileWeaponType (projectile whichProjectile)"


GetProjectileDamageType=GetProjectileDamageType
GetProjectileDamageType="GetProjectileDamageType(","projectile ",,~whichProjectile,")"
GetProjectileDamageTypeHint="[UjAPI]  damagetype GetProjectileDamageType (projectile whichProjectile)"


GetProjectileDamageFlags=GetProjectileDamageFlags
GetProjectileDamageFlags="GetProjectileDamageFlags(","projectile ",,~whichProjectile,")"
GetProjectileDamageFlagsHint="[UjAPI]  integer GetProjectileDamageFlags (projectile whichProjectile)"


GetTriggerProjectile=GetTriggerProjectile
GetTriggerProjectile="GetTriggerProjectile(",")"
GetTriggerProjectileHint="[UjAPI]  projectile GetTriggerProjectile ()"


GetFilterProjectile=GetFilterProjectile
GetFilterProjectile="GetFilterProjectile(",")"
GetFilterProjectileHint="[UjAPI]  projectile GetFilterProjectile ()"


GetEnumProjectile=GetEnumProjectile
GetEnumProjectile="GetEnumProjectile(",")"
GetEnumProjectileHint="[UjAPI]  projectile GetEnumProjectile ()"


GetTriggerProjectileSource=GetTriggerProjectileSource
GetTriggerProjectileSource="GetTriggerProjectileSource(",")"
GetTriggerProjectileSourceHint="[UjAPI]  unit GetTriggerProjectileSource ()"


GetTriggerProjectileTarget=GetTriggerProjectileTarget
GetTriggerProjectileTarget="GetTriggerProjectileTarget(",")"
GetTriggerProjectileTargetHint="[UjAPI]  widget GetTriggerProjectileTarget ()"


GetTriggerProjectileTargetUnit=GetTriggerProjectileTargetUnit
GetTriggerProjectileTargetUnit="GetTriggerProjectileTargetUnit(",")"
GetTriggerProjectileTargetUnitHint="[UjAPI]  unit GetTriggerProjectileTargetUnit ()"


GetTriggerProjectileTargetItem=GetTriggerProjectileTargetItem
GetTriggerProjectileTargetItem="GetTriggerProjectileTargetItem(",")"
GetTriggerProjectileTargetItemHint="[UjAPI]  item GetTriggerProjectileTargetItem ()"


GetTriggerProjectileTargetDestructable=GetTriggerProjectileTargetDestructable
GetTriggerProjectileTargetDestructable="GetTriggerProjectileTargetDestructable(",")"
GetTriggerProjectileTargetDestructableHint="[UjAPI]  destructable GetTriggerProjectileTargetDestructable ()"


GetOriginFrame=GetOriginFrame
GetOriginFrame="GetOriginFrame(","originframetype ",,~whichType,", ","integer ",,~index,")"
GetOriginFrameHint="[UjAPI]  framehandle GetOriginFrame (originframetype whichType, integer index)"


LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(","string ",,~TOCFile,")"
LoadTOCFileHint="[UjAPI]  boolean LoadTOCFile (string TOCFile)"


CreateFrame=CreateFrame
CreateFrame="CreateFrame(","string ",,~templateName,", ","framehandle ",,~whichParent,", ","integer ",,~priority,", ","integer ",,~createContext,")"
CreateFrameHint="[UjAPI]  framehandle CreateFrame (string templateName, framehandle whichParent, integer priority, integer createContext)"


CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(","string ",,~templateName,", ","framehandle ",,~whichParent,", ","integer ",,~createContext,")"
CreateSimpleFrameHint="[UjAPI]  framehandle CreateSimpleFrame (string templateName, framehandle whichParent, integer createContext)"


CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(","framehandle ",,~whichSimpleParent,", ","framehandle ",,~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI]  framehandle CreateSimpleGlueFrame (framehandle whichSimpleParent, framehandle whichSpriteFrame)"


CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(","string ",,~frameType,", ","string ",,~contextName,", ","framehandle ",,~whichParent,", ","string ",,~templateName,", ","integer ",,~createContext,")"
CreateFrameByTypeHint="[UjAPI]  framehandle CreateFrameByType (string frameType, string contextName, framehandle whichParent, string templateName, integer createContext)"


IsFrameRegion=IsFrameRegion
IsFrameRegion="IsFrameRegion(","framehandle ",,~whichFrame,")"
IsFrameRegionHint="[UjAPI]  boolean IsFrameRegion (framehandle whichFrame)"


IsFrameSimple=IsFrameSimple
IsFrameSimple="IsFrameSimple(","framehandle ",,~whichFrame,")"
IsFrameSimpleHint="[UjAPI]  boolean IsFrameSimple (framehandle whichFrame)"


IsFrameComplex=IsFrameComplex
IsFrameComplex="IsFrameComplex(","framehandle ",,~whichFrame,")"
IsFrameComplexHint="[UjAPI]  boolean IsFrameComplex (framehandle whichFrame)"


GetFrameScreenX=GetFrameScreenX
GetFrameScreenX="GetFrameScreenX(","framehandle ",,~whichFrame,")"
GetFrameScreenXHint="[UjAPI]  real GetFrameScreenX (framehandle whichFrame)"


GetFrameScreenY=GetFrameScreenY
GetFrameScreenY="GetFrameScreenY(","framehandle ",,~whichFrame,")"
GetFrameScreenYHint="[UjAPI]  real GetFrameScreenY (framehandle whichFrame)"


GetFrameRelativePointParent=GetFrameRelativePointParent
GetFrameRelativePointParent="GetFrameRelativePointParent(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameRelativePointParentHint="[UjAPI]  framehandle GetFrameRelativePointParent (framehandle whichFrame, framepointtype point)"


GetFrameRelativePointType=GetFrameRelativePointType
GetFrameRelativePointType="GetFrameRelativePointType(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameRelativePointTypeHint="[UjAPI]  framepointtype GetFrameRelativePointType (framehandle whichFrame, framepointtype point)"


GetFrameRelativePointX=GetFrameRelativePointX
GetFrameRelativePointX="GetFrameRelativePointX(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameRelativePointXHint="[UjAPI]  real GetFrameRelativePointX (framehandle whichFrame, framepointtype point)"


GetFrameRelativePointY=GetFrameRelativePointY
GetFrameRelativePointY="GetFrameRelativePointY(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameRelativePointYHint="[UjAPI]  real GetFrameRelativePointY (framehandle whichFrame, framepointtype point)"


GetFrameAbsolutePointX=GetFrameAbsolutePointX
GetFrameAbsolutePointX="GetFrameAbsolutePointX(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameAbsolutePointXHint="[UjAPI]  real GetFrameAbsolutePointX (framehandle whichFrame, framepointtype point)"


GetFrameAbsolutePointY=GetFrameAbsolutePointY
GetFrameAbsolutePointY="GetFrameAbsolutePointY(","framehandle ",,~whichFrame,", ","framepointtype ",,~point,")"
GetFrameAbsolutePointYHint="[UjAPI]  real GetFrameAbsolutePointY (framehandle whichFrame, framepointtype point)"


SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(","framehandle ",,~whichFrame,", ","framehandle ",,~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI]  boolean SetFrameAllPoints (framehandle whichFrame, framehandle relativeFrame)"


IsFrameVisible=IsFrameVisible
IsFrameVisible="IsFrameVisible(","framehandle ",,~whichFrame,")"
IsFrameVisibleHint="[UjAPI]  boolean IsFrameVisible (framehandle whichFrame)"


GetFrameByName=GetFrameByName
GetFrameByName="GetFrameByName(","string ",,~frameName,", ","integer ",,~createContext,")"
GetFrameByNameHint="[UjAPI]  framehandle GetFrameByName (string frameName, integer createContext)"


GetCFrameByName=GetCFrameByName
GetCFrameByName="GetCFrameByName(","string ",,~frameName,", ","integer ",,~createContext,")"
GetCFrameByNameHint="[UjAPI]  framehandle GetCFrameByName (string frameName, integer createContext)"


GetCSimpleFontStringByName=GetCSimpleFontStringByName
GetCSimpleFontStringByName="GetCSimpleFontStringByName(","string ",,~frameName,", ","integer ",,~createContext,")"
GetCSimpleFontStringByNameHint="[UjAPI]  framehandle GetCSimpleFontStringByName (string frameName, integer createContext)"


GetCSimpleTextureByName=GetCSimpleTextureByName
GetCSimpleTextureByName="GetCSimpleTextureByName(","string ",,~frameName,", ","integer ",,~createContext,")"
GetCSimpleTextureByNameHint="[UjAPI]  framehandle GetCSimpleTextureByName (string frameName, integer createContext)"


GetCSimpleFrameByName=GetCSimpleFrameByName
GetCSimpleFrameByName="GetCSimpleFrameByName(","string ",,~frameName,", ","integer ",,~createContext,")"
GetCSimpleFrameByNameHint="[UjAPI]  framehandle GetCSimpleFrameByName (string frameName, integer createContext)"


GetFrameUnderCursor=GetFrameUnderCursor
GetFrameUnderCursor="GetFrameUnderCursor(",")"
GetFrameUnderCursorHint="[UjAPI]  framehandle GetFrameUnderCursor ()"


GetFrameChildrenCountEx=GetFrameChildrenCountEx
GetFrameChildrenCountEx="GetFrameChildrenCountEx(","framehandle ",,~whichFrame,", ","integer ",,~listId,")"
GetFrameChildrenCountExHint="[UjAPI]  integer GetFrameChildrenCountEx (framehandle whichFrame, integer listId)"


GetFrameChildrenCount=GetFrameChildrenCount
GetFrameChildrenCount="GetFrameChildrenCount(","framehandle ",,~whichFrame,")"
GetFrameChildrenCountHint="[UjAPI]  integer GetFrameChildrenCount (framehandle whichFrame)"


GetFrameChildEx=GetFrameChildEx
GetFrameChildEx="GetFrameChildEx(","framehandle ",,~whichFrame,", ","integer ",,~listId,", ","integer ",,~index,")"
GetFrameChildExHint="[UjAPI]  framehandle GetFrameChildEx (framehandle whichFrame, integer listId, integer index)"


GetFrameChild=GetFrameChild
GetFrameChild="GetFrameChild(","framehandle ",,~whichFrame,", ","integer ",,~index,")"
GetFrameChildHint="[UjAPI]  framehandle GetFrameChild (framehandle whichFrame, integer index)"


GetFrameTypeName=GetFrameTypeName
GetFrameTypeName="GetFrameTypeName(","framehandle ",,~whichFrame,")"
GetFrameTypeNameHint="[UjAPI]  string GetFrameTypeName (framehandle whichFrame)"


GetFrameName=GetFrameName
GetFrameName="GetFrameName(","framehandle ",,~whichFrame,")"
GetFrameNameHint="[UjAPI]  string GetFrameName (framehandle whichFrame)"


GetFrameContext=GetFrameContext
GetFrameContext="GetFrameContext(","framehandle ",,~whichFrame,")"
GetFrameContextHint="[UjAPI]  integer GetFrameContext (framehandle whichFrame)"


GetFrameText=GetFrameText
GetFrameText="GetFrameText(","framehandle ",,~whichFrame,")"
GetFrameTextHint="[UjAPI]  string GetFrameText (framehandle whichFrame)"


GetFrameTextSizeLimit=GetFrameTextSizeLimit
GetFrameTextSizeLimit="GetFrameTextSizeLimit(","framehandle ",,~whichFrame,")"
GetFrameTextSizeLimitHint="[UjAPI]  integer GetFrameTextSizeLimit (framehandle whichFrame)"


GetFrameTextColourEx=GetFrameTextColourEx
GetFrameTextColourEx="GetFrameTextColourEx(","framehandle ",,~whichFrame,", ","integer ",,~stateId,")"
GetFrameTextColourExHint="[UjAPI]  integer GetFrameTextColourEx (framehandle whichFrame, integer stateId)"


GetFrameTextColour=GetFrameTextColour
GetFrameTextColour="GetFrameTextColour(","framehandle ",,~whichFrame,")"
GetFrameTextColourHint="[UjAPI]  integer GetFrameTextColour (framehandle whichFrame)"


IsFrameFocused=IsFrameFocused
IsFrameFocused="IsFrameFocused(","framehandle ",,~whichFrame,")"
IsFrameFocusedHint="[UjAPI]  boolean IsFrameFocused (framehandle whichFrame)"


SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(","framehandle ",,~whichFrame,", ","boolean ",,~isFocus,")"
SetFrameFocusHint="[UjAPI]  boolean SetFrameFocus (framehandle whichFrame, boolean isFocus)"


GetFrameModel=GetFrameModel
GetFrameModel="GetFrameModel(","framehandle ",,~whichFrame,")"
GetFrameModelHint="[UjAPI]  string GetFrameModel (framehandle whichFrame)"


GetFrameState=GetFrameState
GetFrameState="GetFrameState(","framehandle ",,~whichFrame,")"
GetFrameStateHint="[UjAPI]  framestate GetFrameState (framehandle whichFrame)"


IsFrameEnabled=IsFrameEnabled
IsFrameEnabled="IsFrameEnabled(","framehandle ",,~whichFrame,")"
IsFrameEnabledHint="[UjAPI]  boolean IsFrameEnabled (framehandle whichFrame)"


IsFrameLayoutFlag=IsFrameLayoutFlag
IsFrameLayoutFlag="IsFrameLayoutFlag(","framehandle ",,~whichFrame,", ","layoutstyleflag ",,~whichLayoutStyle,")"
IsFrameLayoutFlagHint="[UjAPI]  boolean IsFrameLayoutFlag (framehandle whichFrame, layoutstyleflag whichLayoutStyle)"


IsFrameGridFlag=IsFrameGridFlag
IsFrameGridFlag="IsFrameGridFlag(","framehandle ",,~whichFrame,", ","gridstyleflag ",,~whichGridStyle,")"
IsFrameGridFlagHint="[UjAPI]  boolean IsFrameGridFlag (framehandle whichFrame, gridstyleflag whichGridStyle)"


IsFrameLayerFlag=IsFrameLayerFlag
IsFrameLayerFlag="IsFrameLayerFlag(","framehandle ",,~whichFrame,", ","layerstyleflag ",,~whichLayerStyle,")"
IsFrameLayerFlagHint="[UjAPI]  boolean IsFrameLayerFlag (framehandle whichFrame, layerstyleflag whichLayerStyle)"


IsFrameControlFlag=IsFrameControlFlag
IsFrameControlFlag="IsFrameControlFlag(","framehandle ",,~whichFrame,", ","controlstyleflag ",,~whichControlStyle,")"
IsFrameControlFlagHint="[UjAPI]  boolean IsFrameControlFlag (framehandle whichFrame, controlstyleflag whichControlStyle)"


GetFrameColourEx=GetFrameColourEx
GetFrameColourEx="GetFrameColourEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,")"
GetFrameColourExHint="[UjAPI]  integer GetFrameColourEx (framehandle whichFrame, integer textureId)"


GetFrameColour=GetFrameColour
GetFrameColour="GetFrameColour(","framehandle ",,~whichFrame,")"
GetFrameColourHint="[UjAPI]  integer GetFrameColour (framehandle whichFrame)"


GetFrameAlphaEx=GetFrameAlphaEx
GetFrameAlphaEx="GetFrameAlphaEx(","framehandle ",,~whichFrame,", ","integer ",,~textureId,")"
GetFrameAlphaExHint="[UjAPI]  integer GetFrameAlphaEx (framehandle whichFrame, integer textureId)"


GetFrameAlpha=GetFrameAlpha
GetFrameAlpha="GetFrameAlpha(","framehandle ",,~whichFrame,")"
GetFrameAlphaHint="[UjAPI]  integer GetFrameAlpha (framehandle whichFrame)"


GetFrameTexture=GetFrameTexture
GetFrameTexture="GetFrameTexture(","framehandle ",,~whichFrame,", ","integer ",,~textureId,")"
GetFrameTextureHint="[UjAPI]  string GetFrameTexture (framehandle whichFrame, integer textureId)"


GetFrameBlendMode=GetFrameBlendMode
GetFrameBlendMode="GetFrameBlendMode(","framehandle ",,~whichFrame,", ","integer ",,~textureId,")"
GetFrameBlendModeHint="[UjAPI]  blendmode GetFrameBlendMode (framehandle whichFrame, integer textureId)"


SetFrameTooltip=SetFrameTooltip
SetFrameTooltip="SetFrameTooltip(","framehandle ",,~whichFrame,", ","framehandle ",,~tooltipFrame,")"
SetFrameTooltipHint="[UjAPI]  nothing SetFrameTooltip (framehandle whichFrame, framehandle tooltipFrame)"


GetFrameValue=GetFrameValue
GetFrameValue="GetFrameValue(","framehandle ",,~whichFrame,")"
GetFrameValueHint="[UjAPI]  real GetFrameValue (framehandle whichFrame)"


GetFrameMinMaxValues=GetFrameMinMaxValues
GetFrameMinMaxValues="GetFrameMinMaxValues(","framehandle ",,~whichFrame,", ","integer ",,~valueId,")"
GetFrameMinMaxValuesHint="[UjAPI]  real GetFrameMinMaxValues (framehandle whichFrame, integer valueId)"


GetFrameStepSize=GetFrameStepSize
GetFrameStepSize="GetFrameStepSize(","framehandle ",,~whichFrame,")"
GetFrameStepSizeHint="[UjAPI]  real GetFrameStepSize (framehandle whichFrame)"


GetFrameWidth=GetFrameWidth
GetFrameWidth="GetFrameWidth(","framehandle ",,~whichFrame,")"
GetFrameWidthHint="[UjAPI]  real GetFrameWidth (framehandle whichFrame)"


GetFrameHeight=GetFrameHeight
GetFrameHeight="GetFrameHeight(","framehandle ",,~whichFrame,")"
GetFrameHeightHint="[UjAPI]  real GetFrameHeight (framehandle whichFrame)"


GetFramePriority=GetFramePriority
GetFramePriority="GetFramePriority(","framehandle ",,~whichFrame,")"
GetFramePriorityHint="[UjAPI]  integer GetFramePriority (framehandle whichFrame)"


GetFrameParent=GetFrameParent
GetFrameParent="GetFrameParent(","framehandle ",,~whichFrame,")"
GetFrameParentHint="[UjAPI]  framehandle GetFrameParent (framehandle whichFrame)"


GetFrameTextAlignmentValue=GetFrameTextAlignmentValue
GetFrameTextAlignmentValue="GetFrameTextAlignmentValue(","framehandle ",,~whichFrame,", ","integer ",,~id,")"
GetFrameTextAlignmentValueHint="[UjAPI]  real GetFrameTextAlignmentValue (framehandle whichFrame, integer id)"


GetFrameCheckState=GetFrameCheckState
GetFrameCheckState="GetFrameCheckState(","framehandle ",,~whichFrame,")"
GetFrameCheckStateHint="[UjAPI]  boolean GetFrameCheckState (framehandle whichFrame)"


SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(","string ",,~texturePath,")"
SetMiniMapTextureHint="[UjAPI]  boolean SetMiniMapTexture (string texturePath)"


GetFrameSlider=GetFrameSlider
GetFrameSlider="GetFrameSlider(","framehandle ",,~whichFrame,")"
GetFrameSliderHint="[UjAPI]  framehandle GetFrameSlider (framehandle whichFrame)"


AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(","framehandle ",,~whichFrame,")"
AddFrameSliderHint="[UjAPI]  framehandle AddFrameSlider (framehandle whichFrame)"


GetFrameItemsBorder=GetFrameItemsBorder
GetFrameItemsBorder="GetFrameItemsBorder(","framehandle ",,~whichFrame,")"
GetFrameItemsBorderHint="[UjAPI]  real GetFrameItemsBorder (framehandle whichFrame)"


GetFrameItemsHeight=GetFrameItemsHeight
GetFrameItemsHeight="GetFrameItemsHeight(","framehandle ",,~whichFrame,")"
GetFrameItemsHeightHint="[UjAPI]  real GetFrameItemsHeight (framehandle whichFrame)"


AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(","framehandle ",,~whichFrame,", ","string ",,~text,", ","framehandle ",,~frameToAdd,")"
AddFrameListItemHint="[UjAPI]  framehandle AddFrameListItem (framehandle whichFrame, string text, framehandle frameToAdd)"


GetFrameListItemCount=GetFrameListItemCount
GetFrameListItemCount="GetFrameListItemCount(","framehandle ",,~whichFrame,")"
GetFrameListItemCountHint="[UjAPI]  integer GetFrameListItemCount (framehandle whichFrame)"


GetFrameListItemById=GetFrameListItemById
GetFrameListItemById="GetFrameListItemById(","framehandle ",,~whichFrame,", ","integer ",,~id,")"
GetFrameListItemByIdHint="[UjAPI]  framehandle GetFrameListItemById (framehandle whichFrame, integer id)"


GetFrameListItemByFrame=GetFrameListItemByFrame
GetFrameListItemByFrame="GetFrameListItemByFrame(","framehandle ",,~whichFrame,", ","framehandle ",,~frameToFind,")"
GetFrameListItemByFrameHint="[UjAPI]  framehandle GetFrameListItemByFrame (framehandle whichFrame, framehandle frameToFind)"


GetFrameItemOwner=GetFrameItemOwner
GetFrameItemOwner="GetFrameItemOwner(","framehandle ",,~listBoxItem,")"
GetFrameItemOwnerHint="[UjAPI]  framehandle GetFrameItemOwner (framehandle listBoxItem)"


GetFrameHighlight=GetFrameHighlight
GetFrameHighlight="GetFrameHighlight(","framehandle ",,~whichFrame,", ","integer ",,~highlightId,")"
GetFrameHighlightHint="[UjAPI]  framehandle GetFrameHighlight (framehandle whichFrame, integer highlightId)"


GetFrameHighlightTexture=GetFrameHighlightTexture
GetFrameHighlightTexture="GetFrameHighlightTexture(","framehandle ",,~whichFrame,", ","integer ",,~highlightId,")"
GetFrameHighlightTextureHint="[UjAPI]  string GetFrameHighlightTexture (framehandle whichFrame, integer highlightId)"


GetFrameBackdrop=GetFrameBackdrop
GetFrameBackdrop="GetFrameBackdrop(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,")"
GetFrameBackdropHint="[UjAPI]  framehandle GetFrameBackdrop (framehandle whichFrame, integer backdropId)"


IsFrameBorderEnabled=IsFrameBorderEnabled
IsFrameBorderEnabled="IsFrameBorderEnabled(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,")"
IsFrameBorderEnabledHint="[UjAPI]  boolean IsFrameBorderEnabled (framehandle whichFrame, integer backdropId)"


GetFrameBorderFlags=GetFrameBorderFlags
GetFrameBorderFlags="GetFrameBorderFlags(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,")"
GetFrameBorderFlagsHint="[UjAPI]  integer GetFrameBorderFlags (framehandle whichFrame, integer backdropId)"


GetFrameBorderSize=GetFrameBorderSize
GetFrameBorderSize="GetFrameBorderSize(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,")"
GetFrameBorderSizeHint="[UjAPI]  real GetFrameBorderSize (framehandle whichFrame, integer backdropId)"


GetFrameBackgroundSize=GetFrameBackgroundSize
GetFrameBackgroundSize="GetFrameBackgroundSize(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,")"
GetFrameBackgroundSizeHint="[UjAPI]  real GetFrameBackgroundSize (framehandle whichFrame, integer backdropId)"


GetFrameBackgroundInsetById=GetFrameBackgroundInsetById
GetFrameBackgroundInsetById="GetFrameBackgroundInsetById(","framehandle ",,~whichFrame,", ","integer ",,~backdropId,", ","integer ",,~insetId,")"
GetFrameBackgroundInsetByIdHint="[UjAPI]  real GetFrameBackgroundInsetById (framehandle whichFrame, integer backdropId, integer insetId)"


GetFrameGridRows=GetFrameGridRows
GetFrameGridRows="GetFrameGridRows(","framehandle ",,~grid,")"
GetFrameGridRowsHint="[UjAPI]  integer GetFrameGridRows (framehandle grid)"


GetFrameGridColumns=GetFrameGridColumns
GetFrameGridColumns="GetFrameGridColumns(","framehandle ",,~grid,")"
GetFrameGridColumnsHint="[UjAPI]  integer GetFrameGridColumns (framehandle grid)"


GetFrameGridFrame=GetFrameGridFrame
GetFrameGridFrame="GetFrameGridFrame(","framehandle ",,~grid,", ","integer ",,~row,", ","integer ",,~column,")"
GetFrameGridFrameHint="[UjAPI]  framehandle GetFrameGridFrame (framehandle grid, integer row, integer column)"


GetFrameGridFrameById=GetFrameGridFrameById
GetFrameGridFrameById="GetFrameGridFrameById(","framehandle ",,~grid,", ","integer ",,~id,")"
GetFrameGridFrameByIdHint="[UjAPI]  framehandle GetFrameGridFrameById (framehandle grid, integer id)"


IsBuffBarRenderDuplicates=IsBuffBarRenderDuplicates
IsBuffBarRenderDuplicates="IsBuffBarRenderDuplicates(",")"
IsBuffBarRenderDuplicatesHint="[UjAPI]  boolean IsBuffBarRenderDuplicates ()"


GetTriggerFrame=GetTriggerFrame
GetTriggerFrame="GetTriggerFrame(",")"
GetTriggerFrameHint="[UjAPI]  framehandle GetTriggerFrame ()"


GetTriggerFrameEvent=GetTriggerFrameEvent
GetTriggerFrameEvent="GetTriggerFrameEvent(",")"
GetTriggerFrameEventHint="[UjAPI]  frameeventtype GetTriggerFrameEvent ()"


GetTriggerFrameVariableType=GetTriggerFrameVariableType
GetTriggerFrameVariableType="GetTriggerFrameVariableType(",")"
GetTriggerFrameVariableTypeHint="[UjAPI]  variabletype GetTriggerFrameVariableType ()"


GetTriggerFrameInteger=GetTriggerFrameInteger
GetTriggerFrameInteger="GetTriggerFrameInteger(",")"
GetTriggerFrameIntegerHint="[UjAPI]  integer GetTriggerFrameInteger ()"


GetTriggerFrameReal=GetTriggerFrameReal
GetTriggerFrameReal="GetTriggerFrameReal(",")"
GetTriggerFrameRealHint="[UjAPI]  real GetTriggerFrameReal ()"


GetTriggerFrameBoolean=GetTriggerFrameBoolean
GetTriggerFrameBoolean="GetTriggerFrameBoolean(",")"
GetTriggerFrameBooleanHint="[UjAPI]  boolean GetTriggerFrameBoolean ()"


GetTriggerFrameString=GetTriggerFrameString
GetTriggerFrameString="GetTriggerFrameString(",")"
GetTriggerFrameStringHint="[UjAPI]  string GetTriggerFrameString ()"


GetTriggerFrameMouseButton=GetTriggerFrameMouseButton
GetTriggerFrameMouseButton="GetTriggerFrameMouseButton(",")"
GetTriggerFrameMouseButtonHint="[UjAPI]  mousebuttontype GetTriggerFrameMouseButton ()"


GetTriggerFrameTargetFrame=GetTriggerFrameTargetFrame
GetTriggerFrameTargetFrame="GetTriggerFrameTargetFrame(",")"
GetTriggerFrameTargetFrameHint="[UjAPI]  framehandle GetTriggerFrameTargetFrame ()"


TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(","trigger ",,~whichTrigger,", ","framehandle ",,~whichFrame,", ","frameeventtype ",,~frameEvent,")"
TriggerRegisterFrameEventHint="[UjAPI]  event TriggerRegisterFrameEvent (trigger whichTrigger, framehandle whichFrame, frameeventtype frameEvent)"


GetFrameSprite=GetFrameSprite
GetFrameSprite="GetFrameSprite(","framehandle ",,~whichFrame,")"
GetFrameSpriteHint="[UjAPI]  sprite GetFrameSprite (framehandle whichFrame)"


GetFrameSpriteScale=GetFrameSpriteScale
GetFrameSpriteScale="GetFrameSpriteScale(","framehandle ",,~whichFrame,")"
GetFrameSpriteScaleHint="[UjAPI]  real GetFrameSpriteScale (framehandle whichFrame)"


GetFrameSpriteTimeScale=GetFrameSpriteTimeScale
GetFrameSpriteTimeScale="GetFrameSpriteTimeScale(","framehandle ",,~whichFrame,")"
GetFrameSpriteTimeScaleHint="[UjAPI]  real GetFrameSpriteTimeScale (framehandle whichFrame)"


GetFrameSpritePlayerColour=GetFrameSpritePlayerColour
GetFrameSpritePlayerColour="GetFrameSpritePlayerColour(","framehandle ",,~whichFrame,")"
GetFrameSpritePlayerColourHint="[UjAPI]  playercolor GetFrameSpritePlayerColour (framehandle whichFrame)"


GetFrameSpriteAlpha=GetFrameSpriteAlpha
GetFrameSpriteAlpha="GetFrameSpriteAlpha(","framehandle ",,~whichFrame,")"
GetFrameSpriteAlphaHint="[UjAPI]  integer GetFrameSpriteAlpha (framehandle whichFrame)"


SetFrameSpriteAlpha=SetFrameSpriteAlpha
SetFrameSpriteAlpha="SetFrameSpriteAlpha(","framehandle ",,~whichFrame,", ","integer ",,~alpha,")"
SetFrameSpriteAlphaHint="[UjAPI]  boolean SetFrameSpriteAlpha (framehandle whichFrame, integer alpha)"


GetFrameSpriteColour=GetFrameSpriteColour
GetFrameSpriteColour="GetFrameSpriteColour(","framehandle ",,~whichFrame,")"
GetFrameSpriteColourHint="[UjAPI]  integer GetFrameSpriteColour (framehandle whichFrame)"


SetFrameSpriteColour=SetFrameSpriteColour
SetFrameSpriteColour="SetFrameSpriteColour(","framehandle ",,~whichFrame,", ","integer ",,~colour,")"
SetFrameSpriteColourHint="[UjAPI]  boolean SetFrameSpriteColour (framehandle whichFrame, integer colour)"


SetFrameSpriteVertexColour=SetFrameSpriteVertexColour
SetFrameSpriteVertexColour="SetFrameSpriteVertexColour(","framehandle ",,~whichFrame,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","integer ",,~alpha,")"
SetFrameSpriteVertexColourHint="[UjAPI]  boolean SetFrameSpriteVertexColour (framehandle whichFrame, integer red, integer green, integer blue, integer alpha)"


SetFrameSpriteOrientationEx=SetFrameSpriteOrientationEx
SetFrameSpriteOrientationEx="SetFrameSpriteOrientationEx(","framehandle ",,~whichFrame,", ","real ",,~yaw,", ","real ",,~pitch,", ","real ",,~roll,", ","integer ",,~eulerOrder,")"
SetFrameSpriteOrientationExHint="[UjAPI]  boolean SetFrameSpriteOrientationEx (framehandle whichFrame, real yaw, real pitch, real roll, integer eulerOrder)"


GetFrameSpriteYaw=GetFrameSpriteYaw
GetFrameSpriteYaw="GetFrameSpriteYaw(","framehandle ",,~whichFrame,")"
GetFrameSpriteYawHint="[UjAPI]  real GetFrameSpriteYaw (framehandle whichFrame)"


SetFrameSpriteYaw=SetFrameSpriteYaw
SetFrameSpriteYaw="SetFrameSpriteYaw(","framehandle ",,~whichFrame,", ","real ",,~yaw,")"
SetFrameSpriteYawHint="[UjAPI]  boolean SetFrameSpriteYaw (framehandle whichFrame, real yaw)"


GetFrameSpriteFacing=GetFrameSpriteFacing
GetFrameSpriteFacing="GetFrameSpriteFacing(","framehandle ",,~whichFrame,")"
GetFrameSpriteFacingHint="[UjAPI]  real GetFrameSpriteFacing (framehandle whichFrame)"


SetFrameSpriteFacing=SetFrameSpriteFacing
SetFrameSpriteFacing="SetFrameSpriteFacing(","framehandle ",,~whichFrame,", ","real ",,~facing,")"
SetFrameSpriteFacingHint="[UjAPI]  boolean SetFrameSpriteFacing (framehandle whichFrame, real facing)"


GetFrameSpritePitch=GetFrameSpritePitch
GetFrameSpritePitch="GetFrameSpritePitch(","framehandle ",,~whichFrame,")"
GetFrameSpritePitchHint="[UjAPI]  real GetFrameSpritePitch (framehandle whichFrame)"


SetFrameSpritePitch=SetFrameSpritePitch
SetFrameSpritePitch="SetFrameSpritePitch(","framehandle ",,~whichFrame,", ","real ",,~pitch,")"
SetFrameSpritePitchHint="[UjAPI]  boolean SetFrameSpritePitch (framehandle whichFrame, real pitch)"


GetFrameSpriteRoll=GetFrameSpriteRoll
GetFrameSpriteRoll="GetFrameSpriteRoll(","framehandle ",,~whichFrame,")"
GetFrameSpriteRollHint="[UjAPI]  real GetFrameSpriteRoll (framehandle whichFrame)"


SetFrameSpriteRoll=SetFrameSpriteRoll
SetFrameSpriteRoll="SetFrameSpriteRoll(","framehandle ",,~whichFrame,", ","real ",,~roll,")"
SetFrameSpriteRollHint="[UjAPI]  boolean SetFrameSpriteRoll (framehandle whichFrame, real roll)"


GetFrameSpriteModel=GetFrameSpriteModel
GetFrameSpriteModel="GetFrameSpriteModel(","framehandle ",,~whichFrame,")"
GetFrameSpriteModelHint="[UjAPI]  string GetFrameSpriteModel (framehandle whichFrame)"


GetFrameSpriteCurrentAnimationId=GetFrameSpriteCurrentAnimationId
GetFrameSpriteCurrentAnimationId="GetFrameSpriteCurrentAnimationId(","framehandle ",,~whichFrame,")"
GetFrameSpriteCurrentAnimationIdHint="[UjAPI]  integer GetFrameSpriteCurrentAnimationId (framehandle whichFrame)"


GetFrameSpriteCurrentAnimationName=GetFrameSpriteCurrentAnimationName
GetFrameSpriteCurrentAnimationName="GetFrameSpriteCurrentAnimationName(","framehandle ",,~whichFrame,")"
GetFrameSpriteCurrentAnimationNameHint="[UjAPI]  string GetFrameSpriteCurrentAnimationName (framehandle whichFrame)"


GetFrameSpriteAnimationOffsetPercent=GetFrameSpriteAnimationOffsetPercent
GetFrameSpriteAnimationOffsetPercent="GetFrameSpriteAnimationOffsetPercent(","framehandle ",,~whichFrame,")"
GetFrameSpriteAnimationOffsetPercentHint="[UjAPI]  real GetFrameSpriteAnimationOffsetPercent (framehandle whichFrame)"


GetTriggerSyncPlayer=GetTriggerSyncPlayer
GetTriggerSyncPlayer="GetTriggerSyncPlayer(",")"
GetTriggerSyncPlayerHint="[UjAPI]  player GetTriggerSyncPlayer ()"


GetSyncedVariableType=GetSyncedVariableType
GetSyncedVariableType="GetSyncedVariableType(",")"
GetSyncedVariableTypeHint="[UjAPI]  variabletype GetSyncedVariableType ()"


GetSyncedVariableName=GetSyncedVariableName
GetSyncedVariableName="GetSyncedVariableName(",")"
GetSyncedVariableNameHint="[UjAPI]  string GetSyncedVariableName ()"


GetSyncedInteger=GetSyncedInteger
GetSyncedInteger="GetSyncedInteger(",")"
GetSyncedIntegerHint="[UjAPI]  integer GetSyncedInteger ()"


GetSyncedReal=GetSyncedReal
GetSyncedReal="GetSyncedReal(",")"
GetSyncedRealHint="[UjAPI]  real GetSyncedReal ()"


GetSyncedString=GetSyncedString
GetSyncedString="GetSyncedString(",")"
GetSyncedStringHint="[UjAPI]  string GetSyncedString ()"


GetSyncedHandle=GetSyncedHandle
GetSyncedHandle="GetSyncedHandle(",")"
GetSyncedHandleHint="[UjAPI]  handle GetSyncedHandle ()"


GetSyncedBoolean=GetSyncedBoolean
GetSyncedBoolean="GetSyncedBoolean(",")"
GetSyncedBooleanHint="[UjAPI]  boolean GetSyncedBoolean ()"


SyncString=SyncString
SyncString="SyncString(","string ",,~variableName,")"
SyncStringHint="[UjAPI]  nothing SyncString (string variableName)"


TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","string ",,~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI]  event TriggerRegisterPlayerVariableSyncEvent (trigger whichTrigger, player whichPlayer, string variableName)"


GetSyncSavedVariableType=GetSyncSavedVariableType
GetSyncSavedVariableType="GetSyncSavedVariableType(",")"
GetSyncSavedVariableTypeHint="[UjAPI]  variabletype GetSyncSavedVariableType ()"


GetSyncSavedHashtable=GetSyncSavedHashtable
GetSyncSavedHashtable="GetSyncSavedHashtable(",")"
GetSyncSavedHashtableHint="[UjAPI]  hashtable GetSyncSavedHashtable ()"


GetSyncSavedParentKey=GetSyncSavedParentKey
GetSyncSavedParentKey="GetSyncSavedParentKey(",")"
GetSyncSavedParentKeyHint="[UjAPI]  integer GetSyncSavedParentKey ()"


GetSyncSavedChildKey=GetSyncSavedChildKey
GetSyncSavedChildKey="GetSyncSavedChildKey(",")"
GetSyncSavedChildKeyHint="[UjAPI]  integer GetSyncSavedChildKey ()"


SyncSavedString=SyncSavedString
SyncSavedString="SyncSavedString(","hashtable ",,~table,", ","integer ",,~parentKey,", ","integer ",,~childKey,")"
SyncSavedStringHint="[UjAPI]  nothing SyncSavedString (hashtable table, integer parentKey, integer childKey)"


TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","hashtable ",,~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI]  event TriggerRegisterPlayerHashtableDataSyncEvent (trigger whichTrigger, player whichPlayer, hashtable whichHashtable)"


GetTriggerSyncPrefix=GetTriggerSyncPrefix
GetTriggerSyncPrefix="GetTriggerSyncPrefix(",")"
GetTriggerSyncPrefixHint="[UjAPI]  string GetTriggerSyncPrefix ()"


GetTriggerSyncData=GetTriggerSyncData
GetTriggerSyncData="GetTriggerSyncData(",")"
GetTriggerSyncDataHint="[UjAPI]  string GetTriggerSyncData ()"


SendSyncData=SendSyncData
SendSyncData="SendSyncData(","string ",,~prefix,", ","string ",,~data,")"
SendSyncDataHint="[UjAPI]  boolean SendSyncData (string prefix, string data)"


TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","string ",,~prefix,", ","boolean ",,~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI]  event TriggerRegisterPlayerSyncEvent (trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer)"


IsKeyPressed=IsKeyPressed
IsKeyPressed="IsKeyPressed(","oskeytype ",,~key,")"
IsKeyPressedHint="[UjAPI]  boolean IsKeyPressed (oskeytype key)"


IsMouseKeyPressed=IsMouseKeyPressed
IsMouseKeyPressed="IsMouseKeyPressed(","mousebuttontype ",,~mouseKey,")"
IsMouseKeyPressedHint="[UjAPI]  boolean IsMouseKeyPressed (mousebuttontype mouseKey)"


GetTriggerPlayerIsKeyDown=GetTriggerPlayerIsKeyDown
GetTriggerPlayerIsKeyDown="GetTriggerPlayerIsKeyDown(",")"
GetTriggerPlayerIsKeyDownHint="[UjAPI]  boolean GetTriggerPlayerIsKeyDown ()"


GetTriggerPlayerKey=GetTriggerPlayerKey
GetTriggerPlayerKey="GetTriggerPlayerKey(",")"
GetTriggerPlayerKeyHint="[UjAPI]  oskeytype GetTriggerPlayerKey ()"


GetTriggerPlayerMouseButton=GetTriggerPlayerMouseButton
GetTriggerPlayerMouseButton="GetTriggerPlayerMouseButton(",")"
GetTriggerPlayerMouseButtonHint="[UjAPI]  mousebuttontype GetTriggerPlayerMouseButton ()"


GetTriggerPlayerMetaKey=GetTriggerPlayerMetaKey
GetTriggerPlayerMetaKey="GetTriggerPlayerMetaKey(",")"
GetTriggerPlayerMetaKeyHint="[UjAPI]  integer GetTriggerPlayerMetaKey ()"


TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(","trigger ",,~whichTrigger,", ","player ",,~whichPlayer,", ","oskeytype ",,~whichKey,", ","integer ",,~whichMetaKey,", ","boolean ",,~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI]  event TriggerRegisterPlayerKeyEvent (trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown)"


GetMouseMoveEventScreenAxisEnabled=GetMouseMoveEventScreenAxisEnabled
GetMouseMoveEventScreenAxisEnabled="GetMouseMoveEventScreenAxisEnabled(",")"
GetMouseMoveEventScreenAxisEnabledHint="[UjAPI]  boolean GetMouseMoveEventScreenAxisEnabled ()"


GetMouseMoveEventWorldAxisEnabled=GetMouseMoveEventWorldAxisEnabled
GetMouseMoveEventWorldAxisEnabled="GetMouseMoveEventWorldAxisEnabled(",")"
GetMouseMoveEventWorldAxisEnabledHint="[UjAPI]  boolean GetMouseMoveEventWorldAxisEnabled ()"


GetMouseMoveEventDelay=GetMouseMoveEventDelay
GetMouseMoveEventDelay="GetMouseMoveEventDelay(",")"
GetMouseMoveEventDelayHint="[UjAPI]  integer GetMouseMoveEventDelay ()"


GetTriggerPlayerMouseWorldX=GetTriggerPlayerMouseWorldX
GetTriggerPlayerMouseWorldX="GetTriggerPlayerMouseWorldX(",")"
GetTriggerPlayerMouseWorldXHint="[UjAPI]  real GetTriggerPlayerMouseWorldX ()"


GetTriggerPlayerMouseWorldY=GetTriggerPlayerMouseWorldY
GetTriggerPlayerMouseWorldY="GetTriggerPlayerMouseWorldY(",")"
GetTriggerPlayerMouseWorldYHint="[UjAPI]  real GetTriggerPlayerMouseWorldY ()"


GetTriggerPlayerMouseWorldZ=GetTriggerPlayerMouseWorldZ
GetTriggerPlayerMouseWorldZ="GetTriggerPlayerMouseWorldZ(",")"
GetTriggerPlayerMouseWorldZHint="[UjAPI]  real GetTriggerPlayerMouseWorldZ ()"


GetTriggerPlayerMouseScreenX=GetTriggerPlayerMouseScreenX
GetTriggerPlayerMouseScreenX="GetTriggerPlayerMouseScreenX(",")"
GetTriggerPlayerMouseScreenXHint="[UjAPI]  real GetTriggerPlayerMouseScreenX ()"


GetTriggerPlayerMouseScreenY=GetTriggerPlayerMouseScreenY
GetTriggerPlayerMouseScreenY="GetTriggerPlayerMouseScreenY(",")"
GetTriggerPlayerMouseScreenYHint="[UjAPI]  real GetTriggerPlayerMouseScreenY ()"


GetEventDamageFlags=GetEventDamageFlags
GetEventDamageFlags="GetEventDamageFlags(",")"
GetEventDamageFlagsHint="[UjAPI]  integer GetEventDamageFlags ()"


GetEventDamageIsFlag=GetEventDamageIsFlag
GetEventDamageIsFlag="GetEventDamageIsFlag(","integer ",,~flag,")"
GetEventDamageIsFlagHint="[UjAPI]  boolean GetEventDamageIsFlag (integer flag)"


SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(","integer ",,~flag,", ","boolean ",,~isSet,")"
SetEventDamageFlagHint="[UjAPI]  boolean SetEventDamageFlag (integer flag, boolean isSet)"


GetEventDamageExtraFlags=GetEventDamageExtraFlags
GetEventDamageExtraFlags="GetEventDamageExtraFlags(",")"
GetEventDamageExtraFlagsHint="[UjAPI]  integer GetEventDamageExtraFlags ()"


GetEventDamageIsExtraFlag=GetEventDamageIsExtraFlag
GetEventDamageIsExtraFlag="GetEventDamageIsExtraFlag(","integer ",,~flag,")"
GetEventDamageIsExtraFlagHint="[UjAPI]  boolean GetEventDamageIsExtraFlag (integer flag)"


SetEventDamageExtraFlag=SetEventDamageExtraFlag
SetEventDamageExtraFlag="SetEventDamageExtraFlag(","integer ",,~flag,", ","boolean ",,~isSet,")"
SetEventDamageExtraFlagHint="[UjAPI]  boolean SetEventDamageExtraFlag (integer flag, boolean isSet)"


GetEventDamageTarget=GetEventDamageTarget
GetEventDamageTarget="GetEventDamageTarget(",")"
GetEventDamageTargetHint="[UjAPI]  unit GetEventDamageTarget ()"


GetEventAttackType=GetEventAttackType
GetEventAttackType="GetEventAttackType(",")"
GetEventAttackTypeHint="[UjAPI]  attacktype GetEventAttackType ()"


SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(","attacktype ",,~attackType,")"
SetEventAttackTypeHint="[UjAPI]  boolean SetEventAttackType (attacktype attackType)"


GetEventDamageType=GetEventDamageType
GetEventDamageType="GetEventDamageType(",")"
GetEventDamageTypeHint="[UjAPI]  damagetype GetEventDamageType ()"


SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(","damagetype ",,~damageType,")"
SetEventDamageTypeHint="[UjAPI]  boolean SetEventDamageType (damagetype damageType)"


GetEventDamageTypeFlags=GetEventDamageTypeFlags
GetEventDamageTypeFlags="GetEventDamageTypeFlags(",")"
GetEventDamageTypeFlagsHint="[UjAPI]  integer GetEventDamageTypeFlags ()"


SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(","integer ",,~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI]  boolean SetEventDamageTypeFlags (integer damageFlags)"


GetEventWeaponType=GetEventWeaponType
GetEventWeaponType="GetEventWeaponType(",")"
GetEventWeaponTypeHint="[UjAPI]  weapontype GetEventWeaponType ()"


SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(","weapontype ",,~weaponType,")"
SetEventWeaponTypeHint="[UjAPI]  boolean SetEventWeaponType (weapontype weaponType)"


GetEventIsAttack=GetEventIsAttack
GetEventIsAttack="GetEventIsAttack(",")"
GetEventIsAttackHint="[UjAPI]  boolean GetEventIsAttack ()"


GetEventIsRanged=GetEventIsRanged
GetEventIsRanged="GetEventIsRanged(",")"
GetEventIsRangedHint="[UjAPI]  boolean GetEventIsRanged ()"


GetEventIsCritical=GetEventIsCritical
GetEventIsCritical="GetEventIsCritical(",")"
GetEventIsCriticalHint="[UjAPI]  boolean GetEventIsCritical ()"


GetEventPreDamage=GetEventPreDamage
GetEventPreDamage="GetEventPreDamage(",")"
GetEventPreDamageHint="[UjAPI]  real GetEventPreDamage ()"


ParseTags=ParseTags
ParseTags="ParseTags(","string ",,~taggedString,")"
ParseTagsHint="[UjAPI]  string ParseTags (string taggedString)"


TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(","trigger ",,~whichTrigger,", ","integer ",,~whichAbility,", ","string ",,~order,")"
TriggerRegisterCommandEventHint="[UjAPI]  event TriggerRegisterCommandEvent (trigger whichTrigger, integer whichAbility, string order)"


TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(","trigger ",,~whichTrigger,", ","integer ",,~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI]  event TriggerRegisterUpgradeCommandEvent (trigger whichTrigger, integer whichUpgrade)"


GetPlayerHandicapReviveTime=GetPlayerHandicapReviveTime
GetPlayerHandicapReviveTime="GetPlayerHandicapReviveTime(","player ",,~whichPlayer,")"
GetPlayerHandicapReviveTimeHint="[UjAPI]  real GetPlayerHandicapReviveTime (player whichPlayer)"


GetPlayerHandicapDamage=GetPlayerHandicapDamage
GetPlayerHandicapDamage="GetPlayerHandicapDamage(","player ",,~whichPlayer,")"
GetPlayerHandicapDamageHint="[UjAPI]  real GetPlayerHandicapDamage (player whichPlayer)"


CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(","unit ",,~whichUnit,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI]  minimapicon CreateMinimapIconOnUnit (unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(","location ",,~where,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI]  minimapicon CreateMinimapIconAtLoc (location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(","real ",,~x,", ","real ",,~y,", ","integer ",,~red,", ","integer ",,~green,", ","integer ",,~blue,", ","string ",,~pingPath,", ","fogstate ",,~fogVisibility,")"
CreateMinimapIconHint="[UjAPI]  minimapicon CreateMinimapIcon (real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility)"


SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(","string ",,~key,")"
SkinManagerGetLocalPathHint="[UjAPI]  string SkinManagerGetLocalPath (string key)"


SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(","sound ",,~soundHandle,", ","string ",,~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI]  boolean SetSoundFacialAnimationLabel (sound soundHandle, string animationLabel)"


SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(","sound ",,~soundHandle,", ","string ",,~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI]  boolean SetSoundFacialAnimationGroupLabel (sound soundHandle, string groupLabel)"


SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(","sound ",,~soundHandle,", ","string ",,~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI]  boolean SetSoundFacialAnimationSetFilepath (sound soundHandle, string animationSetFilepath)"


SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(","sound ",,~soundHandle,", ","string ",,~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI]  boolean SetDialogueSpeakerNameKey (sound soundHandle, string speakerName)"


GetDialogueSpeakerNameKey=GetDialogueSpeakerNameKey
GetDialogueSpeakerNameKey="GetDialogueSpeakerNameKey(","sound ",,~soundHandle,")"
GetDialogueSpeakerNameKeyHint="[UjAPI]  string GetDialogueSpeakerNameKey (sound soundHandle)"


SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(","sound ",,~soundHandle,", ","string ",,~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI]  boolean SetDialogueTextKey (sound soundHandle, string dialogueText)"


GetDialogueTextKey=GetDialogueTextKey
GetDialogueTextKey="GetDialogueTextKey(","sound ",,~soundHandle,")"
GetDialogueTextKeyHint="[UjAPI]  string GetDialogueTextKey (sound soundHandle)"


CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(","integer ",,~abilCode,", ","string ",,~order,")"
CreateCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateCommandButtonEffect (integer abilCode, string order)"


CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(","integer ",,~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateUpgradeCommandButtonEffect (integer whichUprgade)"


CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(","integer ",,~abilCode,")"
CreateLearnCommandButtonEffectHint="[UjAPI]  commandbuttoneffect CreateLearnCommandButtonEffect (integer abilCode)"

GetSpellAbilityId=Ability Being Cast
GetSpellAbilityId="Ability being cast"
GetSpellAbilityIdHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast.

     =JASS Code
     =~Script Code"
     Hint=Enter JASS code that returns an ability (integer). Example: 'Aloc' [UMSWE]

IsDestructableAliveBJ=Destructible Is Alive
IsDestructableAliveBJ=~Destructible," is alive"

IsDestructableDeadBJ=Destructible Is Dead
IsDestructableDeadBJ=~Destructible," is dead"

IsDestructableInvulnerableBJ=Destructible Is Invulnerable
IsDestructableInvulnerableBJ=~Destructible," is invulnerable"

IsPointBlightedBJ=Point Is Blighted
IsPointBlightedBJ=~Point," is blighted"

IsTerrainPathableBJ=Terrain Pathing Is Off
IsTerrainPathableBJ="Terrain pathing at ",~Location," of type ",~Pathing Type," is off"
IsTerrainPathableBJHint=Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing.

IsMapFlagSet=Map Flag Set
IsMapFlagSet=~Map Flag," is set"

IsCustomCampaignButtonVisibile=Custom Campaign Button Is Visible
IsCustomCampaignButtonVisibile="Custom campaign button ",~Number," is visible"

GetCreepCampFilterState=Creep Camp Display Is On
GetCreepCampFilterState="Creep camp minimap display is turned on"

SaveGameExists=Saved-Game Exists
SaveGameExists="The ",~Filename," saved-game exists"

GetStoredBooleanBJ=Load Boolean Value
GetStoredBooleanBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredBooleanBJHint=If the label is not found, this function returns False.

LoadBooleanBJ=Load Boolean Value (hashtable)
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint=If the label is not found, this function returns False.

HaveStoredValue=Cache Value Exists
HaveStoredValue=~Label," is stored as a ",~Type," of ",~Category," in ",~Game Cache

HaveSavedValue=Hashtable Value Exists
HaveSavedValue=~Value," is stored as a ",~Type," of ",~Value," in ",~Hashtable

UnitHasItem=Hero Has Item
UnitHasItem=~Hero," has ",~Item

UnitHasItemOfTypeBJ=Hero Has Item Of Type
UnitHasItemOfTypeBJ=~Hero," has an item of type ",~Item-Type

IsSuspendedXP=Experience Is Disabled For Hero
IsSuspendedXP="Experience is disabled for ",~Hero
IsSuspendedXPHint=Use the 'Hero - Enable/Disable Experience' action to disable a Hero's experience.

CheckItemStatus=Item Status Check
CheckItemStatus=~Item," is ",~Status

CheckItemcodeStatus=Item-Type Status Check
CheckItemcodeStatus=~Item-Type," is ",~Status

IsItemHiddenBJ=Item Is Hidden
IsItemHiddenBJ=~Item," is hidden"
IsItemHiddenBJHint=Items held by units are considered hidden.

IsItemOwned=Item Is Owned
IsItemOwned=~Item," is owned"
IsItemOwnedHint=Any item in a unit's inventory is considered owned, even if the owner is dead.

RectContainsItem=Item In Rect
RectContainsItem=~Item," is in ",~Rect
RectContainsItemHint=An owned item is not considered to be in any rects.

IsItemInvulnerable=Item Is Invulnerable
IsItemInvulnerable=~Item," is invulnerable"

LeaderboardHasPlayerItemBJ=Leaderboard Contains Player
LeaderboardHasPlayerItemBJ=~Leaderboard," contains ",~Player

IsMultiboardDisplayed=Multiboard Is Showing
IsMultiboardDisplayed=~Multiboard," is showing"

IsMultiboardMinimized=Multiboard Is Minimized
IsMultiboardMinimized=~Multiboard," is minimized"

WaygateIsActiveBJ=Way Gate Is Enabled
WaygateIsActiveBJ=~Way Gate," is enabled"

IsPlayerFlagSetBJ=Player Flag Is On
IsPlayerFlagSetBJ=~Player Flag," is on for ",~Player

IsPlayerAlly=Player Is An Ally Of Player
IsPlayerAlly=~Player," is an ally of ",~Player

IsPlayerEnemy=Player Is An Enemy Of Player
IsPlayerEnemy=~Player," is an enemy of ",~Player

GetPlayerAlliance=Player Alliance Towards Player
GetPlayerAlliance=~Player," is giving ",~Player," ",~Alliance Type

IsPlayerInForce=Player In Player Group
IsPlayerInForce=~Player," is in ",~Player Group

IsQuestItemCompleted=Quest Requirement Is Completed
IsQuestItemCompleted=~Quest Requirement," is completed"

IsQuestEnabled=Quest Is Enabled
IsQuestEnabled=~Quest," is enabled"

IsQuestCompleted=Quest Is Completed
IsQuestCompleted=~Quest," is completed"

IsQuestFailed=Quest Is Failed
IsQuestFailed=~Quest," is failed"

IsQuestDiscovered=Quest Is Discovered
IsQuestDiscovered=~Quest," is discovered"

IsQuestRequired=Quest Is Required
IsQuestRequired=~Quest," is required"

RectContainsLoc=Region Contains Point
RectContainsLoc=~Region," contains ",~Point

IsTriggerEnabled=Trigger Is On
IsTriggerEnabled=~Trigger," is on"

TriggerEvaluate=Evaluate Trigger Conditions
TriggerEvaluate="Evaluate ",~Trigger," conditions"

IsTriggerQueuedBJ=Trigger Is Queued
IsTriggerQueuedBJ=~Trigger," is queued"
IsTriggerQueuedBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsTriggerQueueEmptyBJ=Trigger Queue Is Empty
IsTriggerQueueEmptyBJ="The trigger queue is empty"
IsTriggerQueueEmptyBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsUnitType=Unit Classification Check
IsUnitType=~Unit," is ",~Type

IsUnitIdType=Unit-Type Classification Check
IsUnitIdType=~Unit-Type," is ",~Type

IsUnitInGroup=Unit In Unit Group
IsUnitInGroup=~Unit," is in ",~Unit Group

RectContainsUnit=Unit In Rect
RectContainsUnit=~Rect," contains ",~Unit

IsUnitAliveBJ=Unit Is Alive
IsUnitAliveBJ=~Unit," is alive"

IsUnitDeadBJ=Unit Is Dead
IsUnitDeadBJ=~Unit," is dead"

IsUnitPausedBJ=Unit Is Paused
IsUnitPausedBJ=~Unit," is paused"

IsUnitHiddenBJ=Unit Is Hidden
IsUnitHiddenBJ=~Unit," is hidden"
IsUnitHiddenBJHint=A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc.

IsUnitIllusionBJ=Unit Is An Illusion
IsUnitIllusionBJ=~Unit," is an illusion"

UnitCanSleepPerm=Unit Sleeps
UnitCanSleepPerm=~Unit," sleeps when unprovoked"
UnitCanSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitCanSleepBJ=Unit Sleeps At Night
UnitCanSleepBJ=~Unit," sleeps when unprovoked at night"
UnitCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitIsSleepingBJ=Unit Is Sleeping
UnitIsSleepingBJ=~Unit," is sleeping"
UnitIsSleepingBJHint=Units owned by players 1 through 12 never sleep.

DoesUnitGenerateAlarms=Unit Generates Alarms
DoesUnitGenerateAlarms=~Unit," generates alarms"

IsUnitLoadedBJ=Unit Is Being Transported
IsUnitLoadedBJ=~Unit," is being transported"

IsUnitInTransportBJ=Unit Is In Transport
IsUnitInTransportBJ=~Unit," is loaded into ",~Transport

IsUnitSelected=Unit Selected By Player
IsUnitSelected=~Unit," is selected by ",~Player

IsUnitAlly=Unit Belongs To An Ally Of Player
IsUnitAlly=~Unit," belongs to an ally of ",~Player

IsUnitEnemy=Unit Belongs To An Enemy Of Player
IsUnitEnemy=~Unit," belongs to an enemy of ",~Player

UnitHasBuffBJ=Unit Has Specific Buff
UnitHasBuffBJ=~Unit," has buff ",~Buff

IsUnitGroupEmptyBJ=Unit Group Is Empty
IsUnitGroupEmptyBJ=~Unit Group," is empty"
IsUnitGroupEmptyBJHint=This is true if the unit group contains no units.

IsUnitGroupInRectBJ=Units Of Unit Group Are In Rect
IsUnitGroupInRectBJ="All units of ",~Unit Group," are in ",~Rect
IsUnitGroupInRectBJHint=This is true if every unit in the unit group is in the given rect.

IsUnitGroupDeadBJ=Units Of Unit Group Are Dead
IsUnitGroupDeadBJ="All units of ",~Unit Group," are dead"
IsUnitGroupDeadBJHint=This is true if every unit in the unit group is dead.

IsFogEnabled=Fog Of War Enabled
IsFogEnabled="Fog of war is enabled"

IsFogMaskEnabled=Black Mask Enabled
IsFogMaskEnabled="Black mask is enabled"

IsUnitVisible=Unit Is Visible To Player
IsUnitVisible=~Unit," is visible to ",~Player

IsUnitInvisible=Unit Is Invisible To Player
IsUnitInvisible=~Unit," is invisible to ",~Player

IsUnitFogged=Unit Fogged To Player
IsUnitFogged=~Unit," is fogged to ",~Player

IsUnitMasked=Unit Is Masked To Player
IsUnitMasked=~Unit," is masked to ",~Player

IsLocationVisibleToPlayer=Point Visible To Player
IsLocationVisibleToPlayer=~Point," is visible to ",~Player

IsLocationFoggedToPlayer=Point Fogged To Player
IsLocationFoggedToPlayer=~Point," is fogged for ",~Player

IsLocationMaskedToPlayer=Point Masked To Player
IsLocationMaskedToPlayer=~Point," is masked for ",~Player

IsTimerDialogDisplayed=Timer Dialog Is Displayed
IsTimerDialogDisplayed=~Timer Window," is displayed"
IsTimerDialogDisplayedHint=A timer window is showing [UMSWE]

IsLeaderboardDisplayed=Leaderboard Is Displayed
IsLeaderboardDisplayed=~Leaderboard," is displayed"
IsLeaderboardDisplayedHint=[UMSWE]

IsLocationInRegion=Is Point In Region
IsLocationInRegion="Does ",~Region," contain point ",~Location
IsLocationInRegionHint=[UMSWE]

IsUnitInRegion=Is Unit In Region
IsUnitInRegion="Does ",~Region," contain unit ",~Unit
IsUnitInRegionHint=[UMSWE]

IsPointInRegion=Region Contains Coordinates
IsPointInRegion=~Region," contains offset (",~Real,", ",~Real,")"
IsPointInRegionHint=[UMSWE]

IsUnitInForce=Unit In Player Group
IsUnitInForce=~Unit," is in ",~Player Group
IsUnitInForceHint=[UMSWE]

IsUnitOwnedByPlayer=Unit Is Owned by Player
IsUnitOwnedByPlayer=~Unit," is owned by ",~Player
IsUnitOwnedByPlayerHint=[UMSWE]

IsUnitInRange=Is Unit in Range of Unit
IsUnitInRange="Is ",~Unit," near ",~Unit," and withing a range of ",~Range
IsUnitInRangeHint=[UMSWE]

IsUnitInRangeLoc=Is Unit in Range of Point
IsUnitInRangeLoc="Is ",~Unit," near ",~Point," and within a range of ",~Range
IsUnitInRangeLocHint=[UMSWE]

IsUnitRace=Unit Race Check
IsUnitRace=~Unit," is a ",~Race
IsUnitRaceHint=Checks what race a unit is [UMSWE]

CompareRectsBJ=Rect Matches Rect
CompareRectsBJ=~Rect," matches ",~Rect
CompareRectsBJHint=Use this to compare rects [UMSWE]

CompareLocationsBJ=Location Matches Location
CompareLocationsBJ=~Point," matches ",~Point
CompareLocationsBJHint=Use this to compare locations [UMSWE]

RectContainsCoords=Rect Contains Coordinates
RectContainsCoords=~Rect," contains (",~Real,", ",~Real,")"
RectContainsCoordsHint=A rect contains the point (x,y) [UMSWE]

UnitIgnoreAlarmToggled=Does Unit Ignore Alarm
UnitIgnoreAlarmToggled="Does unit ",~Unit," ignore alarm"
UnitIgnoreAlarmToggledHint=[UMSWE]

HaveStoredInteger=Is Integer Stored
HaveStoredInteger="Is Integer in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredIntegerHint=[UMSWE]

HaveStoredBoolean=Is Boolean Stored
HaveStoredBoolean="Is Boolean in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredBooleanHint=[UMSWE]

HaveStoredReal=Is Real Stored
HaveStoredReal="Is Real in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredRealHint=[UMSWE]

HaveStoredUnit=Is Unit Stored
HaveStoredUnit="Is Unit in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredUnitHint=[UMSWE]

HaveStoredString=Is String Stored
HaveStoredString="Is String in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredStringHint=[UMSWE]

      =JASS Code
      =~Script Code"
      Hint=Enter JASS code that returns a boolean value. Example: MyBoolean() [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

ReviveHeroLoc=Revive Hero (Instantly)
ReviveHeroLoc="Successful: Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive. [UMSWE]

UnitMakeAbilityPermanent=Unit Make Ability Permanent
UnitMakeAbilityPermanent="Successful: For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentHint=[UMSWE]

UnitAddAbilityBJ=Unit Add Ability
UnitAddAbilityBJ="Successful: Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint=[UMSWE]

UnitRemoveAbilityBJ=Unit Remove Ability
UnitRemoveAbilityBJ="Successful: Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent. [UMSWE]

UnitRemoveBuffBJ=Unit Remove Specific Buff
UnitRemoveBuffBJ="Successful: Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint=[UMSWE]

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Successful: Give ",~Item," to ",~Hero
UnitAddItemSwappedHint=[UMSWE]

UnitAddItemByIdSwapped=Unit Create Item For Hero
UnitAddItemByIdSwapped="Successful: Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint=[UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Successful: Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

UnitUseItem=Unit Use Item
UnitUseItem="Successful: Order ",~Hero," to use ",~Item
UnitUseItemHint=[UMSWE]

UnitUseItemTarget=Unit Use Item On A Unit
UnitUseItemTarget="Successful: Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint=[UMSWE]

UnitUseItemPointLoc=Unit Use Item On A Point
UnitUseItemPointLoc="Successful: Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint=[UMSWE]

UnitUseItemDestructable=Unit Use Item On A Destructible
UnitUseItemDestructable="Successful: Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint=[UMSWE]

IssueInstantTargetOrder=Give Item from Hero to Hero
IssueInstantTargetOrder="Successful: Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueImmediateOrder=Unit Issue Order With No Target
IssueImmediateOrder="Successful: Order ",~Unit," to ",~Order
IssueImmediateOrderHint=[UMSWE]

IssuePointOrderLoc=Unit Issue Order Targeting A Point
IssuePointOrderLoc="Successful: Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint=[UMSWE]

IssueTargetOrder=Unit Issue Order Targeting A Unit
IssueTargetOrder="Successful: Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint=[UMSWE]

IssueTargetDestructableOrder=Unit Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Successful: Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=[UMSWE]

IssueTargetOrderBJ=Unit Issue Order Targeting An Item
IssueTargetOrderBJ="Successful: Order ",~Unit," to ",~Order," ",~Item
IssueTargetOrderBJHint=[UMSWE]

IssueBuildOrderByIdLocBJ=Unit Issue Build Order
IssueBuildOrderByIdLocBJ="Successful: Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint=[UMSWE]

IssueTrainOrderByIdBJ=Unit Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Successful: Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep. [UMSWE]

IssueUpgradeOrderByIdBJ=Unit Issue Research Order
IssueUpgradeOrderByIdBJ="Successful: Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action. [UMSWE]

IssueNeutralImmediateOrderById=Player Buy Unit from Store
IssueNeutralImmediateOrderById="Successful: For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

GroupTargetOrder=Group Issue Order Targeting A Unit
GroupTargetOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetDestructableOrder=Group Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderBJ=Group Issue Order Targeting An Item
GroupTargetOrderBJ="Successful: Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLoc=Group Issue Order Targeting A Point
GroupPointOrderLoc="Successful: Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrder=Group Issue Order With No Target
GroupImmediateOrder="Successful: Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTrainOrderByIdBJ=Group Issue Train Order
GroupTrainOrderByIdBJ="Successful: Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group. [UMSWE]

IsUnitInRangeXY=Unit Is In Range Of Coordinate Offset
IsUnitInRangeXY="The distance between ",~Unit," and offset(",~X,", ",~Y,") matches ",~Range
IsUnitInRangeXYHint=Just here for COMPATIBILITY reasons. [UMSWE]

GetCurrentCameraSetup=Current Camera
GetCurrentCameraSetup="Current camera"

LoadDestructableHandleBJ=Load Destructable Handle
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDestructable=Last Created Destructible
GetLastCreatedDestructable="Last created destructible"
GetLastCreatedDestructableHint=This is the last destructible created via a 'Destructible - Create' trigger action.

RandomDestructableInRectSimpleBJ=Random Destructible In Region
RandomDestructableInRectSimpleBJ="Random destructible in ",~Region

RandomDestructableInRectBJ=Random Destructible In Region Matching Condition
RandomDestructableInRectBJ="Random destructible in ",~Region," matching ",~Condition
RandomDestructableInRectBJHint=Use 'Matching Destructible' to refer to the destructible being considered.

GetEnumDestructable=Picked Destructible
GetEnumDestructable="Picked destructible"
GetEnumDestructableHint=When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked.

GetFilterDestructable=Matching Destructible
GetFilterDestructable="Matching destructible"
GetFilterDestructableHint=Use this to refer to the destructible being considered for the 'Random Destructible' functions.

GetDyingDestructable=Dying Destructible
GetDyingDestructable="Dying destructible"
GetDyingDestructableHint=When responding to a 'Destructible Dies' event, this refers to the destructible that is dying.

GetOrderTargetDestructable=Target Destructible Of Issued Order
GetOrderTargetDestructable="Target destructible of issued order"
GetOrderTargetDestructableHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a destructible target, this refers to the target of the order.

GetSpellTargetDestructable=Target Destructible Of Ability Being Cast
GetSpellTargetDestructable="Target destructible of ability being cast"
GetSpellTargetDestructableHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast.

GetUnitRallyDestructable=Rally-Point As Destructible
GetUnitRallyDestructable="Rally-Point of ",~Unit," as a destructible"
GetUnitRallyDestructableHint=If the unit does not have a rally-point set to a destructible, this will return 'No destructible'.

CreateDestructableZ=Create with Z offset
CreateDestructableZ="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

CreateDeadDestructableZ=Create with Z offset (dead)
CreateDeadDestructableZ="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

       =JASS Code
       =~Script Code"
       Hint=Enter JASS code that returns a destructible (~=handle). Example: MyDestructable() [UMSWE]

GetDestructableTypeId=Destructible-Type of Destructible
GetDestructableTypeId="Destructible-type of ",~Destructible

        =JASS Code
        =~Script Code"
        Hint=Enter JASS code that returns a destructible type (integer). Example: 'LTlt' [UMSWE]

LoadDefeatConditionHandleBJ=Load Defeatcondition Handle
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDefeatConditionBJ=Last Created Defeat Condition
GetLastCreatedDefeatConditionBJ="Last created defeat condition"
GetLastCreatedDefeatConditionBJHint=This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action.

LoadDialogHandleBJ=Load Dialog Handle
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint=If the label is not found, this function returns NULL.

GetClickedDialogBJ=Clicked Dialog
GetClickedDialogBJ="Clicked dialog"
GetClickedDialogBJHint=When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button.

DialogCreate=New Dialog
DialogCreate="New Dialog"
DialogCreateHint=Used to initialize a dialog array or clear a dialog variable [UMSWE]

         =JASS Code
         =~Script Code"
         Hint=Enter JASS code that returns a dialog. Example: MyDialog() [UMSWE]

LoadButtonHandleBJ=Load Button Handle
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedButtonBJ=Last Created Dialog Button
GetLastCreatedButtonBJ="Last created dialog Button"
GetLastCreatedButtonBJHint=This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action.

GetClickedButtonBJ=Clicked Dialog Button
GetClickedButtonBJ="Clicked dialog button"
GetClickedButtonBJHint=When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked.

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey ",~Keycode
DialogAddButtonHint=Creates a dialog button with a hotkey based on ASCII value. [UMSWE]

          =JASS Code
          =~Script Code"
          Hint=Enter JASS code that returns a dialog button. Example: MyButton() [UMSWE]

LoadTextTagHandleBJ=Load Texttag Handle
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable

GetLastCreatedTextTag=Last Created Floating Text
GetLastCreatedTextTag="Last created floating text"
GetLastCreatedTextTagHint=This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action.

            =JASS Code
            =~Script Code"
            Hint=Enter JASS code that returns a Floating Text. Example: MyTexttag() [UMSWE]

GetLastCreatedGameCacheBJ=Last Created Game Cache
GetLastCreatedGameCacheBJ="Last created game cache"
GetLastCreatedGameCacheBJHint=This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action.

InitGameCache=Create
InitGameCache="Create a game cache from ",~FileName
InitGameCacheHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created. [UMSWE]

GetGameSpeed=Current Game Speed
GetGameSpeed="Current game speed"

GetLastCreatedHashtableBJ=Last Created Hashtable
GetLastCreatedHashtableBJ="Last created hashtable"
GetLastCreatedHashtableBJHint=This is the last hashtable created via a 'Hashtable - Create Hashtable' trigger action.

LoadImageHandleBJ=Load Image Handle
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedImage=Last Created Image
GetLastCreatedImage="Last created image"

  =JASS Code
  =~Script Code"
  Hint=Enter JASS code that returns an image. Example: MyImage() [UMSWE]

GetHandleIdBJ=Get Handle ID
GetHandleIdBJ="Key ",~Handle
GetHandleIdBJHint=Creates a key from a handle for use in the hashtable.

StringHashBJ=Get String ID
StringHashBJ="Key ",~String
StringHashBJHint=Creates a key from a string for use in the hashtable.

LoadIntegerBJ=Load Integer Value (hashtable)
LoadIntegerBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadIntegerBJHint=If the label is not found, this function returns 0.

OperatorInt=Arithmetic
OperatorInt=~Value," ",~Operator," ",~Value

GetForLoopIndexA=For Loop Integer A
GetForLoopIndexA="Integer A"

GetForLoopIndexB=For Loop Integer B
GetForLoopIndexB="Integer B"

StringLength=String Length
StringLength="Length of ",~String

R2I=Convert Real To Integer
R2I="Integer(",~Real,")"

S2I=Convert String To Integer
S2I="Integer(",~String,")"

GetElevatorHeight=Elevator Height
GetElevatorHeight="Height of ",~Elevator
GetElevatorHeightHint=An elevator's height can be changed using the 'Destructible - Set Elevator Height' action.

GetTerrainCliffLevelBJ=Terrain Cliff Level
GetTerrainCliffLevelBJ="Terrain cliff level at ",~Location
GetTerrainCliffLevelBJHint=Cliff level values start at zero.

GetTerrainVarianceBJ=Terrain Variance
GetTerrainVarianceBJ="Terrain variance at ",~Location

GetLearnedSkillLevel=Learned Skill Level
GetLearnedSkillLevel="Learned skill level"

GetPlayers=Number Of Players
GetPlayers="Number of players"

GetTeams=Number Of Teams
GetTeams="Number of teams"

GetAllyColorFilterState=Ally Color Filter Setting
GetAllyColorFilterState="Ally color filter setting"
GetAllyColorFilterStateHint=A value of 0 indicates that filtering is disabled.  A value of 1 indicates that filtering is only enabled for the minimap.  A value of 2 indicates that filtering is enabled for the minimap and the game view.

GetTournamentFinishNowRule=Tournament Finish Rule
GetTournamentFinishNowRule="Tournament finish rule"
GetTournamentFinishNowRuleHint=A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw.

GetTournamentScore=Tournament Melee Score
GetTournamentScore="Tournament melee score for ",~Player
GetTournamentScoreHint=This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long.

GetStoredIntegerBJ=Load Integer Value
GetStoredIntegerBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredIntegerBJHint=If the label is not found, this function returns 0.

GetHeroLevel=Hero Level
GetHeroLevel="Hero level of ",~Hero

GetHeroXP=Hero Experience
GetHeroXP="Hero experience of ",~Hero

GetHeroStatBJ=Hero Attribute
GetHeroStatBJ=~Attribute," of ",~Hero," (",~Include/Exclude," bonuses)"

GetHeroSkillPoints=Unspent Skill Points
GetHeroSkillPoints="Unspent skill points of ",~Hero

GetItemLevel=Item Level
GetItemLevel="Item level of ",~Item

GetItemCharges=Item Charges Remaining
GetItemCharges="Charges remaining in ",~Item
GetItemChargesHint=Items with unlimited charges will return zero.

GetItemUserData=Custom Value Of Item
GetItemUserData="Custom value of ",~Item
GetItemUserDataHint=Use 'Item - Set Custom Value' to set the custom value of an item.

LeaderboardGetPlayerIndexBJ=Leaderboard Position
LeaderboardGetPlayerIndexBJ="Position of ",~Player," in ",~Leaderboard

GetRandomInt=Random Number
GetRandomInt="Random integer number between ",~Minimum," and ",~Maximum

IMinBJ=Min
IMinBJ="Min(",~Value 1,", ",~Value 2,")"

IMaxBJ=Max
IMaxBJ="Max(",~Value 1,", ",~Value 2,")"

IAbsBJ=Abs
IAbsBJ="Abs(",~Value,")"
IAbsBJHint=Calculates the absolute value of a number.

ISignBJ=Sign
ISignBJ="Sign(",~Value,")"
ISignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloInteger=Modulo
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint=Calculates the remainder of a division.  Example: 12 mod 5 = 2.

MultiboardGetRowCount=Row Count
MultiboardGetRowCount="Number of rows in ",~Multiboard

MultiboardGetColumnCount=Column Count
MultiboardGetColumnCount="Number of columns in ",~Multiboard

GetResourceAmount=Gold Remaining
GetResourceAmount="Resource quantity contained in ",~Gold Mine
GetResourceAmountHint=This is for use with Gold Mines.

GetPlayerState=Player Property
GetPlayerState=~Player," ",~Property

GetPlayerTaxRateBJ=Player Tax Rate
GetPlayerTaxRateBJ="Tax rate of ",~Resource," from ",~Player," to ",~Player
GetPlayerTaxRateBJHint=The tax rate value is a percentage of total income (0-100).

GetPlayerScore=Player Score
GetPlayerScore=~Player," ",~Score

GetConvertedPlayerId=Player Number
GetConvertedPlayerId="Player number of ",~Player
GetConvertedPlayerIdHint=Player numbers range from 1 to 16.

GetPlayerStructureCount=Count Structures
GetPlayerStructureCount="Count structures controlled by ",~Player," (",~Include/Exclude," incomplete structures)"

GetPlayerUnitCount=Count Non-Structure Units
GetPlayerUnitCount="Count non-structure units controlled by ",~Player," (",~Include/Exclude," incomplete units)"

GetPlayerTechCountSimple=Current Research Level
GetPlayerTechCountSimple="Current research level of ",~Tech," for ",~Player
GetPlayerTechCountSimpleHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTechMaxAllowedSwap=Max Research Level
GetPlayerTechMaxAllowedSwap="Max research level of ",~Tech," for ",~Player
GetPlayerTechMaxAllowedSwapHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTeam=Player Team
GetPlayerTeam="Team number of ",~Player

CountPlayersInForceBJ=Count Players In Player Group
CountPlayersInForceBJ="Number of players in ",~Player Group

CountUnitsInGroup=Count Units In Unit Group
CountUnitsInGroup="Number of units in ",~Unit Group

CountLivingPlayerUnitsOfTypeId=Count Living Units Owned By Player
CountLivingPlayerUnitsOfTypeId="Number of living ",~Unit-Type," units owned by ",~Player

GetUnitFoodUsed=Supply Used By Unit
GetUnitFoodUsed="Supply used by ",~Unit

GetUnitFoodMade=Supply Provided By Unit
GetUnitFoodMade="Supply provided by ",~Unit

GetFoodUsed=Supply Used By Unit-Type
GetFoodUsed="Supply used by ",~Unit-Type

GetFoodMade=Supply Provided By Unit-Type
GetFoodMade="Supply provided by ",~Unit-Type

GetUnitPointValue=Point-Value Of Unit
GetUnitPointValue="Point-value of ",~Unit

GetUnitPointValueByType=Point-Value Of Unit-Type
GetUnitPointValueByType="Point-value of ",~Unit-Type

GetUnitUserData=Custom Value Of Unit
GetUnitUserData="Custom value of ",~Unit
GetUnitUserDataHint=Use 'Unit - Set Custom Value' to set the custom value of a unit.

GetUnitLevel=Level Of Unit
GetUnitLevel="Level of ",~Unit
GetUnitLevelHint=This may be used for heroes and regular units.

GetUnitAbilityLevelSwapped=Level Of Ability For Unit
GetUnitAbilityLevelSwapped="Level of ",~Ability," for ",~Unit
GetUnitAbilityLevelSwappedHint=If the unit does not have the ability, the result will be zero.

UnitInventoryCount=Count Items Carried
UnitInventoryCount="Number of items carried by ",~Unit

UnitInventorySizeBJ=Size of Inventory
UnitInventorySizeBJ="Size of inventory for ",~Unit

UnitCountBuffsExBJ=Count Buffs By Type
UnitCountBuffsExBJ="Number of ",~Buff Type," buffs considered ",~Buff Resist," on ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

GetTriggerEvalCount=Trigger Evaluation Count
GetTriggerEvalCount="Evaluation count of ",~Trigger

GetTriggerExecCount=Trigger Execution Count
GetTriggerExecCount="Execution count of ",~Trigger

QueuedTriggerCountBJ=Count Triggers In Trigger Queue
QueuedTriggerCountBJ="Number of triggers in the trigger queue"
QueuedTriggerCountBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IntegerTertiaryOp=Tertiary Integer Option
IntegerTertiaryOp="If ",~Condition," is equal to true then use ",~Nr," else use ",~Nr
IntegerTertiaryOpHint=[UMSWE]

GetIntegerGameState=Game State
GetIntegerGameState=~Gamestate"
GetIntegerGameStateHint=[UMSWE]

LeaderboardGetItemCount=Leaderboard Player Count
LeaderboardGetItemCount="Player count of ",~Leaderboard
LeaderboardGetItemCountHint=[UMSWE]

QueuedTriggerGetIndex=Index Of Queued Trigger
QueuedTriggerGetIndex="Index of ",~Trigger," in the trigger queue"
QueuedTriggerGetIndexHint=Searches the queue for a given trigger, returning the index of the trigger within the queue if it is found, or -1 if it is not found [UMSWE]

GetPlayerTypedUnitCount=Count Units of Player of Type
GetPlayerTypedUnitCount="Count units of player ",~Player," of type ",~unitname," and include incomplete units ",~Include," and include currently upgrading buildings ",~Include
GetPlayerTypedUnitCountHint=Use the names of the 6th column of UnitUI.slk as unitnames [UMSWE]

             =JASS Code
             =~Script Code"
             Hint=Enter JASS code that returns an integer value. Example: 0xFF

GetUnitAbilityLevel=Level Of Buff For Unit
GetUnitAbilityLevel="For ",~Unit," the level of ",~Buff
GetUnitAbilityLevelHint=ust here for COMPATIBILITY reasons. Would return 1 if the unit has the buff [UMSWE]

LoadItemHandleBJ=Load Item Handle
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedItem=Last Created Item
GetLastCreatedItem="Last created item"
GetLastCreatedItemHint=This is the last item created via an 'Item - Create' or 'Hero - Create Item For Hero' trigger action.

GetLastRemovedItem=Last Dropped Item
GetLastRemovedItem="Last dropped item"
GetLastRemovedItemHint=This is the last item dropped via a 'Hero - Drop Item' trigger action.

RandomItemInRectSimpleBJ=Random Item In Region
RandomItemInRectSimpleBJ="Random item in ",~Region

RandomItemInRectBJ=Random Item In Region Matching Condition
RandomItemInRectBJ="Random item in ",~Region," matching ",~Condition
RandomItemInRectBJHint=Use 'Matching Item' to refer to the item being considered.

GetEnumItem=Picked Item
GetEnumItem="Picked item"
GetEnumItemHint=When using the 'Pick Every Item...' action, this refers to each item as it is picked.

GetFilterItem=Matching Item
GetFilterItem="Matching item"
GetFilterItemHint=Use this to refer to the item being considered for the 'Random Item' functions.

UnitItemInSlotBJ=Item Carried By Hero
UnitItemInSlotBJ="Item carried by ",~Hero," in slot ",~Index

GetItemOfTypeFromUnitBJ=Item Carried By Hero Of Type
GetItemOfTypeFromUnitBJ="Item carried by ",~Hero," of type ",~Item-Type

GetManipulatedItem=Item Being Manipulated
GetManipulatedItem="Item being manipulated"
GetManipulatedItemHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated.

GetSoldItem=Sold Item
GetSoldItem="Sold Item"
GetSoldItemHint=When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold.

GetOrderTargetItem=Target Item Of Issued Order
GetOrderTargetItem="Target item of issued order"
GetOrderTargetItemHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order.

GetSpellTargetItem=Target Item Of Ability Being Cast
GetSpellTargetItem="Target item of ability being cast"
GetSpellTargetItemHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast.

CreateItemLoc=Create Item At Location
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint=[UMSWE]

              =JASS Code
              =~Script Code"
              Hint=Enter JASS code that returns an item (~=handle). Example: MyItem() [UMSWE]

GetItemType=Item-Class Of Item
GetItemType="Item-class of ",~Item

GetItemTypeId=Item-Type Of Item
GetItemTypeId="Item-type of ",~Item

ChooseRandomItemBJ=Random Item-Type
ChooseRandomItemBJ="Random level ",~Level," item-type"
ChooseRandomItemBJHint=This function corresponds to the original unclassified item system with levels 0-10.  Use -1 for any level.

ChooseRandomItemExBJ=Random Item-Type Of Class
ChooseRandomItemExBJ="Random level ",~Level," ",~Class," item-type"
ChooseRandomItemExBJHint=This function corresponds to the newer item classification system with levels 0-8.  Use -1 for any level.

RandomDistChoose=Get Random Item From Pool
RandomDistChoose="Get a random item from your own item pool"
RandomDistChooseHint=Use 'Add Random Item to Pool' to create your own item pool [UMSWE]

               =JASS Code
               =~Script Code"
               Hint=Enter JASS code that returns an item type (integer). Example: 'phea' [UMSWE]

LoadLeaderboardHandleBJ=Load Leaderboard Handle
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLeaderboard=Last Created Leaderboard
GetLastCreatedLeaderboard="Last created leaderboard"
GetLastCreatedLeaderboardHint=This is the last leaderboard created via a 'Leaderboard - Create Leaderboard' trigger action.

PlayerGetLeaderboardBJ=Leaderboard Of Player
PlayerGetLeaderboardBJ="Leaderboard of ",~Player
PlayerGetLeaderboardBJHint=Each player can have at most one leaderboard.

                =JASS Code
                =~Script Code"
                Hint=Enter JASS code that returns a leaderboard. Example: MyLeaderboard() [UMSWE]

LoadLightningHandleBJ=Load Lightning Handle
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLightningBJ=Last Created Lightning Effect
GetLastCreatedLightningBJ="Last created lightning effect"

   =JASS Code
   =~Script Code"
   Hint=Enter JASS code that returns a lightning. Example: MyLightning() [UMSWE]

LoadMultiboardHandleBJ=Load Multiboard Handle
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedMultiboard=Last Created Multiboard
GetLastCreatedMultiboard="Last created multiboard"
GetLastCreatedMultiboardHint=This is the last multiboard created via a 'Multiboard - Create Multiboard' trigger action.

                 =JASS Code
                 =~Script Code"
                 Hint=Enter JASS code that returns a multiboard value. Example: MyMultiboard() [UMSWE]

CreateMultiboard=Create Multiboard
CreateMultiboard="Create new multiboard"
CreateMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

String2OrderIdBJ=Convert String To Order
String2OrderIdBJ="Order(",~String,")"
String2OrderIdBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2OrderIdBJ=Convert Unit-Type To Order
UnitId2OrderIdBJ="Order(",~Unit-Type,")"

GetIssuedOrderIdBJ=Issued Order
GetIssuedOrderIdBJ="Issued order"
GetIssuedOrderIdBJHint=When responding to 'Is Issued An Order' unit events, this refers to the order being issued.

GetUnitCurrentOrder=Current Order Of Unit
GetUnitCurrentOrder="Current order of ",~Unit

                   =JASS Code
                   =~Script Code"
                   Hint=Enter JASS code that returns an orderid value (integer). Example: 852000 [UMSWE]

LoadPlayerHandleBJ=Load Player Handle
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint=If the label is not found, this function returns NULL.

GetEnumPlayer=Picked Player
GetEnumPlayer="Picked player"
GetEnumPlayerHint=When using the 'Pick Every Player...' action, this refers to each player as he/she is picked.

GetFilterPlayer=Matching Player
GetFilterPlayer="Matching player"
GetFilterPlayerHint=Use this to refer to the player being considered for the 'All Players Matching Condition' function.

GetOwningPlayer=Owner Of Unit
GetOwningPlayer="Owner of ",~Unit

GetItemPlayer=Owner Of Item
GetItemPlayer="Owner of ",~Item

ForcePickRandomPlayer=Random Player From Player Group
ForcePickRandomPlayer="Random player from ",~Player Group

ConvertedPlayer=Convert Player Index To Player
ConvertedPlayer="Player(",~Player Index,")"
ConvertedPlayerHint=Player indexes range from 1 to 16.

GetChangingUnitPrevOwner=Previous Owner
GetChangingUnitPrevOwner="Previous owner"
GetChangingUnitPrevOwnerHint=When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit.

GetTriggerPlayer=Triggering Player
GetTriggerPlayer="Triggering player"

LeaderboardGetIndexedPlayerBJ=Player In Position
LeaderboardGetIndexedPlayerBJ="Player in position ",~Position," of ",~Leaderboard

GetEventDetectingPlayer=Detecting Player
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayerHint=When responding to a 'Unit Is detected' unit event, this refers to the player, who detects the unit [UMSWE]

GetWinningPlayer=Winning Player
GetWinningPlayer="Get winning player"
GetWinningPlayerHint=For victory event [UMSWE]

GetLocalPlayer=Local Player
GetLocalPlayer="Local player"
GetLocalPlayerHint=Use a player comparison with local player to do certain actions just for certain players on bnet. [UMSWE]

                    =JASS Code
                    =~Script Code"
                    Hint=Enter JASS code that returns a Player. Example: MyPlayer() [UMSWE]

GetPlayerColor=Color Of Player
GetPlayerColor="Color of ",~Player

LoadForceHandleBJ=Load Force Handle
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint=If the label is not found, this function returns NULL.

GetPlayersAll=All Players
GetPlayersAll="All players"
GetPlayersAllHint=Includes unused and neutral players.

GetPlayersByMapControl=All Players Of Control
GetPlayersByMapControl="All players controlled by a ",~Control Type," player"

GetPlayersMatching=All Players Matching Condition
GetPlayersMatching="All players matching ",~Condition
GetPlayersMatchingHint=Use 'Matching Player' to refer to the player on whom the comparison is being performed.  This includes unused and neutral players.

GetPlayersAllies=Allies Of Player
GetPlayersAllies="All allies of ",~Player
GetPlayersAlliesHint=All allies of the specified player, including him/herself.

GetPlayersEnemies=Enemies Of Player
GetPlayersEnemies="All enemies of ",~Player
GetPlayersEnemiesHint=All enemies of the specified player.

GetForceOfPlayer=Convert Player To Player Group
GetForceOfPlayer="Player group(",~Player,")"

CreateForce=Create Force
CreateForce="Create new force"
CreateForceHint=Used to initialize force arrays [UMSWE]

                     =JASS Code
                     =~Script Code"
                     Hint=Enter JASS code that returns a Player Group. Example: MyForce() [UMSWE]

LoadLocationHandleBJ=Load Location Handle
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint=If the label is not found, this function returns NULL.

GetRectCenter=Center Of Rect
GetRectCenter="Center of ",~Rect
GetRectCenterHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetRandomLocInRect=Random Point In Rect
GetRandomLocInRect="Random point in ",~Rect
GetRandomLocInRectHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

OffsetLocation=Point With Offset
OffsetLocation=~Point," offset by (",~X,", ",~Y,")"
OffsetLocationHint=The offset values are (X, Y). The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

PolarProjectionBJ=Point With Polar Offset
PolarProjectionBJ=~Point," offset by ",~Distance," towards ",~Angle," degrees"
PolarProjectionBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

CameraSetupGetDestPositionLoc=Target Of Camera Object
CameraSetupGetDestPositionLoc="Target of ",~Camera Object
CameraSetupGetDestPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraTargetPositionLoc=Target Of Current Camera
GetCameraTargetPositionLoc="Target of current camera view"
GetCameraTargetPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraEyePositionLoc=Source Of Current Camera
GetCameraEyePositionLoc="Source of current camera view"
GetCameraEyePositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

Location=Convert Coordinates To Point
Location="Point(",~X,", ",~Y,")"
LocationHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetDestructableLoc=Position Of Destructible
GetDestructableLoc="Position of ",~Destructible
GetDestructableLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetOrderPointLoc=Target Point Of Issued Order
GetOrderPointLoc="Target point of issued order"
GetOrderPointLocHint=When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order. Save it to a variable and later remove it

GetSpellTargetLoc=Target Point Of Ability Being Cast
GetSpellTargetLoc="Target point of ability being cast"
GetSpellTargetLocHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast. Save it to a variable and later remove it

GetItemLoc=Position Of Item
GetItemLoc="Position of ",~Item
GetItemLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

WaygateGetDestinationLocBJ=Way Gate Destination
WaygateGetDestinationLocBJ="Destination of ",~Way Gate
WaygateGetDestinationLocBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetPlayerStartLocationLoc=Player Start Location
GetPlayerStartLocationLoc=~Player," start location"
GetPlayerStartLocationLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitLoc=Position Of Unit
GetUnitLoc="Position of ",~Unit
GetUnitLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitRallyPoint=Rally-Point As Point
GetUnitRallyPoint="Rally-Point of ",~Unit," as a point"
GetUnitRallyPointHint=If the unit has no rally-point set, the result will be (0,0) Save it to a variable and later remove it

                      =JASS Code
                      =~Script Code"
                      Hint=Enter JASS code that returns a Point value. Example: MyLocation() [UMSWE]

LoadQuestHandleBJ=Load Quest Handle
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestBJ=Last Created Quest
GetLastCreatedQuestBJ="Last created quest"
GetLastCreatedQuestBJHint=This is the last quest created via a 'Quest - Create Quest' trigger action.

LoadQuestItemHandleBJ=Load Questitem Handle
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestItemBJ=Last Created Quest Requirement
GetLastCreatedQuestItemBJ="Last created quest requirement"
GetLastCreatedQuestItemBJHint=This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action.

GetPlayerRace=Race Of Player
GetPlayerRace="Race of ",~Player

GetUnitRace=Race Of Unit
GetUnitRace="Race of ",~Unit

LoadRealBJ=Load Real Value (hashtable)
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint=If the label is not found, this function returns 0.

OperatorReal=Arithmetic
OperatorReal=~Value," ",~Operator," ",~Value

GetLocationX=X Of Point
GetLocationX="X of ",~Point

GetLocationY=Y Of Point
GetLocationY="Y of ",~Point

CameraSetupGetFieldSwap=Camera Field Of Camera Object
CameraSetupGetFieldSwap=~Camera Field," of ",~Camera Object

GetCameraField=Camera Field Of Current Camera
GetCameraField=~Camera Field," of the current camera view"

GetCameraTargetPositionX=Target X Of Current Camera
GetCameraTargetPositionX="Target X of current camera view"

GetCameraTargetPositionY=Target Y Of Current Camera
GetCameraTargetPositionY="Target Y of current camera view"

GetCameraTargetPositionZ=Target Z Of Current Camera
GetCameraTargetPositionZ="Target Z of current camera view"

GetCameraEyePositionX=Source X Of Current Camera
GetCameraEyePositionX="Source X of current camera view"

GetCameraEyePositionY=Source Y Of Current Camera
GetCameraEyePositionY="Source Y of current camera view"

GetCameraEyePositionZ=Source Z Of Current Camera
GetCameraEyePositionZ="Source Z of current camera view"

GetLastTransmissionDurationBJ=Last Transmission Length
GetLastTransmissionDurationBJ="Length of last transmission"
GetLastTransmissionDurationBJHint=This is the length, in seconds, of the last used 'Cinematic - Transmission' action.

I2R=Convert Integer To Real
I2R="Real(",~Integer,")"

S2R=Convert String To Real
S2R="Real(",~String,")"

Deg2Rad=Convert Degrees To Radians
Deg2Rad="Radians(",~Degrees,")"

Rad2Deg=Convert Radians To Degrees
Rad2Deg="Degrees(",~Radians,")"

TimerGetElapsed=Elapsed Time
TimerGetElapsed="Elapsed time for ",~Timer

TimerGetRemaining=Remaining Time
TimerGetRemaining="Remaining time for ",~Timer

TimerGetTimeout=Initial Time
TimerGetTimeout="Initial time for ",~Timer

GetDestructableLife=Life
GetDestructableLife="Current life of ",~Destructible
GetDestructableLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableMaxLife=Max Life
GetDestructableMaxLife="Max life of ",~Destructible
GetDestructableMaxLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableOccluderHeight=Occlusion Height
GetDestructableOccluderHeight="Occlusion height of ",~Destructible

GetEventDamage=Damage Taken
GetEventDamage="Damage taken"
GetEventDamageHint=When responding to a 'Takes Damage' unit event, this refers to the amount of damage being taken.

GetTournamentFinishSoonTimeRemaining=Tournament Time Remaining
GetTournamentFinishSoonTimeRemaining="Tournament time remaining"
GetTournamentFinishSoonTimeRemainingHint=When responding to a 'Game must end soon' tournament event, this returns the amount of time remaining, in real-time seconds.

GetTimeOfDay=Time Of Day
GetTimeOfDay="In-game time of day"
GetTimeOfDayHint=This is in game time, not real time.

GetTimeOfDayScalePercentBJ=Time Of Day Speed
GetTimeOfDayScalePercentBJ="Current time of day speed"
GetTimeOfDayScalePercentBJHint=This returns the time of day speed as a percentage of the default time of day speed.

GetStoredRealBJ=Load Real Value
GetStoredRealBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredRealBJHint=If the label is not found, this function returns 0.

GetItemLifeBJ=Item Life
GetItemLifeBJ="Current life of ",~Item

GetLightningColorRBJ=Red Color of Lightning
GetLightningColorRBJ="Red color of ",~Lightning
GetLightningColorRBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorGBJ=Green Color of Lightning
GetLightningColorGBJ="Green color of ",~Lightning
GetLightningColorGBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorBBJ=Blue Color of Lightning
GetLightningColorBBJ="Blue color of ",~Lightning
GetLightningColorBBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorABJ=Alpha Value of Lightning
GetLightningColorABJ="Alpha value of ",~Lightning
GetLightningColorABJHint=This returns a value between 0 and 1.  A value of 0 corresponds to a completely invisible lightning effect.  Use 'Lightning - Set Lightning Effect Color' to change the alpha value of a Lightning Effect.

GetRandomReal=Random Number
GetRandomReal="Random real number between ",~Minimum," and ",~Maximum

GetRandomDirectionDeg=Random Angle
GetRandomDirectionDeg="Random angle"
GetRandomDirectionDegHint=This is a random real number in the range of 0 to 360, for use as an angle or a unit facing.

GetRandomPercentageBJ=Random Percentage
GetRandomPercentageBJ="Random percentage"
GetRandomPercentageBJHint=This is a random real number in the range of 0 to 100, for use as a percentage.

DistanceBetweenPoints=Distance Between Points
DistanceBetweenPoints="Distance between ",~Point," and ",~Point
DistanceBetweenPointsHint=Returns the Euclidean distance between two points, ignoring height.

AngleBetweenPoints=Angle Between Points
AngleBetweenPoints="Angle from ",~Point," to ",~Point
AngleBetweenPointsHint=Returns the angle of a line from one point to another.

RMinBJ=Min
RMinBJ="Min(",~Value 1,", ",~Value 2,")"

RMaxBJ=Max
RMaxBJ="Max(",~Value 1,", ",~Value 2,")"

RAbsBJ=Abs
RAbsBJ="Abs(",~Value,")"
RAbsBJHint=Calculates the absolute value of a number.

RSignBJ=Sign
RSignBJ="Sign(",~Value,")"
RSignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloReal=Modulo
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint=Calculates the remainder of a division.  Example: 9.0 mod 2.5 = 1.5.

Pow=Power
Pow="Power(",~Value,", ",~Power,")"

SquareRoot=Square Root
SquareRoot="Square root(",~Value,")"

SinBJ=Sine
SinBJ="Sin(",~Angle,")"
SinBJHint=The angle specified is expected to be in degrees.

CosBJ=Cosine
CosBJ="Cos(",~Angle,")"
CosBJHint=The angle specified is expected to be in degrees.

TanBJ=Tangent
TanBJ="Tan(",~Angle,")"
TanBJHint=The angle specified is expected to be in degrees.

AsinBJ=Arcsine
AsinBJ="Asin(",~Value,")"
AsinBJHint=The angle returned is in degrees.

AcosBJ=Arccosine
AcosBJ="Acos(",~Value,")"
AcosBJHint=The angle returned is in degrees.

AtanBJ=Arctangent (From Angle)
AtanBJ="Atan(",~Value,")"
AtanBJHint=The angle returned is in degrees.

Atan2BJ=Arctangent (From Deltas)
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint=The angle returned is in degrees.

GetPlayerHandicapXPBJ=Experience Rate
GetPlayerHandicapXPBJ=~Player," experience rate"
GetPlayerHandicapXPBJHint=Experience rates are specified as percentages, with 100% being normal.

GetPlayerHandicapBJ=Handicap
GetPlayerHandicapBJ=~Player," handicap"
GetPlayerHandicapBJHint=Handicap values are specified as percentages, with 100% being normal.

GetRectCenterX=Center X Of Rect
GetRectCenterX="Center X of ",~Rect

GetRectCenterY=Center Y Of Rect
GetRectCenterY="Center Y of ",~Rect

GetRectMinX=Min X Of Rect
GetRectMinX="Min X of ",~Rect

GetRectMinY=Min Y Of Rect
GetRectMinY="Min Y of ",~Rect

GetRectMaxX=Max X Of Rect
GetRectMaxX="Max X of ",~Rect

GetRectMaxY=Max Y Of Rect
GetRectMaxY="Max Y of ",~Rect

GetRectWidthBJ=Width Of Rect
GetRectWidthBJ="Width of ",~Rect

GetRectHeightBJ=Height Of Rect
GetRectHeightBJ="Height of ",~Rect

GetSoundDurationBJ=Sound Length
GetSoundDurationBJ="Length of ",~Sound
GetSoundDurationBJHint=This returns the duration of a sound, in seconds.

GetSoundFileDurationBJ=Music Length
GetSoundFileDurationBJ="Length of ",~Music
GetSoundFileDurationBJHint=This returns the duration of a music score, in seconds.

GetUnitStateSwap=Property
GetUnitStateSwap=~Property," of ",~Unit

GetUnitLifePercent=Percentage Life
GetUnitLifePercent="Percentage life of ",~Unit

GetUnitManaPercent=Percentage Mana
GetUnitManaPercent="Percentage mana of ",~Unit

GetUnitFacing=Facing Angle
GetUnitFacing="Facing of ",~Unit
GetUnitFacingHint=The angle returned is in degrees, with 0 facing east.

GetUnitMoveSpeed=Movement Speed (Current)
GetUnitMoveSpeed="Current movement speed of ",~Unit
GetUnitMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitDefaultMoveSpeed=Movement Speed (Default)
GetUnitDefaultMoveSpeed="Default movement speed of ",~Unit
GetUnitDefaultMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitAcquireRange=Acquisition Range (Current)
GetUnitAcquireRange="Current acquisition range of ",~Unit

GetUnitDefaultAcquireRange=Acquisition Range (Default)
GetUnitDefaultAcquireRange="Default acquisition range of ",~Unit

GetUnitTurnSpeed=Turn Speed (Current)
GetUnitTurnSpeed="Current turn speed of ",~Unit
GetUnitTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitDefaultTurnSpeed=Turn Speed (Default)
GetUnitDefaultTurnSpeed="Default turn speed of ",~Unit
GetUnitDefaultTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitPropWindowBJ=Prop Window Angle (Current)
GetUnitPropWindowBJ="Current prop window angle of ",~Unit

GetUnitDefaultPropWindowBJ=Prop Window Angle (Default)
GetUnitDefaultPropWindowBJ="Default prop window angle of ",~Unit

GetUnitFlyHeight=Flying Height (Current)
GetUnitFlyHeight="Current flying height of ",~Unit
GetUnitFlyHeightHint=Only flying units use flying heights.

GetUnitDefaultFlyHeight=Flying Height (Default)
GetUnitDefaultFlyHeight="Default flying height of ",~Unit

GetUnitX=X Of Unit
GetUnitX="X of ",~Unit
GetUnitXHint=[UMSWE]

GetUnitY=Y Of Unit
GetUnitY="Y of ",~Unit
GetUnitYHint=[UMSWE]

                       =JASS Code
                       =~Script Code"
                       Hint=Enter JASS code that returns a Real value. Example: MyReal() [UMSWE]

LoadRectHandleBJ=Load Rect Handle
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint=If the label is not found, this function returns NULL.

GetCurrentCameraBoundsMapRectBJ=Current Camera Bounds
GetCurrentCameraBoundsMapRectBJ="Current camera bounds"
GetCurrentCameraBoundsMapRectBJHint=This is the area to which the camera target is currently restricted.

GetCameraBoundsMapRect=Initial Camera Bounds
GetCameraBoundsMapRect="Initial camera bounds"
GetCameraBoundsMapRectHint=This is the area to which the camera target is restricted at map initialization.

GetPlayableMapRect=Playable Map Area
GetPlayableMapRect="Playable map area"
GetPlayableMapRectHint=This is the area to which units are restricted.  This area typically extends just beyond the camera bounds.

GetEntireMapRect=Entire Map
GetEntireMapRect="Entire map"
GetEntireMapRectHint=This is the entire map, including areas which cannot normally be reached by units.

OffsetRectBJ=Region With Offset
OffsetRectBJ=~Region," offset by (",~X,", ",~Y,")"
OffsetRectBJHint=The offset values are (X, Y).

RectFromCenterSizeBJ=Convert Point With Size To Region
RectFromCenterSizeBJ="Region centered at ",~Point," with size (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint=The size values are (Width, Height).

Rect=Convert Coordinates To Region
Rect="Region(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint=Choose four coordinates (min X, min Y, max X, max Y) to define a rectangular region on the map.

RectFromLoc=Convert Points To Region
RectFromLoc="Region(",~Point 1,", ",~Point 2,")"
RectFromLocHint=Choose two points to define a rectangular region on the map.

                        =JASS Code
                        =~Script Code"
                        Hint=Enter JASS code that returns a rect value. Example: MyRect() [UMSWE]

LoadSoundHandleBJ=Load Sound Handle
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint=If the label is not found, this function returns NULL.

GetLastPlayedSound=Last Played Sound
GetLastPlayedSound="Last played sound"
GetLastPlayedSoundHint=This is the last sound played via a 'Sound - Play Sound' or 'Cinematic - Transmission' trigger action.

LoadEffectHandleBJ=Load Effect Handle
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedEffectBJ=Last Created Special Effect
GetLastCreatedEffectBJ="Last created special effect"

AddSpecialEffectLoc=Create Special Effect at Point
AddSpecialEffectLoc="Create a special effect using ",~Model File," at ",~Point
AddSpecialEffectLocHint=[UMSWE]

AddSpecialEffect=Create Special Effect at Off-set
AddSpecialEffect="Crate a special effect using ",~Model File," at ",~X," , ",~Y
AddSpecialEffectHint=[UMSWE]

AddSpecialEffectTarget=Create Special Effect at target unit
AddSpecialEffectTarget="Create a special effect using ",~Model File," On ",~Unit," 's ",~Attachment Point
AddSpecialEffectTargetHint=[UMSWE]

                          =JASS Code
                          =~Script Code"
                          Hint=Enter JASS code that returns a special effect. Example: MyEffect() [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Point
AddSpellEffectByIdLoc="Create a special effect using ",~Ability," 's ",~art," at ",~Point
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectById=Create Spell Effect At off-set
AddSpellEffectById="Create a special effect using ",~Ability," 's ",~art," at ",~X," , ",~Y
AddSpellEffectByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create a special effect using ",~Ability," 's ",~art," on ",~Unit," 's ",~Attachment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

LoadStringBJ=Load String Value (hashtable)
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint=If the label is not found, this function returns an empty string.

OperatorString=Concatenate Strings
OperatorString=~String 1," + ",~String 2

SubStringBJ=Substring
SubStringBJ="Substring(",~String,", ",~Start,", ",~End,")"
SubStringBJHint=Example:  Substring(''Grunts stink'', 2, 4) = ''run''.

I2S=Convert Integer To String
I2S="String(",~Integer,")"

R2S=Convert Real To String
R2S="String(",~Real,")"

R2SW=Convert Real To Formatted String
R2SW="String(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint=Examples:  String(1.234, 7, 2) = ''   1.23''.  String(1.234, 2, 5) = ''1.23400''.

OrderId2StringBJ=Convert Order To String
OrderId2StringBJ="String(",~Order,")"
OrderId2StringBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2StringBJ=Convert Unit-Type To String
UnitId2StringBJ="String(",~Unit-Type,")"

StringIdentity=Convert Externalized String
StringIdentity="Externalized string(",~String,")"
StringIdentityHint=Use this to make sure the given string will be externalized in the map string file (war3map.wts).

StringCase=Convert String Case
StringCase="String(",~String,") as ",~Lower/Upper Case
StringCaseHint=All letters in the string will be changed to the selected case.

GetDestructableName=Destructible Name
GetDestructableName="Name of ",~Destructible

GetEventPlayerChatString=Entered Chat String
GetEventPlayerChatString="Entered chat string"

GetEventPlayerChatStringMatched=Matched Chat String
GetEventPlayerChatStringMatched="Matched chat string"

GetSaveBasicFilename=Saved-Game Filename
GetSaveBasicFilename="Saved-game filename"
GetSaveBasicFilenameHint=When responding to a 'Game - Game Save' event, this refers to the name of the file being saved.

GetAbilityName=Ability Name
GetAbilityName="Name of ",~Ability

GetAbilityEffectBJ=Ability Effect Art Path
GetAbilityEffectBJ="Art path of ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint=This returns the model file path of an ability's effect art.

GetAbilitySoundBJ=Ability Effect Sound Name
GetAbilitySoundBJ="Name of ",~Ability," ",~SoundType

GetStoredStringBJ=Load String Value
GetStoredStringBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredStringBJHint=If the label is not found, this function returns an empty string.

GetHeroProperName=Hero Proper Name
GetHeroProperName="Proper name of ",~Hero
GetHeroProperNameHint=Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin).

GetItemName=Item Name
GetItemName="Name of ",~Item

MultiboardGetTitleText=Multiboard Title
MultiboardGetTitleText="Title of ",~Multiboard

GetPlayerName=Player Name
GetPlayerName="Name of ",~Player

GetTriggerName=Trigger Name
GetTriggerName="Name of the current trigger"
GetTriggerNameHint=Returns the name, as entered in the editor, of the trigger which contains this function.

GetUnitName=Unit Name
GetUnitName="Name of ",~Unit
GetUnitNameHint=This returns the internal name of a unit, not the proper name of units or Heroes.

GetAbilityEffectById=Buff Effect Art By Id
GetAbilityEffectById=~Buff," effect ",~EffectType," ",~Index
GetAbilityEffectByIdHint=[UMSWE]

GetAbilitySoundById=Ability Effect Sound By Id
GetAbilitySoundById=~Ability," sound ",~SoundType
GetAbilitySoundByIdHint=[UMSWE]

LeaderboardGetLabelText=Title
LeaderboardGetLabelText="Title of ",~Leaderboard
LeaderboardGetLabelTextHint=[UMSWE]

                           =JASS Code
                           =~Script Code"
                           Hint=Enter JASS code that returns a String. Example: MyString() [UMSWE]

GetResearched=Researched Tech-Type
GetResearched="Researched tech-type"
GetResearchedHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched.

GetLastCreatedTerrainDeformation=Last Created Terrain Deformation
GetLastCreatedTerrainDeformation="Last created terrain deformation"
GetLastCreatedTerrainDeformationHint=This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions.

                            =JASS Code
                            =~Script Code"
                            Hint=Enter JASS code that returns terrain deformation. Example: MyTerrainDeformation() [UMSWE]

GetTerrainTypeBJ=Terrain Type
GetTerrainTypeBJ="Terrain type at ",~Location

LoadTimerHandleBJ=Load Timer Handle
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerBJ=Last Started Timer
GetLastCreatedTimerBJ="Last started timer"
GetLastCreatedTimerBJHint=This is the last timer started via a 'Countdown Timer - Start Timer' trigger action.

GetExpiredTimer=Expiring Timer
GetExpiredTimer="Expiring timer"
GetExpiredTimerHint=When responding to a 'Time - Timer Expires' event, this refers to the timer that is expiring.

CreateTimer=Create Timer
CreateTimer="Create Timer"
CreateTimerHint=Use this to initialize timer array items [UMSWE]

CreateTimerBJ=Create Timer
CreateTimerBJ="Create a periodic ",~Choose," timer lasting ",~time
CreateTimerBJHint=[UMSWE]

                             =JASS Code
                             =~Script Code"
                             Hint=Enter JASS code that returns a Timer. Example: MyTimer() [UMSWE]

LoadTimerDialogHandleBJ=Load Timerdialog Handle
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerDialogBJ=Last Created Timer Window
GetLastCreatedTimerDialogBJ="Last created timer window"
GetLastCreatedTimerDialogBJHint=This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action.

                              =JASS Code
                              =~Script Code"
                              Hint=Enter JASS code that returns a Timer Window value. Example: MyTimerDialog() [UMSWE]

LoadTriggerHandleBJ=Load Trigger Handle
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint=If the label is not found, this function returns NULL.

GetTriggeringTrigger=This Trigger
GetTriggeringTrigger="This trigger"

CreateTrigger=Create Trigger
CreateTrigger="Create Trigger"
CreateTriggerHint=Use this to initialize trigger arrays [UMSWE]

                               =JASS Code
                               =~Script Code"
                               Hint=Enter JASS code that returns a Trigger. Example: MyTrigger() [UMSWE]

LoadUbersplatHandleBJ=Load Ubersplat Handle
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUbersplat=Last Created Ubersplat
GetLastCreatedUbersplat="Last created ubersplat"

 =JASS Code
 =~Script Code"
 Hint=Enter JASS code that returns an ubersplat. Example: MyUbersplat() [UMSWE]

LoadUnitHandleBJ=Load Unit Handle
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUnit=Last Created Unit
GetLastCreatedUnit="Last created unit"
GetLastCreatedUnitHint=This is the last unit created via a 'Unit - Create' trigger action.

GetLastRestoredUnitBJ=Last Restored Unit
GetLastRestoredUnitBJ="Last restored unit"
GetLastRestoredUnitBJHint=This is the last unit restored via a 'Game Cache - Restore Unit' trigger action.

GetLastReplacedUnitBJ=Last Replaced Unit
GetLastReplacedUnitBJ="Last replaced unit"
GetLastReplacedUnitBJHint=This is the last unit created via a 'Unit - Replace' trigger action.

GetLastHauntedGoldMine=Last Haunted Gold Mine
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMineHint=This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action.

GetEnumUnit=Picked Unit
GetEnumUnit="Picked unit"
GetEnumUnitHint=When using the 'Pick Every Unit...' action, this refers to each unit as it is picked.

GetFilterUnit=Matching Unit
GetFilterUnit="Matching unit"
GetFilterUnitHint=Use this to refer to the unit being considered for 'Units Matching Condition' functions.

GroupPickRandomUnit=Random Unit From Unit Group
GroupPickRandomUnit="Random unit from ",~Unit Group

GetAttackedUnitBJ=Attacked Unit
GetAttackedUnitBJ="Attacked unit"
GetAttackedUnitBJHint=When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked.

GetAttacker=Attacking Unit
GetAttacker="Attacking unit"
GetAttackerHint=When responding to an 'Is Attacked' unit event, this refers to the attacking unit.

GetBuyingUnit=Buying Unit
GetBuyingUnit="Buying unit"
GetBuyingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying.

GetCancelledStructure=Cancelled Structure
GetCancelledStructure="Cancelled structure"
GetCancelledStructureHint=When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled.

GetSpellAbilityUnit=Casting Unit
GetSpellAbilityUnit="Casting unit"
GetSpellAbilityUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability.

GetConstructingStructure=Constructing Structure
GetConstructingStructure="Constructing structure"
GetConstructingStructureHint=When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun.

GetConstructedStructure=Constructed Structure
GetConstructedStructure="Constructed structure"
GetConstructedStructureHint=When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished.

GetEventDamageSource=Damage Source
GetEventDamageSource="Damage source"
GetEventDamageSourceHint=When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt.

GetDecayingUnit=Decaying Unit
GetDecayingUnit="Decaying unit"
GetDecayingUnitHint=When responding to a 'Decays' unit event, this refers to the unit that is decaying.

GetDyingUnit=Dying Unit
GetDyingUnit="Dying unit"
GetDyingUnitHint=When responding to a 'Dies' unit event, this refers to the unit that is dying.

GetEnteringUnit=Entering Unit
GetEnteringUnit="Entering unit"
GetEnteringUnitHint=When responding to a 'Unit Enters Region' unit event, this refers to the unit entering the region.

GetManipulatingUnit=Hero Manipulating Item
GetManipulatingUnit="Hero manipulating item"
GetManipulatingUnitHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item.

GetKillingUnitBJ=Killing Unit
GetKillingUnitBJ="Killing unit"
GetKillingUnitBJHint=When responding to a 'Dies' unit event, this refers to the killer of the dying unit.  In cases where a unit dies from a source other than a killing unit, this returns 'No unit'.

GetLearningUnit=Learning Hero
GetLearningUnit="Learning Hero"
GetLearningUnitHint=When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill.

GetLeavingUnit=Leaving Unit
GetLeavingUnit="Leaving unit"
GetLeavingUnitHint=When responding to a 'Unit Leaves Region' event, this refers to the unit leaving the region.

GetLevelingUnit=Leveling Hero
GetLevelingUnit="Leveling Hero"
GetLevelingUnitHint=When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level.

GetLoadedUnitBJ=Loading Unit
GetLoadedUnitBJ="Loading unit"
GetLoadedUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded.

GetOrderedUnit=Ordered Unit
GetOrderedUnit="Ordered unit"
GetOrderedUnitHint=When responding to an 'Is Issued An Order' unit event, this refers to the unit receiving the order.

GetChangingUnit=Ownership-Changed Unit
GetChangingUnit="Ownership-changed unit"
GetChangingUnitHint=When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed.

GetResearchingUnit=Researching Unit
GetResearchingUnit="Researching unit"
GetResearchingUnitHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the unit doing the research.

GetRevivableUnit=Revivable Hero
GetRevivableUnit="Revivable Hero"
GetRevivableUnitHint=When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival.

GetRevivingUnit=Reviving Hero
GetRevivingUnit="Reviving Hero"
GetRevivingUnitHint=When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived.

GetSellingUnit=Selling Unit
GetSellingUnit="Selling unit"
GetSellingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the selling.

GetSoldUnit=Sold Unit
GetSoldUnit="Sold unit"
GetSoldUnitHint=When responding to a 'Sells A Unit' unit event, this refers to the unit being sold.

GetSummonedUnit=Summoned Unit
GetSummonedUnit="Summoned unit"
GetSummonedUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit being summoned.

GetSummoningUnit=Summoning Unit
GetSummoningUnit="Summoning unit"
GetSummoningUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit spawning the summoned unit.

GetOrderTargetUnit=Target Unit Of Issued Order
GetOrderTargetUnit="Target unit of issued order"
GetOrderTargetUnitHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order.

GetSpellTargetUnit=Target Unit Of Ability Being Cast
GetSpellTargetUnit="Target unit of ability being cast"
GetSpellTargetUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast.

GetEventTargetUnit=Targeted Unit
GetEventTargetUnit="Targeted unit"
GetEventTargetUnitHint=When responding to an 'Acquires A Target' unit event, this refers to the target being acquired.

GetTrainedUnit=Trained Unit
GetTrainedUnit="Trained unit"
GetTrainedUnitHint=When responding to a 'Finishes Training A Unit' unit event, this refers to the unit that was trained.

GetTransportUnitBJ=Transporting Unit
GetTransportUnitBJ="Transporting unit"
GetTransportUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the transport that loaded the unit.

GetTriggerUnit=Triggering Unit
GetTriggerUnit="Triggering unit"

GetUnitRallyUnit=Rally-Point As Unit
GetUnitRallyUnit="Rally-Point of ",~Unit," as a unit"
GetUnitRallyUnitHint=If the unit does not have a rally-point set to a unit, this will return 'No unit'.

CreateUnit=Create Unit At Offset
CreateUnit="For ",~Player," create a unit of type ",~Type," at offset (",~X,", ",~Y,") facing ",~Direction," degrees"
CreateUnitHint=[UMSWE]

CreateUnitAtLoc=Create Unit At Location
CreateUnitAtLoc="For ",~Player," create a unit of type ",~Type," at location ",~Location," facing ",~Direction," degrees"
CreateUnitAtLocHint=[UMSWE]

GetDetectedUnit=Get Detected Unit
GetDetectedUnit="Get detected unit"
GetDetectedUnitHint=Event response for the unit detected event [UMSWE]

GetRescuer=Rescuing Unit
GetRescuer="Get rescuing unit"
GetRescuerHint=For unis is rescued event [UMSWE]

FirstOfGroup=First Unit of Group
FirstOfGroup="First unit of group ",~Group
FirstOfGroupHint=[UMSWE]

                                  =JASS Code
                                  =~Script Code"
                                  Hint=Enter JASS code that returns an unit (~=handle). Example: MyUnit() [UMSWE]

LoadGroupHandleBJ=Load Group Handle
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedGroup=Last Created Unit Group
GetLastCreatedGroup="Last created unit group"
GetLastCreatedGroupHint=This is the last set of units created via a 'Unit - Create' trigger action.

GetRandomSubGroup=Random N Units From Unit Group
GetRandomSubGroup="Random ",~Count," units from ",~Unit Group

GetUnitsInRectAll=Units In Region
GetUnitsInRectAll="Units in ",~Region

GetUnitsInRectOfPlayer=Units In Region Owned By Player
GetUnitsInRectOfPlayer="Units in ",~Region," owned by ",~Player

GetUnitsInRectMatching=Units In Region Matching Condition
GetUnitsInRectMatching="Units in ",~Region," matching ",~Condition
GetUnitsInRectMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsInRangeOfLocAll=Units In Range
GetUnitsInRangeOfLocAll="Units within ",~Radius," of ",~Point

GetUnitsInRangeOfLocMatching=Units In Range Matching Condition
GetUnitsInRangeOfLocMatching="Units within ",~Radius," of ",~Point," matching ",~Condition
GetUnitsInRangeOfLocMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfPlayerAll=Units Owned By Player
GetUnitsOfPlayerAll="Units owned by ",~Player

GetUnitsOfPlayerAndTypeId=Units Owned By Player Of Type
GetUnitsOfPlayerAndTypeId="Units owned by ",~Player," of type ",~Unit-Type

GetUnitsOfPlayerMatching=Units Owned By Player Matching Condition
GetUnitsOfPlayerMatching="Units owned by ",~Player," matching ",~Condition
GetUnitsOfPlayerMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfTypeIdAll=Units Of Type
GetUnitsOfTypeIdAll="Units of type ",~Unit-Type

GetUnitsSelectedAll=Units Selected
GetUnitsSelectedAll="Units currently selected by ",~Player
GetUnitsSelectedAllHint=This should not be used in trigger conditions.

CreateGroup=Create Unit Group
CreateGroup="Create Unit Group"
CreateGroupHint=Use this to initialize unit group arrays [UMSWE]

                                   =JASS Code
                                   =~Script Code"
                                   Hint=Enter JASS code that returns an Unit Group. Example: MyGroup() [UMSWE]

GetUnitTypeId=Unit-Type Of Unit
GetUnitTypeId="Unit-type of ",~Unit

ChooseRandomCreepBJ=Random Creep Unit-Type
ChooseRandomCreepBJ="Random level ",~Level," creep unit-type"
ChooseRandomCreepBJHint=Use -1 for any level.

ChooseRandomNPBuildingBJ=Random Neutral Building Unit-Type
ChooseRandomNPBuildingBJ="Random neutral building unit-type"

String2UnitIdBJ=Convert String To Unit-Type
String2UnitIdBJ="Unit-type(",~String,")"

GetTrainedUnitType=Trained Unit-Type
GetTrainedUnitType="Trained unit-type"
GetTrainedUnitTypeHint=When responding to 'Begins/Cancels/Finishes Training A Unit' unit events, this refers to the unit-type of the unit that is being trained.

                                    =JASS Code
                                    =~Script Code"
                                    Hint=Enter JASS code that returns an Unit Type (integer). Example: 'hpea' [UMSWE]

LoadFogModifierHandleBJ=Load Fogmodifier Handle
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedFogModifier=Last Created Visibility Modifier
GetLastCreatedFogModifier="Last created visibility modifier"
GetLastCreatedFogModifierHint=This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action.

GetLastCreatedWeatherEffect=Last Created Weather Effect
GetLastCreatedWeatherEffect="Last created weather effect"
GetLastCreatedWeatherEffectHint=This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action.

TriggerRegisterVariableEvent=Add Variable Event
TriggerRegisterVariableEvent="Add the following variable event to ",~Trigger,": ",~Variable," ",~Operator," ",~Value
TriggerRegisterVariableEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterTimerExpireEvent=Add Timer Expires Event
TriggerRegisterTimerExpireEvent="Add the following timer expires event to ",~Trigger,": ",~Timer," expires"
TriggerRegisterTimerExpireEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogEvent=Add Dialog Event
TriggerRegisterDialogEvent="Add the following dialog event to ",~Trigger,": A button in ",~Dialog," was clicked"
TriggerRegisterDialogEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogButtonEvent=Add Dialog Button Clicked Event
TriggerRegisterDialogButtonEvent="Add the following dialog event to ",~Trigger,": ",~Button," was clicked"
TriggerRegisterDialogButtonEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterGameEvent=Add Game Event
TriggerRegisterGameEvent="Add the following game event to ",~Trigger,": Game Event: ",~GameEventOption
TriggerRegisterGameEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterEnterRegion=Add Unit Enters Rect (Conditional) Event
TriggerRegisterEnterRegion="Add the following unit enters rect (conditional) event to ",~Trigger,": A unit enters ",~Rect," Matching: ",~Condition
TriggerRegisterEnterRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterLeaveRegion=Add Unit Leaves Rect (Conditional) Event
TriggerRegisterLeaveRegion="Add the following unit leaves rect (conditional) event to ",~Trigger,": A unit leaves ",~Rect," Matching: ",~Condition
TriggerRegisterLeaveRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerEvent=Add Player Event
TriggerRegisterPlayerEvent="Add the following player event to ",~Trigger,": ",~Player," ",~PlayerEventOption
TriggerRegisterPlayerEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEventSimple=Add Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="Add the following player-owned unit event to ",~Trigger,": A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEvent=Add Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="Add the following player-owned unit (conditional) event to ",~Trigger,": A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerStateEvent=Add Player Property Event
TriggerRegisterPlayerStateEvent="Add the following player property event to ",~Trigger,": ",~Player," ",~PlayerState," ",~Operator," ",~Integer
TriggerRegisterPlayerStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerChatEvent=Add Chat Message Event
TriggerRegisterPlayerChatEvent="Add the following chat message event to ",~Trigger,": ",~Player," sends a mesage containing ",~String," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDeathEvent=Add Destructible Doodad Dies Event
TriggerRegisterDeathEvent="Add the following destructible doodad event to ",~Trigger,": ",~Destructible Doodad," dies"
TriggerRegisterDeathEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitStateEvent=Add Unit State Event
TriggerRegisterUnitStateEvent="Add the following unit state event to ",~Trigger,": ",~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitEvent=Add Specific Unit Event
TriggerRegisterUnitEvent="Add the following specific unit event event to ",~Trigger,": ",~Unit," ",~UnitEvent
TriggerRegisterUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitInRangeSimple=Add Unit In Range Event
TriggerRegisterUnitInRangeSimple="Add the following unit in range event to ",~Trigger,": A unit comes within ",~Real," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

LoadTriggerConditionHandleBJ=Load Triggercondition Handle
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint=If the label is not found, this function returns NULL.

                                 =JASS Code
                                 =~Script Code"
                                 Hint=Enter JASS code that returns a Trigger Condition. Example: MyTriggerCondition() [UMSWE]

TriggerAddCondition=Add Condtion
TriggerAddCondition="Take ",~Trigger," and add the condition ",~Condition
TriggerAddConditionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Condition'. [UMSWE]

LoadTriggerActionHandleBJ=Load Triggeraction Handle
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint=If the label is not found, this function returns NULL.

                                =JASS Code
                                =~Script Code"
                                Hint=Enter JASS code that returns a Trigger Action. Example: MyTriggerAction() [UMSWE]

TriggerAddAction=Add Action
TriggerAddAction="Take ",~Trigger," and add the action ",~Action
TriggerAddActionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Action'. [UMSWE]

LoadBooleanExprHandleBJ=Load Boolexpr Handle
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint=If the label is not found, this function returns NULL.

GetEventPlayerState=Get Triggering Player State
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerStateHint=To see, which playerstate event fired the trigger [UMSWE]

GetEventUnitState=Get Triggering Unit State
GetEventUnitState="Get triggering unit state"
GetEventUnitStateHint=To see, which unitstate event fired the trigger [UMSWE]

GetGameDifficulty=Difficulty Level
GetGameDifficulty="Difficulty level"

GetAIDifficulty=Melee AI Of Player
GetAIDifficulty="Melee AI of ",~Player

GetPlayerController=Player Controller
GetPlayerController=~Player," controller"

GetPlayerSlotState=Player Slot Status
GetPlayerSlotState=~Player," slot status"

LoadFogStateHandleBJ=Load Fogstate Handle
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint=If the label is not found, this function returns NULL.

GetLearnedSkillBJ=Learned Hero Skill
GetLearnedSkillBJ="Learned Hero Skill"

                                      =JASS Code
                                      =~Script Code"
                                      Hint=Enter JASS code that returns a Hero Skill (integer). Example: 'AHbz' [UMSWE]

exitwhen=exitwhen
exitwhen="exitwhen ",~Condition
exitwhenHint=Used between loop and endloop, specifies when to exit the loop (only works with the Custom Script action) [UMSWE]

GetLastPlayedMusic=Last Played Music
GetLastPlayedMusic="Last played music"
GetLastPlayedMusicHint=This is the last music played via a 'Sound - Play Music' trigger action.

                                     =JASS Code
                                     =~Script Code"
                                     Hint=Enter JASS code that returns a Music file path (string). Use ; to separate paths if you are reffering to a music list. Example: MyMusic() [UMSWE]

GetTriggerEventId=Event ID
GetTriggerEventId="Last Fired Event"
GetTriggerEventIdHint=Returns the last fired event [UMSWE]

           =JASS Code
           =~Script Code"
           Hint=Enter JASS code that returns an eventid value. Example: MyEventid() [UMSWE]

                  =JASS Code
                  =~Script Code"
                  Hint=Enter JASS code that returns a Multiboard Item. Example: MyMultiboardItem() [UMSWE]

MultiboardGetItem=Create Multiboard Item
MultiboardGetItem="Create a new multiboard item for multiboard ",~board," in row ",~Row," and column ",~Column
MultiboardGetItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

CreateRegion=Create Region
CreateRegion="Create a empty region"
CreateRegionHint=Used to create empty regions to which you can add cells [UMSWE]

GetTriggeringRegion=Get Triggering Region
GetTriggeringRegion="Get triggering region"
GetTriggeringRegionHint=Event response for unit enters/leaves region events [UMSWE]

                         =JASS Code
                         =~Script Code"
                         Hint=Enter JASS code that returns a region value. Example: MyRegion() [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=You can register mouseover and mouseclick events on the object but can't remove it anymore. [UMSWE]

GetTriggeringTrackable=Triggering Trackable
GetTriggeringTrackable="Triggering trackable"
GetTriggeringTrackableHint=[UMSWE]

    =JASS Code
    =~Script Code"
    Hint=Enter JASS code that returns a trackable object. Example: MyTrackable() [UMSWE]

GetEventGameState=Get Triggering Game State
GetEventGameState="Triggering Game State"
GetEventGameStateHint=To see, which gamestate event fired the trigger [UMSWE]


[AIFunctionStrings]
TownThreatened="Town Is Under Attack"
TownThreatened="Town is under attack"
TownThreatenedHint=""
TownHasMine="Town Has Mine"
TownHasMine="Town #",~Town," has an active gold mine"
TownHasHall="Town Has Hall"
TownHasHall="Town #",~Town," has a town hall building"
CaptainIsHome="Attack Captain Is At Home"
CaptainIsHome="Attack captain is at home"
CaptainIsFull="Attack Group Is Complete"
CaptainIsFull="Attack group is complete"
CaptainIsEmpty="Attack Group Is Empty"
CaptainIsEmpty="Attack group is empty"
CaptainRetreating="Attack Captain Is Retreating"
CaptainRetreating="Attack captain is retreating"
CaptainAtGoal="Attack Captain Is At Goal"
CaptainAtGoal="Attack captain is at goal"
CaptainInCombat="Captain Is In Combat"
CaptainInCombat=~Captain Type," captain is in combat"
CreepsOnMap="Creeps Exist Anywhere"
CreepsOnMap="Creeps exist anywhere on the map"
ExpansionNeeded="Expansion Spot Needed"
ExpansionNeeded="Expansion spot needed"
ExpansionNeededHint="Returns true if the AI needs to build an expansion but there are currently no open spots."
GetUnitCount="Total Units of Type"
GetUnitCount="Total number of ",~Unit Type," units"
GetUnitCountHint="This count includes units currently being trained or constructed."
GetUnitCountDone="Total Units of Type - Completed Only"
GetUnitCountDone="Total number of ",~Unit Type," units completed"
GetUnitCountDoneHint="This count does NOT include units currently being trained or constructed."
GetTownUnitCount="Total Units of Type - By Town"
GetTownUnitCount="Total number of ",~Unit Type," units in town #",~Town," (completed only: ",~Option,")"
GetTownUnitCountHint=""
GetMinesOwned="Number of Mines Owned"
GetMinesOwned="Number of mines owned"
GetMinesOwnedHint="The total number of mines currently in use by the AI player."
GetGoldOwned="Total Unmined Gold Owned"
GetGoldOwned="Total unmined gold owned"
GetGoldOwnedHint="The total amount of gold remaining in all mines currently in use."
TownWithMine="Town With Mine"
TownWithMine="Town with a gold mine"
TownWithMineHint="Returns the ID of the first town with an active gold mine"
GetGold="Current Gold Amount"
GetGold="Current gold amount"
GetGoldHint="The amount of gold currently owned by the AI player"
GetWood="Current Lumber Amount"
GetWood="Current lumber amount"
GetWoodHint="The amount of lumber currently owned by the AI player"
GetUnitGoldCost="Gold Cost of Unit"
GetUnitGoldCost="Gold cost of ",~Unit Type
GetUnitWoodCost="Lumber Cost of Unit"
GetUnitWoodCost="Lumber cost of ",~Unit Type
GetUnitBuildTime="Build Time of Unit"
GetUnitBuildTime="Build time of ",~Unit Type
GetUnitBuildTimeHint="Build time is in seconds."
GetUpgradeLevel="Current Upgrade Level"
GetUpgradeLevel="Upgrade level of ",~Upgrade Type
GetUpgradeGoldCost="Gold Cost of Upgrade"
GetUpgradeGoldCost="Gold cost of the next ",~Upgrade Type," upgrade"
GetUpgradeWoodCost="Lumber Cost of Upgrade"
GetUpgradeWoodCost="Lumber cost of the next ",~Upgrade Type," upgrade"
GetNextExpansion="Next Expansion Town"
GetNextExpansion="Next expansion town"
GetNextExpansionHint="Returns the town ID for the next expansion location"
FoodUsed="Food Used"
FoodUsed="Food used"
FoodUsedHint="The total amount of food currently being used by the AI player"
TotalFoodProduced="Food Produced"
TotalFoodProduced="Food produced"
TotalFoodProducedHint="The total amount of food currently produced by the AI player"
GetFoodMade="Food Produced By Unit"
GetFoodMade="Food produced by ",~Unit Type," units"
CommandsWaiting="Commands Waiting"
CommandsWaiting="Number of commands waiting"
CommandsWaitingHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommand="Last Command"
CheckLastCommand="Last command sent, ",~Option," the command"
CheckLastCommandHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommandData="Last Command Data"
CheckLastCommandData="Last command data sent, ",~Option," the command"
CheckLastCommandDataHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CaptainGroupSize="Attack Group Size"
CaptainGroupSize="Attack group size"
CaptainGroupSizeHint="The current number of units in the attack group."
CaptainReadinessHP="Attack Group Health Level"
CaptainReadinessHP="Attack group health level"
CaptainReadinessHPHint="The health level is an estimation of the average attack group health, with 100 being full."
CaptainReadinessMa="Attack Group Mana Level"
CaptainReadinessMa="Attack group mana level"
CaptainReadinessMaHint="The mana level is an estimation of the average attack group mana, with 100 being full."
CurrentAttackWave="Current Attack Wave"
CurrentAttackWave="Current attack wave"
CurrentAttackWaveHint="Attack waves are defined in the attack wave list in the Attacking tab."
MeleeDifficulty="Melee Difficulty Level"
MeleeDifficulty="Melee difficulty level"

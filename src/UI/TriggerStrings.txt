[TriggerEventStrings]
MapInitializationEvent=Map Initialization
MapInitializationEvent="Map initialization"

TriggerRegisterDeathEvent=Destructible Dies
TriggerRegisterDeathEvent=~Destructible," dies"
TriggerRegisterDeathEventHint=Use 'Event Response - Dying Destructible' to refer to the destructible that is dying.

TriggerRegisterDestDeathInRegionEvent=Destructible Within Rect Dies
TriggerRegisterDestDeathInRegionEvent="A destructible within ",~Rect," dies"
TriggerRegisterDestDeathInRegionEventHint=Only the first 64 destructibles within the rect when this event is registered are monitored for death.  It is best to use this event for rects containing only a few destructibles.

TriggerRegisterDialogEventBJ=Dialog Button Click
TriggerRegisterDialogEventBJ="A dialog button is clicked for ",~Dialog

TriggerRegisterGameStateEventTimeOfDay=Time Of Day
TriggerRegisterGameStateEventTimeOfDay="The in-game time of day becomes ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

TriggerRegisterVariableEvent=Value Of Real Variable
TriggerRegisterVariableEvent=~Variable," becomes ",~Operation," ",~Value
TriggerRegisterVariableEventHint=This only works for non-array variables of type 'Real'.

TriggerRegisterGameLoadedEventBJ=Game Load
TriggerRegisterGameLoadedEventBJ="A saved game is loaded"
TriggerRegisterGameLoadedEventBJHint=This fires immediately after the saved game is finished loading.

TriggerRegisterGameSavedEventBJ=Game Save
TriggerRegisterGameSavedEventBJ="The game is about to be saved"
TriggerRegisterGameSavedEventBJHint=This fires immediately before the game is saved.

TriggerRegisterShowSkillEventBJ=Hero Abilities Button Clicked
TriggerRegisterShowSkillEventBJ="The 'Hero Abilities' button is clicked"
TriggerRegisterShowSkillEventBJHint=This event should only be used in single-player maps.

TriggerRegisterBuildSubmenuEventBJ=Build Structure Button Clicked
TriggerRegisterBuildSubmenuEventBJ="The 'Build Structure' button is clicked"
TriggerRegisterBuildSubmenuEventBJHint=This event should only be used in single-player maps.

TriggerRegisterGameEvent=Tournament Event
TriggerRegisterGameEvent="The tournament game must end ",~Event Type
TriggerRegisterGameEventHint=This event only occurs during automated tournament games on Battle.net.

TriggerRegisterPlayerChatEvent=Chat Message
TriggerRegisterPlayerChatEvent=~Player," types a chat message containing ",~Text," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Use 'Event Response - Entered/Matched Chat Message' to refer to the chat message that was entered/matched.  Use 'Event Response - Triggering Player' to refer to the player who typed the message.

TriggerRegisterPlayerEventEndCinematic=Cinematic Skipped
TriggerRegisterPlayerEventEndCinematic=~Player," skips a cinematic sequence"
TriggerRegisterPlayerEventEndCinematicHint=This event occurs whenever the player presses the 'Escape' key (regardless of whether or not they are viewing a cinematic).

TriggerRegisterPlayerSelectionEventBJ=Selection Event
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," a unit"
TriggerRegisterPlayerSelectionEventBJHint=Use 'Event Response - Triggering Unit' to refer to the unit being selected or deselected.

TriggerRegisterPlayerKeyEventBJ=Keyboard Event
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," the ",~Key," key"

TriggerRegisterPlayerStateEvent=Properties
TriggerRegisterPlayerStateEvent=~Player,"'s ",~Property," becomes ",~Operation," ",~Value

TriggerRegisterPlayerEventAllianceChanged=Alliance Change (Any)
TriggerRegisterPlayerEventAllianceChanged=~Player," changes alliance settings"

TriggerRegisterPlayerAllianceChange=Alliance Change (Specific)
TriggerRegisterPlayerAllianceChange=~Player," changes ",~Alliance Type," settings"

TriggerRegisterPlayerEventVictory=Victory
TriggerRegisterPlayerEventVictory=~Player," leaves the game with a victory"

TriggerRegisterPlayerEventDefeat=Defeat
TriggerRegisterPlayerEventDefeat=~Player," leaves the game with a defeat"

TriggerRegisterPlayerEventLeave=Leaves Game
TriggerRegisterPlayerEventLeave=~Player," leaves the game"
TriggerRegisterPlayerEventLeaveHint=This event occurs regardless of how the player left the game.

TriggerRegisterTimerEventSingle=Time Elapsed
TriggerRegisterTimerEventSingle="Elapsed game time is ",~Time," seconds"

TriggerRegisterTimerEventPeriodic=Periodic Event
TriggerRegisterTimerEventPeriodic="Every ",~Time," seconds of game time"

TriggerRegisterTimerExpireEventBJ=Timer Expires
TriggerRegisterTimerExpireEventBJ=~Timer," expires"
TriggerRegisterTimerExpireEventBJHint=A timer expires when it reaches 0.  Repeating timers expire every time they reach 0.  Use 'Event Response - Expiring Timer' to refer to the timer that is expiring.

TriggerRegisterUnitEvent=Specific Unit Event
TriggerRegisterUnitEvent=~Unit," ",~Event

TriggerRegisterPlayerUnitEventSimple=Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="A unit owned by ",~Player," ",~Event

TriggerRegisterAnyUnitEventBJ=Generic Unit Event
TriggerRegisterAnyUnitEventBJ="A unit ",~Event

TriggerRegisterEnterRectSimple=Unit Enters Rect
TriggerRegisterEnterRectSimple="A unit enters ",~Rect
TriggerRegisterEnterRectSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the rect.

TriggerRegisterLeaveRectSimple=Unit Leaves Rect
TriggerRegisterLeaveRectSimple="A unit leaves ",~Rect
TriggerRegisterLeaveRectSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the rect.

TriggerRegisterUnitInRangeSimple=Unit Within Range
TriggerRegisterUnitInRangeSimple="A unit comes within ",~Range," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Use 'Event Response - Triggering Unit' to refer to the unit that is entering within range.

TriggerRegisterUnitLifeEvent=Life
TriggerRegisterUnitLifeEvent=~Unit,"'s life becomes ",~Operation," ",~Value

TriggerRegisterUnitManaEvent=Mana
TriggerRegisterUnitManaEvent=~Unit,"'s mana becomes ",~Operation," ",~Value

TriggerRegisterTrackableHitEvent=Trackable is Clicked
TriggerRegisterTrackableHitEvent=~Trackable," is clicked"
TriggerRegisterTrackableHitEventHint=[UMSWE]

TriggerRegisterTrackableTrackEvent=Cursor is Moved over Trackable
TriggerRegisterTrackableTrackEvent="The cursor is moved over ",~Trackable
TriggerRegisterTrackableTrackEventHint=[UMSWE]

TriggerRegisterPlayerUnitEvent=Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Adds a condtion to the event [UMSWE]

TriggerRegisterEnterRegionSimple=Unit Enters Region
TriggerRegisterEnterRegionSimple="A unit enters ",~Region
TriggerRegisterEnterRegionSimpleHint=Use 'Event Response - Entering Unit' to refer to the unit entering the region [UMSWE]

TriggerRegisterEnterRegion=A Unit Enters Region (Conditional)
TriggerRegisterEnterRegion="A unit enters ",~Region," and matches ",~Condition
TriggerRegisterEnterRegionHint=Better than 'Unit Enters Rect' because you can get the Triggering Region. Use Entering Unit to match [UMSWE]

TriggerRegisterLeaveRegionSimple=Unit Leaves Region
TriggerRegisterLeaveRegionSimple="A unit leaves ",~Region
TriggerRegisterLeaveRegionSimpleHint=Use 'Event Response - Leaving Unit' to refer to the unit leaving the region [UMSWE]

TriggerRegisterLeaveRegion=A Unit Leaves Region (Conditional)
TriggerRegisterLeaveRegion="A unit leaves ",~Region," and matches ",~Condition
TriggerRegisterLeaveRegionHint=Better than 'Unit Leaves Rect' because you can get the Triggering Region. Use Leaving Unit to match [UMSWE]

TriggerRegisterUnitStateEvent=Unit State Event
TriggerRegisterUnitStateEvent=~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=[UMSWE]

TriggerRegisterPlayerEvent=Advanced Player Event
TriggerRegisterPlayerEvent=~Player," ",~PlayerOptionEvent


[TriggerConditionStrings]
OperatorCompareBoolean=Boolean Comparison
OperatorCompareBoolean=~Value," ",~Operator," ",~Value

OperatorCompareAbilityId=Ability Comparison
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value

OperatorCompareBuffId=Buff Comparison
OperatorCompareBuffId=~Value," ",~Operator," ",~Value

OperatorCompareDestructible=Destructible Comparison
OperatorCompareDestructible=~Value," ",~Operator," ",~Value

OperatorCompareDestructableCode=Destructible-Type Comparison
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value

OperatorCompareButton=Dialog Button Comparison
OperatorCompareButton=~Value," ",~Operator," ",~Value

OperatorCompareGameDifficulty=Game Difficulty Comparison
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareGameSpeed=Game Speed Comparison
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value

OperatorCompareHeroSkill=Hero Skill Comparison
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value

OperatorCompareInteger=Integer Comparison
OperatorCompareInteger=~Value," ",~Operator," ",~Value

OperatorCompareItem=Item Comparison
OperatorCompareItem=~Value," ",~Operator," ",~Value

OperatorCompareItemType=Item-Class Comparison
OperatorCompareItemType=~Value," ",~Operator," ",~Value

OperatorCompareItemCode=Item-Type Comparison
OperatorCompareItemCode=~Value," ",~Operator," ",~Value

OperatorCompareMeleeDifficulty=Melee AI Comparison
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value

OperatorCompareOrderCode=Order Comparison
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value

OperatorComparePlayer=Player Comparison
OperatorComparePlayer=~Value," ",~Operator," ",~Value

OperatorComparePlayerColor=Player Color Comparison
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value

OperatorComparePlayerControl=Player Controller Comparison
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value

OperatorComparePlayerSlotStatus=Player Slot Status Comparison
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value

OperatorCompareRace=Race Comparison
OperatorCompareRace=~Value," ",~Operator," ",~Value

OperatorCompareReal=Real Comparison
OperatorCompareReal=~Value," ",~Operator," ",~Value

OperatorCompareString=String Comparison
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint=For two strings to be equal, they must be of equal length and content.

OperatorCompareTechCode=Tech-Type Comparison
OperatorCompareTechCode=~Value," ",~Operator," ",~Value

OperatorCompareTerrainType=Terrain Type Comparison
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value

OperatorCompareTrigger=Trigger Comparison
OperatorCompareTrigger=~Value," ",~Operator," ",~Value

OperatorCompareUnit=Unit Comparison
OperatorCompareUnit=~Value," ",~Operator," ",~Value

OperatorCompareUnitCode=Unit-Type Comparison
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value

GetBooleanAnd=And
GetBooleanAnd=~Condition 1," and ",~Condition 2

GetBooleanOr=Or
GetBooleanOr=~Condition 1," or ",~Condition 2

AndMultiple=And, Multiple Conditions
AndMultiple="And - All (Conditions) are true"
AndMultipleHint=Add conditions to this function in the main display.

OrMultiple=Or, Multiple Conditions
OrMultiple="Or - Any (Conditions) are true"
OrMultipleHint=Add conditions to this function in the main display.

OperatorCompareEventId=Trigger Event Id Comparison
OperatorCompareEventId=~Value," ",~Operator," ",~Value
OperatorCompareEventIdHint=[UMSWE]

OperatorCompareTrackable=Trackable Comparison
OperatorCompareTrackable=~Value," ",~Operator," ",~Value
OperatorCompareTrackableHint=[UMSWE]

OperatorCompareUbersplat=Ubersplat Comparison
OperatorCompareUbersplat=~Value," ",~Operator," ",~Value
OperatorCompareUbersplatHint=[UMSWE]

OperatorCompareImage=Image Comparison
OperatorCompareImage=~Value," ",~Operator," ",~Value
OperatorCompareImageHint=[UMSWE]

OperatorCompareLightning=Lightning Comparison
OperatorCompareLightning=~Value," ",~Operator," ",~Value
OperatorCompareLightningHint=[UMSWE]

OperatorCompareTriggerAction=Trigger Action Comparison
OperatorCompareTriggerAction=~Value," ",~Operator," ",~Value
OperatorCompareTriggerActionHint=[UMSWE]

OperatorCompareTriggerCondition=Trigger Condition Comparison
OperatorCompareTriggerCondition=~Value," ",~Operator," ",~Value
OperatorCompareTriggerConditionHint=[UMSWE]

OperatorComparePlayerState=Playerstate Comparison
OperatorComparePlayerState=~Value," ",~Operator," ",~Value
OperatorComparePlayerStateHint=[UMSWE]

OperatorCompareUnitState=Unitstate Comparison
OperatorCompareUnitState=~Value," ",~Operator," ",~Value

OperatorCompareRegion=Region Comparison
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint=[UMSWE]

OperatorCompareGameState=Gamestate Comparison
OperatorCompareGameState=~Value," ",~Operator," ",~Value
OperatorCompareGameStateHint=[UMSWE]

 =Custom Script
 ="(",~Script Code,")"
 Hint=[UMSWE]

OperatorCompareMultiboardItem=Multiboard Item Comparison
OperatorCompareMultiboardItem=~Value," ",~Operator," ",~Value
OperatorCompareMultiboardItemHint=Just here for COMPATIBILITY reasons. Multiboard items should not be used. [UMSWE]


[TriggerActionStrings]

SetMapName=SetMapName
SetMapName="SetMapName(",~name,")"
SetMapNameHint="[NATIVE]  SetMapName takes string name returns nothing"


SetMapDescription=SetMapDescription
SetMapDescription="SetMapDescription(",~description,")"
SetMapDescriptionHint="[NATIVE]  SetMapDescription takes string description returns nothing"


SetTeams=SetTeams
SetTeams="SetTeams(",~teamcount,")"
SetTeamsHint="[NATIVE]  SetTeams takes integer teamcount returns nothing"


SetPlayers=SetPlayers
SetPlayers="SetPlayers(",~playercount,")"
SetPlayersHint="[NATIVE]  SetPlayers takes integer playercount returns nothing"


DefineStartLocation=DefineStartLocation
DefineStartLocation="DefineStartLocation(",~whichStartLoc,", ",~x,", ",~y,")"
DefineStartLocationHint="[NATIVE]  DefineStartLocation takes integer whichStartLoc, real x, real y returns nothing"


DefineStartLocationLoc=DefineStartLocationLoc
DefineStartLocationLoc="DefineStartLocationLoc(",~whichStartLoc,", ",~whichLocation,")"
DefineStartLocationLocHint="[NATIVE]  DefineStartLocationLoc takes integer whichStartLoc, location whichLocation returns nothing"


SetStartLocPrioCount=SetStartLocPrioCount
SetStartLocPrioCount="SetStartLocPrioCount(",~whichStartLoc,", ",~prioSlotCount,")"
SetStartLocPrioCountHint="[NATIVE]  SetStartLocPrioCount takes integer whichStartLoc, integer prioSlotCount returns nothing"


SetStartLocPrio=SetStartLocPrio
SetStartLocPrio="SetStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,", ",~otherStartLocIndex,", ",~priority,")"
SetStartLocPrioHint="[NATIVE]  SetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing"


SetGameTypeSupported=SetGameTypeSupported
SetGameTypeSupported="SetGameTypeSupported(",~whichGameType,", ",~value,")"
SetGameTypeSupportedHint="[NATIVE]  SetGameTypeSupported takes gametype whichGameType, boolean value returns nothing"


SetGamePlacement=SetGamePlacement
SetGamePlacement="SetGamePlacement(",~whichPlacementType,")"
SetGamePlacementHint="[NATIVE]  SetGamePlacement takes placement whichPlacementType returns nothing"


SetGameDifficulty=SetGameDifficulty
SetGameDifficulty="SetGameDifficulty(",~whichdifficulty,")"
SetGameDifficultyHint="[NATIVE]  SetGameDifficulty takes gamedifficulty whichdifficulty returns nothing"


SetResourceDensity=SetResourceDensity
SetResourceDensity="SetResourceDensity(",~whichdensity,")"
SetResourceDensityHint="[NATIVE]  SetResourceDensity takes mapdensity whichdensity returns nothing"


SetCreatureDensity=SetCreatureDensity
SetCreatureDensity="SetCreatureDensity(",~whichdensity,")"
SetCreatureDensityHint="[NATIVE]  SetCreatureDensity takes mapdensity whichdensity returns nothing"


SetPlayerTeam=SetPlayerTeam
SetPlayerTeam="SetPlayerTeam(",~whichPlayer,", ",~whichTeam,")"
SetPlayerTeamHint="[NATIVE]  SetPlayerTeam takes player whichPlayer, integer whichTeam returns nothing"


SetPlayerStartLocation=SetPlayerStartLocation
SetPlayerStartLocation="SetPlayerStartLocation(",~whichPlayer,", ",~startLocIndex,")"
SetPlayerStartLocationHint="[NATIVE]  SetPlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing"


ForcePlayerStartLocation=ForcePlayerStartLocation
ForcePlayerStartLocation="ForcePlayerStartLocation(",~whichPlayer,", ",~startLocIndex,")"
ForcePlayerStartLocationHint="[NATIVE]  ForcePlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing"


SetPlayerColor=SetPlayerColor
SetPlayerColor="SetPlayerColor(",~whichPlayer,", ",~color,")"
SetPlayerColorHint="[NATIVE]  SetPlayerColor takes player whichPlayer, playercolor color returns nothing"


SetPlayerAlliance=SetPlayerAlliance
SetPlayerAlliance="SetPlayerAlliance(",~sourcePlayer,", ",~otherPlayer,", ",~whichAllianceSetting,", ",~value,")"
SetPlayerAllianceHint="[NATIVE]  SetPlayerAlliance takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value returns nothing"


SetPlayerTaxRate=SetPlayerTaxRate
SetPlayerTaxRate="SetPlayerTaxRate(",~sourcePlayer,", ",~otherPlayer,", ",~whichResource,", ",~rate,")"
SetPlayerTaxRateHint="[NATIVE]  SetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate returns nothing"


SetPlayerRacePreference=SetPlayerRacePreference
SetPlayerRacePreference="SetPlayerRacePreference(",~whichPlayer,", ",~whichRacePreference,")"
SetPlayerRacePreferenceHint="[NATIVE]  SetPlayerRacePreference takes player whichPlayer, racepreference whichRacePreference returns nothing"


SetPlayerRaceSelectable=SetPlayerRaceSelectable
SetPlayerRaceSelectable="SetPlayerRaceSelectable(",~whichPlayer,", ",~value,")"
SetPlayerRaceSelectableHint="[NATIVE]  SetPlayerRaceSelectable takes player whichPlayer, boolean value returns nothing"


SetPlayerController=SetPlayerController
SetPlayerController="SetPlayerController(",~whichPlayer,", ",~controlType,")"
SetPlayerControllerHint="[NATIVE]  SetPlayerController takes player whichPlayer, mapcontrol controlType returns nothing"


SetPlayerOnScoreScreen=SetPlayerOnScoreScreen
SetPlayerOnScoreScreen="SetPlayerOnScoreScreen(",~whichPlayer,", ",~flag,")"
SetPlayerOnScoreScreenHint="[NATIVE]  SetPlayerOnScoreScreen takes player whichPlayer, boolean flag returns nothing"


CreateTimer=CreateTimer
CreateTimer="CreateTimer(",")"
CreateTimerHint="[NATIVE]  CreateTimer takes nothing returns timer"


TimerGetElapsed=TimerGetElapsed
TimerGetElapsed="TimerGetElapsed(",~whichTimer,")"
TimerGetElapsedHint="[NATIVE]  TimerGetElapsed takes timer whichTimer returns real"


TimerGetRemaining=TimerGetRemaining
TimerGetRemaining="TimerGetRemaining(",~whichTimer,")"
TimerGetRemainingHint="[NATIVE]  TimerGetRemaining takes timer whichTimer returns real"


TimerGetTimeout=TimerGetTimeout
TimerGetTimeout="TimerGetTimeout(",~whichTimer,")"
TimerGetTimeoutHint="[NATIVE]  TimerGetTimeout takes timer whichTimer returns real"


PauseTimer=PauseTimer
PauseTimer="PauseTimer(",~whichTimer,")"
PauseTimerHint="[NATIVE]  PauseTimer takes timer whichTimer returns nothing"


ResumeTimer=ResumeTimer
ResumeTimer="ResumeTimer(",~whichTimer,")"
ResumeTimerHint="[NATIVE]  ResumeTimer takes timer whichTimer returns nothing"


CreateGroup=CreateGroup
CreateGroup="CreateGroup(",")"
CreateGroupHint="[NATIVE]  CreateGroup takes nothing returns group"


GroupAddUnit=GroupAddUnit
GroupAddUnit="GroupAddUnit(",~whichGroup,", ",~whichUnit,")"
GroupAddUnitHint="[NATIVE]  GroupAddUnit takes group whichGroup, unit whichUnit returns nothing"


GroupRemoveUnit=GroupRemoveUnit
GroupRemoveUnit="GroupRemoveUnit(",~whichGroup,", ",~whichUnit,")"
GroupRemoveUnitHint="[NATIVE]  GroupRemoveUnit takes group whichGroup, unit whichUnit returns nothing"


GroupEnumUnitsInRange=GroupEnumUnitsInRange
GroupEnumUnitsInRange="GroupEnumUnitsInRange(",~whichGroup,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
GroupEnumUnitsInRangeHint="[NATIVE]  GroupEnumUnitsInRange takes group whichGroup, real x, real y, real radius, boolexpr filter returns nothing"


GroupEnumUnitsInRangeCounted=GroupEnumUnitsInRangeCounted
GroupEnumUnitsInRangeCounted="GroupEnumUnitsInRangeCounted(",~whichGroup,", ",~x,", ",~y,", ",~radius,", ",~filter,", ",~countLimit,")"
GroupEnumUnitsInRangeCountedHint="[NATIVE]  GroupEnumUnitsInRangeCounted takes group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit returns nothing"


GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(",~whichGroup,", ",~order,", ",~x,", ",~y,")"
GroupPointOrderHint="[NATIVE]  GroupPointOrder takes group whichGroup, string order, real x, real y returns boolean"


GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(",~whichGroup,", ",~order,", ",~x,", ",~y,")"
GroupPointOrderByIdHint="[NATIVE]  GroupPointOrderById takes group whichGroup, integer order, real x, real y returns boolean"


FirstOfGroup=FirstOfGroup
FirstOfGroup="FirstOfGroup(",~whichGroup,")"
FirstOfGroupHint="[NATIVE]  FirstOfGroup takes group whichGroup returns unit"


CreateForce=CreateForce
CreateForce="CreateForce(",")"
CreateForceHint="[NATIVE]  CreateForce takes nothing returns force"


ForceAddPlayer=ForceAddPlayer
ForceAddPlayer="ForceAddPlayer(",~whichForce,", ",~whichPlayer,")"
ForceAddPlayerHint="[NATIVE]  ForceAddPlayer takes force whichForce, player whichPlayer returns nothing"


ForceRemovePlayer=ForceRemovePlayer
ForceRemovePlayer="ForceRemovePlayer(",~whichForce,", ",~whichPlayer,")"
ForceRemovePlayerHint="[NATIVE]  ForceRemovePlayer takes force whichForce, player whichPlayer returns nothing"


ForceEnumPlayers=ForceEnumPlayers
ForceEnumPlayers="ForceEnumPlayers(",~whichForce,", ",~filter,")"
ForceEnumPlayersHint="[NATIVE]  ForceEnumPlayers takes force whichForce, boolexpr filter returns nothing"


ForceEnumPlayersCounted=ForceEnumPlayersCounted
ForceEnumPlayersCounted="ForceEnumPlayersCounted(",~whichForce,", ",~filter,", ",~countLimit,")"
ForceEnumPlayersCountedHint="[NATIVE]  ForceEnumPlayersCounted takes force whichForce, boolexpr filter, integer countLimit returns nothing"


ForceEnumAllies=ForceEnumAllies
ForceEnumAllies="ForceEnumAllies(",~whichForce,", ",~whichPlayer,", ",~filter,")"
ForceEnumAlliesHint="[NATIVE]  ForceEnumAllies takes force whichForce, player whichPlayer, boolexpr filter returns nothing"


ForceEnumEnemies=ForceEnumEnemies
ForceEnumEnemies="ForceEnumEnemies(",~whichForce,", ",~whichPlayer,", ",~filter,")"
ForceEnumEnemiesHint="[NATIVE]  ForceEnumEnemies takes force whichForce, player whichPlayer, boolexpr filter returns nothing"


Rect=Rect
Rect="Rect(",~minx,", ",~miny,", ",~maxx,", ",~maxy,")"
RectHint="[NATIVE]  Rect takes real minx, real miny, real maxx, real maxy returns rect"


RectFromLoc=RectFromLoc
RectFromLoc="RectFromLoc(",~min,", ",~max,")"
RectFromLocHint="[NATIVE]  RectFromLoc takes location min, location max returns rect"


SetRect=SetRect
SetRect="SetRect(",~whichRect,", ",~minx,", ",~miny,", ",~maxx,", ",~maxy,")"
SetRectHint="[NATIVE]  SetRect takes rect whichRect, real minx, real miny, real maxx, real maxy returns nothing"


SetRectFromLoc=SetRectFromLoc
SetRectFromLoc="SetRectFromLoc(",~whichRect,", ",~min,", ",~max,")"
SetRectFromLocHint="[NATIVE]  SetRectFromLoc takes rect whichRect, location min, location max returns nothing"


CreateRegion=CreateRegion
CreateRegion="CreateRegion(",")"
CreateRegionHint="[NATIVE]  CreateRegion takes nothing returns region"


Location=Location
Location="Location(",~x,", ",~y,")"
LocationHint="[NATIVE]  Location takes real x, real y returns location"


CreateTrigger=CreateTrigger
CreateTrigger="CreateTrigger(",")"
CreateTriggerHint="[NATIVE]  CreateTrigger takes nothing returns trigger"


TriggerWaitOnSleeps=TriggerWaitOnSleeps
TriggerWaitOnSleeps="TriggerWaitOnSleeps(",~whichTrigger,", ",~flag,")"
TriggerWaitOnSleepsHint="[NATIVE]  TriggerWaitOnSleeps takes trigger whichTrigger, boolean flag returns nothing"


DestroyCondition=DestroyCondition
DestroyCondition="DestroyCondition(",~c,")"
DestroyConditionHint="[NATIVE]  DestroyCondition takes conditionfunc c returns nothing"


DestroyFilter=DestroyFilter
DestroyFilter="DestroyFilter(",~f,")"
DestroyFilterHint="[NATIVE]  DestroyFilter takes filterfunc f returns nothing"


DestroyBoolExpr=DestroyBoolExpr
DestroyBoolExpr="DestroyBoolExpr(",~e,")"
DestroyBoolExprHint="[NATIVE]  DestroyBoolExpr takes boolexpr e returns nothing"


TriggerRegisterVariableEvent=TriggerRegisterVariableEvent
TriggerRegisterVariableEvent="TriggerRegisterVariableEvent(",~whichTrigger,", ",~varName,", ",~opcode,", ",~limitval,")"
TriggerRegisterVariableEventHint="[NATIVE]  TriggerRegisterVariableEvent takes trigger whichTrigger, string varName, limitop opcode, real limitval returns event"


TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(",~whichTrigger,", ",~timeout,", ",~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE]  TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event"


TriggerRegisterTimerExpireEvent=TriggerRegisterTimerExpireEvent
TriggerRegisterTimerExpireEvent="TriggerRegisterTimerExpireEvent(",~whichTrigger,", ",~whichTimer,")"
TriggerRegisterTimerExpireEventHint="[NATIVE]  TriggerRegisterTimerExpireEvent takes trigger whichTrigger, timer whichTimer returns event"


TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(",~whichTrigger,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE]  TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event"


TriggerRegisterDialogEvent=TriggerRegisterDialogEvent
TriggerRegisterDialogEvent="TriggerRegisterDialogEvent(",~whichTrigger,", ",~whichDialog,")"
TriggerRegisterDialogEventHint="[NATIVE]  TriggerRegisterDialogEvent takes trigger whichTrigger, dialog whichDialog returns event"


TriggerRegisterDialogButtonEvent=TriggerRegisterDialogButtonEvent
TriggerRegisterDialogButtonEvent="TriggerRegisterDialogButtonEvent(",~whichTrigger,", ",~whichButton,")"
TriggerRegisterDialogButtonEventHint="[NATIVE]  TriggerRegisterDialogButtonEvent takes trigger whichTrigger, button whichButton returns event"


TriggerRegisterGameEvent=TriggerRegisterGameEvent
TriggerRegisterGameEvent="TriggerRegisterGameEvent(",~whichTrigger,", ",~whichGameEvent,")"
TriggerRegisterGameEventHint="[NATIVE]  TriggerRegisterGameEvent takes trigger whichTrigger, gameevent whichGameEvent returns event"


TriggerRegisterEnterRegion=TriggerRegisterEnterRegion
TriggerRegisterEnterRegion="TriggerRegisterEnterRegion(",~whichTrigger,", ",~whichRegion,", ",~filter,")"
TriggerRegisterEnterRegionHint="[NATIVE]  TriggerRegisterEnterRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event"


TriggerRegisterLeaveRegion=TriggerRegisterLeaveRegion
TriggerRegisterLeaveRegion="TriggerRegisterLeaveRegion(",~whichTrigger,", ",~whichRegion,", ",~filter,")"
TriggerRegisterLeaveRegionHint="[NATIVE]  TriggerRegisterLeaveRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event"


TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableHitEventHint="[NATIVE]  TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable whichTrackable returns event"


TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE]  TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable whichTrackable returns event"


TriggerRegisterPlayerEvent=TriggerRegisterPlayerEvent
TriggerRegisterPlayerEvent="TriggerRegisterPlayerEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichPlayerEvent,")"
TriggerRegisterPlayerEventHint="[NATIVE]  TriggerRegisterPlayerEvent takes trigger whichTrigger, player whichPlayer, playerevent whichPlayerEvent returns event"


TriggerRegisterPlayerUnitEvent=TriggerRegisterPlayerUnitEvent
TriggerRegisterPlayerUnitEvent="TriggerRegisterPlayerUnitEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichPlayerUnitEvent,", ",~filter,")"
TriggerRegisterPlayerUnitEventHint="[NATIVE]  TriggerRegisterPlayerUnitEvent takes trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event"


TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(",~whichTrigger,", ",~whichPlayer,", ",~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE]  TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event"


TriggerRegisterPlayerStateEvent=TriggerRegisterPlayerStateEvent
TriggerRegisterPlayerStateEvent="TriggerRegisterPlayerStateEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterPlayerStateEventHint="[NATIVE]  TriggerRegisterPlayerStateEvent takes trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval returns event"


TriggerRegisterPlayerChatEvent=TriggerRegisterPlayerChatEvent
TriggerRegisterPlayerChatEvent="TriggerRegisterPlayerChatEvent(",~whichTrigger,", ",~whichPlayer,", ",~chatMessageToDetect,", ",~exactMatchOnly,")"
TriggerRegisterPlayerChatEventHint="[NATIVE]  TriggerRegisterPlayerChatEvent takes trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event"


TriggerRegisterDeathEvent=TriggerRegisterDeathEvent
TriggerRegisterDeathEvent="TriggerRegisterDeathEvent(",~whichTrigger,", ",~whichWidget,")"
TriggerRegisterDeathEventHint="[NATIVE]  TriggerRegisterDeathEvent takes trigger whichTrigger, widget whichWidget returns event"


TriggerRegisterUnitStateEvent=TriggerRegisterUnitStateEvent
TriggerRegisterUnitStateEvent="TriggerRegisterUnitStateEvent(",~whichTrigger,", ",~whichUnit,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterUnitStateEventHint="[NATIVE]  TriggerRegisterUnitStateEvent takes trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval returns event"


TriggerRegisterUnitEvent=TriggerRegisterUnitEvent
TriggerRegisterUnitEvent="TriggerRegisterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,")"
TriggerRegisterUnitEventHint="[NATIVE]  TriggerRegisterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent returns event"


TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,", ",~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE]  TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event"


TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(",~whichTrigger,", ",~whichUnit,", ",~range,", ",~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE]  TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event"


TriggerWaitForSound=TriggerWaitForSound
TriggerWaitForSound="TriggerWaitForSound(",~whichSound,", ",~offset,")"
TriggerWaitForSoundHint="[NATIVE]  TriggerWaitForSound takes sound whichSound, real offset returns nothing"


TriggerEvaluate=TriggerEvaluate
TriggerEvaluate="TriggerEvaluate(",~whichTrigger,")"
TriggerEvaluateHint="[NATIVE]  TriggerEvaluate takes trigger whichTrigger returns boolean"


TriggerExecuteWait=TriggerExecuteWait
TriggerExecuteWait="TriggerExecuteWait(",~whichTrigger,")"
TriggerExecuteWaitHint="[NATIVE]  TriggerExecuteWait takes trigger whichTrigger returns nothing"


TriggerSyncStart=TriggerSyncStart
TriggerSyncStart="TriggerSyncStart(",")"
TriggerSyncStartHint="[NATIVE]  TriggerSyncStart takes nothing returns nothing"


TriggerSyncReady=TriggerSyncReady
TriggerSyncReady="TriggerSyncReady(",")"
TriggerSyncReadyHint="[NATIVE]  TriggerSyncReady takes nothing returns nothing"


SetWidgetLife=SetWidgetLife
SetWidgetLife="SetWidgetLife(",~whichWidget,", ",~newLife,")"
SetWidgetLifeHint="[NATIVE]  SetWidgetLife takes widget whichWidget, real newLife returns nothing"


CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableHint="[NATIVE]  CreateDestructable takes integer objectid, real x, real y, real facing, real scale, integer variation returns destructable"


CreateDestructableZ=CreateDestructableZ
CreateDestructableZ="CreateDestructableZ(",~objectid,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableZHint="[NATIVE]  CreateDestructableZ takes integer objectid, real x, real y, real z, real facing, real scale, integer variation returns destructable"


CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableHint="[NATIVE]  CreateDeadDestructable takes integer objectid, real x, real y, real facing, real scale, integer variation returns destructable"


CreateDeadDestructableZ=CreateDeadDestructableZ
CreateDeadDestructableZ="CreateDeadDestructableZ(",~objectid,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableZHint="[NATIVE]  CreateDeadDestructableZ takes integer objectid, real x, real y, real z, real facing, real scale, integer variation returns destructable"


SetDestructableInvulnerable=SetDestructableInvulnerable
SetDestructableInvulnerable="SetDestructableInvulnerable(",~whichDestructable,", ",~flag,")"
SetDestructableInvulnerableHint="[NATIVE]  SetDestructableInvulnerable takes destructable whichDestructable, boolean flag returns nothing"


EnumDestructablesInRect=EnumDestructablesInRect
EnumDestructablesInRect="EnumDestructablesInRect(",~whichRect,", ",~filter,", ",~actionFunc,")"
EnumDestructablesInRectHint="[NATIVE]  EnumDestructablesInRect takes rect whichRect, boolexpr filter, code actionFunc returns nothing"


SetDestructableMaxLife=SetDestructableMaxLife
SetDestructableMaxLife="SetDestructableMaxLife(",~whichDestructable,", ",~max,")"
SetDestructableMaxLifeHint="[NATIVE]  SetDestructableMaxLife takes destructable whichDestructable, real max returns nothing"


QueueDestructableAnimation=QueueDestructableAnimation
QueueDestructableAnimation="QueueDestructableAnimation(",~whichDestructable,", ",~whichAnimation,")"
QueueDestructableAnimationHint="[NATIVE]  QueueDestructableAnimation takes destructable whichDestructable, string whichAnimation returns nothing"


SetDestructableAnimation=SetDestructableAnimation
SetDestructableAnimation="SetDestructableAnimation(",~whichDestructable,", ",~whichAnimation,")"
SetDestructableAnimationHint="[NATIVE]  SetDestructableAnimation takes destructable whichDestructable, string whichAnimation returns nothing"


SetDestructableAnimationSpeed=SetDestructableAnimationSpeed
SetDestructableAnimationSpeed="SetDestructableAnimationSpeed(",~whichDestructable,", ",~speedFactor,")"
SetDestructableAnimationSpeedHint="[NATIVE]  SetDestructableAnimationSpeed takes destructable whichDestructable, real speedFactor returns nothing"


ShowDestructable=ShowDestructable
ShowDestructable="ShowDestructable(",~whichDestructable,", ",~flag,")"
ShowDestructableHint="[NATIVE]  ShowDestructable takes destructable whichDestructable, boolean flag returns nothing"


CreateItem=CreateItem
CreateItem="CreateItem(",~itemid,", ",~x,", ",~y,")"
CreateItemHint="[NATIVE]  CreateItem takes integer itemid, real x, real y returns item"


SetItemPosition=SetItemPosition
SetItemPosition="SetItemPosition(",~whichItem,", ",~x,", ",~y,")"
SetItemPositionHint="[NATIVE]  SetItemPosition takes item whichItem, real x, real y returns nothing"


SetItemDropOnDeath=SetItemDropOnDeath
SetItemDropOnDeath="SetItemDropOnDeath(",~whichItem,", ",~flag,")"
SetItemDropOnDeathHint="[NATIVE]  SetItemDropOnDeath takes item whichItem, boolean flag returns nothing"


SetItemDroppable=SetItemDroppable
SetItemDroppable="SetItemDroppable(",~whichItem,", ",~flag,")"
SetItemDroppableHint="[NATIVE]  SetItemDroppable takes item whichItem, boolean flag returns nothing"


SetItemPlayer=SetItemPlayer
SetItemPlayer="SetItemPlayer(",~whichItem,", ",~whichPlayer,", ",~changeColor,")"
SetItemPlayerHint="[NATIVE]  SetItemPlayer takes item whichItem, player whichPlayer, boolean changeColor returns nothing"


SetItemInvulnerable=SetItemInvulnerable
SetItemInvulnerable="SetItemInvulnerable(",~whichItem,", ",~flag,")"
SetItemInvulnerableHint="[NATIVE]  SetItemInvulnerable takes item whichItem, boolean flag returns nothing"


SetItemVisible=SetItemVisible
SetItemVisible="SetItemVisible(",~whichItem,", ",~show,")"
SetItemVisibleHint="[NATIVE]  SetItemVisible takes item whichItem, boolean show returns nothing"


SetItemDropID=SetItemDropID
SetItemDropID="SetItemDropID(",~whichItem,", ",~unitId,")"
SetItemDropIDHint="[NATIVE]  SetItemDropID takes item whichItem, integer unitId returns nothing"


CreateUnit=CreateUnit
CreateUnit="CreateUnit(",~whichPlayer,", ",~unitid,", ",~x,", ",~y,", ",~facing,")"
CreateUnitHint="[NATIVE]  CreateUnit takes player whichPlayer, integer unitid, real x, real y, real facing returns unit"


CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(",~whichPlayer,", ",~unitname,", ",~x,", ",~y,", ",~facing,")"
CreateUnitByNameHint="[NATIVE]  CreateUnitByName takes player whichPlayer, string unitname, real x, real y, real facing returns unit"


CreateUnitAtLoc=CreateUnitAtLoc
CreateUnitAtLoc="CreateUnitAtLoc(",~whichPlayer,", ",~unitid,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocHint="[NATIVE]  CreateUnitAtLoc takes player whichPlayer, integer unitid, location whichLocation, real facing returns unit"


CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(",~whichPlayer,", ",~unitname,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocByNameHint="[NATIVE]  CreateUnitAtLocByName takes player whichPlayer, string unitname, location whichLocation, real facing returns unit"


CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(",~whichPlayer,", ",~unitid,", ",~x,", ",~y,", ",~facing,")"
CreateCorpseHint="[NATIVE]  CreateCorpse takes player whichPlayer, integer unitid, real x, real y, real facing returns unit"


ShowUnit=ShowUnit
ShowUnit="ShowUnit(",~whichUnit,", ",~show,")"
ShowUnitHint="[NATIVE]  ShowUnit takes unit whichUnit, boolean show returns nothing"


SetUnitState=SetUnitState
SetUnitState="SetUnitState(",~whichUnit,", ",~whichUnitState,", ",~newVal,")"
SetUnitStateHint="[NATIVE]  SetUnitState takes unit whichUnit, unitstate whichUnitState, real newVal returns nothing"


SetUnitX=SetUnitX
SetUnitX="SetUnitX(",~whichUnit,", ",~newX,")"
SetUnitXHint="[NATIVE]  SetUnitX takes unit whichUnit, real newX returns nothing"


SetUnitY=SetUnitY
SetUnitY="SetUnitY(",~whichUnit,", ",~newY,")"
SetUnitYHint="[NATIVE]  SetUnitY takes unit whichUnit, real newY returns nothing"


SetUnitPosition=SetUnitPosition
SetUnitPosition="SetUnitPosition(",~whichUnit,", ",~newX,", ",~newY,")"
SetUnitPositionHint="[NATIVE]  SetUnitPosition takes unit whichUnit, real newX, real newY returns nothing"


SetUnitFacing=SetUnitFacing
SetUnitFacing="SetUnitFacing(",~whichUnit,", ",~facingAngle,")"
SetUnitFacingHint="[NATIVE]  SetUnitFacing takes unit whichUnit, real facingAngle returns nothing"


SetUnitFlyHeight=SetUnitFlyHeight
SetUnitFlyHeight="SetUnitFlyHeight(",~whichUnit,", ",~newHeight,", ",~rate,")"
SetUnitFlyHeightHint="[NATIVE]  SetUnitFlyHeight takes unit whichUnit, real newHeight, real rate returns nothing"


SetUnitTurnSpeed=SetUnitTurnSpeed
SetUnitTurnSpeed="SetUnitTurnSpeed(",~whichUnit,", ",~newTurnSpeed,")"
SetUnitTurnSpeedHint="[NATIVE]  SetUnitTurnSpeed takes unit whichUnit, real newTurnSpeed returns nothing"


SetUnitPropWindow=SetUnitPropWindow
SetUnitPropWindow="SetUnitPropWindow(",~whichUnit,", ",~newPropWindowAngle,")"
SetUnitPropWindowHint="[NATIVE]  SetUnitPropWindow takes unit whichUnit, real newPropWindowAngle returns nothing"


SetUnitAcquireRange=SetUnitAcquireRange
SetUnitAcquireRange="SetUnitAcquireRange(",~whichUnit,", ",~newAcquireRange,")"
SetUnitAcquireRangeHint="[NATIVE]  SetUnitAcquireRange takes unit whichUnit, real newAcquireRange returns nothing"


SetUnitCreepGuard=SetUnitCreepGuard
SetUnitCreepGuard="SetUnitCreepGuard(",~whichUnit,", ",~creepGuard,")"
SetUnitCreepGuardHint="[NATIVE]  SetUnitCreepGuard takes unit whichUnit, boolean creepGuard returns nothing"


SetUnitScale=SetUnitScale
SetUnitScale="SetUnitScale(",~whichUnit,", ",~scaleX,", ",~scaleY,", ",~scaleZ,")"
SetUnitScaleHint="[NATIVE]  SetUnitScale takes unit whichUnit, real scaleX, real scaleY, real scaleZ returns nothing"


SetUnitTimeScale=SetUnitTimeScale
SetUnitTimeScale="SetUnitTimeScale(",~whichUnit,", ",~timeScale,")"
SetUnitTimeScaleHint="[NATIVE]  SetUnitTimeScale takes unit whichUnit, real timeScale returns nothing"


SetUnitBlendTime=SetUnitBlendTime
SetUnitBlendTime="SetUnitBlendTime(",~whichUnit,", ",~blendTime,")"
SetUnitBlendTimeHint="[NATIVE]  SetUnitBlendTime takes unit whichUnit, real blendTime returns nothing"


SetUnitVertexColor=SetUnitVertexColor
SetUnitVertexColor="SetUnitVertexColor(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetUnitVertexColorHint="[NATIVE]  SetUnitVertexColor takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing"


QueueUnitAnimation=QueueUnitAnimation
QueueUnitAnimation="QueueUnitAnimation(",~whichUnit,", ",~whichAnimation,")"
QueueUnitAnimationHint="[NATIVE]  QueueUnitAnimation takes unit whichUnit, string whichAnimation returns nothing"


AddUnitAnimationProperties=AddUnitAnimationProperties
AddUnitAnimationProperties="AddUnitAnimationProperties(",~whichUnit,", ",~animProperties,", ",~add,")"
AddUnitAnimationPropertiesHint="[NATIVE]  AddUnitAnimationProperties takes unit whichUnit, string animProperties, boolean add returns nothing"


SetUnitRescuable=SetUnitRescuable
SetUnitRescuable="SetUnitRescuable(",~whichUnit,", ",~byWhichPlayer,", ",~flag,")"
SetUnitRescuableHint="[NATIVE]  SetUnitRescuable takes unit whichUnit, player byWhichPlayer, boolean flag returns nothing"


UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(",~whichHero,", ",~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE]  UnitStripHeroLevel takes unit whichHero, integer howManyLevels returns boolean"


UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(",~whichHero,", ",~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE]  UnitModifySkillPoints takes unit whichHero, integer skillPointDelta returns boolean"


AddHeroXP=AddHeroXP
AddHeroXP="AddHeroXP(",~whichHero,", ",~xpToAdd,", ",~showEyeCandy,")"
AddHeroXPHint="[NATIVE]  AddHeroXP takes unit whichHero, integer xpToAdd, boolean showEyeCandy returns nothing"


SuspendHeroXP=SuspendHeroXP
SuspendHeroXP="SuspendHeroXP(",~whichHero,", ",~flag,")"
SuspendHeroXPHint="[NATIVE]  SuspendHeroXP takes unit whichHero, boolean flag returns nothing"


DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(",~whichUnit,", ",~abilcode,")"
DecUnitAbilityLevelHint="[NATIVE]  DecUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer"


IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(",~whichUnit,", ",~abilcode,")"
IncUnitAbilityLevelHint="[NATIVE]  IncUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer"


SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(",~whichUnit,", ",~abilcode,", ",~level,")"
SetUnitAbilityLevelHint="[NATIVE]  SetUnitAbilityLevel takes unit whichUnit, integer abilcode, integer level returns integer"


ReviveHero=ReviveHero
ReviveHero="ReviveHero(",~whichHero,", ",~x,", ",~y,", ",~doEyecandy,")"
ReviveHeroHint="[NATIVE]  ReviveHero takes unit whichHero, real x, real y, boolean doEyecandy returns boolean"


SetUnitExploded=SetUnitExploded
SetUnitExploded="SetUnitExploded(",~whichUnit,", ",~exploded,")"
SetUnitExplodedHint="[NATIVE]  SetUnitExploded takes unit whichUnit, boolean exploded returns nothing"


PauseUnit=PauseUnit
PauseUnit="PauseUnit(",~whichUnit,", ",~flag,")"
PauseUnitHint="[NATIVE]  PauseUnit takes unit whichUnit, boolean flag returns nothing"


SelectUnit=SelectUnit
SelectUnit="SelectUnit(",~whichUnit,", ",~flag,")"
SelectUnitHint="[NATIVE]  SelectUnit takes unit whichUnit, boolean flag returns nothing"


SetUnitPointValueByType=SetUnitPointValueByType
SetUnitPointValueByType="SetUnitPointValueByType(",~unitType,", ",~newPointValue,")"
SetUnitPointValueByTypeHint="[UjAPI]  SetUnitPointValueByType takes integer unitType, integer newPointValue returns nothing"


UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(",~whichUnit,", ",~whichItem,")"
UnitAddItemHint="[NATIVE]  UnitAddItem takes unit whichUnit, item whichItem returns boolean"


UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(",~whichUnit,", ",~itemId,")"
UnitAddItemByIdHint="[NATIVE]  UnitAddItemById takes unit whichUnit, integer itemId returns item"


UnitRemoveItem=UnitRemoveItem
UnitRemoveItem="UnitRemoveItem(",~whichUnit,", ",~whichItem,")"
UnitRemoveItemHint="[NATIVE]  UnitRemoveItem takes unit whichUnit, item whichItem returns nothing"


UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(",~whichUnit,", ",~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE]  UnitRemoveItemFromSlot takes unit whichUnit, integer itemSlot returns item"


UnitHasItem=UnitHasItem
UnitHasItem="UnitHasItem(",~whichUnit,", ",~whichItem,")"
UnitHasItemHint="[NATIVE]  UnitHasItem takes unit whichUnit, item whichItem returns boolean"


UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(",~whichUnit,", ",~itemSlot,")"
UnitItemInSlotHint="[NATIVE]  UnitItemInSlot takes unit whichUnit, integer itemSlot returns item"


UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(",~whichUnit,")"
UnitInventorySizeHint="[NATIVE]  UnitInventorySize takes unit whichUnit returns integer"


UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitDropItemPointHint="[NATIVE]  UnitDropItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"


UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(",~whichUnit,", ",~whichItem,", ",~slot,")"
UnitDropItemSlotHint="[NATIVE]  UnitDropItemSlot takes unit whichUnit, item whichItem, integer slot returns boolean"


UnitDropItemTarget=UnitDropItemTarget
UnitDropItemTarget="UnitDropItemTarget(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetHint="[NATIVE]  UnitDropItemTarget takes unit whichUnit, item whichItem, widget target returns boolean"


UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitUseItemPointHint="[NATIVE]  UnitUseItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"


SetUnitUseFood=SetUnitUseFood
SetUnitUseFood="SetUnitUseFood(",~whichUnit,", ",~useFood,")"
SetUnitUseFoodHint="[NATIVE]  SetUnitUseFood takes unit whichUnit, boolean useFood returns nothing"


UnitShareVision=UnitShareVision
UnitShareVision="UnitShareVision(",~whichUnit,", ",~whichPlayer,", ",~share,")"
UnitShareVisionHint="[NATIVE]  UnitShareVision takes unit whichUnit, player whichPlayer, boolean share returns nothing"


UnitSuspendDecay=UnitSuspendDecay
UnitSuspendDecay="UnitSuspendDecay(",~whichUnit,", ",~suspend,")"
UnitSuspendDecayHint="[NATIVE]  UnitSuspendDecay takes unit whichUnit, boolean suspend returns nothing"


UnitAddType=UnitAddType
UnitAddType="UnitAddType(",~whichUnit,", ",~whichUnitType,")"
UnitAddTypeHint="[NATIVE]  UnitAddType takes unit whichUnit, unittype whichUnitType returns boolean"


UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(",~whichUnit,", ",~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE]  UnitRemoveType takes unit whichUnit, unittype whichUnitType returns boolean"


UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(",~whichUnit,", ",~abilCode,")"
UnitAddAbilityHint="[NATIVE]  UnitAddAbility takes unit whichUnit, integer abilCode returns boolean"


UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(",~whichUnit,", ",~abilCode,")"
UnitRemoveAbilityHint="[NATIVE]  UnitRemoveAbility takes unit whichUnit, integer abilCode returns boolean"


UnitMakeAbilityPermanent=UnitMakeAbilityPermanent
UnitMakeAbilityPermanent="UnitMakeAbilityPermanent(",~whichUnit,", ",~permanent,", ",~abilCode,")"
UnitMakeAbilityPermanentHint="[NATIVE]  UnitMakeAbilityPermanent takes unit whichUnit, boolean permanent, integer abilCode returns boolean"


UnitRemoveBuffs=UnitRemoveBuffs
UnitRemoveBuffs="UnitRemoveBuffs(",~whichUnit,", ",~removePositive,", ",~removeNegative,")"
UnitRemoveBuffsHint="[NATIVE]  UnitRemoveBuffs takes unit whichUnit, boolean removePositive, boolean removeNegative returns nothing"


UnitRemoveBuffsEx=UnitRemoveBuffsEx
UnitRemoveBuffsEx="UnitRemoveBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitRemoveBuffsExHint="[NATIVE]  UnitRemoveBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns nothing"


UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitHasBuffsExHint="[NATIVE]  UnitHasBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean"


UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitCountBuffsExHint="[NATIVE]  UnitCountBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer"


UnitAddSleep=UnitAddSleep
UnitAddSleep="UnitAddSleep(",~whichUnit,", ",~add,")"
UnitAddSleepHint="[NATIVE]  UnitAddSleep takes unit whichUnit, boolean add returns nothing"


UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(",~whichUnit,")"
UnitCanSleepHint="[NATIVE]  UnitCanSleep takes unit whichUnit returns boolean"


UnitCanSleepPerm=UnitCanSleepPerm
UnitCanSleepPerm="UnitCanSleepPerm(",~whichUnit,")"
UnitCanSleepPermHint="[NATIVE]  UnitCanSleepPerm takes unit whichUnit returns boolean"


UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(",~whichUnit,")"
UnitIsSleepingHint="[NATIVE]  UnitIsSleeping takes unit whichUnit returns boolean"


UnitWakeUp=UnitWakeUp
UnitWakeUp="UnitWakeUp(",~whichUnit,")"
UnitWakeUpHint="[NATIVE]  UnitWakeUp takes unit whichUnit returns nothing"


UnitPauseTimedLife=UnitPauseTimedLife
UnitPauseTimedLife="UnitPauseTimedLife(",~whichUnit,", ",~flag,")"
UnitPauseTimedLifeHint="[NATIVE]  UnitPauseTimedLife takes unit whichUnit, boolean flag returns nothing"


UnitSetUsesAltIcon=UnitSetUsesAltIcon
UnitSetUsesAltIcon="UnitSetUsesAltIcon(",~whichUnit,", ",~flag,")"
UnitSetUsesAltIconHint="[NATIVE]  UnitSetUsesAltIcon takes unit whichUnit, boolean flag returns nothing"


UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(",~whichUnit,", ",~delay,", ",~radius,", ",~x,", ",~y,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamagePointHint="[NATIVE]  UnitDamagePoint takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"


UnitDamageTarget=UnitDamageTarget
UnitDamageTarget="UnitDamageTarget(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetHint="[NATIVE]  UnitDamageTarget takes unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"


AddResourceAmount=AddResourceAmount
AddResourceAmount="AddResourceAmount(",~whichUnit,", ",~amount,")"
AddResourceAmountHint="[NATIVE]  AddResourceAmount takes unit whichUnit, integer amount returns nothing"


WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(",~waygate,")"
WaygateGetDestinationXHint="[NATIVE]  WaygateGetDestinationX takes unit waygate returns real"


WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(",~waygate,")"
WaygateGetDestinationYHint="[NATIVE]  WaygateGetDestinationY takes unit waygate returns real"


WaygateSetDestination=WaygateSetDestination
WaygateSetDestination="WaygateSetDestination(",~waygate,", ",~x,", ",~y,")"
WaygateSetDestinationHint="[NATIVE]  WaygateSetDestination takes unit waygate, real x, real y returns nothing"


WaygateActivate=WaygateActivate
WaygateActivate="WaygateActivate(",~waygate,", ",~activate,")"
WaygateActivateHint="[NATIVE]  WaygateActivate takes unit waygate, boolean activate returns nothing"


WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(",~waygate,")"
WaygateIsActiveHint="[NATIVE]  WaygateIsActive takes unit waygate returns boolean"


RemoveItemFromStock=RemoveItemFromStock
RemoveItemFromStock="RemoveItemFromStock(",~whichUnit,", ",~itemId,")"
RemoveItemFromStockHint="[NATIVE]  RemoveItemFromStock takes unit whichUnit, integer itemId returns nothing"


RemoveUnitFromStock=RemoveUnitFromStock
RemoveUnitFromStock="RemoveUnitFromStock(",~whichUnit,", ",~unitId,")"
RemoveUnitFromStockHint="[NATIVE]  RemoveUnitFromStock takes unit whichUnit, integer unitId returns nothing"


Player=Player
Player="Player(",~number,")"
PlayerHint="[NATIVE]  Player takes integer number returns player"


SetPlayerHandicap=SetPlayerHandicap
SetPlayerHandicap="SetPlayerHandicap(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapHint="[NATIVE]  SetPlayerHandicap takes player whichPlayer, real handicap returns nothing"


SetPlayerHandicapXP=SetPlayerHandicapXP
SetPlayerHandicapXP="SetPlayerHandicapXP(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapXPHint="[NATIVE]  SetPlayerHandicapXP takes player whichPlayer, real handicap returns nothing"


AddPlayerTechResearched=AddPlayerTechResearched
AddPlayerTechResearched="AddPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~levels,")"
AddPlayerTechResearchedHint="[NATIVE]  AddPlayerTechResearched takes player whichPlayer, integer techid, integer levels returns nothing"


SetPlayerTechResearched=SetPlayerTechResearched
SetPlayerTechResearched="SetPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~setToLevel,")"
SetPlayerTechResearchedHint="[NATIVE]  SetPlayerTechResearched takes player whichPlayer, integer techid, integer setToLevel returns nothing"


SetPlayerUnitsOwner=SetPlayerUnitsOwner
SetPlayerUnitsOwner="SetPlayerUnitsOwner(",~whichPlayer,", ",~newOwner,")"
SetPlayerUnitsOwnerHint="[NATIVE]  SetPlayerUnitsOwner takes player whichPlayer, integer newOwner returns nothing"


CripplePlayer=CripplePlayer
CripplePlayer="CripplePlayer(",~whichPlayer,", ",~toWhichPlayers,", ",~flag,")"
CripplePlayerHint="[NATIVE]  CripplePlayer takes player whichPlayer, force toWhichPlayers, boolean flag returns nothing"


SetPlayerAbilityAvailable=SetPlayerAbilityAvailable
SetPlayerAbilityAvailable="SetPlayerAbilityAvailable(",~whichPlayer,", ",~abilid,", ",~avail,")"
SetPlayerAbilityAvailableHint="[NATIVE]  SetPlayerAbilityAvailable takes player whichPlayer, integer abilid, boolean avail returns nothing"


RemovePlayer=RemovePlayer
RemovePlayer="RemovePlayer(",~whichPlayer,", ",~gameResult,")"
RemovePlayerHint="[NATIVE]  RemovePlayer takes player whichPlayer, playergameresult gameResult returns nothing"


CachePlayerHeroData=CachePlayerHeroData
CachePlayerHeroData="CachePlayerHeroData(",~whichPlayer,")"
CachePlayerHeroDataHint="[NATIVE]  CachePlayerHeroData takes player whichPlayer returns nothing"


SetFogStateRect=SetFogStateRect
SetFogStateRect="SetFogStateRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,")"
SetFogStateRectHint="[NATIVE]  SetFogStateRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision returns nothing"


SetFogStateRadius=SetFogStateRadius
SetFogStateRadius="SetFogStateRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,")"
SetFogStateRadiusHint="[NATIVE]  SetFogStateRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision returns nothing"


SetFogStateRadiusLoc=SetFogStateRadiusLoc
SetFogStateRadiusLoc="SetFogStateRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,")"
SetFogStateRadiusLocHint="[NATIVE]  SetFogStateRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision returns nothing"


FogMaskEnable=FogMaskEnable
FogMaskEnable="FogMaskEnable(",~enable,")"
FogMaskEnableHint="[NATIVE]  FogMaskEnable takes boolean enable returns nothing"


FogEnable=FogEnable
FogEnable="FogEnable(",~enable,")"
FogEnableHint="[NATIVE]  FogEnable takes boolean enable returns nothing"


CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRectHint="[NATIVE]  CreateFogModifierRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision, boolean afterUnits returns fogmodifier"


CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE]  CreateFogModifierRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"


CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE]  CreateFogModifierRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"


ReloadGame=ReloadGame
ReloadGame="ReloadGame(",")"
ReloadGameHint="[NATIVE]  ReloadGame takes nothing returns nothing"


SetCampaignMenuRace=SetCampaignMenuRace
SetCampaignMenuRace="SetCampaignMenuRace(",~whichRace,")"
SetCampaignMenuRaceHint="[NATIVE]  SetCampaignMenuRace takes race whichRace returns nothing"


SetCampaignMenuRaceEx=SetCampaignMenuRaceEx
SetCampaignMenuRaceEx="SetCampaignMenuRaceEx(",~campaignIndex,")"
SetCampaignMenuRaceExHint="[NATIVE]  SetCampaignMenuRaceEx takes integer campaignIndex returns nothing"


ForceCampaignSelectScreen=ForceCampaignSelectScreen
ForceCampaignSelectScreen="ForceCampaignSelectScreen(",")"
ForceCampaignSelectScreenHint="[NATIVE]  ForceCampaignSelectScreen takes nothing returns nothing"


LoadGame=LoadGame
LoadGame="LoadGame(",~saveFileName,", ",~doScoreScreen,")"
LoadGameHint="[NATIVE]  LoadGame takes string saveFileName, boolean doScoreScreen returns nothing"


SaveGame=SaveGame
SaveGame="SaveGame(",~saveFileName,")"
SaveGameHint="[NATIVE]  SaveGame takes string saveFileName returns nothing"


RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(",~sourceDirName,", ",~destDirName,")"
RenameSaveDirectoryHint="[NATIVE]  RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean"


RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(",~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE]  RemoveSaveDirectory takes string sourceDirName returns boolean"


CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(",~sourceSaveName,", ",~destSaveName,")"
CopySaveGameHint="[NATIVE]  CopySaveGame takes string sourceSaveName, string destSaveName returns boolean"


SaveGameExists=SaveGameExists
SaveGameExists="SaveGameExists(",~saveName,")"
SaveGameExistsHint="[NATIVE]  SaveGameExists takes string saveName returns boolean"


SetFloatGameState=SetFloatGameState
SetFloatGameState="SetFloatGameState(",~whichFloatGameState,", ",~value,")"
SetFloatGameStateHint="[NATIVE]  SetFloatGameState takes fgamestate whichFloatGameState, real value returns nothing"


SetTutorialCleared=SetTutorialCleared
SetTutorialCleared="SetTutorialCleared(",~cleared,")"
SetTutorialClearedHint="[NATIVE]  SetTutorialCleared takes boolean cleared returns nothing"


SetMissionAvailable=SetMissionAvailable
SetMissionAvailable="SetMissionAvailable(",~campaignNumber,", ",~missionNumber,", ",~available,")"
SetMissionAvailableHint="[NATIVE]  SetMissionAvailable takes integer campaignNumber, integer missionNumber, boolean available returns nothing"


SetCampaignAvailable=SetCampaignAvailable
SetCampaignAvailable="SetCampaignAvailable(",~campaignNumber,", ",~available,")"
SetCampaignAvailableHint="[NATIVE]  SetCampaignAvailable takes integer campaignNumber, boolean available returns nothing"


SetOpCinematicAvailable=SetOpCinematicAvailable
SetOpCinematicAvailable="SetOpCinematicAvailable(",~campaignNumber,", ",~available,")"
SetOpCinematicAvailableHint="[NATIVE]  SetOpCinematicAvailable takes integer campaignNumber, boolean available returns nothing"


SetEdCinematicAvailable=SetEdCinematicAvailable
SetEdCinematicAvailable="SetEdCinematicAvailable(",~campaignNumber,", ",~available,")"
SetEdCinematicAvailableHint="[NATIVE]  SetEdCinematicAvailable takes integer campaignNumber, boolean available returns nothing"


SetDefaultDifficulty=SetDefaultDifficulty
SetDefaultDifficulty="SetDefaultDifficulty(",~g,")"
SetDefaultDifficultyHint="[NATIVE]  SetDefaultDifficulty takes gamedifficulty g returns nothing"


SetCustomCampaignButtonVisible=SetCustomCampaignButtonVisible
SetCustomCampaignButtonVisible="SetCustomCampaignButtonVisible(",~whichButton,", ",~visible,")"
SetCustomCampaignButtonVisibleHint="[NATIVE]  SetCustomCampaignButtonVisible takes integer whichButton, boolean visible returns nothing"


DialogCreate=DialogCreate
DialogCreate="DialogCreate(",")"
DialogCreateHint="[NATIVE]  DialogCreate takes nothing returns dialog"


DialogClear=DialogClear
DialogClear="DialogClear(",~whichDialog,")"
DialogClearHint="[NATIVE]  DialogClear takes dialog whichDialog returns nothing"


DialogSetMessage=DialogSetMessage
DialogSetMessage="DialogSetMessage(",~whichDialog,", ",~messageText,")"
DialogSetMessageHint="[NATIVE]  DialogSetMessage takes dialog whichDialog, string messageText returns nothing"


DialogDisplay=DialogDisplay
DialogDisplay="DialogDisplay(",~whichPlayer,", ",~whichDialog,", ",~flag,")"
DialogDisplayHint="[NATIVE]  DialogDisplay takes player whichPlayer, dialog whichDialog, boolean flag returns nothing"


InitGameCache=InitGameCache
InitGameCache="InitGameCache(",~campaignFile,")"
InitGameCacheHint="[NATIVE]  InitGameCache takes string campaignFile returns gamecache"


SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(",~whichCache,")"
SaveGameCacheHint="[NATIVE]  SaveGameCache takes gamecache whichCache returns boolean"


StoreInteger=StoreInteger
StoreInteger="StoreInteger(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreIntegerHint="[NATIVE]  StoreInteger takes gamecache whichGamecache, string missionKey, string key, integer value returns nothing"


StoreReal=StoreReal
StoreReal="StoreReal(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreRealHint="[NATIVE]  StoreReal takes gamecache whichGamecache, string missionKey, string key, real value returns nothing"


StoreBoolean=StoreBoolean
StoreBoolean="StoreBoolean(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreBooleanHint="[NATIVE]  StoreBoolean takes gamecache whichGamecache, string missionKey, string key, boolean value returns nothing"


StoreUnit=StoreUnit
StoreUnit="StoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichUnit,")"
StoreUnitHint="[NATIVE]  StoreUnit takes gamecache whichGamecache, string missionKey, string key, unit whichUnit returns boolean"


SyncStoredInteger=SyncStoredInteger
SyncStoredInteger="SyncStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredIntegerHint="[NATIVE]  SyncStoredInteger takes gamecache whichGamecache, string missionKey, string key returns nothing"


SyncStoredReal=SyncStoredReal
SyncStoredReal="SyncStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredRealHint="[NATIVE]  SyncStoredReal takes gamecache whichGamecache, string missionKey, string key returns nothing"


SyncStoredBoolean=SyncStoredBoolean
SyncStoredBoolean="SyncStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredBooleanHint="[NATIVE]  SyncStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns nothing"


SyncStoredUnit=SyncStoredUnit
SyncStoredUnit="SyncStoredUnit(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredUnitHint="[NATIVE]  SyncStoredUnit takes gamecache whichGamecache, string missionKey, string key returns nothing"


HaveStoredInteger=HaveStoredInteger
HaveStoredInteger="HaveStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredIntegerHint="[NATIVE]  HaveStoredInteger takes gamecache whichGamecache, string missionKey, string key returns boolean"


HaveStoredReal=HaveStoredReal
HaveStoredReal="HaveStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredRealHint="[NATIVE]  HaveStoredReal takes gamecache whichGamecache, string missionKey, string key returns boolean"


HaveStoredBoolean=HaveStoredBoolean
HaveStoredBoolean="HaveStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredBooleanHint="[NATIVE]  HaveStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns boolean"


HaveStoredUnit=HaveStoredUnit
HaveStoredUnit="HaveStoredUnit(",~whichGamecache,", ",~missionKey,", ",~key,")"
HaveStoredUnitHint="[NATIVE]  HaveStoredUnit takes gamecache whichGamecache, string missionKey, string key returns boolean"


FlushGameCache=FlushGameCache
FlushGameCache="FlushGameCache(",~whichGamecache,")"
FlushGameCacheHint="[NATIVE]  FlushGameCache takes gamecache whichGamecache returns nothing"


FlushStoredMission=FlushStoredMission
FlushStoredMission="FlushStoredMission(",~whichGamecache,", ",~missionKey,")"
FlushStoredMissionHint="[NATIVE]  FlushStoredMission takes gamecache whichGamecache, string missionKey returns nothing"


RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
RestoreUnitHint="[NATIVE]  RestoreUnit takes gamecache whichGamecache, string missionKey, string key, player whichPlayer, real x, real y, real facing returns unit"


InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE]  InitHashtable takes nothing returns hashtable"


SaveInteger=SaveInteger
SaveInteger="SaveInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveIntegerHint="[NATIVE]  SaveInteger takes hashtable whichHashtable, integer parentKey, integer childKey, integer value returns nothing"


SaveReal=SaveReal
SaveReal="SaveReal(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveRealHint="[NATIVE]  SaveReal takes hashtable whichHashtable, integer parentKey, integer childKey, real value returns nothing"


SaveBoolean=SaveBoolean
SaveBoolean="SaveBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveBooleanHint="[NATIVE]  SaveBoolean takes hashtable whichHashtable, integer parentKey, integer childKey, boolean value returns nothing"


SaveStr=SaveStr
SaveStr="SaveStr(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveStrHint="[NATIVE]  SaveStr takes hashtable whichHashtable, integer parentKey, integer childKey, string value returns boolean"


SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichPlayer,")"
SavePlayerHandleHint="[NATIVE]  SavePlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, player whichPlayer returns boolean"


SaveWidgetHandle=SaveWidgetHandle
SaveWidgetHandle="SaveWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleHint="[NATIVE]  SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, widget whichWidget returns boolean"


SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE]  SaveDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichDestructable returns boolean"


SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItem,")"
SaveItemHandleHint="[NATIVE]  SaveItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichItem returns boolean"


SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnit,")"
SaveUnitHandleHint="[NATIVE]  SaveUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichUnit returns boolean"


SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAbility,")"
SaveAbilityHandleHint="[NATIVE]  SaveAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ability whichAbility returns boolean"


SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimer,")"
SaveTimerHandleHint="[NATIVE]  SaveTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timer whichTimer returns boolean"


SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE]  SaveTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trigger whichTrigger returns boolean"


SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE]  SaveTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean"


SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE]  SaveTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean"


SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE]  SaveTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey, event whichEvent returns boolean"


SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichForce,")"
SaveForceHandleHint="[NATIVE]  SaveForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey, force whichForce returns boolean"


SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichGroup,")"
SaveGroupHandleHint="[NATIVE]  SaveGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey, group whichGroup returns boolean"


SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLocation,")"
SaveLocationHandleHint="[NATIVE]  SaveLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey, location whichLocation returns boolean"


SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRect,")"
SaveRectHandleHint="[NATIVE]  SaveRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, rect whichRect returns boolean"


SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE]  SaveBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean"


SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichSound,")"
SaveSoundHandleHint="[NATIVE]  SaveSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sound whichSound returns boolean"


SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEffect,")"
SaveEffectHandleHint="[NATIVE]  SaveEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, effect whichEffect returns boolean"


SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE]  SaveUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean"


SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE]  SaveItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, itempool whichItempool returns boolean"


SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuest,")"
SaveQuestHandleHint="[NATIVE]  SaveQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey, quest whichQuest returns boolean"


SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE]  SaveQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, questitem whichQuestitem returns boolean"


SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE]  SaveDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean"


SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE]  SaveTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean"


SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE]  SaveLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean"


SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE]  SaveMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean"


SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE]  SaveMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean"


SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE]  SaveTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trackable whichTrackable returns boolean"


SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDialog,")"
SaveDialogHandleHint="[NATIVE]  SaveDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, dialog whichDialog returns boolean"


SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichButton,")"
SaveButtonHandleHint="[NATIVE]  SaveButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey, button whichButton returns boolean"


SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE]  SaveTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey, texttag whichTexttag returns boolean"


SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLightning,")"
SaveLightningHandleHint="[NATIVE]  SaveLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey, lightning whichLightning returns boolean"


SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichImage,")"
SaveImageHandleHint="[NATIVE]  SaveImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, image whichImage returns boolean"


SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE]  SaveUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean"


SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRegion,")"
SaveRegionHandleHint="[NATIVE]  SaveRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, region whichRegion returns boolean"


SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogState,")"
SaveFogStateHandleHint="[NATIVE]  SaveFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogstate whichFogState returns boolean"


SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE]  SaveFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean"


SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAgent,")"
SaveAgentHandleHint="[NATIVE]  SaveAgentHandle takes hashtable whichHashtable, integer parentKey, integer childKey, agent whichAgent returns boolean"


SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE]  SaveHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, hashtable whichHashtable returns boolean"


LoadInteger=LoadInteger
LoadInteger="LoadInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadIntegerHint="[NATIVE]  LoadInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns integer"


LoadReal=LoadReal
LoadReal="LoadReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRealHint="[NATIVE]  LoadReal takes hashtable whichHashtable, integer parentKey, integer childKey returns real"


LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanHint="[NATIVE]  LoadBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


LoadStr=LoadStr
LoadStr="LoadStr(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadStrHint="[NATIVE]  LoadStr takes hashtable whichHashtable, integer parentKey, integer childKey returns string"


LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadPlayerHandleHint="[NATIVE]  LoadPlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns player"


LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWidgetHandleHint="[NATIVE]  LoadWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns widget"


LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDestructableHandleHint="[NATIVE]  LoadDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns destructable"


LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemHandleHint="[NATIVE]  LoadItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns item"


LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitHandleHint="[NATIVE]  LoadUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unit"


LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAbilityHandleHint="[NATIVE]  LoadAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ability"


LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerHandleHint="[NATIVE]  LoadTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timer"


LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerHandleHint="[NATIVE]  LoadTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trigger"


LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE]  LoadTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggercondition"


LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerActionHandleHint="[NATIVE]  LoadTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggeraction"


LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerEventHandleHint="[NATIVE]  LoadTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns event"


LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadForceHandleHint="[NATIVE]  LoadForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns force"


LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadGroupHandleHint="[NATIVE]  LoadGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns group"


LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLocationHandleHint="[NATIVE]  LoadLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns location"


LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRectHandleHint="[NATIVE]  LoadRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns rect"


LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanExprHandleHint="[NATIVE]  LoadBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolexpr"


LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSoundHandleHint="[NATIVE]  LoadSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sound"


LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadEffectHandleHint="[NATIVE]  LoadEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns effect"


LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitPoolHandleHint="[NATIVE]  LoadUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unitpool"


LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemPoolHandleHint="[NATIVE]  LoadItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns itempool"


LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestHandleHint="[NATIVE]  LoadQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns quest"


LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestItemHandleHint="[NATIVE]  LoadQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns questitem"


LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE]  LoadDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns defeatcondition"


LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerDialogHandleHint="[NATIVE]  LoadTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timerdialog"


LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLeaderboardHandleHint="[NATIVE]  LoadLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns leaderboard"


LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardHandleHint="[NATIVE]  LoadMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboard"


LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE]  LoadMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboarditem"


LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTrackableHandleHint="[NATIVE]  LoadTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trackable"


LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDialogHandleHint="[NATIVE]  LoadDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns dialog"


LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadButtonHandleHint="[NATIVE]  LoadButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns button"


LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextTagHandleHint="[NATIVE]  LoadTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns texttag"


LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLightningHandleHint="[NATIVE]  LoadLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns lightning"


LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadImageHandleHint="[NATIVE]  LoadImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns image"


LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUbersplatHandleHint="[NATIVE]  LoadUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ubersplat"


LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRegionHandleHint="[NATIVE]  LoadRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns region"


LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogStateHandleHint="[NATIVE]  LoadFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogstate"


LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogModifierHandleHint="[NATIVE]  LoadFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogmodifier"


LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHashtableHandleHint="[NATIVE]  LoadHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns hashtable"


HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedIntegerHint="[NATIVE]  HaveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedRealHint="[NATIVE]  HaveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedBooleanHint="[NATIVE]  HaveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedHandleHint="[NATIVE]  HaveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


RemoveSavedInteger=RemoveSavedInteger
RemoveSavedInteger="RemoveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedIntegerHint="[NATIVE]  RemoveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


RemoveSavedReal=RemoveSavedReal
RemoveSavedReal="RemoveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedRealHint="[NATIVE]  RemoveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


RemoveSavedBoolean=RemoveSavedBoolean
RemoveSavedBoolean="RemoveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedBooleanHint="[NATIVE]  RemoveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


RemoveSavedHandle=RemoveSavedHandle
RemoveSavedHandle="RemoveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedHandleHint="[NATIVE]  RemoveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


FlushParentHashtable=FlushParentHashtable
FlushParentHashtable="FlushParentHashtable(",~whichHashtable,")"
FlushParentHashtableHint="[NATIVE]  FlushParentHashtable takes hashtable whichHashtable returns nothing"


FlushChildHashtable=FlushChildHashtable
FlushChildHashtable="FlushChildHashtable(",~whichHashtable,", ",~parentKey,")"
FlushChildHashtableHint="[NATIVE]  FlushChildHashtable takes hashtable whichHashtable, integer parentKey returns nothing"


CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE]  CreateUnitPool takes nothing returns unitpool"


DestroyUnitPool=DestroyUnitPool
DestroyUnitPool="DestroyUnitPool(",~whichPool,")"
DestroyUnitPoolHint="[NATIVE]  DestroyUnitPool takes unitpool whichPool returns nothing"


UnitPoolAddUnitType=UnitPoolAddUnitType
UnitPoolAddUnitType="UnitPoolAddUnitType(",~whichPool,", ",~unitId,", ",~weight,")"
UnitPoolAddUnitTypeHint="[NATIVE]  UnitPoolAddUnitType takes unitpool whichPool, integer unitId, real weight returns nothing"


UnitPoolRemoveUnitType=UnitPoolRemoveUnitType
UnitPoolRemoveUnitType="UnitPoolRemoveUnitType(",~whichPool,", ",~unitId,")"
UnitPoolRemoveUnitTypeHint="[NATIVE]  UnitPoolRemoveUnitType takes unitpool whichPool, integer unitId returns nothing"


PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(",~whichPool,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
PlaceRandomUnitHint="[NATIVE]  PlaceRandomUnit takes unitpool whichPool, player whichPlayer, real x, real y, real facing returns unit"


CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE]  CreateItemPool takes nothing returns itempool"


DestroyItemPool=DestroyItemPool
DestroyItemPool="DestroyItemPool(",~whichItemPool,")"
DestroyItemPoolHint="[NATIVE]  DestroyItemPool takes itempool whichItemPool returns nothing"


ItemPoolAddItemType=ItemPoolAddItemType
ItemPoolAddItemType="ItemPoolAddItemType(",~whichItemPool,", ",~itemId,", ",~weight,")"
ItemPoolAddItemTypeHint="[NATIVE]  ItemPoolAddItemType takes itempool whichItemPool, integer itemId, real weight returns nothing"


ItemPoolRemoveItemType=ItemPoolRemoveItemType
ItemPoolRemoveItemType="ItemPoolRemoveItemType(",~whichItemPool,", ",~itemId,")"
ItemPoolRemoveItemTypeHint="[NATIVE]  ItemPoolRemoveItemType takes itempool whichItemPool, integer itemId returns nothing"


PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(",~whichItemPool,", ",~x,", ",~y,")"
PlaceRandomItemHint="[NATIVE]  PlaceRandomItem takes itempool whichItemPool, real x, real y returns item"


ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(",~level,")"
ChooseRandomCreepHint="[NATIVE]  ChooseRandomCreep takes integer level returns integer"


ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE]  ChooseRandomNPBuilding takes nothing returns integer"


ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(",~level,")"
ChooseRandomItemHint="[NATIVE]  ChooseRandomItem takes integer level returns integer"


ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(",~whichType,", ",~level,")"
ChooseRandomItemExHint="[NATIVE]  ChooseRandomItemEx takes itemtype whichType, integer level returns integer"


SetRandomSeed=SetRandomSeed
SetRandomSeed="SetRandomSeed(",~seed,")"
SetRandomSeedHint="[NATIVE]  SetRandomSeed takes integer seed returns nothing"


SetTerrainFog=SetTerrainFog
SetTerrainFog="SetTerrainFog(",~a,", ",~b,", ",~c,", ",~d,", ",~e,")"
SetTerrainFogHint="[NATIVE]  SetTerrainFog takes real a, real b, real c, real d, real e returns nothing"


ResetTerrainFog=ResetTerrainFog
ResetTerrainFog="ResetTerrainFog(",")"
ResetTerrainFogHint="[NATIVE]  ResetTerrainFog takes nothing returns nothing"


SetUnitFog=SetUnitFog
SetUnitFog="SetUnitFog(",~a,", ",~b,", ",~c,", ",~d,", ",~e,")"
SetUnitFogHint="[NATIVE]  SetUnitFog takes real a, real b, real c, real d, real e returns nothing"


SetTerrainFogEx=SetTerrainFogEx
SetTerrainFogEx="SetTerrainFogEx(",~style,", ",~zstart,", ",~zend,", ",~density,", ",~red,", ",~green,", ",~blue,")"
SetTerrainFogExHint="[NATIVE]  SetTerrainFogEx takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing"


DisplayTimedTextFromPlayer=DisplayTimedTextFromPlayer
DisplayTimedTextFromPlayer="DisplayTimedTextFromPlayer(",~toPlayer,", ",~x,", ",~y,", ",~duration,", ",~message,")"
DisplayTimedTextFromPlayerHint="[NATIVE]  DisplayTimedTextFromPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing"


ClearTextMessages=ClearTextMessages
ClearTextMessages="ClearTextMessages(",")"
ClearTextMessagesHint="[NATIVE]  ClearTextMessages takes nothing returns nothing"


SetDayNightModels=SetDayNightModels
SetDayNightModels="SetDayNightModels(",~terrainDNCFile,", ",~unitDNCFile,")"
SetDayNightModelsHint="[NATIVE]  SetDayNightModels takes string terrainDNCFile, string unitDNCFile returns nothing"


EnableUserControl=EnableUserControl
EnableUserControl="EnableUserControl(",~b,")"
EnableUserControlHint="[NATIVE]  EnableUserControl takes boolean b returns nothing"


SuspendTimeOfDay=SuspendTimeOfDay
SuspendTimeOfDay="SuspendTimeOfDay(",~b,")"
SuspendTimeOfDayHint="[NATIVE]  SuspendTimeOfDay takes boolean b returns nothing"


SetTimeOfDayScale=SetTimeOfDayScale
SetTimeOfDayScale="SetTimeOfDayScale(",~r,")"
SetTimeOfDayScaleHint="[NATIVE]  SetTimeOfDayScale takes real r returns nothing"


ShowInterface=ShowInterface
ShowInterface="ShowInterface(",~flag,", ",~fadeDuration,")"
ShowInterfaceHint="[NATIVE]  ShowInterface takes boolean flag, real fadeDuration returns nothing"


PauseGame=PauseGame
PauseGame="PauseGame(",~flag,")"
PauseGameHint="[NATIVE]  PauseGame takes boolean flag returns nothing"


UnitAddIndicator=UnitAddIndicator
UnitAddIndicator="UnitAddIndicator(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
UnitAddIndicatorHint="[NATIVE]  UnitAddIndicator takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing"


AddIndicator=AddIndicator
AddIndicator="AddIndicator(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
AddIndicatorHint="[NATIVE]  AddIndicator takes widget whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"


PingMinimap=PingMinimap
PingMinimap="PingMinimap(",~x,", ",~y,", ",~duration,")"
PingMinimapHint="[NATIVE]  PingMinimap takes real x, real y, real duration returns nothing"


PingMinimapEx=PingMinimapEx
PingMinimapEx="PingMinimapEx(",~x,", ",~y,", ",~duration,", ",~red,", ",~green,", ",~blue,", ",~extraEffects,")"
PingMinimapExHint="[NATIVE]  PingMinimapEx takes real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects returns nothing"


EnableOcclusion=EnableOcclusion
EnableOcclusion="EnableOcclusion(",~flag,")"
EnableOcclusionHint="[NATIVE]  EnableOcclusion takes boolean flag returns nothing"


SetIntroShotText=SetIntroShotText
SetIntroShotText="SetIntroShotText(",~introText,")"
SetIntroShotTextHint="[NATIVE]  SetIntroShotText takes string introText returns nothing"


SetIntroShotModel=SetIntroShotModel
SetIntroShotModel="SetIntroShotModel(",~introModelPath,")"
SetIntroShotModelHint="[NATIVE]  SetIntroShotModel takes string introModelPath returns nothing"


EnableWorldFogBoundary=EnableWorldFogBoundary
EnableWorldFogBoundary="EnableWorldFogBoundary(",~b,")"
EnableWorldFogBoundaryHint="[NATIVE]  EnableWorldFogBoundary takes boolean b returns nothing"


PlayModelCinematic=PlayModelCinematic
PlayModelCinematic="PlayModelCinematic(",~modelName,")"
PlayModelCinematicHint="[NATIVE]  PlayModelCinematic takes string modelName returns nothing"


ForceUIKey=ForceUIKey
ForceUIKey="ForceUIKey(",~key,")"
ForceUIKeyHint="[NATIVE]  ForceUIKey takes string key returns nothing"


ForceUICancel=ForceUICancel
ForceUICancel="ForceUICancel(",")"
ForceUICancelHint="[NATIVE]  ForceUICancel takes nothing returns nothing"


DisplayLoadDialog=DisplayLoadDialog
DisplayLoadDialog="DisplayLoadDialog(",")"
DisplayLoadDialogHint="[NATIVE]  DisplayLoadDialog takes nothing returns nothing"


CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE]  CreateTextTag takes nothing returns texttag"


DestroyTextTag=DestroyTextTag
DestroyTextTag="DestroyTextTag(",~whichTextTag,")"
DestroyTextTagHint="[NATIVE]  DestroyTextTag takes texttag whichTextTag returns nothing"


SetTextTagText=SetTextTagText
SetTextTagText="SetTextTagText(",~whichTextTag,", ",~s,", ",~height,")"
SetTextTagTextHint="[NATIVE]  SetTextTagText takes texttag whichTextTag, string s, real height returns nothing"


SetTextTagPos=SetTextTagPos
SetTextTagPos="SetTextTagPos(",~whichTextTag,", ",~x,", ",~y,", ",~heightOffset,")"
SetTextTagPosHint="[NATIVE]  SetTextTagPos takes texttag whichTextTag, real x, real y, real heightOffset returns nothing"


SetTextTagPosUnit=SetTextTagPosUnit
SetTextTagPosUnit="SetTextTagPosUnit(",~whichTextTag,", ",~whichUnit,", ",~heightOffset,")"
SetTextTagPosUnitHint="[NATIVE]  SetTextTagPosUnit takes texttag whichTextTag, unit whichUnit, real heightOffset returns nothing"


SetTextTagColor=SetTextTagColor
SetTextTagColor="SetTextTagColor(",~whichTextTag,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetTextTagColorHint="[NATIVE]  SetTextTagColor takes texttag whichTextTag, integer red, integer green, integer blue, integer alpha returns nothing"


SetTextTagVelocity=SetTextTagVelocity
SetTextTagVelocity="SetTextTagVelocity(",~whichTextTag,", ",~xvel,", ",~yvel,")"
SetTextTagVelocityHint="[NATIVE]  SetTextTagVelocity takes texttag whichTextTag, real xvel, real yvel returns nothing"


SetTextTagVisibility=SetTextTagVisibility
SetTextTagVisibility="SetTextTagVisibility(",~whichTextTag,", ",~flag,")"
SetTextTagVisibilityHint="[NATIVE]  SetTextTagVisibility takes texttag whichTextTag, boolean flag returns nothing"


SetTextTagSuspended=SetTextTagSuspended
SetTextTagSuspended="SetTextTagSuspended(",~whichTextTag,", ",~flag,")"
SetTextTagSuspendedHint="[NATIVE]  SetTextTagSuspended takes texttag whichTextTag, boolean flag returns nothing"


SetTextTagPermanent=SetTextTagPermanent
SetTextTagPermanent="SetTextTagPermanent(",~whichTextTag,", ",~flag,")"
SetTextTagPermanentHint="[NATIVE]  SetTextTagPermanent takes texttag whichTextTag, boolean flag returns nothing"


SetTextTagAge=SetTextTagAge
SetTextTagAge="SetTextTagAge(",~whichTextTag,", ",~age,")"
SetTextTagAgeHint="[NATIVE]  SetTextTagAge takes texttag whichTextTag, real age returns nothing"


SetTextTagLifespan=SetTextTagLifespan
SetTextTagLifespan="SetTextTagLifespan(",~whichTextTag,", ",~lifespan,")"
SetTextTagLifespanHint="[NATIVE]  SetTextTagLifespan takes texttag whichTextTag, real lifespan returns nothing"


SetTextTagFadepoint=SetTextTagFadepoint
SetTextTagFadepoint="SetTextTagFadepoint(",~whichTextTag,", ",~fadepoint,")"
SetTextTagFadepointHint="[NATIVE]  SetTextTagFadepoint takes texttag whichTextTag, real fadepoint returns nothing"


CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE]  CreateQuest takes nothing returns quest"


DestroyQuest=DestroyQuest
DestroyQuest="DestroyQuest(",~whichQuest,")"
DestroyQuestHint="[NATIVE]  DestroyQuest takes quest whichQuest returns nothing"


QuestSetTitle=QuestSetTitle
QuestSetTitle="QuestSetTitle(",~whichQuest,", ",~title,")"
QuestSetTitleHint="[NATIVE]  QuestSetTitle takes quest whichQuest, string title returns nothing"


QuestSetDescription=QuestSetDescription
QuestSetDescription="QuestSetDescription(",~whichQuest,", ",~description,")"
QuestSetDescriptionHint="[NATIVE]  QuestSetDescription takes quest whichQuest, string description returns nothing"


QuestSetIconPath=QuestSetIconPath
QuestSetIconPath="QuestSetIconPath(",~whichQuest,", ",~iconPath,")"
QuestSetIconPathHint="[NATIVE]  QuestSetIconPath takes quest whichQuest, string iconPath returns nothing"


QuestSetRequired=QuestSetRequired
QuestSetRequired="QuestSetRequired(",~whichQuest,", ",~required,")"
QuestSetRequiredHint="[NATIVE]  QuestSetRequired takes quest whichQuest, boolean required returns nothing"


QuestSetCompleted=QuestSetCompleted
QuestSetCompleted="QuestSetCompleted(",~whichQuest,", ",~completed,")"
QuestSetCompletedHint="[NATIVE]  QuestSetCompleted takes quest whichQuest, boolean completed returns nothing"


QuestSetDiscovered=QuestSetDiscovered
QuestSetDiscovered="QuestSetDiscovered(",~whichQuest,", ",~discovered,")"
QuestSetDiscoveredHint="[NATIVE]  QuestSetDiscovered takes quest whichQuest, boolean discovered returns nothing"


QuestSetFailed=QuestSetFailed
QuestSetFailed="QuestSetFailed(",~whichQuest,", ",~failed,")"
QuestSetFailedHint="[NATIVE]  QuestSetFailed takes quest whichQuest, boolean failed returns nothing"


QuestSetEnabled=QuestSetEnabled
QuestSetEnabled="QuestSetEnabled(",~whichQuest,", ",~enabled,")"
QuestSetEnabledHint="[NATIVE]  QuestSetEnabled takes quest whichQuest, boolean enabled returns nothing"


QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(",~whichQuest,")"
QuestCreateItemHint="[NATIVE]  QuestCreateItem takes quest whichQuest returns questitem"


QuestItemSetDescription=QuestItemSetDescription
QuestItemSetDescription="QuestItemSetDescription(",~whichQuestItem,", ",~description,")"
QuestItemSetDescriptionHint="[NATIVE]  QuestItemSetDescription takes questitem whichQuestItem, string description returns nothing"


QuestItemSetCompleted=QuestItemSetCompleted
QuestItemSetCompleted="QuestItemSetCompleted(",~whichQuestItem,", ",~completed,")"
QuestItemSetCompletedHint="[NATIVE]  QuestItemSetCompleted takes questitem whichQuestItem, boolean completed returns nothing"


CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE]  CreateDefeatCondition takes nothing returns defeatcondition"


DestroyDefeatCondition=DestroyDefeatCondition
DestroyDefeatCondition="DestroyDefeatCondition(",~whichCondition,")"
DestroyDefeatConditionHint="[NATIVE]  DestroyDefeatCondition takes defeatcondition whichCondition returns nothing"


DefeatConditionSetDescription=DefeatConditionSetDescription
DefeatConditionSetDescription="DefeatConditionSetDescription(",~whichCondition,", ",~description,")"
DefeatConditionSetDescriptionHint="[NATIVE]  DefeatConditionSetDescription takes defeatcondition whichCondition, string description returns nothing"


FlashQuestDialogButton=FlashQuestDialogButton
FlashQuestDialogButton="FlashQuestDialogButton(",")"
FlashQuestDialogButtonHint="[NATIVE]  FlashQuestDialogButton takes nothing returns nothing"


ForceQuestDialogUpdate=ForceQuestDialogUpdate
ForceQuestDialogUpdate="ForceQuestDialogUpdate(",")"
ForceQuestDialogUpdateHint="[NATIVE]  ForceQuestDialogUpdate takes nothing returns nothing"


CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(",~whichTimer,")"
CreateTimerDialogHint="[NATIVE]  CreateTimerDialog takes timer whichTimer returns timerdialog"


DestroyTimerDialog=DestroyTimerDialog
DestroyTimerDialog="DestroyTimerDialog(",~whichDialog,")"
DestroyTimerDialogHint="[NATIVE]  DestroyTimerDialog takes timerdialog whichDialog returns nothing"


TimerDialogSetTitle=TimerDialogSetTitle
TimerDialogSetTitle="TimerDialogSetTitle(",~whichDialog,", ",~title,")"
TimerDialogSetTitleHint="[NATIVE]  TimerDialogSetTitle takes timerdialog whichDialog, string title returns nothing"


TimerDialogSetTitleColor=TimerDialogSetTitleColor
TimerDialogSetTitleColor="TimerDialogSetTitleColor(",~whichDialog,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
TimerDialogSetTitleColorHint="[NATIVE]  TimerDialogSetTitleColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing"


TimerDialogSetTimeColor=TimerDialogSetTimeColor
TimerDialogSetTimeColor="TimerDialogSetTimeColor(",~whichDialog,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
TimerDialogSetTimeColorHint="[NATIVE]  TimerDialogSetTimeColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing"


TimerDialogSetSpeed=TimerDialogSetSpeed
TimerDialogSetSpeed="TimerDialogSetSpeed(",~whichDialog,", ",~speedMultFactor,")"
TimerDialogSetSpeedHint="[NATIVE]  TimerDialogSetSpeed takes timerdialog whichDialog, real speedMultFactor returns nothing"


TimerDialogDisplay=TimerDialogDisplay
TimerDialogDisplay="TimerDialogDisplay(",~whichDialog,", ",~display,")"
TimerDialogDisplayHint="[NATIVE]  TimerDialogDisplay takes timerdialog whichDialog, boolean display returns nothing"


TimerDialogSetRealTimeRemaining=TimerDialogSetRealTimeRemaining
TimerDialogSetRealTimeRemaining="TimerDialogSetRealTimeRemaining(",~whichDialog,", ",~timeRemaining,")"
TimerDialogSetRealTimeRemainingHint="[NATIVE]  TimerDialogSetRealTimeRemaining takes timerdialog whichDialog, real timeRemaining returns nothing"


CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE]  CreateLeaderboard takes nothing returns leaderboard"


DestroyLeaderboard=DestroyLeaderboard
DestroyLeaderboard="DestroyLeaderboard(",~whichLeaderboard,")"
DestroyLeaderboardHint="[NATIVE]  DestroyLeaderboard takes leaderboard whichLeaderboard returns nothing"


LeaderboardDisplay=LeaderboardDisplay
LeaderboardDisplay="LeaderboardDisplay(",~whichLeaderboard,", ",~show,")"
LeaderboardDisplayHint="[NATIVE]  LeaderboardDisplay takes leaderboard whichLeaderboard, boolean show returns nothing"


LeaderboardGetItemCount=LeaderboardGetItemCount
LeaderboardGetItemCount="LeaderboardGetItemCount(",~whichLeaderboard,")"
LeaderboardGetItemCountHint="[NATIVE]  LeaderboardGetItemCount takes leaderboard whichLeaderboard returns integer"


LeaderboardSetSizeByItemCount=LeaderboardSetSizeByItemCount
LeaderboardSetSizeByItemCount="LeaderboardSetSizeByItemCount(",~whichLeaderboard,", ",~count,")"
LeaderboardSetSizeByItemCountHint="[NATIVE]  LeaderboardSetSizeByItemCount takes leaderboard whichLeaderboard, integer count returns nothing"


LeaderboardAddItem=LeaderboardAddItem
LeaderboardAddItem="LeaderboardAddItem(",~whichLeaderboard,", ",~label,", ",~value,", ",~whichPlayer,")"
LeaderboardAddItemHint="[NATIVE]  LeaderboardAddItem takes leaderboard whichLeaderboard, string label, integer value, player whichPlayer returns nothing"


LeaderboardRemoveItem=LeaderboardRemoveItem
LeaderboardRemoveItem="LeaderboardRemoveItem(",~whichLeaderboard,", ",~index,")"
LeaderboardRemoveItemHint="[NATIVE]  LeaderboardRemoveItem takes leaderboard whichLeaderboard, integer index returns nothing"


LeaderboardRemovePlayerItem=LeaderboardRemovePlayerItem
LeaderboardRemovePlayerItem="LeaderboardRemovePlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardRemovePlayerItemHint="[NATIVE]  LeaderboardRemovePlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns nothing"


LeaderboardClear=LeaderboardClear
LeaderboardClear="LeaderboardClear(",~whichLeaderboard,")"
LeaderboardClearHint="[NATIVE]  LeaderboardClear takes leaderboard whichLeaderboard returns nothing"


LeaderboardSortItemsByValue=LeaderboardSortItemsByValue
LeaderboardSortItemsByValue="LeaderboardSortItemsByValue(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByValueHint="[NATIVE]  LeaderboardSortItemsByValue takes leaderboard whichLeaderboard, boolean ascending returns nothing"


LeaderboardSortItemsByPlayer=LeaderboardSortItemsByPlayer
LeaderboardSortItemsByPlayer="LeaderboardSortItemsByPlayer(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByPlayerHint="[NATIVE]  LeaderboardSortItemsByPlayer takes leaderboard whichLeaderboard, boolean ascending returns nothing"


LeaderboardSortItemsByLabel=LeaderboardSortItemsByLabel
LeaderboardSortItemsByLabel="LeaderboardSortItemsByLabel(",~whichLeaderboard,", ",~ascending,")"
LeaderboardSortItemsByLabelHint="[NATIVE]  LeaderboardSortItemsByLabel takes leaderboard whichLeaderboard, boolean ascending returns nothing"


LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardHasPlayerItemHint="[NATIVE]  LeaderboardHasPlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns boolean"


LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardGetPlayerIndexHint="[NATIVE]  LeaderboardGetPlayerIndex takes leaderboard whichLeaderboard, player whichPlayer returns integer"


LeaderboardSetLabel=LeaderboardSetLabel
LeaderboardSetLabel="LeaderboardSetLabel(",~whichLeaderboard,", ",~label,")"
LeaderboardSetLabelHint="[NATIVE]  LeaderboardSetLabel takes leaderboard whichLeaderboard, string label returns nothing"


LeaderboardGetLabelText=LeaderboardGetLabelText
LeaderboardGetLabelText="LeaderboardGetLabelText(",~whichLeaderboard,")"
LeaderboardGetLabelTextHint="[NATIVE]  LeaderboardGetLabelText takes leaderboard whichLeaderboard returns string"


PlayerSetLeaderboard=PlayerSetLeaderboard
PlayerSetLeaderboard="PlayerSetLeaderboard(",~toPlayer,", ",~whichLeaderboard,")"
PlayerSetLeaderboardHint="[NATIVE]  PlayerSetLeaderboard takes player toPlayer, leaderboard whichLeaderboard returns nothing"


PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(",~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE]  PlayerGetLeaderboard takes player toPlayer returns leaderboard"


LeaderboardSetLabelColor=LeaderboardSetLabelColor
LeaderboardSetLabelColor="LeaderboardSetLabelColor(",~whichLeaderboard,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetLabelColorHint="[NATIVE]  LeaderboardSetLabelColor takes leaderboard whichLeaderboard, integer red, integer green, integer blue, integer alpha returns nothing"


LeaderboardSetValueColor=LeaderboardSetValueColor
LeaderboardSetValueColor="LeaderboardSetValueColor(",~whichLeaderboard,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetValueColorHint="[NATIVE]  LeaderboardSetValueColor takes leaderboard whichLeaderboard, integer red, integer green, integer blue, integer alpha returns nothing"


LeaderboardSetStyle=LeaderboardSetStyle
LeaderboardSetStyle="LeaderboardSetStyle(",~whichLeaderboard,", ",~showLabel,", ",~showNames,", ",~showValues,", ",~showIcons,")"
LeaderboardSetStyleHint="[NATIVE]  LeaderboardSetStyle takes leaderboard whichLeaderboard, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing"


LeaderboardSetItemValue=LeaderboardSetItemValue
LeaderboardSetItemValue="LeaderboardSetItemValue(",~whichLeaderboard,", ",~whichItem,", ",~val,")"
LeaderboardSetItemValueHint="[NATIVE]  LeaderboardSetItemValue takes leaderboard whichLeaderboard, integer whichItem, integer val returns nothing"


LeaderboardSetItemLabel=LeaderboardSetItemLabel
LeaderboardSetItemLabel="LeaderboardSetItemLabel(",~whichLeaderboard,", ",~whichItem,", ",~val,")"
LeaderboardSetItemLabelHint="[NATIVE]  LeaderboardSetItemLabel takes leaderboard whichLeaderboard, integer whichItem, string val returns nothing"


LeaderboardSetItemStyle=LeaderboardSetItemStyle
LeaderboardSetItemStyle="LeaderboardSetItemStyle(",~whichLeaderboard,", ",~whichItem,", ",~showLabel,", ",~showValue,", ",~showIcon,")"
LeaderboardSetItemStyleHint="[NATIVE]  LeaderboardSetItemStyle takes leaderboard whichLeaderboard, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon returns nothing"


LeaderboardSetItemLabelColor=LeaderboardSetItemLabelColor
LeaderboardSetItemLabelColor="LeaderboardSetItemLabelColor(",~whichLeaderboard,", ",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetItemLabelColorHint="[NATIVE]  LeaderboardSetItemLabelColor takes leaderboard whichLeaderboard, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing"


LeaderboardSetItemValueColor=LeaderboardSetItemValueColor
LeaderboardSetItemValueColor="LeaderboardSetItemValueColor(",~whichLeaderboard,", ",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
LeaderboardSetItemValueColorHint="[NATIVE]  LeaderboardSetItemValueColor takes leaderboard whichLeaderboard, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing"


CreateMultiboard=CreateMultiboard
CreateMultiboard="CreateMultiboard(",")"
CreateMultiboardHint="[NATIVE]  CreateMultiboard takes nothing returns multiboard"


MultiboardGetTitleText=MultiboardGetTitleText
MultiboardGetTitleText="MultiboardGetTitleText(",~whichMultiboard,")"
MultiboardGetTitleTextHint="[NATIVE]  MultiboardGetTitleText takes multiboard whichMultiboard returns string"


MultiboardGetRowCount=MultiboardGetRowCount
MultiboardGetRowCount="MultiboardGetRowCount(",~whichMultiboard,")"
MultiboardGetRowCountHint="[NATIVE]  MultiboardGetRowCount takes multiboard whichMultiboard returns integer"


MultiboardGetColumnCount=MultiboardGetColumnCount
MultiboardGetColumnCount="MultiboardGetColumnCount(",~whichMultiboard,")"
MultiboardGetColumnCountHint="[NATIVE]  MultiboardGetColumnCount takes multiboard whichMultiboard returns integer"


MultiboardGetItem=MultiboardGetItem
MultiboardGetItem="MultiboardGetItem(",~whichMultiboard,", ",~row,", ",~column,")"
MultiboardGetItemHint="[NATIVE]  MultiboardGetItem takes multiboard whichMultiboard, integer row, integer column returns multiboarditem"


MultiboardSuppressDisplay=MultiboardSuppressDisplay
MultiboardSuppressDisplay="MultiboardSuppressDisplay(",~flag,")"
MultiboardSuppressDisplayHint="[NATIVE]  MultiboardSuppressDisplay takes boolean flag returns nothing"


SetCameraPosition=SetCameraPosition
SetCameraPosition="SetCameraPosition(",~x,", ",~y,")"
SetCameraPositionHint="[NATIVE]  SetCameraPosition takes real x, real y returns nothing"


SetCameraQuickPosition=SetCameraQuickPosition
SetCameraQuickPosition="SetCameraQuickPosition(",~x,", ",~y,")"
SetCameraQuickPositionHint="[NATIVE]  SetCameraQuickPosition takes real x, real y returns nothing"


SetCameraBounds=SetCameraBounds
SetCameraBounds="SetCameraBounds(",~x1,", ",~y1,", ",~x2,", ",~y2,", ",~x3,", ",~y3,", ",~x4,", ",~y4,")"
SetCameraBoundsHint="[NATIVE]  SetCameraBounds takes real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4 returns nothing"


StopCamera=StopCamera
StopCamera="StopCamera(",")"
StopCameraHint="[NATIVE]  StopCamera takes nothing returns nothing"


SetCinematicCamera=SetCinematicCamera
SetCinematicCamera="SetCinematicCamera(",~cameraModelFile,")"
SetCinematicCameraHint="[NATIVE]  SetCinematicCamera takes string cameraModelFile returns nothing"


SetCameraRotateMode=SetCameraRotateMode
SetCameraRotateMode="SetCameraRotateMode(",~x,", ",~y,", ",~radiansToSweep,", ",~duration,")"
SetCameraRotateModeHint="[NATIVE]  SetCameraRotateMode takes real x, real y, real radiansToSweep, real duration returns nothing"


SetCameraField=SetCameraField
SetCameraField="SetCameraField(",~whichField,", ",~value,", ",~duration,")"
SetCameraFieldHint="[NATIVE]  SetCameraField takes camerafield whichField, real value, real duration returns nothing"


AdjustCameraField=AdjustCameraField
AdjustCameraField="AdjustCameraField(",~whichField,", ",~offset,", ",~duration,")"
AdjustCameraFieldHint="[NATIVE]  AdjustCameraField takes camerafield whichField, real offset, real duration returns nothing"


SetCameraTargetController=SetCameraTargetController
SetCameraTargetController="SetCameraTargetController(",~whichUnit,", ",~xoffset,", ",~yoffset,", ",~inheritOrientation,")"
SetCameraTargetControllerHint="[NATIVE]  SetCameraTargetController takes unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing"


SetCameraOrientController=SetCameraOrientController
SetCameraOrientController="SetCameraOrientController(",~whichUnit,", ",~xoffset,", ",~yoffset,")"
SetCameraOrientControllerHint="[NATIVE]  SetCameraOrientController takes unit whichUnit, real xoffset, real yoffset returns nothing"


CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE]  CreateCameraSetup takes nothing returns camerasetup"


CameraSetupSetField=CameraSetupSetField
CameraSetupSetField="CameraSetupSetField(",~whichCameraSetup,", ",~whichField,", ",~value,", ",~duration,")"
CameraSetupSetFieldHint="[NATIVE]  CameraSetupSetField takes camerasetup whichCameraSetup, camerafield whichField, real value, real duration returns nothing"


CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(",~whichCameraSetup,", ",~whichField,")"
CameraSetupGetFieldHint="[NATIVE]  CameraSetupGetField takes camerasetup whichCameraSetup, camerafield whichField returns real"


CameraSetupSetDestPosition=CameraSetupSetDestPosition
CameraSetupSetDestPosition="CameraSetupSetDestPosition(",~whichCameraSetup,", ",~x,", ",~y,", ",~duration,")"
CameraSetupSetDestPositionHint="[NATIVE]  CameraSetupSetDestPosition takes camerasetup whichCameraSetup, real x, real y, real duration returns nothing"


CameraSetupGetDestPositionLoc=CameraSetupGetDestPositionLoc
CameraSetupGetDestPositionLoc="CameraSetupGetDestPositionLoc(",~whichCameraSetup,")"
CameraSetupGetDestPositionLocHint="[NATIVE]  CameraSetupGetDestPositionLoc takes camerasetup whichCameraSetup returns location"


CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(",~whichCameraSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE]  CameraSetupGetDestPositionX takes camerasetup whichCameraSetup returns real"


CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(",~whichCameraSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE]  CameraSetupGetDestPositionY takes camerasetup whichCameraSetup returns real"


CameraSetupApply=CameraSetupApply
CameraSetupApply="CameraSetupApply(",~whichCameraSetup,", ",~doPan,", ",~panTimed,")"
CameraSetupApplyHint="[NATIVE]  CameraSetupApply takes camerasetup whichCameraSetup, boolean doPan, boolean panTimed returns nothing"


CameraSetupApplyWithZ=CameraSetupApplyWithZ
CameraSetupApplyWithZ="CameraSetupApplyWithZ(",~whichCameraSetup,", ",~zDestOffset,")"
CameraSetupApplyWithZHint="[NATIVE]  CameraSetupApplyWithZ takes camerasetup whichCameraSetup, real zDestOffset returns nothing"


CameraSetupApplyForceDuration=CameraSetupApplyForceDuration
CameraSetupApplyForceDuration="CameraSetupApplyForceDuration(",~whichCameraSetup,", ",~doPan,", ",~forceDuration,")"
CameraSetupApplyForceDurationHint="[NATIVE]  CameraSetupApplyForceDuration takes camerasetup whichCameraSetup, boolean doPan, real forceDuration returns nothing"


CameraSetupApplyForceDurationWithZ=CameraSetupApplyForceDurationWithZ
CameraSetupApplyForceDurationWithZ="CameraSetupApplyForceDurationWithZ(",~whichCameraSetup,", ",~zDestOffset,", ",~forceDuration,")"
CameraSetupApplyForceDurationWithZHint="[NATIVE]  CameraSetupApplyForceDurationWithZ takes camerasetup whichCameraSetup, real zDestOffset, real forceDuration returns nothing"


CameraSetTargetNoise=CameraSetTargetNoise
CameraSetTargetNoise="CameraSetTargetNoise(",~mag,", ",~velocity,")"
CameraSetTargetNoiseHint="[NATIVE]  CameraSetTargetNoise takes real mag, real velocity returns nothing"


CameraSetSourceNoise=CameraSetSourceNoise
CameraSetSourceNoise="CameraSetSourceNoise(",~mag,", ",~velocity,")"
CameraSetSourceNoiseHint="[NATIVE]  CameraSetSourceNoise takes real mag, real velocity returns nothing"


CameraSetTargetNoiseEx=CameraSetTargetNoiseEx
CameraSetTargetNoiseEx="CameraSetTargetNoiseEx(",~mag,", ",~velocity,", ",~vertOnly,")"
CameraSetTargetNoiseExHint="[NATIVE]  CameraSetTargetNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing"


CameraSetSourceNoiseEx=CameraSetSourceNoiseEx
CameraSetSourceNoiseEx="CameraSetSourceNoiseEx(",~mag,", ",~velocity,", ",~vertOnly,")"
CameraSetSourceNoiseExHint="[NATIVE]  CameraSetSourceNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing"


CameraSetSmoothingFactor=CameraSetSmoothingFactor
CameraSetSmoothingFactor="CameraSetSmoothingFactor(",~factor,")"
CameraSetSmoothingFactorHint="[NATIVE]  CameraSetSmoothingFactor takes real factor returns nothing"


SetCineFilterTexture=SetCineFilterTexture
SetCineFilterTexture="SetCineFilterTexture(",~filename,")"
SetCineFilterTextureHint="[NATIVE]  SetCineFilterTexture takes string filename returns nothing"


SetCineFilterBlendMode=SetCineFilterBlendMode
SetCineFilterBlendMode="SetCineFilterBlendMode(",~whichMode,")"
SetCineFilterBlendModeHint="[NATIVE]  SetCineFilterBlendMode takes blendmode whichMode returns nothing"


SetCineFilterTexMapFlags=SetCineFilterTexMapFlags
SetCineFilterTexMapFlags="SetCineFilterTexMapFlags(",~whichFlags,")"
SetCineFilterTexMapFlagsHint="[NATIVE]  SetCineFilterTexMapFlags takes texmapflags whichFlags returns nothing"


SetCineFilterStartUV=SetCineFilterStartUV
SetCineFilterStartUV="SetCineFilterStartUV(",~minu,", ",~minv,", ",~maxu,", ",~maxv,")"
SetCineFilterStartUVHint="[NATIVE]  SetCineFilterStartUV takes real minu, real minv, real maxu, real maxv returns nothing"


SetCineFilterEndUV=SetCineFilterEndUV
SetCineFilterEndUV="SetCineFilterEndUV(",~minu,", ",~minv,", ",~maxu,", ",~maxv,")"
SetCineFilterEndUVHint="[NATIVE]  SetCineFilterEndUV takes real minu, real minv, real maxu, real maxv returns nothing"


SetCineFilterStartColor=SetCineFilterStartColor
SetCineFilterStartColor="SetCineFilterStartColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetCineFilterStartColorHint="[NATIVE]  SetCineFilterStartColor takes integer red, integer green, integer blue, integer alpha returns nothing"


SetCineFilterEndColor=SetCineFilterEndColor
SetCineFilterEndColor="SetCineFilterEndColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetCineFilterEndColorHint="[NATIVE]  SetCineFilterEndColor takes integer red, integer green, integer blue, integer alpha returns nothing"


SetCineFilterDuration=SetCineFilterDuration
SetCineFilterDuration="SetCineFilterDuration(",~duration,")"
SetCineFilterDurationHint="[NATIVE]  SetCineFilterDuration takes real duration returns nothing"


DisplayCineFilter=DisplayCineFilter
DisplayCineFilter="DisplayCineFilter(",~flag,")"
DisplayCineFilterHint="[NATIVE]  DisplayCineFilter takes boolean flag returns nothing"


SetCinematicScene=SetCinematicScene
SetCinematicScene="SetCinematicScene(",~portraitUnitId,", ",~color,", ",~speakerTitle,", ",~text,", ",~sceneDuration,", ",~voiceoverDuration,")"
SetCinematicSceneHint="[NATIVE]  SetCinematicScene takes integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing"


EndCinematicScene=EndCinematicScene
EndCinematicScene="EndCinematicScene(",")"
EndCinematicSceneHint="[NATIVE]  EndCinematicScene takes nothing returns nothing"


ForceCinematicSubtitles=ForceCinematicSubtitles
ForceCinematicSubtitles="ForceCinematicSubtitles(",~flag,")"
ForceCinematicSubtitlesHint="[NATIVE]  ForceCinematicSubtitles takes boolean flag returns nothing"


NewSoundEnvironment=NewSoundEnvironment
NewSoundEnvironment="NewSoundEnvironment(",~environmentName,")"
NewSoundEnvironmentHint="[NATIVE]  NewSoundEnvironment takes string environmentName returns nothing"


CreateSound=CreateSound
CreateSound="CreateSound(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
CreateSoundHint="[NATIVE]  CreateSound takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"


CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE]  CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"


CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE]  CreateSoundFromLabel takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"


CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE]  CreateMIDISound takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"


SetSoundParamsFromLabel=SetSoundParamsFromLabel
SetSoundParamsFromLabel="SetSoundParamsFromLabel(",~soundHandle,", ",~soundLabel,")"
SetSoundParamsFromLabelHint="[NATIVE]  SetSoundParamsFromLabel takes sound soundHandle, string soundLabel returns nothing"


SetSoundDistanceCutoff=SetSoundDistanceCutoff
SetSoundDistanceCutoff="SetSoundDistanceCutoff(",~soundHandle,", ",~cutoff,")"
SetSoundDistanceCutoffHint="[NATIVE]  SetSoundDistanceCutoff takes sound soundHandle, real cutoff returns nothing"


SetSoundChannel=SetSoundChannel
SetSoundChannel="SetSoundChannel(",~soundHandle,", ",~channel,")"
SetSoundChannelHint="[NATIVE]  SetSoundChannel takes sound soundHandle, integer channel returns nothing"


SetSoundVolume=SetSoundVolume
SetSoundVolume="SetSoundVolume(",~soundHandle,", ",~volume,")"
SetSoundVolumeHint="[NATIVE]  SetSoundVolume takes sound soundHandle, integer volume returns nothing"


SetSoundPitch=SetSoundPitch
SetSoundPitch="SetSoundPitch(",~soundHandle,", ",~pitch,")"
SetSoundPitchHint="[NATIVE]  SetSoundPitch takes sound soundHandle, real pitch returns nothing"


SetSoundPlayPosition=SetSoundPlayPosition
SetSoundPlayPosition="SetSoundPlayPosition(",~soundHandle,", ",~millisecs,")"
SetSoundPlayPositionHint="[NATIVE]  SetSoundPlayPosition takes sound soundHandle, integer millisecs returns nothing"


SetSoundConeAngles=SetSoundConeAngles
SetSoundConeAngles="SetSoundConeAngles(",~soundHandle,", ",~inside,", ",~outside,", ",~outsideVolume,")"
SetSoundConeAnglesHint="[NATIVE]  SetSoundConeAngles takes sound soundHandle, real inside, real outside, integer outsideVolume returns nothing"


SetSoundConeOrientation=SetSoundConeOrientation
SetSoundConeOrientation="SetSoundConeOrientation(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundConeOrientationHint="[NATIVE]  SetSoundConeOrientation takes sound soundHandle, real x, real y, real z returns nothing"


SetSoundPosition=SetSoundPosition
SetSoundPosition="SetSoundPosition(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundPositionHint="[NATIVE]  SetSoundPosition takes sound soundHandle, real x, real y, real z returns nothing"


SetSoundVelocity=SetSoundVelocity
SetSoundVelocity="SetSoundVelocity(",~soundHandle,", ",~x,", ",~y,", ",~z,")"
SetSoundVelocityHint="[NATIVE]  SetSoundVelocity takes sound soundHandle, real x, real y, real z returns nothing"


StartSound=StartSound
StartSound="StartSound(",~soundHandle,")"
StartSoundHint="[NATIVE]  StartSound takes sound soundHandle returns nothing"


StopSound=StopSound
StopSound="StopSound(",~soundHandle,", ",~killWhenDone,", ",~fadeOut,")"
StopSoundHint="[NATIVE]  StopSound takes sound soundHandle, boolean killWhenDone, boolean fadeOut returns nothing"


KillSoundWhenDone=KillSoundWhenDone
KillSoundWhenDone="KillSoundWhenDone(",~soundHandle,")"
KillSoundWhenDoneHint="[NATIVE]  KillSoundWhenDone takes sound soundHandle returns nothing"


SetMapMusic=SetMapMusic
SetMapMusic="SetMapMusic(",~musicName,", ",~random,", ",~index,")"
SetMapMusicHint="[NATIVE]  SetMapMusic takes string musicName, boolean random, integer index returns nothing"


ClearMapMusic=ClearMapMusic
ClearMapMusic="ClearMapMusic(",")"
ClearMapMusicHint="[NATIVE]  ClearMapMusic takes nothing returns nothing"


PlayMusic=PlayMusic
PlayMusic="PlayMusic(",~musicName,")"
PlayMusicHint="[NATIVE]  PlayMusic takes string musicName returns nothing"


PlayMusicEx=PlayMusicEx
PlayMusicEx="PlayMusicEx(",~musicName,", ",~frommsecs,", ",~fadeinmsecs,")"
PlayMusicExHint="[NATIVE]  PlayMusicEx takes string musicName, integer frommsecs, integer fadeinmsecs returns nothing"


StopMusic=StopMusic
StopMusic="StopMusic(",~fadeOut,")"
StopMusicHint="[NATIVE]  StopMusic takes boolean fadeOut returns nothing"


ResumeMusic=ResumeMusic
ResumeMusic="ResumeMusic(",")"
ResumeMusicHint="[NATIVE]  ResumeMusic takes nothing returns nothing"


PlayThematicMusic=PlayThematicMusic
PlayThematicMusic="PlayThematicMusic(",~musicFileName,")"
PlayThematicMusicHint="[NATIVE]  PlayThematicMusic takes string musicFileName returns nothing"


PlayThematicMusicEx=PlayThematicMusicEx
PlayThematicMusicEx="PlayThematicMusicEx(",~musicFileName,", ",~frommsecs,")"
PlayThematicMusicExHint="[NATIVE]  PlayThematicMusicEx takes string musicFileName, integer frommsecs returns nothing"


EndThematicMusic=EndThematicMusic
EndThematicMusic="EndThematicMusic(",")"
EndThematicMusicHint="[NATIVE]  EndThematicMusic takes nothing returns nothing"


SetMusicVolume=SetMusicVolume
SetMusicVolume="SetMusicVolume(",~volume,")"
SetMusicVolumeHint="[NATIVE]  SetMusicVolume takes integer volume returns nothing"


SetMusicPlayPosition=SetMusicPlayPosition
SetMusicPlayPosition="SetMusicPlayPosition(",~millisecs,")"
SetMusicPlayPositionHint="[NATIVE]  SetMusicPlayPosition takes integer millisecs returns nothing"


SetThematicMusicPlayPosition=SetThematicMusicPlayPosition
SetThematicMusicPlayPosition="SetThematicMusicPlayPosition(",~millisecs,")"
SetThematicMusicPlayPositionHint="[NATIVE]  SetThematicMusicPlayPosition takes integer millisecs returns nothing"


SetSoundDuration=SetSoundDuration
SetSoundDuration="SetSoundDuration(",~soundHandle,", ",~duration,")"
SetSoundDurationHint="[NATIVE]  SetSoundDuration takes sound soundHandle, integer duration returns nothing"


VolumeGroupSetVolume=VolumeGroupSetVolume
VolumeGroupSetVolume="VolumeGroupSetVolume(",~vgroup,", ",~scale,")"
VolumeGroupSetVolumeHint="[NATIVE]  VolumeGroupSetVolume takes volumegroup vgroup, real scale returns nothing"


VolumeGroupReset=VolumeGroupReset
VolumeGroupReset="VolumeGroupReset(",")"
VolumeGroupResetHint="[NATIVE]  VolumeGroupReset takes nothing returns nothing"


RegisterStackedSound=RegisterStackedSound
RegisterStackedSound="RegisterStackedSound(",~soundHandle,", ",~byPosition,", ",~rectwidth,", ",~rectheight,")"
RegisterStackedSoundHint="[NATIVE]  RegisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing"


UnregisterStackedSound=UnregisterStackedSound
UnregisterStackedSound="UnregisterStackedSound(",~soundHandle,", ",~byPosition,", ",~rectwidth,", ",~rectheight,")"
UnregisterStackedSoundHint="[NATIVE]  UnregisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing"


AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(",~whichRect,", ",~effectID,")"
AddWeatherEffectHint="[NATIVE]  AddWeatherEffect takes rect whichRect, integer effectID returns weathereffect"


RemoveWeatherEffect=RemoveWeatherEffect
RemoveWeatherEffect="RemoveWeatherEffect(",~whichEffect,")"
RemoveWeatherEffectHint="[NATIVE]  RemoveWeatherEffect takes weathereffect whichEffect returns nothing"


TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~permanent,")"
TerrainDeformCraterHint="[NATIVE]  TerrainDeformCrater takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation"


TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~count,", ",~spaceWaves,", ",~timeWaves,", ",~radiusStartPct,", ",~limitNeg,")"
TerrainDeformRippleHint="[NATIVE]  TerrainDeformRipple takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation"


TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(",~x,", ",~y,", ",~dirX,", ",~dirY,", ",~distance,", ",~speed,", ",~radius,", ",~depth,", ",~trailTime,", ",~count,")"
TerrainDeformWaveHint="[NATIVE]  TerrainDeformWave takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation"


TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(",~x,", ",~y,", ",~radius,", ",~minDelta,", ",~maxDelta,", ",~duration,", ",~updateInterval,")"
TerrainDeformRandomHint="[NATIVE]  TerrainDeformRandom takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation"


TerrainDeformStop=TerrainDeformStop
TerrainDeformStop="TerrainDeformStop(",~deformation,", ",~duration,")"
TerrainDeformStopHint="[NATIVE]  TerrainDeformStop takes terraindeformation deformation, integer duration returns nothing"


AddSpecialEffect=AddSpecialEffect
AddSpecialEffect="AddSpecialEffect(",~modelName,", ",~x,", ",~y,")"
AddSpecialEffectHint="[NATIVE]  AddSpecialEffect takes string modelName, real x, real y returns effect"


AddSpecialEffectLoc=AddSpecialEffectLoc
AddSpecialEffectLoc="AddSpecialEffectLoc(",~modelName,", ",~where,")"
AddSpecialEffectLocHint="[NATIVE]  AddSpecialEffectLoc takes string modelName, location where returns effect"


AddSpecialEffectTarget=AddSpecialEffectTarget
AddSpecialEffectTarget="AddSpecialEffectTarget(",~modelName,", ",~targetWidget,", ",~attachPointName,")"
AddSpecialEffectTargetHint="[NATIVE]  AddSpecialEffectTarget takes string modelName, widget targetWidget, string attachPointName returns effect"


DestroyEffect=DestroyEffect
DestroyEffect="DestroyEffect(",~whichEffect,")"
DestroyEffectHint="[NATIVE]  DestroyEffect takes effect whichEffect returns nothing"


AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(",~abilityString,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectHint="[NATIVE]  AddSpellEffect takes string abilityString, effecttype whichEffectType, real x, real y returns effect"


AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(",~abilityString,", ",~whichEffectType,", ",~where,")"
AddSpellEffectLocHint="[NATIVE]  AddSpellEffectLoc takes string abilityString, effecttype whichEffectType, location where returns effect"


AddSpellEffectById=AddSpellEffectById
AddSpellEffectById="AddSpellEffectById(",~abilCode,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectByIdHint="[NATIVE]  AddSpellEffectById takes integer abilCode, effecttype whichEffectType, real x, real y returns effect"


AddSpellEffectTarget=AddSpellEffectTarget
AddSpellEffectTarget="AddSpellEffectTarget(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetHint="[NATIVE]  AddSpellEffectTarget takes string modelName, effecttype whichEffectType, widget targetWidget, string attachPoint returns effect"


AddLightning=AddLightning
AddLightning="AddLightning(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
AddLightningHint="[NATIVE]  AddLightning takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning"


DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(",~whichBolt,")"
DestroyLightningHint="[NATIVE]  DestroyLightning takes lightning whichBolt returns boolean"


MoveLightning=MoveLightning
MoveLightning="MoveLightning(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
MoveLightningHint="[NATIVE]  MoveLightning takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean"


SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(",~whichBolt,", ",~r,", ",~g,", ",~b,", ",~a,")"
SetLightningColorHint="[NATIVE]  SetLightningColor takes lightning whichBolt, real r, real g, real b, real a returns boolean"


SetWaterBaseColor=SetWaterBaseColor
SetWaterBaseColor="SetWaterBaseColor(",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWaterBaseColorHint="[NATIVE]  SetWaterBaseColor takes integer red, integer green, integer blue, integer alpha returns nothing"


SetTerrainType=SetTerrainType
SetTerrainType="SetTerrainType(",~x,", ",~y,", ",~terrainType,", ",~variation,", ",~area,", ",~shape,")"
SetTerrainTypeHint="[NATIVE]  SetTerrainType takes real x, real y, integer terrainType, integer variation, integer area, integer shape returns nothing"


SetTerrainPathable=SetTerrainPathable
SetTerrainPathable="SetTerrainPathable(",~x,", ",~y,", ",~t,", ",~flag,")"
SetTerrainPathableHint="[NATIVE]  SetTerrainPathable takes real x, real y, pathingtype t, boolean flag returns nothing"


CreateImage=CreateImage
CreateImage="CreateImage(",~file,", ",~sizeX,", ",~sizeY,", ",~sizeZ,", ",~posX,", ",~posY,", ",~posZ,", ",~originX,", ",~originY,", ",~originZ,", ",~imageType,")"
CreateImageHint="[NATIVE]  CreateImage takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image"


ShowImage=ShowImage
ShowImage="ShowImage(",~whichImage,", ",~flag,")"
ShowImageHint="[NATIVE]  ShowImage takes image whichImage, boolean flag returns nothing"


SetImagePosition=SetImagePosition
SetImagePosition="SetImagePosition(",~whichImage,", ",~x,", ",~y,", ",~z,")"
SetImagePositionHint="[NATIVE]  SetImagePosition takes image whichImage, real x, real y, real z returns nothing"


SetImageColor=SetImageColor
SetImageColor="SetImageColor(",~whichImage,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetImageColorHint="[NATIVE]  SetImageColor takes image whichImage, integer red, integer green, integer blue, integer alpha returns nothing"


CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(",~x,", ",~y,", ",~name,", ",~red,", ",~green,", ",~blue,", ",~alpha,", ",~forcePaused,", ",~noBirthTime,")"
CreateUbersplatHint="[NATIVE]  CreateUbersplat takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat"


ShowUbersplat=ShowUbersplat
ShowUbersplat="ShowUbersplat(",~whichSplat,", ",~flag,")"
ShowUbersplatHint="[NATIVE]  ShowUbersplat takes ubersplat whichSplat, boolean flag returns nothing"


SetBlight=SetBlight
SetBlight="SetBlight(",~whichPlayer,", ",~x,", ",~y,", ",~radius,", ",~addBlight,")"
SetBlightHint="[NATIVE]  SetBlight takes player whichPlayer, real x, real y, real radius, boolean addBlight returns nothing"


SetBlightRect=SetBlightRect
SetBlightRect="SetBlightRect(",~whichPlayer,", ",~whichRect,", ",~addBlight,")"
SetBlightRectHint="[NATIVE]  SetBlightRect takes player whichPlayer, rect whichRect, boolean addBlight returns nothing"


SetBlightPoint=SetBlightPoint
SetBlightPoint="SetBlightPoint(",~whichPlayer,", ",~x,", ",~y,", ",~addBlight,")"
SetBlightPointHint="[NATIVE]  SetBlightPoint takes player whichPlayer, real x, real y, boolean addBlight returns nothing"


SetBlightLoc=SetBlightLoc
SetBlightLoc="SetBlightLoc(",~whichPlayer,", ",~whichLocation,", ",~radius,", ",~addBlight,")"
SetBlightLocHint="[NATIVE]  SetBlightLoc takes player whichPlayer, location whichLocation, real radius, boolean addBlight returns nothing"


CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
CreateBlightedGoldmineHint="[NATIVE]  CreateBlightedGoldmine takes player whichPlayer, real x, real y, real facing returns unit"


SetDoodadAnimation=SetDoodadAnimation
SetDoodadAnimation="SetDoodadAnimation(",~x,", ",~y,", ",~radius,", ",~doodadID,", ",~nearestOnly,", ",~animName,", ",~animRandom,")"
SetDoodadAnimationHint="[NATIVE]  SetDoodadAnimation takes real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom returns nothing"


SetDoodadAnimationRect=SetDoodadAnimationRect
SetDoodadAnimationRect="SetDoodadAnimationRect(",~whichRect,", ",~doodadID,", ",~animName,", ",~animRandom,")"
SetDoodadAnimationRectHint="[NATIVE]  SetDoodadAnimationRect takes rect whichRect, integer doodadID, string animName, boolean animRandom returns nothing"


PauseCompAI=PauseCompAI
PauseCompAI="PauseCompAI(",~whichPlayer,", ",~pause,")"
PauseCompAIHint="[NATIVE]  PauseCompAI takes player whichPlayer, boolean pause returns nothing"


Cheat=Cheat
Cheat="Cheat(",~cheatStr,")"
CheatHint="[NATIVE]  Cheat takes string cheatStr returns nothing"


PreloadStart=PreloadStart
PreloadStart="PreloadStart(",")"
PreloadStartHint="[NATIVE]  PreloadStart takes nothing returns nothing"


PreloadRefresh=PreloadRefresh
PreloadRefresh="PreloadRefresh(",")"
PreloadRefreshHint="[NATIVE]  PreloadRefresh takes nothing returns nothing"


PreloadEndEx=PreloadEndEx
PreloadEndEx="PreloadEndEx(",")"
PreloadEndExHint="[NATIVE]  PreloadEndEx takes nothing returns nothing"


PreloadGenClear=PreloadGenClear
PreloadGenClear="PreloadGenClear(",")"
PreloadGenClearHint="[NATIVE]  PreloadGenClear takes nothing returns nothing"


PreloadGenStart=PreloadGenStart
PreloadGenStart="PreloadGenStart(",")"
PreloadGenStartHint="[NATIVE]  PreloadGenStart takes nothing returns nothing"


PreloadGenEnd=PreloadGenEnd
PreloadGenEnd="PreloadGenEnd(",~filename,")"
PreloadGenEndHint="[NATIVE]  PreloadGenEnd takes string filename returns nothing"


RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(",~parentScriptFile,", ",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptExHint="[UjAPI]  RunJassScriptEx takes string parentScriptFile, string helperScriptFile, string jassScriptFile returns jassthread"


RunJassScript=RunJassScript
RunJassScript="RunJassScript(",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptHint="[UjAPI]  RunJassScript takes string helperScriptFile, string jassScriptFile returns jassthread"


RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(",~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI]  RunJassScriptSimple takes string jassScriptFile returns jassthread"


StopJassThread=StopJassThread
StopJassThread="StopJassThread(",~thread,")"
StopJassThreadHint="[UjAPI]  StopJassThread takes jassthread thread returns boolean"


SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalIntegerHint="[UjAPI]  SetJassGlobalInteger takes jassthread thread, string variableName, integer value returns boolean"


SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalRealHint="[UjAPI]  SetJassGlobalReal takes jassthread thread, string variableName, real value returns boolean"


SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalHandleHint="[UjAPI]  SetJassGlobalHandle takes jassthread thread, string variableName, handle value returns boolean"


SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalBooleanHint="[UjAPI]  SetJassGlobalBoolean takes jassthread thread, string variableName, boolean value returns boolean"


SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(",~variableName,", ",~value,")"
SetJassLocalIntegerHint="[UjAPI]  SetJassLocalInteger takes string variableName, integer value returns boolean"


SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(",~variableName,", ",~value,")"
SetJassLocalRealHint="[UjAPI]  SetJassLocalReal takes string variableName, real value returns boolean"


SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(",~variableName,", ",~value,")"
SetJassLocalHandleHint="[UjAPI]  SetJassLocalHandle takes string variableName, handle value returns boolean"


SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(",~variableName,", ",~value,")"
SetJassLocalBooleanHint="[UjAPI]  SetJassLocalBoolean takes string variableName, boolean value returns boolean"


EnableOperationLimit=EnableOperationLimit
EnableOperationLimit="EnableOperationLimit(",~enable,")"
EnableOperationLimitHint="[UjAPI]  EnableOperationLimit takes boolean enable returns nothing"


SetOperationLimit=SetOperationLimit
SetOperationLimit="SetOperationLimit(",~opLimit,")"
SetOperationLimitHint="[UjAPI]  SetOperationLimit takes integer opLimit returns nothing"


ExecuteCode=ExecuteCode
ExecuteCode="ExecuteCode(",~c,")"
ExecuteCodeHint="[UjAPI]  ExecuteCode takes code c returns nothing"


ExecuteFuncEx=ExecuteFuncEx
ExecuteFuncEx="ExecuteFuncEx(",~funcName,")"
ExecuteFuncExHint="[UjAPI]  ExecuteFuncEx takes string funcName returns nothing"


ConsoleEnable=ConsoleEnable
ConsoleEnable="ConsoleEnable(",~enable,")"
ConsoleEnableHint="[UjAPI]  ConsoleEnable takes boolean enable returns nothing"


ConsolePrint=ConsolePrint
ConsolePrint="ConsolePrint(",~s,")"
ConsolePrintHint="[UjAPI]  ConsolePrint takes string s returns nothing"


ConsolePause=ConsolePause
ConsolePause="ConsolePause(",~s,")"
ConsolePauseHint="[UjAPI]  ConsolePause takes string s returns nothing"


TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(",~filePath,")"
TextFileOpenHint="[UjAPI]  TextFileOpen takes string filePath returns textfilehandle"


TextFileExists=TextFileExists
TextFileExists="TextFileExists(",~filePath,")"
TextFileExistsHint="[UjAPI]  TextFileExists takes string filePath returns boolean"


TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(",~filePath,")"
TextFileGetSizeByPathHint="[UjAPI]  TextFileGetSizeByPath takes string filePath returns integer"


TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(",~whichTextFile,")"
TextFileGetSizeHint="[UjAPI]  TextFileGetSize takes textfilehandle whichTextFile returns integer"


TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(",~whichTextFile,")"
TextFileGetPathHint="[UjAPI]  TextFileGetPath takes textfilehandle whichTextFile returns string"


TextFileClose=TextFileClose
TextFileClose="TextFileClose(",~whichTextFile,")"
TextFileCloseHint="[UjAPI]  TextFileClose takes textfilehandle whichTextFile returns nothing"


TextFileClear=TextFileClear
TextFileClear="TextFileClear(",~whichTextFile,")"
TextFileClearHint="[UjAPI]  TextFileClear takes textfilehandle whichTextFile returns nothing"


TextFileDelete=TextFileDelete
TextFileDelete="TextFileDelete(",~whichTextFile,")"
TextFileDeleteHint="[UjAPI]  TextFileDelete takes textfilehandle whichTextFile returns nothing"


TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(",~whichTextFile,")"
TextFileCountLinesHint="[UjAPI]  TextFileCountLines takes textfilehandle whichTextFile returns integer"


TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(",~whichTextFile,", ",~lineNumber,")"
TextFileReadLineHint="[UjAPI]  TextFileReadLine takes textfilehandle whichTextFile, integer lineNumber returns string"


TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(",~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI]  TextFileReadAllLines takes textfilehandle whichTextFile returns string"


TextFileRead=TextFileRead
TextFileRead="TextFileRead(",~whichTextFile,")"
TextFileReadHint="[UjAPI]  TextFileRead takes textfilehandle whichTextFile returns string"


TextFileWriteLine=TextFileWriteLine
TextFileWriteLine="TextFileWriteLine(",~whichTextFile,", ",~text,")"
TextFileWriteLineHint="[UjAPI]  TextFileWriteLine takes textfilehandle whichTextFile, string text returns nothing"


SetVisionMax=SetVisionMax
SetVisionMax="SetVisionMax(",~value,")"
SetVisionMaxHint="[UjAPI]  SetVisionMax takes real value returns nothing"


SetAttackSpeedMinBonus=SetAttackSpeedMinBonus
SetAttackSpeedMinBonus="SetAttackSpeedMinBonus(",~value,")"
SetAttackSpeedMinBonusHint="[UjAPI]  SetAttackSpeedMinBonus takes real value returns nothing"


SetAttackSpeedMaxBonus=SetAttackSpeedMaxBonus
SetAttackSpeedMaxBonus="SetAttackSpeedMaxBonus(",~value,")"
SetAttackSpeedMaxBonusHint="[UjAPI]  SetAttackSpeedMaxBonus takes real value returns nothing"


SetMoveSpeedMinAllowed=SetMoveSpeedMinAllowed
SetMoveSpeedMinAllowed="SetMoveSpeedMinAllowed(",~value,")"
SetMoveSpeedMinAllowedHint="[UjAPI]  SetMoveSpeedMinAllowed takes real value returns nothing"


SetMoveSpeedMaxAllowed=SetMoveSpeedMaxAllowed
SetMoveSpeedMaxAllowed="SetMoveSpeedMaxAllowed(",~value,")"
SetMoveSpeedMaxAllowedHint="[UjAPI]  SetMoveSpeedMaxAllowed takes real value returns nothing"


EnableSelection=EnableSelection
EnableSelection="EnableSelection(",~enable,")"
EnableSelectionHint="[UjAPI]  EnableSelection takes boolean enable returns nothing"


EnableSelectionCircle=EnableSelectionCircle
EnableSelectionCircle="EnableSelectionCircle(",~enable,")"
EnableSelectionCircleHint="[UjAPI]  EnableSelectionCircle takes boolean enable returns nothing"


EnableTargetIndicator=EnableTargetIndicator
EnableTargetIndicator="EnableTargetIndicator(",~enable,")"
EnableTargetIndicatorHint="[UjAPI]  EnableTargetIndicator takes boolean enable returns nothing"


EnableRenderStage=EnableRenderStage
EnableRenderStage="EnableRenderStage(",~renderStage,", ",~enable,")"
EnableRenderStageHint="[UjAPI]  EnableRenderStage takes renderstage renderStage, boolean enable returns nothing"


EnableStatbar=EnableStatbar
EnableStatbar="EnableStatbar(",~enable,")"
EnableStatbarHint="[UjAPI]  EnableStatbar takes boolean enable returns nothing"


SetMapFogZ=SetMapFogZ
SetMapFogZ="SetMapFogZ(",~z,")"
SetMapFogZHint="[UjAPI]  SetMapFogZ takes real z returns nothing"


SetMapFogColour=SetMapFogColour
SetMapFogColour="SetMapFogColour(",~colour,")"
SetMapFogColourHint="[UjAPI]  SetMapFogColour takes integer colour returns nothing"


TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(",~whichTrigger,")"
TriggerCountEventsHint="[UjAPI]  TriggerCountEvents takes trigger whichTrigger returns integer"


TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(",~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI]  TriggerCountConditions takes trigger whichTrigger returns integer"


TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(",~whichTrigger,")"
TriggerCountActionsHint="[UjAPI]  TriggerCountActions takes trigger whichTrigger returns integer"


TriggerRemoveEvent=TriggerRemoveEvent
TriggerRemoveEvent="TriggerRemoveEvent(",~whichTrigger,", ",~whichEvent,")"
TriggerRemoveEventHint="[UjAPI]  TriggerRemoveEvent takes trigger whichTrigger, event whichEvent returns nothing"


TriggerRemoveEventId=TriggerRemoveEventId
TriggerRemoveEventId="TriggerRemoveEventId(",~whichTrigger,", ",~whichEventId,", ",~removeAllOccurences,")"
TriggerRemoveEventIdHint="[UjAPI]  TriggerRemoveEventId takes trigger whichTrigger, eventid whichEventId, boolean removeAllOccurences returns nothing"


TriggerClearEvents=TriggerClearEvents
TriggerClearEvents="TriggerClearEvents(",~whichTrigger,")"
TriggerClearEventsHint="[UjAPI]  TriggerClearEvents takes trigger whichTrigger returns nothing"


TriggerClear=TriggerClear
TriggerClear="TriggerClear(",~whichTrigger,")"
TriggerClearHint="[UjAPI]  TriggerClear takes trigger whichTrigger returns nothing"


RemoveSound=RemoveSound
RemoveSound="RemoveSound(",~whichSound,")"
RemoveSoundHint="[UjAPI]  RemoveSound takes sound whichSound returns nothing"


ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
ReplaceSoundHint="[UjAPI]  ReplaceSound takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"


ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI]  ReplaceSoundWithLabel takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"


ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(",~whichSound,", ",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI]  ReplaceSoundFromLabel takes sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"


ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(",~whichSound,", ",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI]  ReplaceMIDISound takes sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"


BenchmarkStart=BenchmarkStart
BenchmarkStart="BenchmarkStart(",")"
BenchmarkStartHint="[UjAPI]  BenchmarkStart takes nothing returns nothing"


BenchmarkEnd=BenchmarkEnd
BenchmarkEnd="BenchmarkEnd(",")"
BenchmarkEndHint="[UjAPI]  BenchmarkEnd takes nothing returns nothing"


BenchmarkReset=BenchmarkReset
BenchmarkReset="BenchmarkReset(",")"
BenchmarkResetHint="[UjAPI]  BenchmarkReset takes nothing returns nothing"


BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(",~benchType,")"
BenchmarkGetElapsedHint="[UjAPI]  BenchmarkGetElapsed takes integer benchType returns string"


SetScreenFieldOfView=SetScreenFieldOfView
SetScreenFieldOfView="SetScreenFieldOfView(",~fov,")"
SetScreenFieldOfViewHint="[UjAPI]  SetScreenFieldOfView takes real fov returns nothing"


SetWidescreenState=SetWidescreenState
SetWidescreenState="SetWidescreenState(",~flag,")"
SetWidescreenStateHint="[UjAPI]  SetWidescreenState takes boolean flag returns nothing"


SetCursorEnabled=SetCursorEnabled
SetCursorEnabled="SetCursorEnabled(",~enable,")"
SetCursorEnabledHint="[UjAPI]  SetCursorEnabled takes boolean enable returns nothing"


SetCursorAnimationLocked=SetCursorAnimationLocked
SetCursorAnimationLocked="SetCursorAnimationLocked(",~isLock,")"
SetCursorAnimationLockedHint="[UjAPI]  SetCursorAnimationLocked takes boolean isLock returns nothing"


SetMouseScreenX=SetMouseScreenX
SetMouseScreenX="SetMouseScreenX(",~x,")"
SetMouseScreenXHint="[UjAPI]  SetMouseScreenX takes real x returns nothing"


SetMouseScreenY=SetMouseScreenY
SetMouseScreenY="SetMouseScreenY(",~y,")"
SetMouseScreenYHint="[UjAPI]  SetMouseScreenY takes real y returns nothing"


SetMouseScreenPosition=SetMouseScreenPosition
SetMouseScreenPosition="SetMouseScreenPosition(",~x,", ",~y,")"
SetMouseScreenPositionHint="[UjAPI]  SetMouseScreenPosition takes real x, real y returns nothing"


SetMouseScreenPixelX=SetMouseScreenPixelX
SetMouseScreenPixelX="SetMouseScreenPixelX(",~x,")"
SetMouseScreenPixelXHint="[UjAPI]  SetMouseScreenPixelX takes integer x returns nothing"


SetMouseScreenPixelY=SetMouseScreenPixelY
SetMouseScreenPixelY="SetMouseScreenPixelY(",~y,")"
SetMouseScreenPixelYHint="[UjAPI]  SetMouseScreenPixelY takes integer y returns nothing"


SetMouseScreenPixelPosition=SetMouseScreenPixelPosition
SetMouseScreenPixelPosition="SetMouseScreenPixelPosition(",~x,", ",~y,")"
SetMouseScreenPixelPositionHint="[UjAPI]  SetMouseScreenPixelPosition takes integer x, integer y returns nothing"


DisplayWarningMessage=DisplayWarningMessage
DisplayWarningMessage="DisplayWarningMessage(",~toPlayer,", ",~message,")"
DisplayWarningMessageHint="[UjAPI]  DisplayWarningMessage takes player toPlayer, string message returns nothing"


DisplayTimedWarningMessage=DisplayTimedWarningMessage
DisplayTimedWarningMessage="DisplayTimedWarningMessage(",~toPlayer,", ",~duration,", ",~message,")"
DisplayTimedWarningMessageHint="[UjAPI]  DisplayTimedWarningMessage takes player toPlayer, real duration, string message returns nothing"


DisplayChatMessageEx=DisplayChatMessageEx
DisplayChatMessageEx="DisplayChatMessageEx(",~whichPlayer,", ",~recipient,", ",~duration,", ",~addToLog,", ",~message,")"
DisplayChatMessageExHint="[UjAPI]  DisplayChatMessageEx takes player whichPlayer, integer recipient, real duration, boolean addToLog, string message returns nothing"


DisplayChatMessage=DisplayChatMessage
DisplayChatMessage="DisplayChatMessage(",~whichPlayer,", ",~recipient,", ",~message,")"
DisplayChatMessageHint="[UjAPI]  DisplayChatMessage takes player whichPlayer, integer recipient, string message returns nothing"


DisplayTimedChatMessage=DisplayTimedChatMessage
DisplayTimedChatMessage="DisplayTimedChatMessage(",~whichPlayer,", ",~recipient,", ",~duration,", ",~message,")"
DisplayTimedChatMessageHint="[UjAPI]  DisplayTimedChatMessage takes player whichPlayer, integer recipient, real duration, string message returns nothing"


EnumHandlesOfType=EnumHandlesOfType
EnumHandlesOfType="EnumHandlesOfType(",~handleBaseTypeId,", ",~filter,", ",~handlerFunc,")"
EnumHandlesOfTypeHint="[UjAPI]  EnumHandlesOfType takes integer handleBaseTypeId, boolexpr filter, code handlerFunc returns nothing"


DestroyQuestItem=DestroyQuestItem
DestroyQuestItem="DestroyQuestItem(",~whichQuestItem,")"
DestroyQuestItemHint="[UjAPI]  DestroyQuestItem takes questitem whichQuestItem returns nothing"


AntiHackEnable=AntiHackEnable
AntiHackEnable="AntiHackEnable(",~enable,")"
AntiHackEnableHint="[UjAPI]  AntiHackEnable takes boolean enable returns nothing"


AntiHackEnableProcessCheck=AntiHackEnableProcessCheck
AntiHackEnableProcessCheck="AntiHackEnableProcessCheck(",~enable,")"
AntiHackEnableProcessCheckHint="[UjAPI]  AntiHackEnableProcessCheck takes boolean enable returns nothing"


AntiHackEnableModuleCheck=AntiHackEnableModuleCheck
AntiHackEnableModuleCheck="AntiHackEnableModuleCheck(",~enable,")"
AntiHackEnableModuleCheckHint="[UjAPI]  AntiHackEnableModuleCheck takes boolean enable returns nothing"


AntiHackEnableKick=AntiHackEnableKick
AntiHackEnableKick="AntiHackEnableKick(",~enable,")"
AntiHackEnableKickHint="[UjAPI]  AntiHackEnableKick takes boolean enable returns nothing"


AntiHackEnableEx=AntiHackEnableEx
AntiHackEnableEx="AntiHackEnableEx(",~enable,", ",~isModuleCheck,", ",~isProcessCheck,")"
AntiHackEnableExHint="[UjAPI]  AntiHackEnableEx takes boolean enable, boolean isModuleCheck, boolean isProcessCheck returns nothing"


SaveHandle=SaveHandle
SaveHandle="SaveHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandle,")"
SaveHandleHint="[UjAPI]  SaveHandle takes hashtable whichHashtable, integer parentKey, integer childKey, handle whichHandle returns boolean"


SaveCode=SaveCode
SaveCode="SaveCode(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichCode,")"
SaveCodeHint="[UjAPI]  SaveCode takes hashtable whichHashtable, integer parentKey, integer childKey, code whichCode returns boolean"


SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI]  SaveAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, attacktype whichAttackType returns boolean"


SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI]  SaveDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, damagetype whichDamageType returns boolean"


SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI]  SaveWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, weapontype whichWeaponType returns boolean"


SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBuff,")"
SaveBuffHandleHint="[UjAPI]  SaveBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey, buff whichBuff returns boolean"


SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichsprite,")"
SaveSpriteHandleHint="[UjAPI]  SaveSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sprite whichsprite returns boolean"


SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI]  SaveWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, war3image whichWar3Image returns boolean"


SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI]  SaveDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey, doodad whichDoodad returns boolean"


SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFile,")"
SaveTextFileHandleHint="[UjAPI]  SaveTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, textfilehandle whichFile returns boolean"


SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI]  SaveProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, projectile whichProjectile returns boolean"


SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFrame,")"
SaveFrameHandleHint="[UjAPI]  SaveFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey, framehandle whichFrame returns boolean"


SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandleList,")"
SaveHandleListHint="[UjAPI]  SaveHandleList takes hashtable whichHashtable, integer parentKey, integer childKey, handlelist whichHandleList returns boolean"


LoadHandle=LoadHandle
LoadHandle="LoadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleHint="[UjAPI]  LoadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns handle"


LoadCode=LoadCode
LoadCode="LoadCode(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadCodeHint="[UjAPI]  LoadCode takes hashtable whichHashtable, integer parentKey, integer childKey returns code"


LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAttackTypeHandleHint="[UjAPI]  LoadAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns attacktype"


LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDamageTypeHandleHint="[UjAPI]  LoadDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns damagetype"


LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI]  LoadWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns weapontype"


LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBuffHandleHint="[UjAPI]  LoadBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns buff"


LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSpriteHandleHint="[UjAPI]  LoadSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sprite"


LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWar3ImageHandleHint="[UjAPI]  LoadWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns war3image"


LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDoodadHandleHint="[UjAPI]  LoadDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns doodad"


LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextFileHandleHint="[UjAPI]  LoadTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns textfilehandle"


LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadProjectileHandleHint="[UjAPI]  LoadProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns projectile"


LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFrameHandleHint="[UjAPI]  LoadFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns framehandle"


LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleListHint="[UjAPI]  LoadHandleList takes hashtable whichHashtable, integer parentKey, integer childKey returns handlelist"


ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(",~whichForce,", ",~whichPlayer,")"
ForceHasPlayerHint="[UjAPI]  ForceHasPlayer takes force whichForce, player whichPlayer returns boolean"


ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(",~whichForce,")"
ForceCountPlayersHint="[UjAPI]  ForceCountPlayers takes force whichForce returns integer"


SetFogModifierForPlayer=SetFogModifierForPlayer
SetFogModifierForPlayer="SetFogModifierForPlayer(",~whichFogModifier,", ",~whichPlayer,")"
SetFogModifierForPlayerHint="[UjAPI]  SetFogModifierForPlayer takes fogmodifier whichFogModifier, player whichPlayer returns nothing"


SetFogModifierFogState=SetFogModifierFogState
SetFogModifierFogState="SetFogModifierFogState(",~whichFogModifier,", ",~whichState,", ",~isSet,")"
SetFogModifierFogStateHint="[UjAPI]  SetFogModifierFogState takes fogmodifier whichFogModifier, fogstate whichState, boolean isSet returns nothing"


SetFogModifierX=SetFogModifierX
SetFogModifierX="SetFogModifierX(",~whichFogModifier,", ",~x,")"
SetFogModifierXHint="[UjAPI]  SetFogModifierX takes fogmodifier whichFogModifier, real x returns nothing"


SetFogModifierY=SetFogModifierY
SetFogModifierY="SetFogModifierY(",~whichFogModifier,", ",~y,")"
SetFogModifierYHint="[UjAPI]  SetFogModifierY takes fogmodifier whichFogModifier, real y returns nothing"


SetFogModifierZ=SetFogModifierZ
SetFogModifierZ="SetFogModifierZ(",~whichFogModifier,", ",~z,")"
SetFogModifierZHint="[UjAPI]  SetFogModifierZ takes fogmodifier whichFogModifier, real z returns nothing"


SetFogModifierRadius=SetFogModifierRadius
SetFogModifierRadius="SetFogModifierRadius(",~whichFogModifier,", ",~radius,")"
SetFogModifierRadiusHint="[UjAPI]  SetFogModifierRadius takes fogmodifier whichFogModifier, real radius returns nothing"


SetFogModifierRadiusEx=SetFogModifierRadiusEx
SetFogModifierRadiusEx="SetFogModifierRadiusEx(",~whichFogModifier,", ",~x,", ",~y,", ",~radius,")"
SetFogModifierRadiusExHint="[UjAPI]  SetFogModifierRadiusEx takes fogmodifier whichFogModifier, real x, real y, real radius returns nothing"


SetFogModifierPosition=SetFogModifierPosition
SetFogModifierPosition="SetFogModifierPosition(",~whichFogModifier,", ",~x,", ",~y,")"
SetFogModifierPositionHint="[UjAPI]  SetFogModifierPosition takes fogmodifier whichFogModifier, real x, real y returns nothing"


SetFogModifierPositionWithZ=SetFogModifierPositionWithZ
SetFogModifierPositionWithZ="SetFogModifierPositionWithZ(",~whichFogModifier,", ",~x,", ",~y,", ",~z,")"
SetFogModifierPositionWithZHint="[UjAPI]  SetFogModifierPositionWithZ takes fogmodifier whichFogModifier, real x, real y, real z returns nothing"


SetFogModifierPositionLoc=SetFogModifierPositionLoc
SetFogModifierPositionLoc="SetFogModifierPositionLoc(",~whichFogModifier,", ",~whichLocation,")"
SetFogModifierPositionLocHint="[UjAPI]  SetFogModifierPositionLoc takes fogmodifier whichFogModifier, location whichLocation returns nothing"


SetFogModifierRect=SetFogModifierRect
SetFogModifierRect="SetFogModifierRect(",~whichFogModifier,", ",~whichRect,")"
SetFogModifierRectHint="[UjAPI]  SetFogModifierRect takes fogmodifier whichFogModifier, rect whichRect returns nothing"


SetFogModifierRectEx=SetFogModifierRectEx
SetFogModifierRectEx="SetFogModifierRectEx(",~whichFogModifier,", ",~minX,", ",~minY,", ",~maxX,", ",~maxY,")"
SetFogModifierRectExHint="[UjAPI]  SetFogModifierRectEx takes fogmodifier whichFogModifier, real minX, real minY, real maxX, real maxY returns nothing"


GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(",~whichGroup,")"
GroupGetCountHint="[UjAPI]  GroupGetCount takes group whichGroup returns integer"


GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(",~whichGroup,", ",~whichUnit,")"
GroupContainsUnitHint="[UjAPI]  GroupContainsUnit takes group whichGroup, unit whichUnit returns boolean"


GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(",~whichGroup,", ",~index,")"
GroupGetUnitByIndexHint="[UjAPI]  GroupGetUnitByIndex takes group whichGroup, integer index returns unit"


GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(",~whichGroup,")"
GroupForEachUnitHint="[UjAPI]  GroupForEachUnit takes group whichGroup returns unit"


GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupAddGroupExHint="[UjAPI]  GroupAddGroupEx takes group destGroup, group sourceGroup returns integer"


GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI]  GroupRemoveGroupEx takes group destGroup, group sourceGroup returns integer"


SetTradeSource=SetTradeSource
SetTradeSource="SetTradeSource(",~whichPlayer,")"
SetTradeSourceHint="[UjAPI]  SetTradeSource takes player whichPlayer returns nothing"


SetTradeTarget=SetTradeTarget
SetTradeTarget="SetTradeTarget(",~whichPlayer,")"
SetTradeTargetHint="[UjAPI]  SetTradeTarget takes player whichPlayer returns nothing"


SetTradeGold=SetTradeGold
SetTradeGold="SetTradeGold(",~amount,")"
SetTradeGoldHint="[UjAPI]  SetTradeGold takes integer amount returns nothing"


SetTradeLumber=SetTradeLumber
SetTradeLumber="SetTradeLumber(",~amount,")"
SetTradeLumberHint="[UjAPI]  SetTradeLumber takes integer amount returns nothing"


SetTradeState=SetTradeState
SetTradeState="SetTradeState(",~whichTradeState,", ",~isSet,")"
SetTradeStateHint="[UjAPI]  SetTradeState takes tradestate whichTradeState, boolean isSet returns nothing"


TradePlayerResources=TradePlayerResources
TradePlayerResources="TradePlayerResources(",~fromPlayer,", ",~toPlayer,", ",~gold,", ",~lumber,")"
TradePlayerResourcesHint="[UjAPI]  TradePlayerResources takes player fromPlayer, player toPlayer, integer gold, integer lumber returns nothing"


HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI]  HandleListCreate takes nothing returns handlelist"


HandleListDestroy=HandleListDestroy
HandleListDestroy="HandleListDestroy(",~whichHandleList,")"
HandleListDestroyHint="[UjAPI]  HandleListDestroy takes handlelist whichHandleList returns nothing"


HandleListAddHandle=HandleListAddHandle
HandleListAddHandle="HandleListAddHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListAddHandleHint="[UjAPI]  HandleListAddHandle takes handlelist whichHandleList, handle whichHandle returns nothing"


HandleListRemoveHandle=HandleListRemoveHandle
HandleListRemoveHandle="HandleListRemoveHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListRemoveHandleHint="[UjAPI]  HandleListRemoveHandle takes handlelist whichHandleList, handle whichHandle returns nothing"


HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(",~destHandleList,", ",~sourceHandleList,")"
HandleListAddListHint="[UjAPI]  HandleListAddList takes handlelist destHandleList, handlelist sourceHandleList returns integer"


HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(",~destHandleList,", ",~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI]  HandleListRemoveList takes handlelist destHandleList, handlelist sourceHandleList returns integer"


HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(",~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI]  HandleListRemoveEmpty takes handlelist whichHandleList returns integer"


HandleListClear=HandleListClear
HandleListClear="HandleListClear(",~whichHandleList,")"
HandleListClearHint="[UjAPI]  HandleListClear takes handlelist whichHandleList returns nothing"


HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListContainsHandleHint="[UjAPI]  HandleListContainsHandle takes handlelist whichHandleList, handle whichHandle returns boolean"


HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(",~whichHandleList,", ",~typeId,")"
HandleListContainsTypeIdHint="[UjAPI]  HandleListContainsTypeId takes handlelist whichHandleList, integer typeId returns boolean"


HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(",~whichHandleList,")"
HandleListGetCountHint="[UjAPI]  HandleListGetCount takes handlelist whichHandleList returns integer"


HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(",~whichHandleList,", ",~handleTypeId,")"
HandleListGetCountExHint="[UjAPI]  HandleListGetCountEx takes handlelist whichHandleList, integer handleTypeId returns integer"


HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(",~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI]  HandleListGetAgentCount takes handlelist whichHandleList returns integer"


HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(",~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI]  HandleListGetWidgetCount takes handlelist whichHandleList returns integer"


HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(",~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI]  HandleListGetUnitCount takes handlelist whichHandleList returns integer"


HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(",~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI]  HandleListGetItemCount takes handlelist whichHandleList returns integer"


HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(",~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI]  HandleListGetDestructableCount takes handlelist whichHandleList returns integer"


HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(",~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI]  HandleListGetDoodadCount takes handlelist whichHandleList returns integer"


HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(",~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI]  HandleListGetAbilityCount takes handlelist whichHandleList returns integer"


HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(",~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI]  HandleListGetBuffCount takes handlelist whichHandleList returns integer"


HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(",~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI]  HandleListGetSpriteCount takes handlelist whichHandleList returns integer"


HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(",~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI]  HandleListGetEffectCount takes handlelist whichHandleList returns integer"


HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(",~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI]  HandleListGetProjectileCount takes handlelist whichHandleList returns integer"


HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(",~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI]  HandleListGetFrameCount takes handlelist whichHandleList returns integer"


HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(",~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI]  HandleListGetOrderCount takes handlelist whichHandleList returns integer"


HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(",~whichHandleList,", ",~index,")"
HandleListGetHandleByIndexHint="[UjAPI]  HandleListGetHandleByIndex takes handlelist whichHandleList, integer index returns handle"


HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(",~whichHandleList,", ",~handleTypeId,", ",~index,")"
HandleListGetHandleByIndexExHint="[UjAPI]  HandleListGetHandleByIndexEx takes handlelist whichHandleList, integer handleTypeId, integer index returns handle"


HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(",~whichHandleList,", ",~typeId,", ",~index,")"
HandleListGetHandleByIdHint="[UjAPI]  HandleListGetHandleById takes handlelist whichHandleList, integer typeId, integer index returns handle"


HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAgentByIndexHint="[UjAPI]  HandleListGetAgentByIndex takes handlelist whichHandleList, integer index returns agent"


HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(",~whichHandleList,", ",~index,")"
HandleListGetWidgetByIndexHint="[UjAPI]  HandleListGetWidgetByIndex takes handlelist whichHandleList, integer index returns widget"


HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(",~whichHandleList,", ",~index,")"
HandleListGetUnitByIndexHint="[UjAPI]  HandleListGetUnitByIndex takes handlelist whichHandleList, integer index returns unit"


HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(",~whichHandleList,", ",~index,")"
HandleListGetItemByIndexHint="[UjAPI]  HandleListGetItemByIndex takes handlelist whichHandleList, integer index returns item"


HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDestructableByIndexHint="[UjAPI]  HandleListGetDestructableByIndex takes handlelist whichHandleList, integer index returns destructable"


HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDoodadByIndexHint="[UjAPI]  HandleListGetDoodadByIndex takes handlelist whichHandleList, integer index returns doodad"


HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAbilityByIndexHint="[UjAPI]  HandleListGetAbilityByIndex takes handlelist whichHandleList, integer index returns ability"


HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(",~whichHandleList,", ",~index,")"
HandleListGetBuffByIndexHint="[UjAPI]  HandleListGetBuffByIndex takes handlelist whichHandleList, integer index returns buff"


HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(",~whichHandleList,", ",~index,")"
HandleListGetSpriteByIndexHint="[UjAPI]  HandleListGetSpriteByIndex takes handlelist whichHandleList, integer index returns sprite"


HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(",~whichHandleList,", ",~index,")"
HandleListGetEffectByIndexHint="[UjAPI]  HandleListGetEffectByIndex takes handlelist whichHandleList, integer index returns effect"


HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(",~whichHandleList,", ",~index,")"
HandleListGetProjectileByIndexHint="[UjAPI]  HandleListGetProjectileByIndex takes handlelist whichHandleList, integer index returns projectile"


HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(",~whichHandleList,", ",~index,")"
HandleListGetFrameByIndexHint="[UjAPI]  HandleListGetFrameByIndex takes handlelist whichHandleList, integer index returns framehandle"


HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(",~whichHandleList,", ",~index,")"
HandleListGetOrderByIndexHint="[UjAPI]  HandleListGetOrderByIndex takes handlelist whichHandleList, integer index returns orderhandle"


HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI]  HandleListGetFilterHandle takes nothing returns handle"


HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI]  HandleListGetFilterAgent takes nothing returns agent"


HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI]  HandleListGetFilterWidget takes nothing returns widget"


HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI]  HandleListGetFilterUnit takes nothing returns unit"


HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI]  HandleListGetFilterItem takes nothing returns item"


HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI]  HandleListGetFilterDestructable takes nothing returns destructable"


HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI]  HandleListGetFilterDoodad takes nothing returns doodad"


HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI]  HandleListGetFilterAbility takes nothing returns ability"


HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI]  HandleListGetFilterBuff takes nothing returns buff"


HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI]  HandleListGetFilterSprite takes nothing returns sprite"


HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI]  HandleListGetFilterEffect takes nothing returns effect"


HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI]  HandleListGetFilterProjectile takes nothing returns projectile"


HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI]  HandleListGetFilterFrame takes nothing returns framehandle"


HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI]  HandleListGetFilterOrder takes nothing returns orderhandle"


HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI]  HandleListGetEnumHandle takes nothing returns handle"


HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI]  HandleListGetEnumAgent takes nothing returns agent"


HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI]  HandleListGetEnumWidget takes nothing returns widget"


HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI]  HandleListGetEnumUnit takes nothing returns unit"


HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI]  HandleListGetEnumItem takes nothing returns item"


HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI]  HandleListGetEnumDestructable takes nothing returns destructable"


HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI]  HandleListGetEnumDoodad takes nothing returns doodad"


HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI]  HandleListGetEnumAbility takes nothing returns ability"


HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI]  HandleListGetEnumBuff takes nothing returns buff"


HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI]  HandleListGetEnumSprite takes nothing returns sprite"


HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI]  HandleListGetEnumEffect takes nothing returns effect"


HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI]  HandleListGetEnumProjectile takes nothing returns projectile"


HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI]  HandleListGetEnumFrame takes nothing returns framehandle"


HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI]  HandleListGetEnumOrder takes nothing returns orderhandle"


HandleListEnumInRange=HandleListEnumInRange
HandleListEnumInRange="HandleListEnumInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumInRangeHint="[UjAPI]  HandleListEnumInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumInRangeEx=HandleListEnumInRangeEx
HandleListEnumInRangeEx="HandleListEnumInRangeEx(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRangeExHint="[UjAPI]  HandleListEnumInRangeEx takes handlelist whichHandleList, real x, real y, real radius, integer handleTypeId, boolexpr filter returns nothing"


HandleListEnumAgentsInRange=HandleListEnumAgentsInRange
HandleListEnumAgentsInRange="HandleListEnumAgentsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumAgentsInRangeHint="[UjAPI]  HandleListEnumAgentsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumWidgetsInRange=HandleListEnumWidgetsInRange
HandleListEnumWidgetsInRange="HandleListEnumWidgetsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumWidgetsInRangeHint="[UjAPI]  HandleListEnumWidgetsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumUnitsInRange=HandleListEnumUnitsInRange
HandleListEnumUnitsInRange="HandleListEnumUnitsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumUnitsInRangeHint="[UjAPI]  HandleListEnumUnitsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumItemsInRange=HandleListEnumItemsInRange
HandleListEnumItemsInRange="HandleListEnumItemsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumItemsInRangeHint="[UjAPI]  HandleListEnumItemsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumDestructablesInRange=HandleListEnumDestructablesInRange
HandleListEnumDestructablesInRange="HandleListEnumDestructablesInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumDestructablesInRangeHint="[UjAPI]  HandleListEnumDestructablesInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumDoodadsInRange=HandleListEnumDoodadsInRange
HandleListEnumDoodadsInRange="HandleListEnumDoodadsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumDoodadsInRangeHint="[UjAPI]  HandleListEnumDoodadsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumEffectsInRange=HandleListEnumEffectsInRange
HandleListEnumEffectsInRange="HandleListEnumEffectsInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumEffectsInRangeHint="[UjAPI]  HandleListEnumEffectsInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumProjectilesInRange=HandleListEnumProjectilesInRange
HandleListEnumProjectilesInRange="HandleListEnumProjectilesInRange(",~whichHandleList,", ",~x,", ",~y,", ",~radius,", ",~filter,")"
HandleListEnumProjectilesInRangeHint="[UjAPI]  HandleListEnumProjectilesInRange takes handlelist whichHandleList, real x, real y, real radius, boolexpr filter returns nothing"


HandleListEnumInRangeOfLoc=HandleListEnumInRangeOfLoc
HandleListEnumInRangeOfLoc="HandleListEnumInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumInRangeOfLocHint="[UjAPI]  HandleListEnumInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumInRangeOfLocEx=HandleListEnumInRangeOfLocEx
HandleListEnumInRangeOfLocEx="HandleListEnumInRangeOfLocEx(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRangeOfLocExHint="[UjAPI]  HandleListEnumInRangeOfLocEx takes handlelist whichHandleList, location whichLocation, real radius, integer handleTypeId, boolexpr filter returns nothing"


HandleListEnumAgentsInRangeOfLoc=HandleListEnumAgentsInRangeOfLoc
HandleListEnumAgentsInRangeOfLoc="HandleListEnumAgentsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumAgentsInRangeOfLocHint="[UjAPI]  HandleListEnumAgentsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumWidgetsInRangeOfLoc=HandleListEnumWidgetsInRangeOfLoc
HandleListEnumWidgetsInRangeOfLoc="HandleListEnumWidgetsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumWidgetsInRangeOfLocHint="[UjAPI]  HandleListEnumWidgetsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumUnitsInRangeOfLoc=HandleListEnumUnitsInRangeOfLoc
HandleListEnumUnitsInRangeOfLoc="HandleListEnumUnitsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumUnitsInRangeOfLocHint="[UjAPI]  HandleListEnumUnitsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumItemsInRangeOfLoc=HandleListEnumItemsInRangeOfLoc
HandleListEnumItemsInRangeOfLoc="HandleListEnumItemsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumItemsInRangeOfLocHint="[UjAPI]  HandleListEnumItemsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumDestructablesInRangeOfLoc=HandleListEnumDestructablesInRangeOfLoc
HandleListEnumDestructablesInRangeOfLoc="HandleListEnumDestructablesInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumDestructablesInRangeOfLocHint="[UjAPI]  HandleListEnumDestructablesInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumDoodadsInRangeOfLoc=HandleListEnumDoodadsInRangeOfLoc
HandleListEnumDoodadsInRangeOfLoc="HandleListEnumDoodadsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumDoodadsInRangeOfLocHint="[UjAPI]  HandleListEnumDoodadsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumEffectsInRangeOfLoc=HandleListEnumEffectsInRangeOfLoc
HandleListEnumEffectsInRangeOfLoc="HandleListEnumEffectsInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumEffectsInRangeOfLocHint="[UjAPI]  HandleListEnumEffectsInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumProjectilesInRangeOfLoc=HandleListEnumProjectilesInRangeOfLoc
HandleListEnumProjectilesInRangeOfLoc="HandleListEnumProjectilesInRangeOfLoc(",~whichHandleList,", ",~whichLocation,", ",~radius,", ",~filter,")"
HandleListEnumProjectilesInRangeOfLocHint="[UjAPI]  HandleListEnumProjectilesInRangeOfLoc takes handlelist whichHandleList, location whichLocation, real radius, boolexpr filter returns nothing"


HandleListEnumInRect=HandleListEnumInRect
HandleListEnumInRect="HandleListEnumInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumInRectHint="[UjAPI]  HandleListEnumInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumInRectEx=HandleListEnumInRectEx
HandleListEnumInRectEx="HandleListEnumInRectEx(",~whichHandleList,", ",~whichRect,", ",~handleTypeId,", ",~filter,")"
HandleListEnumInRectExHint="[UjAPI]  HandleListEnumInRectEx takes handlelist whichHandleList, rect whichRect, integer handleTypeId, boolexpr filter returns nothing"


HandleListEnumAgentsInRect=HandleListEnumAgentsInRect
HandleListEnumAgentsInRect="HandleListEnumAgentsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumAgentsInRectHint="[UjAPI]  HandleListEnumAgentsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumWidgetsInRect=HandleListEnumWidgetsInRect
HandleListEnumWidgetsInRect="HandleListEnumWidgetsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumWidgetsInRectHint="[UjAPI]  HandleListEnumWidgetsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumUnitsInRect=HandleListEnumUnitsInRect
HandleListEnumUnitsInRect="HandleListEnumUnitsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumUnitsInRectHint="[UjAPI]  HandleListEnumUnitsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumItemsInRect=HandleListEnumItemsInRect
HandleListEnumItemsInRect="HandleListEnumItemsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumItemsInRectHint="[UjAPI]  HandleListEnumItemsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumDestructablesInRect=HandleListEnumDestructablesInRect
HandleListEnumDestructablesInRect="HandleListEnumDestructablesInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumDestructablesInRectHint="[UjAPI]  HandleListEnumDestructablesInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumDoodadsInRect=HandleListEnumDoodadsInRect
HandleListEnumDoodadsInRect="HandleListEnumDoodadsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumDoodadsInRectHint="[UjAPI]  HandleListEnumDoodadsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumEffectsInRect=HandleListEnumEffectsInRect
HandleListEnumEffectsInRect="HandleListEnumEffectsInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumEffectsInRectHint="[UjAPI]  HandleListEnumEffectsInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumProjectilesInRect=HandleListEnumProjectilesInRect
HandleListEnumProjectilesInRect="HandleListEnumProjectilesInRect(",~whichHandleList,", ",~whichRect,", ",~filter,")"
HandleListEnumProjectilesInRectHint="[UjAPI]  HandleListEnumProjectilesInRect takes handlelist whichHandleList, rect whichRect, boolexpr filter returns nothing"


HandleListEnumById=HandleListEnumById
HandleListEnumById="HandleListEnumById(",~whichHandleList,", ",~handleTypeId,", ",~filter,")"
HandleListEnumByIdHint="[UjAPI]  HandleListEnumById takes handlelist whichHandleList, integer handleTypeId, boolexpr filter returns nothing"


HandleListEnumByIdEx=HandleListEnumByIdEx
HandleListEnumByIdEx="HandleListEnumByIdEx(",~whichHandleList,", ",~handleTypeId,", ",~typeId,", ",~filter,")"
HandleListEnumByIdExHint="[UjAPI]  HandleListEnumByIdEx takes handlelist whichHandleList, integer handleTypeId, integer typeId, boolexpr filter returns nothing"


HandleListEnumUnitAbilities=HandleListEnumUnitAbilities
HandleListEnumUnitAbilities="HandleListEnumUnitAbilities(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitAbilitiesHint="[UjAPI]  HandleListEnumUnitAbilities takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"


HandleListEnumUnitBuffs=HandleListEnumUnitBuffs
HandleListEnumUnitBuffs="HandleListEnumUnitBuffs(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitBuffsHint="[UjAPI]  HandleListEnumUnitBuffs takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"


HandleListEnumUnitOrders=HandleListEnumUnitOrders
HandleListEnumUnitOrders="HandleListEnumUnitOrders(",~whichHandleList,", ",~whichUnit,", ",~filter,")"
HandleListEnumUnitOrdersHint="[UjAPI]  HandleListEnumUnitOrders takes handlelist whichHandleList, unit whichUnit, boolexpr filter returns nothing"


HandleListForEach=HandleListForEach
HandleListForEach="HandleListForEach(",~whichHandleList,", ",~c,")"
HandleListForEachHint="[UjAPI]  HandleListForEach takes handlelist whichHandleList, code c returns nothing"


HandleListForEachById=HandleListForEachById
HandleListForEachById="HandleListForEachById(",~whichHandleList,", ",~handleTypeId,", ",~c,")"
HandleListForEachByIdHint="[UjAPI]  HandleListForEachById takes handlelist whichHandleList, integer handleTypeId, code c returns nothing"


HandleListForEachByIdEx=HandleListForEachByIdEx
HandleListForEachByIdEx="HandleListForEachByIdEx(",~whichHandleList,", ",~handleTypeId,", ",~typeId,", ",~c,")"
HandleListForEachByIdExHint="[UjAPI]  HandleListForEachByIdEx takes handlelist whichHandleList, integer handleTypeId, integer typeId, code c returns nothing"


SetTextTagX=SetTextTagX
SetTextTagX="SetTextTagX(",~whichTextTag,", ",~x,")"
SetTextTagXHint="[UjAPI]  SetTextTagX takes texttag whichTextTag, real x returns nothing"


SetTextTagY=SetTextTagY
SetTextTagY="SetTextTagY(",~whichTextTag,", ",~y,")"
SetTextTagYHint="[UjAPI]  SetTextTagY takes texttag whichTextTag, real y returns nothing"


SetTextTagZ=SetTextTagZ
SetTextTagZ="SetTextTagZ(",~whichTextTag,", ",~z,")"
SetTextTagZHint="[UjAPI]  SetTextTagZ takes texttag whichTextTag, real z returns nothing"


SetTextTagHeight=SetTextTagHeight
SetTextTagHeight="SetTextTagHeight(",~whichTextTag,", ",~height,")"
SetTextTagHeightHint="[UjAPI]  SetTextTagHeight takes texttag whichTextTag, real height returns nothing"


SetTextTagPositionLoc=SetTextTagPositionLoc
SetTextTagPositionLoc="SetTextTagPositionLoc(",~whichTextTag,", ",~whichLocation,")"
SetTextTagPositionLocHint="[UjAPI]  SetTextTagPositionLoc takes texttag whichTextTag, location whichLocation returns nothing"


SetTextTagAlpha=SetTextTagAlpha
SetTextTagAlpha="SetTextTagAlpha(",~whichTextTag,", ",~alpha,")"
SetTextTagAlphaHint="[UjAPI]  SetTextTagAlpha takes texttag whichTextTag, integer alpha returns nothing"


SetTextTagVelocityX=SetTextTagVelocityX
SetTextTagVelocityX="SetTextTagVelocityX(",~whichTextTag,", ",~velX,")"
SetTextTagVelocityXHint="[UjAPI]  SetTextTagVelocityX takes texttag whichTextTag, real velX returns nothing"


SetTextTagVelocityY=SetTextTagVelocityY
SetTextTagVelocityY="SetTextTagVelocityY(",~whichTextTag,", ",~velY,")"
SetTextTagVelocityYHint="[UjAPI]  SetTextTagVelocityY takes texttag whichTextTag, real velY returns nothing"


SetTextTagVelocityZ=SetTextTagVelocityZ
SetTextTagVelocityZ="SetTextTagVelocityZ(",~whichTextTag,", ",~velZ,")"
SetTextTagVelocityZHint="[UjAPI]  SetTextTagVelocityZ takes texttag whichTextTag, real velZ returns nothing"


SetTextTagShadowColour=SetTextTagShadowColour
SetTextTagShadowColour="SetTextTagShadowColour(",~whichTextTag,", ",~colour,")"
SetTextTagShadowColourHint="[UjAPI]  SetTextTagShadowColour takes texttag whichTextTag, integer colour returns nothing"


SetTextTagShadowAlpha=SetTextTagShadowAlpha
SetTextTagShadowAlpha="SetTextTagShadowAlpha(",~whichTextTag,", ",~alpha,")"
SetTextTagShadowAlphaHint="[UjAPI]  SetTextTagShadowAlpha takes texttag whichTextTag, integer alpha returns nothing"


SetLightningSourceX=SetLightningSourceX
SetLightningSourceX="SetLightningSourceX(",~whichBolt,", ",~value,")"
SetLightningSourceXHint="[UjAPI]  SetLightningSourceX takes lightning whichBolt, real value returns nothing"


SetLightningSourceY=SetLightningSourceY
SetLightningSourceY="SetLightningSourceY(",~whichBolt,", ",~value,")"
SetLightningSourceYHint="[UjAPI]  SetLightningSourceY takes lightning whichBolt, real value returns nothing"


SetLightningSourceZ=SetLightningSourceZ
SetLightningSourceZ="SetLightningSourceZ(",~whichBolt,", ",~value,")"
SetLightningSourceZHint="[UjAPI]  SetLightningSourceZ takes lightning whichBolt, real value returns nothing"


SetLightningSourcePositionLoc=SetLightningSourcePositionLoc
SetLightningSourcePositionLoc="SetLightningSourcePositionLoc(",~whichBolt,", ",~whichLocation,")"
SetLightningSourcePositionLocHint="[UjAPI]  SetLightningSourcePositionLoc takes lightning whichBolt, location whichLocation returns nothing"


SetLightningTargetX=SetLightningTargetX
SetLightningTargetX="SetLightningTargetX(",~whichBolt,", ",~value,")"
SetLightningTargetXHint="[UjAPI]  SetLightningTargetX takes lightning whichBolt, real value returns nothing"


SetLightningTargetY=SetLightningTargetY
SetLightningTargetY="SetLightningTargetY(",~whichBolt,", ",~value,")"
SetLightningTargetYHint="[UjAPI]  SetLightningTargetY takes lightning whichBolt, real value returns nothing"


SetLightningTargetZ=SetLightningTargetZ
SetLightningTargetZ="SetLightningTargetZ(",~whichBolt,", ",~value,")"
SetLightningTargetZHint="[UjAPI]  SetLightningTargetZ takes lightning whichBolt, real value returns nothing"


SetLightningTargetPositionLoc=SetLightningTargetPositionLoc
SetLightningTargetPositionLoc="SetLightningTargetPositionLoc(",~whichBolt,", ",~whichLocation,")"
SetLightningTargetPositionLocHint="[UjAPI]  SetLightningTargetPositionLoc takes lightning whichBolt, location whichLocation returns nothing"


SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(",~whichBolt,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetLightningColourHint="[UjAPI]  SetLightningColour takes lightning whichBolt, integer red, integer green, integer blue, integer alpha returns boolean"


SetLightningLength=SetLightningLength
SetLightningLength="SetLightningLength(",~whichBolt,", ",~value,")"
SetLightningLengthHint="[UjAPI]  SetLightningLength takes lightning whichBolt, real value returns nothing"


SetLightningWidth=SetLightningWidth
SetLightningWidth="SetLightningWidth(",~whichBolt,", ",~value,")"
SetLightningWidthHint="[UjAPI]  SetLightningWidth takes lightning whichBolt, real value returns nothing"


SetLightningNoiseScaling=SetLightningNoiseScaling
SetLightningNoiseScaling="SetLightningNoiseScaling(",~whichBolt,", ",~value,")"
SetLightningNoiseScalingHint="[UjAPI]  SetLightningNoiseScaling takes lightning whichBolt, real value returns nothing"


SetLightningTextureCoordinates=SetLightningTextureCoordinates
SetLightningTextureCoordinates="SetLightningTextureCoordinates(",~whichBolt,", ",~value,")"
SetLightningTextureCoordinatesHint="[UjAPI]  SetLightningTextureCoordinates takes lightning whichBolt, real value returns nothing"


SetLightningDuration=SetLightningDuration
SetLightningDuration="SetLightningDuration(",~whichBolt,", ",~value,")"
SetLightningDurationHint="[UjAPI]  SetLightningDuration takes lightning whichBolt, real value returns nothing"


SetLightningTexture=SetLightningTexture
SetLightningTexture="SetLightningTexture(",~whichBolt,", ",~textureName,")"
SetLightningTextureHint="[UjAPI]  SetLightningTexture takes lightning whichBolt, string textureName returns nothing"


CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(",~file,", ",~sizeX,", ",~sizeY,", ",~posX,", ",~posY,", ",~posZ,", ",~imageType,")"
CreateImageSimpleHint="[UjAPI]  CreateImageSimple takes string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType returns image"


SetImageX=SetImageX
SetImageX="SetImageX(",~whichImage,", ",~sizeX,")"
SetImageXHint="[UjAPI]  SetImageX takes image whichImage, real sizeX returns nothing"


SetImageY=SetImageY
SetImageY="SetImageY(",~whichImage,", ",~sizeY,")"
SetImageYHint="[UjAPI]  SetImageY takes image whichImage, real sizeY returns nothing"


SetImageZ=SetImageZ
SetImageZ="SetImageZ(",~whichImage,", ",~sizeZ,")"
SetImageZHint="[UjAPI]  SetImageZ takes image whichImage, real sizeZ returns nothing"


SetImagePositionLoc=SetImagePositionLoc
SetImagePositionLoc="SetImagePositionLoc(",~whichImage,", ",~whichLocation,")"
SetImagePositionLocHint="[UjAPI]  SetImagePositionLoc takes image whichImage, location whichLocation returns nothing"


SetImageOriginX=SetImageOriginX
SetImageOriginX="SetImageOriginX(",~whichImage,", ",~originX,")"
SetImageOriginXHint="[UjAPI]  SetImageOriginX takes image whichImage, real originX returns nothing"


SetImageOriginY=SetImageOriginY
SetImageOriginY="SetImageOriginY(",~whichImage,", ",~originY,")"
SetImageOriginYHint="[UjAPI]  SetImageOriginY takes image whichImage, real originY returns nothing"


SetImageOrigin=SetImageOrigin
SetImageOrigin="SetImageOrigin(",~whichImage,", ",~origin,")"
SetImageOriginHint="[UjAPI]  SetImageOrigin takes image whichImage, real origin returns nothing"


SetImageOriginEx=SetImageOriginEx
SetImageOriginEx="SetImageOriginEx(",~whichImage,", ",~originX,", ",~originY,")"
SetImageOriginExHint="[UjAPI]  SetImageOriginEx takes image whichImage, real originX, real originY returns nothing"


SetImageSizeX=SetImageSizeX
SetImageSizeX="SetImageSizeX(",~whichImage,", ",~sizeX,")"
SetImageSizeXHint="[UjAPI]  SetImageSizeX takes image whichImage, real sizeX returns nothing"


SetImageSizeY=SetImageSizeY
SetImageSizeY="SetImageSizeY(",~whichImage,", ",~sizeY,")"
SetImageSizeYHint="[UjAPI]  SetImageSizeY takes image whichImage, real sizeY returns nothing"


SetImageSize=SetImageSize
SetImageSize="SetImageSize(",~whichImage,", ",~size,")"
SetImageSizeHint="[UjAPI]  SetImageSize takes image whichImage, real size returns nothing"


SetImageSizeEx=SetImageSizeEx
SetImageSizeEx="SetImageSizeEx(",~whichImage,", ",~sizeX,", ",~sizeY,")"
SetImageSizeExHint="[UjAPI]  SetImageSizeEx takes image whichImage, real sizeX, real sizeY returns nothing"


SetImageTexture=SetImageTexture
SetImageTexture="SetImageTexture(",~whichImage,", ",~imagePath,")"
SetImageTextureHint="[UjAPI]  SetImageTexture takes image whichImage, string imagePath returns nothing"


TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(",~whichTimer,")"
TimerIsPausedHint="[UjAPI]  TimerIsPaused takes timer whichTimer returns boolean"


TimerRestart=TimerRestart
TimerRestart="TimerRestart(",~whichTimer,")"
TimerRestartHint="[UjAPI]  TimerRestart takes timer whichTimer returns nothing"


TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(",~whichTimer,")"
TimerIsPeriodicHint="[UjAPI]  TimerIsPeriodic takes timer whichTimer returns boolean"


TimerSetPeriodic=TimerSetPeriodic
TimerSetPeriodic="TimerSetPeriodic(",~whichTimer,", ",~isPeriodic,")"
TimerSetPeriodicHint="[UjAPI]  TimerSetPeriodic takes timer whichTimer, boolean isPeriodic returns nothing"


TimerSetRemaining=TimerSetRemaining
TimerSetRemaining="TimerSetRemaining(",~whichTimer,", ",~remaining,")"
TimerSetRemainingHint="[UjAPI]  TimerSetRemaining takes timer whichTimer, real remaining returns nothing"


TimerSetTimeout=TimerSetTimeout
TimerSetTimeout="TimerSetTimeout(",~whichTimer,", ",~timeout,")"
TimerSetTimeoutHint="[UjAPI]  TimerSetTimeout takes timer whichTimer, real timeout returns nothing"


TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(",~whichTimer,")"
TimerGetCallbackHint="[UjAPI]  TimerGetCallback takes timer whichTimer returns code"


TimerSetCallback=TimerSetCallback
TimerSetCallback="TimerSetCallback(",~whichTimer,", ",~whichFunction,")"
TimerSetCallbackHint="[UjAPI]  TimerSetCallback takes timer whichTimer, code whichFunction returns nothing"


CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadHint="[UjAPI]  CreateDoodad takes integer objectid, real x, real y, real facing, real scale, integer variation returns doodad"


CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(",~objectid,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadZHint="[UjAPI]  CreateDoodadZ takes integer objectid, real x, real y, real z, real facing, real scale, integer variation returns doodad"


RemoveDoodad=RemoveDoodad
RemoveDoodad="RemoveDoodad(",~whichDoodad,")"
RemoveDoodadHint="[UjAPI]  RemoveDoodad takes doodad whichDoodad returns nothing"


SetDoodadColour=SetDoodadColour
SetDoodadColour="SetDoodadColour(",~whichDoodad,", ",~colour,")"
SetDoodadColourHint="[UjAPI]  SetDoodadColour takes doodad whichDoodad, integer colour returns nothing"


SetDoodadVertexColour=SetDoodadVertexColour
SetDoodadVertexColour="SetDoodadVertexColour(",~whichDoodad,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetDoodadVertexColourHint="[UjAPI]  SetDoodadVertexColour takes doodad whichDoodad, integer red, integer green, integer blue, integer alpha returns nothing"


SetDoodadScale=SetDoodadScale
SetDoodadScale="SetDoodadScale(",~whichDoodad,", ",~scale,")"
SetDoodadScaleHint="[UjAPI]  SetDoodadScale takes doodad whichDoodad, real scale returns nothing"


SetDoodadTimeScale=SetDoodadTimeScale
SetDoodadTimeScale="SetDoodadTimeScale(",~whichDoodad,", ",~timeScale,")"
SetDoodadTimeScaleHint="[UjAPI]  SetDoodadTimeScale takes doodad whichDoodad, real timeScale returns nothing"


SetDoodadX=SetDoodadX
SetDoodadX="SetDoodadX(",~whichDoodad,", ",~x,")"
SetDoodadXHint="[UjAPI]  SetDoodadX takes doodad whichDoodad, real x returns nothing"


SetDoodadY=SetDoodadY
SetDoodadY="SetDoodadY(",~whichDoodad,", ",~y,")"
SetDoodadYHint="[UjAPI]  SetDoodadY takes doodad whichDoodad, real y returns nothing"


SetDoodadZ=SetDoodadZ
SetDoodadZ="SetDoodadZ(",~whichDoodad,", ",~z,")"
SetDoodadZHint="[UjAPI]  SetDoodadZ takes doodad whichDoodad, real z returns nothing"


SetDoodadPosition=SetDoodadPosition
SetDoodadPosition="SetDoodadPosition(",~whichDoodad,", ",~x,", ",~y,")"
SetDoodadPositionHint="[UjAPI]  SetDoodadPosition takes doodad whichDoodad, real x, real y returns nothing"


SetDoodadPositionWithZ=SetDoodadPositionWithZ
SetDoodadPositionWithZ="SetDoodadPositionWithZ(",~whichDoodad,", ",~x,", ",~y,", ",~z,")"
SetDoodadPositionWithZHint="[UjAPI]  SetDoodadPositionWithZ takes doodad whichDoodad, real x, real y, real z returns nothing"


SetDoodadPositionLoc=SetDoodadPositionLoc
SetDoodadPositionLoc="SetDoodadPositionLoc(",~whichDoodad,", ",~whichLocation,")"
SetDoodadPositionLocHint="[UjAPI]  SetDoodadPositionLoc takes doodad whichDoodad, location whichLocation returns nothing"


SetDoodadMatrixScale=SetDoodadMatrixScale
SetDoodadMatrixScale="SetDoodadMatrixScale(",~whichDoodad,", ",~x,", ",~y,", ",~z,")"
SetDoodadMatrixScaleHint="[UjAPI]  SetDoodadMatrixScale takes doodad whichDoodad, real x, real y, real z returns nothing"


ResetDoodadMatrix=ResetDoodadMatrix
ResetDoodadMatrix="ResetDoodadMatrix(",~whichDoodad,")"
ResetDoodadMatrixHint="[UjAPI]  ResetDoodadMatrix takes doodad whichDoodad returns nothing"


SetDoodadOrientationEx=SetDoodadOrientationEx
SetDoodadOrientationEx="SetDoodadOrientationEx(",~whichDoodad,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetDoodadOrientationExHint="[UjAPI]  SetDoodadOrientationEx takes doodad whichDoodad, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetDoodadYaw=SetDoodadYaw
SetDoodadYaw="SetDoodadYaw(",~whichDoodad,", ",~yaw,")"
SetDoodadYawHint="[UjAPI]  SetDoodadYaw takes doodad whichDoodad, real yaw returns nothing"


SetDoodadFacing=SetDoodadFacing
SetDoodadFacing="SetDoodadFacing(",~whichDoodad,", ",~facing,")"
SetDoodadFacingHint="[UjAPI]  SetDoodadFacing takes doodad whichDoodad, real facing returns nothing"


SetDoodadPitch=SetDoodadPitch
SetDoodadPitch="SetDoodadPitch(",~whichDoodad,", ",~pitch,")"
SetDoodadPitchHint="[UjAPI]  SetDoodadPitch takes doodad whichDoodad, real pitch returns nothing"


SetDoodadRoll=SetDoodadRoll
SetDoodadRoll="SetDoodadRoll(",~whichDoodad,", ",~roll,")"
SetDoodadRollHint="[UjAPI]  SetDoodadRoll takes doodad whichDoodad, real roll returns nothing"


SetDoodadOrientation=SetDoodadOrientation
SetDoodadOrientation="SetDoodadOrientation(",~whichDoodad,", ",~yaw,", ",~pitch,", ",~roll,")"
SetDoodadOrientationHint="[UjAPI]  SetDoodadOrientation takes doodad whichDoodad, real yaw, real pitch, real roll returns nothing"


SetDoodadPlayerColour=SetDoodadPlayerColour
SetDoodadPlayerColour="SetDoodadPlayerColour(",~whichDoodad,", ",~color,")"
SetDoodadPlayerColourHint="[UjAPI]  SetDoodadPlayerColour takes doodad whichDoodad, playercolor color returns nothing"


SetDoodadModel=SetDoodadModel
SetDoodadModel="SetDoodadModel(",~whichDoodad,", ",~modelFile,")"
SetDoodadModelHint="[UjAPI]  SetDoodadModel takes doodad whichDoodad, string modelFile returns nothing"


SetDoodadModelEx=SetDoodadModelEx
SetDoodadModelEx="SetDoodadModelEx(",~whichDoodad,", ",~modelFile,", ",~playerId,")"
SetDoodadModelExHint="[UjAPI]  SetDoodadModelEx takes doodad whichDoodad, string modelFile, integer playerId returns nothing"


SetDoodadMaterialTexture=SetDoodadMaterialTexture
SetDoodadMaterialTexture="SetDoodadMaterialTexture(",~whichDoodad,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetDoodadMaterialTextureHint="[UjAPI]  SetDoodadMaterialTexture takes doodad whichDoodad, string textureName, integer materialId, integer textureIndex returns nothing"


SetDoodadTexture=SetDoodadTexture
SetDoodadTexture="SetDoodadTexture(",~whichDoodad,", ",~textureName,", ",~textureIndex,")"
SetDoodadTextureHint="[UjAPI]  SetDoodadTexture takes doodad whichDoodad, string textureName, integer textureIndex returns nothing"


SetDoodadReplaceableTexture=SetDoodadReplaceableTexture
SetDoodadReplaceableTexture="SetDoodadReplaceableTexture(",~whichDoodad,", ",~textureName,", ",~textureIndex,")"
SetDoodadReplaceableTextureHint="[UjAPI]  SetDoodadReplaceableTexture takes doodad whichDoodad, string textureName, integer textureIndex returns nothing"


ShowDoodad=ShowDoodad
ShowDoodad="ShowDoodad(",~whichDoodad,", ",~isShow,")"
ShowDoodadHint="[UjAPI]  ShowDoodad takes doodad whichDoodad, boolean isShow returns nothing"


SetDoodadAnimationWithRarityByIndex=SetDoodadAnimationWithRarityByIndex
SetDoodadAnimationWithRarityByIndex="SetDoodadAnimationWithRarityByIndex(",~whichDoodad,", ",~animIndex,", ",~rarity,")"
SetDoodadAnimationWithRarityByIndexHint="[UjAPI]  SetDoodadAnimationWithRarityByIndex takes doodad whichDoodad, integer animIndex, raritycontrol rarity returns nothing"


SetDoodadAnimationWithRarity=SetDoodadAnimationWithRarity
SetDoodadAnimationWithRarity="SetDoodadAnimationWithRarity(",~whichDoodad,", ",~animationName,", ",~rarity,")"
SetDoodadAnimationWithRarityHint="[UjAPI]  SetDoodadAnimationWithRarity takes doodad whichDoodad, string animationName, raritycontrol rarity returns nothing"


SetDoodadAnimationByIndex=SetDoodadAnimationByIndex
SetDoodadAnimationByIndex="SetDoodadAnimationByIndex(",~whichDoodad,", ",~animIndex,")"
SetDoodadAnimationByIndexHint="[UjAPI]  SetDoodadAnimationByIndex takes doodad whichDoodad, integer animIndex returns nothing"


SetDoodadAnimationEx=SetDoodadAnimationEx
SetDoodadAnimationEx="SetDoodadAnimationEx(",~whichDoodad,", ",~animationName,")"
SetDoodadAnimationExHint="[UjAPI]  SetDoodadAnimationEx takes doodad whichDoodad, string animationName returns nothing"


QueueDoodadAnimationByIndex=QueueDoodadAnimationByIndex
QueueDoodadAnimationByIndex="QueueDoodadAnimationByIndex(",~whichDoodad,", ",~animIndex,")"
QueueDoodadAnimationByIndexHint="[UjAPI]  QueueDoodadAnimationByIndex takes doodad whichDoodad, integer animIndex returns nothing"


QueueDoodadAnimation=QueueDoodadAnimation
QueueDoodadAnimation="QueueDoodadAnimation(",~whichDoodad,", ",~animationName,")"
QueueDoodadAnimationHint="[UjAPI]  QueueDoodadAnimation takes doodad whichDoodad, string animationName returns nothing"


SetDoodadAnimationOffsetPercent=SetDoodadAnimationOffsetPercent
SetDoodadAnimationOffsetPercent="SetDoodadAnimationOffsetPercent(",~whichDoodad,", ",~percent,")"
SetDoodadAnimationOffsetPercentHint="[UjAPI]  SetDoodadAnimationOffsetPercent takes doodad whichDoodad, real percent returns nothing"


EnumDoodadsInRange=EnumDoodadsInRange
EnumDoodadsInRange="EnumDoodadsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRangeHint="[UjAPI]  EnumDoodadsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


EnumDoodadsInRangeEx=EnumDoodadsInRangeEx
EnumDoodadsInRangeEx="EnumDoodadsInRangeEx(",~x,", ",~y,", ",~radius,", ",~typeId,", ",~nearestOnly,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRangeExHint="[UjAPI]  EnumDoodadsInRangeEx takes real x, real y, real radius, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc returns nothing"


EnumDoodadsInRect=EnumDoodadsInRect
EnumDoodadsInRect="EnumDoodadsInRect(",~whichRect,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRectHint="[UjAPI]  EnumDoodadsInRect takes rect whichRect, boolexpr filter, code handlerFunc returns nothing"


EnumDoodadsInRectEx=EnumDoodadsInRectEx
EnumDoodadsInRectEx="EnumDoodadsInRectEx(",~whichRect,", ",~typeId,", ",~nearestOnly,", ",~filter,", ",~handlerFunc,")"
EnumDoodadsInRectExHint="[UjAPI]  EnumDoodadsInRectEx takes rect whichRect, integer typeId, boolean nearestOnly, boolexpr filter, code handlerFunc returns nothing"


SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerFieldById takes integer aid, abilityintegerfield whichField, integer value returns boolean"


SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanFieldById takes integer aid, abilitybooleanfield whichField, boolean value returns boolean"


SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI]  SetAbilityBaseRealFieldById takes integer aid, abilityrealfield whichField, real value returns boolean"


SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerLevelFieldById takes integer aid, abilityintegerlevelfield whichField, integer level, integer value returns boolean"


SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanLevelFieldById takes integer aid, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"


SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  SetAbilityBaseRealLevelFieldById takes integer aid, abilityreallevelfield whichField, integer level, real value returns boolean"


SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"


AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"


AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"


AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityIntegerFieldHint="[UjAPI]  SetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField, integer value returns boolean"


SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityBooleanFieldHint="[UjAPI]  SetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField, boolean value returns boolean"


SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityRealFieldHint="[UjAPI]  SetAbilityRealField takes ability whichAbility, abilityrealfield whichField, real value returns boolean"


SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI]  SetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value returns boolean"


SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI]  SetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"


SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityRealLevelFieldHint="[UjAPI]  SetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level, real value returns boolean"


SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI]  SetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"


AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI]  AddAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI]  RemoveAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI]  SetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"


AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI]  AddAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI]  RemoveAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI]  SetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"


AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI]  AddAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI]  RemoveAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(",~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI]  ResetAbilityFieldData takes ability whichAbility returns boolean"


CreateAbility=CreateAbility
CreateAbility="CreateAbility(",~abilCode,")"
CreateAbilityHint="[UjAPI]  CreateAbility takes integer abilCode returns ability"


SetAbilityOwner=SetAbilityOwner
SetAbilityOwner="SetAbilityOwner(",~whichAbility,", ",~whichUnit,")"
SetAbilityOwnerHint="[UjAPI]  SetAbilityOwner takes ability whichAbility, unit whichUnit returns nothing"


SetAbilityOwningAbility=SetAbilityOwningAbility
SetAbilityOwningAbility="SetAbilityOwningAbility(",~whichAbility,", ",~whichSpellbook,")"
SetAbilityOwningAbilityHint="[UjAPI]  SetAbilityOwningAbility takes ability whichAbility, ability whichSpellbook returns nothing"


SetAbilityOwningItem=SetAbilityOwningItem
SetAbilityOwningItem="SetAbilityOwningItem(",~whichAbility,", ",~whichItem,")"
SetAbilityOwningItemHint="[UjAPI]  SetAbilityOwningItem takes ability whichAbility, item whichItem returns nothing"


SetAbilityOrderId=SetAbilityOrderId
SetAbilityOrderId="SetAbilityOrderId(",~whichAbility,", ",~orderId,")"
SetAbilityOrderIdHint="[UjAPI]  SetAbilityOrderId takes ability whichAbility, integer orderId returns nothing"


ResetAbilityOrder=ResetAbilityOrder
ResetAbilityOrder="ResetAbilityOrder(",~whichAbility,")"
ResetAbilityOrderHint="[UjAPI]  ResetAbilityOrder takes ability whichAbility returns nothing"


SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(",~whichAbility,", ",~level,")"
SetAbilityLevelHint="[UjAPI]  SetAbilityLevel takes ability whichAbility, integer level returns integer"


SetAbilityEnabled=SetAbilityEnabled
SetAbilityEnabled="SetAbilityEnabled(",~whichAbility,", ",~enable,")"
SetAbilityEnabledHint="[UjAPI]  SetAbilityEnabled takes ability whichAbility, boolean enable returns nothing"


ShowAbility=ShowAbility
ShowAbility="ShowAbility(",~whichAbility,", ",~show,")"
ShowAbilityHint="[UjAPI]  ShowAbility takes ability whichAbility, boolean show returns nothing"


SetAbilityEnabledEx=SetAbilityEnabledEx
SetAbilityEnabledEx="SetAbilityEnabledEx(",~whichAbility,", ",~enable,")"
SetAbilityEnabledExHint="[UjAPI]  SetAbilityEnabledEx takes ability whichAbility, boolean enable returns nothing"


SetAbilityCastTime=SetAbilityCastTime
SetAbilityCastTime="SetAbilityCastTime(",~whichAbility,", ",~castTime,")"
SetAbilityCastTimeHint="[UjAPI]  SetAbilityCastTime takes ability whichAbility, real castTime returns nothing"


SetAbilityCastPoint=SetAbilityCastPoint
SetAbilityCastPoint="SetAbilityCastPoint(",~whichAbility,", ",~castPoint,")"
SetAbilityCastPointHint="[UjAPI]  SetAbilityCastPoint takes ability whichAbility, real castPoint returns nothing"


SetAbilityBackswing=SetAbilityBackswing
SetAbilityBackswing="SetAbilityBackswing(",~whichAbility,", ",~backswing,")"
SetAbilityBackswingHint="[UjAPI]  SetAbilityBackswing takes ability whichAbility, real backswing returns nothing"


SetAbilityCooldown=SetAbilityCooldown
SetAbilityCooldown="SetAbilityCooldown(",~whichAbility,", ",~cooldown,")"
SetAbilityCooldownHint="[UjAPI]  SetAbilityCooldown takes ability whichAbility, real cooldown returns nothing"


SetAbilityRemainingCooldown=SetAbilityRemainingCooldown
SetAbilityRemainingCooldown="SetAbilityRemainingCooldown(",~whichAbility,", ",~cooldown,")"
SetAbilityRemainingCooldownHint="[UjAPI]  SetAbilityRemainingCooldown takes ability whichAbility, real cooldown returns nothing"


StartAbilityCooldown=StartAbilityCooldown
StartAbilityCooldown="StartAbilityCooldown(",~whichAbility,", ",~cooldown,")"
StartAbilityCooldownHint="[UjAPI]  StartAbilityCooldown takes ability whichAbility, real cooldown returns nothing"


DisableAbility=DisableAbility
DisableAbility="DisableAbility(",~whichAbility,", ",~hide,", ",~disable,")"
DisableAbilityHint="[UjAPI]  DisableAbility takes ability whichAbility, boolean hide, boolean disable returns nothing"


EnableAbility=EnableAbility
EnableAbility="EnableAbility(",~whichAbility,", ",~show,", ",~enable,")"
EnableAbilityHint="[UjAPI]  EnableAbility takes ability whichAbility, boolean show, boolean enable returns nothing"


CastAbility=CastAbility
CastAbility="CastAbility(",~whichAbility,")"
CastAbilityHint="[UjAPI]  CastAbility takes ability whichAbility returns boolean"


CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(",~whichAbility,", ",~targX,", ",~targY,")"
CastAbilityGroundHint="[UjAPI]  CastAbilityGround takes ability whichAbility, real targX, real targY returns boolean"


CastAbilityTarget=CastAbilityTarget
CastAbilityTarget="CastAbilityTarget(",~whichAbility,", ",~target,")"
CastAbilityTargetHint="[UjAPI]  CastAbilityTarget takes ability whichAbility, widget target returns boolean"


EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI]  EnumUnitAbilities takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"


SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI]  SetBuffBaseIntegerFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI]  SetBuffBaseBooleanFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI]  SetBuffBaseRealFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  SetBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer index, integer value returns boolean"


AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  AddBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  SetBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, integer index, boolean value returns boolean"


AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  AddBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI]  SetBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, integer index, real value returns boolean"


AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI]  AddBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffIntegerFieldHint="[UjAPI]  SetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffBooleanFieldHint="[UjAPI]  SetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffRealFieldHint="[UjAPI]  SetBuffRealField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI]  SetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index, integer value returns boolean"


AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI]  AddBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI]  RemoveBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI]  SetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index, boolean value returns boolean"


AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI]  AddBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI]  RemoveBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffRealArrayFieldHint="[UjAPI]  SetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index, real value returns boolean"


AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffRealArrayFieldHint="[UjAPI]  AddBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI]  RemoveBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(",~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI]  ResetBuffFieldData takes buff whichBuff returns boolean"


CreateBuff=CreateBuff
CreateBuff="CreateBuff(",~buffId,")"
CreateBuffHint="[UjAPI]  CreateBuff takes integer buffId returns buff"


SetBuffOwner=SetBuffOwner
SetBuffOwner="SetBuffOwner(",~whichBuff,", ",~whichUnit,")"
SetBuffOwnerHint="[UjAPI]  SetBuffOwner takes buff whichBuff, unit whichUnit returns nothing"


SetBuffOwningAbility=SetBuffOwningAbility
SetBuffOwningAbility="SetBuffOwningAbility(",~whichBuff,", ",~whichAbility,")"
SetBuffOwningAbilityHint="[UjAPI]  SetBuffOwningAbility takes buff whichBuff, ability whichAbility returns nothing"


SetBuffDispellable=SetBuffDispellable
SetBuffDispellable="SetBuffDispellable(",~whichBuff,", ",~isSet,")"
SetBuffDispellableHint="[UjAPI]  SetBuffDispellable takes buff whichBuff, boolean isSet returns nothing"


SetBuffLevel=SetBuffLevel
SetBuffLevel="SetBuffLevel(",~whichBuff,", ",~level,")"
SetBuffLevelHint="[UjAPI]  SetBuffLevel takes buff whichBuff, integer level returns nothing"


SetBuffRemainingDuration=SetBuffRemainingDuration
SetBuffRemainingDuration="SetBuffRemainingDuration(",~whichBuff,", ",~duration,")"
SetBuffRemainingDurationHint="[UjAPI]  SetBuffRemainingDuration takes buff whichBuff, real duration returns nothing"


PauseBuff=PauseBuff
PauseBuff="PauseBuff(",~whichBuff,", ",~pause,")"
PauseBuffHint="[UjAPI]  PauseBuff takes buff whichBuff, boolean pause returns nothing"


RefreshBuff=RefreshBuff
RefreshBuff="RefreshBuff(",~whichBuff,")"
RefreshBuffHint="[UjAPI]  RefreshBuff takes buff whichBuff returns nothing"


EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitBuffsHint="[UjAPI]  EnumUnitBuffs takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"


SetWar3ImageVisible=SetWar3ImageVisible
SetWar3ImageVisible="SetWar3ImageVisible(",~whichWar3Image,", ",~visible,")"
SetWar3ImageVisibleHint="[UjAPI]  SetWar3ImageVisible takes war3image whichWar3Image, boolean visible returns nothing"


SetWar3ImageInvulnerable=SetWar3ImageInvulnerable
SetWar3ImageInvulnerable="SetWar3ImageInvulnerable(",~whichWar3Image,", ",~invulnerable,")"
SetWar3ImageInvulnerableHint="[UjAPI]  SetWar3ImageInvulnerable takes war3image whichWar3Image, boolean invulnerable returns nothing"


SetWar3ImagePositionLoc=SetWar3ImagePositionLoc
SetWar3ImagePositionLoc="SetWar3ImagePositionLoc(",~whichWar3Image,", ",~whichLocation,")"
SetWar3ImagePositionLocHint="[UjAPI]  SetWar3ImagePositionLoc takes war3image whichWar3Image, location whichLocation returns nothing"


SetWar3ImagePosition=SetWar3ImagePosition
SetWar3ImagePosition="SetWar3ImagePosition(",~whichWar3Image,", ",~x,", ",~y,")"
SetWar3ImagePositionHint="[UjAPI]  SetWar3ImagePosition takes war3image whichWar3Image, real x, real y returns nothing"


SetWar3ImagePositionWithZ=SetWar3ImagePositionWithZ
SetWar3ImagePositionWithZ="SetWar3ImagePositionWithZ(",~whichWar3Image,", ",~x,", ",~y,", ",~z,")"
SetWar3ImagePositionWithZHint="[UjAPI]  SetWar3ImagePositionWithZ takes war3image whichWar3Image, real x, real y, real z returns nothing"


SetWar3ImageX=SetWar3ImageX
SetWar3ImageX="SetWar3ImageX(",~whichWar3Image,", ",~x,")"
SetWar3ImageXHint="[UjAPI]  SetWar3ImageX takes war3image whichWar3Image, real x returns nothing"


SetWar3ImageY=SetWar3ImageY
SetWar3ImageY="SetWar3ImageY(",~whichWar3Image,", ",~y,")"
SetWar3ImageYHint="[UjAPI]  SetWar3ImageY takes war3image whichWar3Image, real y returns nothing"


SetWar3ImageZ=SetWar3ImageZ
SetWar3ImageZ="SetWar3ImageZ(",~whichWar3Image,", ",~z,")"
SetWar3ImageZHint="[UjAPI]  SetWar3ImageZ takes war3image whichWar3Image, real z returns nothing"


ResetWar3ImageZ=ResetWar3ImageZ
ResetWar3ImageZ="ResetWar3ImageZ(",~whichWar3Image,")"
ResetWar3ImageZHint="[UjAPI]  ResetWar3ImageZ takes war3image whichWar3Image returns nothing"


SetWar3ImageHeight=SetWar3ImageHeight
SetWar3ImageHeight="SetWar3ImageHeight(",~whichWar3Image,", ",~height,")"
SetWar3ImageHeightHint="[UjAPI]  SetWar3ImageHeight takes war3image whichWar3Image, real height returns nothing"


SetWar3ImagePlayerColour=SetWar3ImagePlayerColour
SetWar3ImagePlayerColour="SetWar3ImagePlayerColour(",~whichWar3Image,", ",~color,")"
SetWar3ImagePlayerColourHint="[UjAPI]  SetWar3ImagePlayerColour takes war3image whichWar3Image, playercolor color returns nothing"


SetWar3ImageVertexColour=SetWar3ImageVertexColour
SetWar3ImageVertexColour="SetWar3ImageVertexColour(",~whichWar3Image,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWar3ImageVertexColourHint="[UjAPI]  SetWar3ImageVertexColour takes war3image whichWar3Image, integer red, integer green, integer blue, integer alpha returns nothing"


SetWar3ImageTimeScale=SetWar3ImageTimeScale
SetWar3ImageTimeScale="SetWar3ImageTimeScale(",~whichWar3Image,", ",~timeScale,")"
SetWar3ImageTimeScaleHint="[UjAPI]  SetWar3ImageTimeScale takes war3image whichWar3Image, real timeScale returns nothing"


SetWar3ImageScale=SetWar3ImageScale
SetWar3ImageScale="SetWar3ImageScale(",~whichWar3Image,", ",~scale,")"
SetWar3ImageScaleHint="[UjAPI]  SetWar3ImageScale takes war3image whichWar3Image, real scale returns nothing"


SetWar3ImageFacing=SetWar3ImageFacing
SetWar3ImageFacing="SetWar3ImageFacing(",~whichWar3Image,", ",~facing,", ",~isInstant,")"
SetWar3ImageFacingHint="[UjAPI]  SetWar3ImageFacing takes war3image whichWar3Image, real facing, boolean isInstant returns nothing"


SetWar3ImageMatrixScale=SetWar3ImageMatrixScale
SetWar3ImageMatrixScale="SetWar3ImageMatrixScale(",~whichWar3Image,", ",~x,", ",~y,", ",~z,")"
SetWar3ImageMatrixScaleHint="[UjAPI]  SetWar3ImageMatrixScale takes war3image whichWar3Image, real x, real y, real z returns nothing"


ResetWar3ImageMatrix=ResetWar3ImageMatrix
ResetWar3ImageMatrix="ResetWar3ImageMatrix(",~whichWar3Image,")"
ResetWar3ImageMatrixHint="[UjAPI]  ResetWar3ImageMatrix takes war3image whichWar3Image returns nothing"


SetWar3ImageOrientationEx=SetWar3ImageOrientationEx
SetWar3ImageOrientationEx="SetWar3ImageOrientationEx(",~whichWar3Image,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWar3ImageOrientationExHint="[UjAPI]  SetWar3ImageOrientationEx takes war3image whichWar3Image, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetWar3ImageOrientation=SetWar3ImageOrientation
SetWar3ImageOrientation="SetWar3ImageOrientation(",~whichWar3Image,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWar3ImageOrientationHint="[UjAPI]  SetWar3ImageOrientation takes war3image whichWar3Image, real yaw, real pitch, real roll returns nothing"


SetWar3ImageYaw=SetWar3ImageYaw
SetWar3ImageYaw="SetWar3ImageYaw(",~whichWar3Image,", ",~yaw,")"
SetWar3ImageYawHint="[UjAPI]  SetWar3ImageYaw takes war3image whichWar3Image, real yaw returns nothing"


SetWar3ImagePitch=SetWar3ImagePitch
SetWar3ImagePitch="SetWar3ImagePitch(",~whichWar3Image,", ",~pitch,")"
SetWar3ImagePitchHint="[UjAPI]  SetWar3ImagePitch takes war3image whichWar3Image, real pitch returns nothing"


SetWar3ImageRoll=SetWar3ImageRoll
SetWar3ImageRoll="SetWar3ImageRoll(",~whichWar3Image,", ",~roll,")"
SetWar3ImageRollHint="[UjAPI]  SetWar3ImageRoll takes war3image whichWar3Image, real roll returns nothing"


SetWar3ImageModel=SetWar3ImageModel
SetWar3ImageModel="SetWar3ImageModel(",~whichWar3Image,", ",~modelFile,")"
SetWar3ImageModelHint="[UjAPI]  SetWar3ImageModel takes war3image whichWar3Image, string modelFile returns nothing"


SetWar3ImageModelEx=SetWar3ImageModelEx
SetWar3ImageModelEx="SetWar3ImageModelEx(",~whichWar3Image,", ",~modelFile,", ",~playerId,")"
SetWar3ImageModelExHint="[UjAPI]  SetWar3ImageModelEx takes war3image whichWar3Image, string modelFile, integer playerId returns nothing"


SetWar3ImageMaterialTexture=SetWar3ImageMaterialTexture
SetWar3ImageMaterialTexture="SetWar3ImageMaterialTexture(",~whichWar3Image,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWar3ImageMaterialTextureHint="[UjAPI]  SetWar3ImageMaterialTexture takes war3image whichWar3Image, string textureName, integer materialId, integer textureIndex returns nothing"


SetWar3ImageTexture=SetWar3ImageTexture
SetWar3ImageTexture="SetWar3ImageTexture(",~whichWar3Image,", ",~textureName,", ",~textureIndex,")"
SetWar3ImageTextureHint="[UjAPI]  SetWar3ImageTexture takes war3image whichWar3Image, string textureName, integer textureIndex returns nothing"


SetWar3ImageReplaceableTexture=SetWar3ImageReplaceableTexture
SetWar3ImageReplaceableTexture="SetWar3ImageReplaceableTexture(",~whichWar3Image,", ",~textureName,", ",~textureIndex,")"
SetWar3ImageReplaceableTextureHint="[UjAPI]  SetWar3ImageReplaceableTexture takes war3image whichWar3Image, string textureName, integer textureIndex returns nothing"


SetWar3ImageAnimationWithRarityByIndex=SetWar3ImageAnimationWithRarityByIndex
SetWar3ImageAnimationWithRarityByIndex="SetWar3ImageAnimationWithRarityByIndex(",~whichWar3Image,", ",~animIndex,", ",~rarity,")"
SetWar3ImageAnimationWithRarityByIndexHint="[UjAPI]  SetWar3ImageAnimationWithRarityByIndex takes war3image whichWar3Image, integer animIndex, raritycontrol rarity returns nothing"


SetWar3ImageAnimationWithRarity=SetWar3ImageAnimationWithRarity
SetWar3ImageAnimationWithRarity="SetWar3ImageAnimationWithRarity(",~whichWar3Image,", ",~animationName,", ",~rarity,")"
SetWar3ImageAnimationWithRarityHint="[UjAPI]  SetWar3ImageAnimationWithRarity takes war3image whichWar3Image, string animationName, raritycontrol rarity returns nothing"


SetWar3ImageAnimationByIndex=SetWar3ImageAnimationByIndex
SetWar3ImageAnimationByIndex="SetWar3ImageAnimationByIndex(",~whichWar3Image,", ",~animIndex,")"
SetWar3ImageAnimationByIndexHint="[UjAPI]  SetWar3ImageAnimationByIndex takes war3image whichWar3Image, integer animIndex returns nothing"


SetWar3ImageAnimation=SetWar3ImageAnimation
SetWar3ImageAnimation="SetWar3ImageAnimation(",~whichWar3Image,", ",~animationName,")"
SetWar3ImageAnimationHint="[UjAPI]  SetWar3ImageAnimation takes war3image whichWar3Image, string animationName returns nothing"


QueueWar3ImageAnimationByIndex=QueueWar3ImageAnimationByIndex
QueueWar3ImageAnimationByIndex="QueueWar3ImageAnimationByIndex(",~whichWar3Image,", ",~animIndex,")"
QueueWar3ImageAnimationByIndexHint="[UjAPI]  QueueWar3ImageAnimationByIndex takes war3image whichWar3Image, integer animIndex returns nothing"


QueueWar3ImageAnimation=QueueWar3ImageAnimation
QueueWar3ImageAnimation="QueueWar3ImageAnimation(",~whichWar3Image,", ",~animationName,")"
QueueWar3ImageAnimationHint="[UjAPI]  QueueWar3ImageAnimation takes war3image whichWar3Image, string animationName returns nothing"


SetWar3ImageAnimationOffsetPercent=SetWar3ImageAnimationOffsetPercent
SetWar3ImageAnimationOffsetPercent="SetWar3ImageAnimationOffsetPercent(",~whichWar3Image,", ",~percent,")"
SetWar3ImageAnimationOffsetPercentHint="[UjAPI]  SetWar3ImageAnimationOffsetPercent takes war3image whichWar3Image, real percent returns nothing"


CreateSprite=CreateSprite
CreateSprite="CreateSprite(",~isUber,")"
CreateSpriteHint="[UjAPI]  CreateSprite takes boolean isUber returns sprite"


DetachSprite=DetachSprite
DetachSprite="DetachSprite(",~whichSprite,")"
DetachSpriteHint="[UjAPI]  DetachSprite takes sprite whichSprite returns nothing"


RemoveSprite=RemoveSprite
RemoveSprite="RemoveSprite(",~whichSprite,")"
RemoveSpriteHint="[UjAPI]  RemoveSprite takes sprite whichSprite returns nothing"


SetSpritePosition=SetSpritePosition
SetSpritePosition="SetSpritePosition(",~whichSprite,", ",~x,", ",~y,")"
SetSpritePositionHint="[UjAPI]  SetSpritePosition takes sprite whichSprite, real x, real y returns nothing"


SetSpritePositionWithZ=SetSpritePositionWithZ
SetSpritePositionWithZ="SetSpritePositionWithZ(",~whichSprite,", ",~x,", ",~y,", ",~z,")"
SetSpritePositionWithZHint="[UjAPI]  SetSpritePositionWithZ takes sprite whichSprite, real x, real y, real z returns nothing"


SetSpritePositionLoc=SetSpritePositionLoc
SetSpritePositionLoc="SetSpritePositionLoc(",~whichSprite,", ",~loc,")"
SetSpritePositionLocHint="[UjAPI]  SetSpritePositionLoc takes sprite whichSprite, location loc returns nothing"


SetSpriteX=SetSpriteX
SetSpriteX="SetSpriteX(",~whichSprite,", ",~x,")"
SetSpriteXHint="[UjAPI]  SetSpriteX takes sprite whichSprite, real x returns nothing"


SetSpriteY=SetSpriteY
SetSpriteY="SetSpriteY(",~whichSprite,", ",~y,")"
SetSpriteYHint="[UjAPI]  SetSpriteY takes sprite whichSprite, real y returns nothing"


SetSpriteZ=SetSpriteZ
SetSpriteZ="SetSpriteZ(",~whichSprite,", ",~z,")"
SetSpriteZHint="[UjAPI]  SetSpriteZ takes sprite whichSprite, real z returns nothing"


SetSpriteHeight=SetSpriteHeight
SetSpriteHeight="SetSpriteHeight(",~whichSprite,", ",~height,")"
SetSpriteHeightHint="[UjAPI]  SetSpriteHeight takes sprite whichSprite, real height returns nothing"


SetSpriteScale=SetSpriteScale
SetSpriteScale="SetSpriteScale(",~whichSprite,", ",~scale,")"
SetSpriteScaleHint="[UjAPI]  SetSpriteScale takes sprite whichSprite, real scale returns nothing"


SetSpriteTimeScale=SetSpriteTimeScale
SetSpriteTimeScale="SetSpriteTimeScale(",~whichSprite,", ",~timescale,")"
SetSpriteTimeScaleHint="[UjAPI]  SetSpriteTimeScale takes sprite whichSprite, real timescale returns nothing"


SetSpritePlayerColour=SetSpritePlayerColour
SetSpritePlayerColour="SetSpritePlayerColour(",~whichSprite,", ",~color,")"
SetSpritePlayerColourHint="[UjAPI]  SetSpritePlayerColour takes sprite whichSprite, playercolor color returns nothing"


SetSpriteColour=SetSpriteColour
SetSpriteColour="SetSpriteColour(",~whichSprite,", ",~colour,")"
SetSpriteColourHint="[UjAPI]  SetSpriteColour takes sprite whichSprite, integer colour returns nothing"


SetSpriteAlpha=SetSpriteAlpha
SetSpriteAlpha="SetSpriteAlpha(",~whichSprite,", ",~alpha,")"
SetSpriteAlphaHint="[UjAPI]  SetSpriteAlpha takes sprite whichSprite, integer alpha returns nothing"


SetSpriteVertexColour=SetSpriteVertexColour
SetSpriteVertexColour="SetSpriteVertexColour(",~whichSprite,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetSpriteVertexColourHint="[UjAPI]  SetSpriteVertexColour takes sprite whichSprite, integer red, integer green, integer blue, integer alpha returns nothing"


SetSpriteMatrixScale=SetSpriteMatrixScale
SetSpriteMatrixScale="SetSpriteMatrixScale(",~whichSprite,", ",~x,", ",~y,", ",~z,")"
SetSpriteMatrixScaleHint="[UjAPI]  SetSpriteMatrixScale takes sprite whichSprite, real x, real y, real z returns nothing"


ResetSpriteMatrix=ResetSpriteMatrix
ResetSpriteMatrix="ResetSpriteMatrix(",~whichSprite,")"
ResetSpriteMatrixHint="[UjAPI]  ResetSpriteMatrix takes sprite whichSprite returns nothing"


SetSpriteOrientationEx=SetSpriteOrientationEx
SetSpriteOrientationEx="SetSpriteOrientationEx(",~whichSprite,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetSpriteOrientationExHint="[UjAPI]  SetSpriteOrientationEx takes sprite whichSprite, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetSpriteYaw=SetSpriteYaw
SetSpriteYaw="SetSpriteYaw(",~whichSprite,", ",~yaw,")"
SetSpriteYawHint="[UjAPI]  SetSpriteYaw takes sprite whichSprite, real yaw returns nothing"


SetSpriteFacing=SetSpriteFacing
SetSpriteFacing="SetSpriteFacing(",~whichSprite,", ",~facing,")"
SetSpriteFacingHint="[UjAPI]  SetSpriteFacing takes sprite whichSprite, real facing returns nothing"


SetSpritePitch=SetSpritePitch
SetSpritePitch="SetSpritePitch(",~whichSprite,", ",~pitch,")"
SetSpritePitchHint="[UjAPI]  SetSpritePitch takes sprite whichSprite, real pitch returns nothing"


SetSpriteRoll=SetSpriteRoll
SetSpriteRoll="SetSpriteRoll(",~whichSprite,", ",~roll,")"
SetSpriteRollHint="[UjAPI]  SetSpriteRoll takes sprite whichSprite, real roll returns nothing"


SetSpriteOrientation=SetSpriteOrientation
SetSpriteOrientation="SetSpriteOrientation(",~whichSprite,", ",~yaw,", ",~pitch,", ",~roll,")"
SetSpriteOrientationHint="[UjAPI]  SetSpriteOrientation takes sprite whichSprite, real yaw, real pitch, real roll returns nothing"


SetSpriteMaterialTexture=SetSpriteMaterialTexture
SetSpriteMaterialTexture="SetSpriteMaterialTexture(",~whichSprite,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetSpriteMaterialTextureHint="[UjAPI]  SetSpriteMaterialTexture takes sprite whichSprite, string textureName, integer materialId, integer textureIndex returns nothing"


SetSpriteTexture=SetSpriteTexture
SetSpriteTexture="SetSpriteTexture(",~whichSprite,", ",~textureName,", ",~textureIndex,")"
SetSpriteTextureHint="[UjAPI]  SetSpriteTexture takes sprite whichSprite, string textureName, integer textureIndex returns nothing"


SetSpriteReplaceableTexture=SetSpriteReplaceableTexture
SetSpriteReplaceableTexture="SetSpriteReplaceableTexture(",~whichSprite,", ",~textureName,", ",~textureIndex,")"
SetSpriteReplaceableTextureHint="[UjAPI]  SetSpriteReplaceableTexture takes sprite whichSprite, string textureName, integer textureIndex returns nothing"


SetSpriteModel=SetSpriteModel
SetSpriteModel="SetSpriteModel(",~whichSprite,", ",~modelName,")"
SetSpriteModelHint="[UjAPI]  SetSpriteModel takes sprite whichSprite, string modelName returns nothing"


SetSpriteModelEx=SetSpriteModelEx
SetSpriteModelEx="SetSpriteModelEx(",~whichSprite,", ",~modelName,", ",~playerColour,")"
SetSpriteModelExHint="[UjAPI]  SetSpriteModelEx takes sprite whichSprite, string modelName, integer playerColour returns nothing"


SetSpriteAnimationWithRarityByIndex=SetSpriteAnimationWithRarityByIndex
SetSpriteAnimationWithRarityByIndex="SetSpriteAnimationWithRarityByIndex(",~whichSprite,", ",~animIndex,", ",~rarity,")"
SetSpriteAnimationWithRarityByIndexHint="[UjAPI]  SetSpriteAnimationWithRarityByIndex takes sprite whichSprite, integer animIndex, raritycontrol rarity returns nothing"


SetSpriteAnimationWithRarity=SetSpriteAnimationWithRarity
SetSpriteAnimationWithRarity="SetSpriteAnimationWithRarity(",~whichSprite,", ",~animationName,", ",~rarity,")"
SetSpriteAnimationWithRarityHint="[UjAPI]  SetSpriteAnimationWithRarity takes sprite whichSprite, string animationName, raritycontrol rarity returns nothing"


SetSpriteAnimationByIndex=SetSpriteAnimationByIndex
SetSpriteAnimationByIndex="SetSpriteAnimationByIndex(",~whichSprite,", ",~animIndex,")"
SetSpriteAnimationByIndexHint="[UjAPI]  SetSpriteAnimationByIndex takes sprite whichSprite, integer animIndex returns nothing"


SetSpriteAnimation=SetSpriteAnimation
SetSpriteAnimation="SetSpriteAnimation(",~whichSprite,", ",~animationName,")"
SetSpriteAnimationHint="[UjAPI]  SetSpriteAnimation takes sprite whichSprite, string animationName returns nothing"


QueueSpriteAnimationByIndex=QueueSpriteAnimationByIndex
QueueSpriteAnimationByIndex="QueueSpriteAnimationByIndex(",~whichSprite,", ",~animIndex,")"
QueueSpriteAnimationByIndexHint="[UjAPI]  QueueSpriteAnimationByIndex takes sprite whichSprite, integer animIndex returns nothing"


QueueSpriteAnimation=QueueSpriteAnimation
QueueSpriteAnimation="QueueSpriteAnimation(",~whichSprite,", ",~animationName,")"
QueueSpriteAnimationHint="[UjAPI]  QueueSpriteAnimation takes sprite whichSprite, string animationName returns nothing"


SetSpriteAnimationOffsetPercent=SetSpriteAnimationOffsetPercent
SetSpriteAnimationOffsetPercent="SetSpriteAnimationOffsetPercent(",~whichSprite,", ",~percent,")"
SetSpriteAnimationOffsetPercentHint="[UjAPI]  SetSpriteAnimationOffsetPercent takes sprite whichSprite, real percent returns nothing"


SetSpecialEffectVisible=SetSpecialEffectVisible
SetSpecialEffectVisible="SetSpecialEffectVisible(",~whichEffect,", ",~visibility,")"
SetSpecialEffectVisibleHint="[UjAPI]  SetSpecialEffectVisible takes effect whichEffect, boolean visibility returns nothing"


SetSpecialEffectPosition=SetSpecialEffectPosition
SetSpecialEffectPosition="SetSpecialEffectPosition(",~whichEffect,", ",~x,", ",~y,")"
SetSpecialEffectPositionHint="[UjAPI]  SetSpecialEffectPosition takes effect whichEffect, real x, real y returns nothing"


SetSpecialEffectPositionWithZ=SetSpecialEffectPositionWithZ
SetSpecialEffectPositionWithZ="SetSpecialEffectPositionWithZ(",~whichEffect,", ",~x,", ",~y,", ",~z,")"
SetSpecialEffectPositionWithZHint="[UjAPI]  SetSpecialEffectPositionWithZ takes effect whichEffect, real x, real y, real z returns nothing"


SetSpecialEffectPositionLoc=SetSpecialEffectPositionLoc
SetSpecialEffectPositionLoc="SetSpecialEffectPositionLoc(",~whichEffect,", ",~loc,")"
SetSpecialEffectPositionLocHint="[UjAPI]  SetSpecialEffectPositionLoc takes effect whichEffect, location loc returns nothing"


SetSpecialEffectX=SetSpecialEffectX
SetSpecialEffectX="SetSpecialEffectX(",~whichEffect,", ",~x,")"
SetSpecialEffectXHint="[UjAPI]  SetSpecialEffectX takes effect whichEffect, real x returns nothing"


SetSpecialEffectY=SetSpecialEffectY
SetSpecialEffectY="SetSpecialEffectY(",~whichEffect,", ",~y,")"
SetSpecialEffectYHint="[UjAPI]  SetSpecialEffectY takes effect whichEffect, real y returns nothing"


SetSpecialEffectZ=SetSpecialEffectZ
SetSpecialEffectZ="SetSpecialEffectZ(",~whichEffect,", ",~z,")"
SetSpecialEffectZHint="[UjAPI]  SetSpecialEffectZ takes effect whichEffect, real z returns nothing"


SetSpecialEffectHeight=SetSpecialEffectHeight
SetSpecialEffectHeight="SetSpecialEffectHeight(",~whichEffect,", ",~height,")"
SetSpecialEffectHeightHint="[UjAPI]  SetSpecialEffectHeight takes effect whichEffect, real height returns nothing"


SetSpecialEffectScale=SetSpecialEffectScale
SetSpecialEffectScale="SetSpecialEffectScale(",~whichEffect,", ",~scale,")"
SetSpecialEffectScaleHint="[UjAPI]  SetSpecialEffectScale takes effect whichEffect, real scale returns nothing"


SetSpecialEffectTimeScale=SetSpecialEffectTimeScale
SetSpecialEffectTimeScale="SetSpecialEffectTimeScale(",~whichEffect,", ",~timescale,")"
SetSpecialEffectTimeScaleHint="[UjAPI]  SetSpecialEffectTimeScale takes effect whichEffect, real timescale returns nothing"


SetSpecialEffectPlayerColour=SetSpecialEffectPlayerColour
SetSpecialEffectPlayerColour="SetSpecialEffectPlayerColour(",~whichEffect,", ",~color,")"
SetSpecialEffectPlayerColourHint="[UjAPI]  SetSpecialEffectPlayerColour takes effect whichEffect, playercolor color returns nothing"


SetSpecialEffectColour=SetSpecialEffectColour
SetSpecialEffectColour="SetSpecialEffectColour(",~whichEffect,", ",~colour,")"
SetSpecialEffectColourHint="[UjAPI]  SetSpecialEffectColour takes effect whichEffect, integer colour returns nothing"


SetSpecialEffectAlpha=SetSpecialEffectAlpha
SetSpecialEffectAlpha="SetSpecialEffectAlpha(",~whichEffect,", ",~alpha,")"
SetSpecialEffectAlphaHint="[UjAPI]  SetSpecialEffectAlpha takes effect whichEffect, integer alpha returns nothing"


SetSpecialEffectVertexColour=SetSpecialEffectVertexColour
SetSpecialEffectVertexColour="SetSpecialEffectVertexColour(",~whichEffect,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetSpecialEffectVertexColourHint="[UjAPI]  SetSpecialEffectVertexColour takes effect whichEffect, integer red, integer green, integer blue, integer alpha returns nothing"


SetSpecialEffectMatrixScale=SetSpecialEffectMatrixScale
SetSpecialEffectMatrixScale="SetSpecialEffectMatrixScale(",~whichEffect,", ",~x,", ",~y,", ",~z,")"
SetSpecialEffectMatrixScaleHint="[UjAPI]  SetSpecialEffectMatrixScale takes effect whichEffect, real x, real y, real z returns nothing"


ResetSpecialEffectMatrix=ResetSpecialEffectMatrix
ResetSpecialEffectMatrix="ResetSpecialEffectMatrix(",~whichEffect,")"
ResetSpecialEffectMatrixHint="[UjAPI]  ResetSpecialEffectMatrix takes effect whichEffect returns nothing"


SetSpecialEffectOrientationEx=SetSpecialEffectOrientationEx
SetSpecialEffectOrientationEx="SetSpecialEffectOrientationEx(",~whichEffect,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetSpecialEffectOrientationExHint="[UjAPI]  SetSpecialEffectOrientationEx takes effect whichEffect, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetSpecialEffectYaw=SetSpecialEffectYaw
SetSpecialEffectYaw="SetSpecialEffectYaw(",~whichEffect,", ",~yaw,")"
SetSpecialEffectYawHint="[UjAPI]  SetSpecialEffectYaw takes effect whichEffect, real yaw returns nothing"


SetSpecialEffectFacing=SetSpecialEffectFacing
SetSpecialEffectFacing="SetSpecialEffectFacing(",~whichEffect,", ",~facing,")"
SetSpecialEffectFacingHint="[UjAPI]  SetSpecialEffectFacing takes effect whichEffect, real facing returns nothing"


SetSpecialEffectPitch=SetSpecialEffectPitch
SetSpecialEffectPitch="SetSpecialEffectPitch(",~whichEffect,", ",~pitch,")"
SetSpecialEffectPitchHint="[UjAPI]  SetSpecialEffectPitch takes effect whichEffect, real pitch returns nothing"


SetSpecialEffectRoll=SetSpecialEffectRoll
SetSpecialEffectRoll="SetSpecialEffectRoll(",~whichEffect,", ",~roll,")"
SetSpecialEffectRollHint="[UjAPI]  SetSpecialEffectRoll takes effect whichEffect, real roll returns nothing"


SetSpecialEffectOrientation=SetSpecialEffectOrientation
SetSpecialEffectOrientation="SetSpecialEffectOrientation(",~whichEffect,", ",~yaw,", ",~pitch,", ",~roll,")"
SetSpecialEffectOrientationHint="[UjAPI]  SetSpecialEffectOrientation takes effect whichEffect, real yaw, real pitch, real roll returns nothing"


SetSpecialEffectMaterialTexture=SetSpecialEffectMaterialTexture
SetSpecialEffectMaterialTexture="SetSpecialEffectMaterialTexture(",~whichEffect,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetSpecialEffectMaterialTextureHint="[UjAPI]  SetSpecialEffectMaterialTexture takes effect whichEffect, string textureName, integer materialId, integer textureIndex returns nothing"


SetSpecialEffectTexture=SetSpecialEffectTexture
SetSpecialEffectTexture="SetSpecialEffectTexture(",~whichEffect,", ",~textureName,", ",~textureIndex,")"
SetSpecialEffectTextureHint="[UjAPI]  SetSpecialEffectTexture takes effect whichEffect, string textureName, integer textureIndex returns nothing"


SetSpecialEffectReplaceableTexture=SetSpecialEffectReplaceableTexture
SetSpecialEffectReplaceableTexture="SetSpecialEffectReplaceableTexture(",~whichEffect,", ",~textureName,", ",~textureIndex,")"
SetSpecialEffectReplaceableTextureHint="[UjAPI]  SetSpecialEffectReplaceableTexture takes effect whichEffect, string textureName, integer textureIndex returns nothing"


SetSpecialEffectModel=SetSpecialEffectModel
SetSpecialEffectModel="SetSpecialEffectModel(",~whichEffect,", ",~modelName,")"
SetSpecialEffectModelHint="[UjAPI]  SetSpecialEffectModel takes effect whichEffect, string modelName returns nothing"


SetSpecialEffectModelEx=SetSpecialEffectModelEx
SetSpecialEffectModelEx="SetSpecialEffectModelEx(",~whichEffect,", ",~modelName,", ",~playerColour,")"
SetSpecialEffectModelExHint="[UjAPI]  SetSpecialEffectModelEx takes effect whichEffect, string modelName, integer playerColour returns nothing"


SetSpecialEffectAnimationWithRarityByIndex=SetSpecialEffectAnimationWithRarityByIndex
SetSpecialEffectAnimationWithRarityByIndex="SetSpecialEffectAnimationWithRarityByIndex(",~whichEffect,", ",~animIndex,", ",~rarity,")"
SetSpecialEffectAnimationWithRarityByIndexHint="[UjAPI]  SetSpecialEffectAnimationWithRarityByIndex takes effect whichEffect, integer animIndex, raritycontrol rarity returns nothing"


SetSpecialEffectAnimationWithRarity=SetSpecialEffectAnimationWithRarity
SetSpecialEffectAnimationWithRarity="SetSpecialEffectAnimationWithRarity(",~whichEffect,", ",~animationName,", ",~rarity,")"
SetSpecialEffectAnimationWithRarityHint="[UjAPI]  SetSpecialEffectAnimationWithRarity takes effect whichEffect, string animationName, raritycontrol rarity returns nothing"


SetSpecialEffectAnimationByIndex=SetSpecialEffectAnimationByIndex
SetSpecialEffectAnimationByIndex="SetSpecialEffectAnimationByIndex(",~whichEffect,", ",~animIndex,")"
SetSpecialEffectAnimationByIndexHint="[UjAPI]  SetSpecialEffectAnimationByIndex takes effect whichEffect, integer animIndex returns nothing"


SetSpecialEffectAnimation=SetSpecialEffectAnimation
SetSpecialEffectAnimation="SetSpecialEffectAnimation(",~whichEffect,", ",~animationName,")"
SetSpecialEffectAnimationHint="[UjAPI]  SetSpecialEffectAnimation takes effect whichEffect, string animationName returns nothing"


QueueSpecialEffectAnimationByIndex=QueueSpecialEffectAnimationByIndex
QueueSpecialEffectAnimationByIndex="QueueSpecialEffectAnimationByIndex(",~whichEffect,", ",~animIndex,")"
QueueSpecialEffectAnimationByIndexHint="[UjAPI]  QueueSpecialEffectAnimationByIndex takes effect whichEffect, integer animIndex returns nothing"


QueueSpecialEffectAnimation=QueueSpecialEffectAnimation
QueueSpecialEffectAnimation="QueueSpecialEffectAnimation(",~whichEffect,", ",~animationName,")"
QueueSpecialEffectAnimationHint="[UjAPI]  QueueSpecialEffectAnimation takes effect whichEffect, string animationName returns nothing"


SetSpecialEffectAnimationOffsetPercent=SetSpecialEffectAnimationOffsetPercent
SetSpecialEffectAnimationOffsetPercent="SetSpecialEffectAnimationOffsetPercent(",~whichEffect,", ",~percent,")"
SetSpecialEffectAnimationOffsetPercentHint="[UjAPI]  SetSpecialEffectAnimationOffsetPercent takes effect whichEffect, real percent returns nothing"


EnumSpecialEffectsInRange=EnumSpecialEffectsInRange
EnumSpecialEffectsInRange="EnumSpecialEffectsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumSpecialEffectsInRangeHint="[UjAPI]  EnumSpecialEffectsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


SetTrackableVisible=SetTrackableVisible
SetTrackableVisible="SetTrackableVisible(",~whichTrackable,", ",~visibility,")"
SetTrackableVisibleHint="[UjAPI]  SetTrackableVisible takes trackable whichTrackable, boolean visibility returns nothing"


SetTrackablePosition=SetTrackablePosition
SetTrackablePosition="SetTrackablePosition(",~whichTrackable,", ",~x,", ",~y,")"
SetTrackablePositionHint="[UjAPI]  SetTrackablePosition takes trackable whichTrackable, real x, real y returns nothing"


SetTrackablePositionWithZ=SetTrackablePositionWithZ
SetTrackablePositionWithZ="SetTrackablePositionWithZ(",~whichTrackable,", ",~x,", ",~y,", ",~z,")"
SetTrackablePositionWithZHint="[UjAPI]  SetTrackablePositionWithZ takes trackable whichTrackable, real x, real y, real z returns nothing"


SetTrackablePositionLoc=SetTrackablePositionLoc
SetTrackablePositionLoc="SetTrackablePositionLoc(",~whichTrackable,", ",~loc,")"
SetTrackablePositionLocHint="[UjAPI]  SetTrackablePositionLoc takes trackable whichTrackable, location loc returns nothing"


SetTrackableX=SetTrackableX
SetTrackableX="SetTrackableX(",~whichTrackable,", ",~x,")"
SetTrackableXHint="[UjAPI]  SetTrackableX takes trackable whichTrackable, real x returns nothing"


SetTrackableY=SetTrackableY
SetTrackableY="SetTrackableY(",~whichTrackable,", ",~y,")"
SetTrackableYHint="[UjAPI]  SetTrackableY takes trackable whichTrackable, real y returns nothing"


SetTrackableZ=SetTrackableZ
SetTrackableZ="SetTrackableZ(",~whichTrackable,", ",~z,")"
SetTrackableZHint="[UjAPI]  SetTrackableZ takes trackable whichTrackable, real z returns nothing"


SetTrackableHeight=SetTrackableHeight
SetTrackableHeight="SetTrackableHeight(",~whichTrackable,", ",~height,")"
SetTrackableHeightHint="[UjAPI]  SetTrackableHeight takes trackable whichTrackable, real height returns nothing"


SetTrackableScale=SetTrackableScale
SetTrackableScale="SetTrackableScale(",~whichTrackable,", ",~scale,")"
SetTrackableScaleHint="[UjAPI]  SetTrackableScale takes trackable whichTrackable, real scale returns nothing"


SetTrackableTimeScale=SetTrackableTimeScale
SetTrackableTimeScale="SetTrackableTimeScale(",~whichTrackable,", ",~timescale,")"
SetTrackableTimeScaleHint="[UjAPI]  SetTrackableTimeScale takes trackable whichTrackable, real timescale returns nothing"


SetTrackablePlayerColour=SetTrackablePlayerColour
SetTrackablePlayerColour="SetTrackablePlayerColour(",~whichTrackable,", ",~color,")"
SetTrackablePlayerColourHint="[UjAPI]  SetTrackablePlayerColour takes trackable whichTrackable, playercolor color returns nothing"


SetTrackableColour=SetTrackableColour
SetTrackableColour="SetTrackableColour(",~whichTrackable,", ",~colour,")"
SetTrackableColourHint="[UjAPI]  SetTrackableColour takes trackable whichTrackable, integer colour returns nothing"


SetTrackableAlpha=SetTrackableAlpha
SetTrackableAlpha="SetTrackableAlpha(",~whichTrackable,", ",~alpha,")"
SetTrackableAlphaHint="[UjAPI]  SetTrackableAlpha takes trackable whichTrackable, integer alpha returns nothing"


SetTrackableVertexColour=SetTrackableVertexColour
SetTrackableVertexColour="SetTrackableVertexColour(",~whichTrackable,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetTrackableVertexColourHint="[UjAPI]  SetTrackableVertexColour takes trackable whichTrackable, integer red, integer green, integer blue, integer alpha returns nothing"


SetTrackableEffectMatrixScale=SetTrackableEffectMatrixScale
SetTrackableEffectMatrixScale="SetTrackableEffectMatrixScale(",~whichTrackable,", ",~x,", ",~y,", ",~z,")"
SetTrackableEffectMatrixScaleHint="[UjAPI]  SetTrackableEffectMatrixScale takes trackable whichTrackable, real x, real y, real z returns nothing"


ResetTrackableMatrix=ResetTrackableMatrix
ResetTrackableMatrix="ResetTrackableMatrix(",~whichTrackable,")"
ResetTrackableMatrixHint="[UjAPI]  ResetTrackableMatrix takes trackable whichTrackable returns nothing"


SetTrackableOrientationEx=SetTrackableOrientationEx
SetTrackableOrientationEx="SetTrackableOrientationEx(",~whichTrackable,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetTrackableOrientationExHint="[UjAPI]  SetTrackableOrientationEx takes trackable whichTrackable, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetTrackableYaw=SetTrackableYaw
SetTrackableYaw="SetTrackableYaw(",~whichTrackable,", ",~yaw,")"
SetTrackableYawHint="[UjAPI]  SetTrackableYaw takes trackable whichTrackable, real yaw returns nothing"


SetTrackableFacing=SetTrackableFacing
SetTrackableFacing="SetTrackableFacing(",~whichTrackable,", ",~facing,")"
SetTrackableFacingHint="[UjAPI]  SetTrackableFacing takes trackable whichTrackable, real facing returns nothing"


SetTrackablePitch=SetTrackablePitch
SetTrackablePitch="SetTrackablePitch(",~whichTrackable,", ",~pitch,")"
SetTrackablePitchHint="[UjAPI]  SetTrackablePitch takes trackable whichTrackable, real pitch returns nothing"


SetTrackableRoll=SetTrackableRoll
SetTrackableRoll="SetTrackableRoll(",~whichTrackable,", ",~roll,")"
SetTrackableRollHint="[UjAPI]  SetTrackableRoll takes trackable whichTrackable, real roll returns nothing"


SetTrackableOrientation=SetTrackableOrientation
SetTrackableOrientation="SetTrackableOrientation(",~whichTrackable,", ",~yaw,", ",~pitch,", ",~roll,")"
SetTrackableOrientationHint="[UjAPI]  SetTrackableOrientation takes trackable whichTrackable, real yaw, real pitch, real roll returns nothing"


SetTrackableMaterialTexture=SetTrackableMaterialTexture
SetTrackableMaterialTexture="SetTrackableMaterialTexture(",~whichTrackable,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetTrackableMaterialTextureHint="[UjAPI]  SetTrackableMaterialTexture takes trackable whichTrackable, string textureName, integer materialId, integer textureIndex returns nothing"


SetTrackableTexture=SetTrackableTexture
SetTrackableTexture="SetTrackableTexture(",~whichTrackable,", ",~textureName,", ",~textureIndex,")"
SetTrackableTextureHint="[UjAPI]  SetTrackableTexture takes trackable whichTrackable, string textureName, integer textureIndex returns nothing"


SetTrackableReplaceableTexture=SetTrackableReplaceableTexture
SetTrackableReplaceableTexture="SetTrackableReplaceableTexture(",~whichTrackable,", ",~textureName,", ",~textureIndex,")"
SetTrackableReplaceableTextureHint="[UjAPI]  SetTrackableReplaceableTexture takes trackable whichTrackable, string textureName, integer textureIndex returns nothing"


SetTrackableModel=SetTrackableModel
SetTrackableModel="SetTrackableModel(",~whichTrackable,", ",~modelName,")"
SetTrackableModelHint="[UjAPI]  SetTrackableModel takes trackable whichTrackable, string modelName returns nothing"


SetTrackableModelEx=SetTrackableModelEx
SetTrackableModelEx="SetTrackableModelEx(",~whichTrackable,", ",~modelName,", ",~playerColour,")"
SetTrackableModelExHint="[UjAPI]  SetTrackableModelEx takes trackable whichTrackable, string modelName, integer playerColour returns nothing"


SetTrackableAnimationWithRarityByIndex=SetTrackableAnimationWithRarityByIndex
SetTrackableAnimationWithRarityByIndex="SetTrackableAnimationWithRarityByIndex(",~whichTrackable,", ",~animIndex,", ",~rarity,")"
SetTrackableAnimationWithRarityByIndexHint="[UjAPI]  SetTrackableAnimationWithRarityByIndex takes trackable whichTrackable, integer animIndex, raritycontrol rarity returns nothing"


SetTrackableAnimationWithRarity=SetTrackableAnimationWithRarity
SetTrackableAnimationWithRarity="SetTrackableAnimationWithRarity(",~whichTrackable,", ",~animationName,", ",~rarity,")"
SetTrackableAnimationWithRarityHint="[UjAPI]  SetTrackableAnimationWithRarity takes trackable whichTrackable, string animationName, raritycontrol rarity returns nothing"


SetTrackableAnimationByIndex=SetTrackableAnimationByIndex
SetTrackableAnimationByIndex="SetTrackableAnimationByIndex(",~whichTrackable,", ",~animIndex,")"
SetTrackableAnimationByIndexHint="[UjAPI]  SetTrackableAnimationByIndex takes trackable whichTrackable, integer animIndex returns nothing"


SetTrackableAnimation=SetTrackableAnimation
SetTrackableAnimation="SetTrackableAnimation(",~whichTrackable,", ",~animationName,")"
SetTrackableAnimationHint="[UjAPI]  SetTrackableAnimation takes trackable whichTrackable, string animationName returns nothing"


QueueTrackableAnimationByIndex=QueueTrackableAnimationByIndex
QueueTrackableAnimationByIndex="QueueTrackableAnimationByIndex(",~whichTrackable,", ",~animIndex,")"
QueueTrackableAnimationByIndexHint="[UjAPI]  QueueTrackableAnimationByIndex takes trackable whichTrackable, integer animIndex returns nothing"


QueueTrackableAnimation=QueueTrackableAnimation
QueueTrackableAnimation="QueueTrackableAnimation(",~whichTrackable,", ",~animationName,")"
QueueTrackableAnimationHint="[UjAPI]  QueueTrackableAnimation takes trackable whichTrackable, string animationName returns nothing"


SetTrackableAnimationOffsetPercent=SetTrackableAnimationOffsetPercent
SetTrackableAnimationOffsetPercent="SetTrackableAnimationOffsetPercent(",~whichTrackable,", ",~percent,")"
SetTrackableAnimationOffsetPercentHint="[UjAPI]  SetTrackableAnimationOffsetPercent takes trackable whichTrackable, real percent returns nothing"


EnumTrackablesInRange=EnumTrackablesInRange
EnumTrackablesInRange="EnumTrackablesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumTrackablesInRangeHint="[UjAPI]  EnumTrackablesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


SetWidgetTipEnabled=SetWidgetTipEnabled
SetWidgetTipEnabled="SetWidgetTipEnabled(",~enable,")"
SetWidgetTipEnabledHint="[UjAPI]  SetWidgetTipEnabled takes boolean enable returns nothing"


SetWidgetVisible=SetWidgetVisible
SetWidgetVisible="SetWidgetVisible(",~whichWidget,", ",~visible,")"
SetWidgetVisibleHint="[UjAPI]  SetWidgetVisible takes widget whichWidget, boolean visible returns nothing"


SetWidgetInvulnerable=SetWidgetInvulnerable
SetWidgetInvulnerable="SetWidgetInvulnerable(",~whichWidget,", ",~invulnerable,")"
SetWidgetInvulnerableHint="[UjAPI]  SetWidgetInvulnerable takes widget whichWidget, boolean invulnerable returns nothing"


SetWidgetPositionLoc=SetWidgetPositionLoc
SetWidgetPositionLoc="SetWidgetPositionLoc(",~whichWidget,", ",~whichLocation,")"
SetWidgetPositionLocHint="[UjAPI]  SetWidgetPositionLoc takes widget whichWidget, location whichLocation returns nothing"


SetWidgetPosition=SetWidgetPosition
SetWidgetPosition="SetWidgetPosition(",~whichWidget,", ",~x,", ",~y,")"
SetWidgetPositionHint="[UjAPI]  SetWidgetPosition takes widget whichWidget, real x, real y returns nothing"


SetWidgetPositionWithZ=SetWidgetPositionWithZ
SetWidgetPositionWithZ="SetWidgetPositionWithZ(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetPositionWithZHint="[UjAPI]  SetWidgetPositionWithZ takes widget whichWidget, real x, real y, real z returns nothing"


SetWidgetX=SetWidgetX
SetWidgetX="SetWidgetX(",~whichWidget,", ",~x,")"
SetWidgetXHint="[UjAPI]  SetWidgetX takes widget whichWidget, real x returns nothing"


SetWidgetY=SetWidgetY
SetWidgetY="SetWidgetY(",~whichWidget,", ",~y,")"
SetWidgetYHint="[UjAPI]  SetWidgetY takes widget whichWidget, real y returns nothing"


SetWidgetZ=SetWidgetZ
SetWidgetZ="SetWidgetZ(",~whichWidget,", ",~z,")"
SetWidgetZHint="[UjAPI]  SetWidgetZ takes widget whichWidget, real z returns nothing"


ResetWidgetZ=ResetWidgetZ
ResetWidgetZ="ResetWidgetZ(",~whichWidget,")"
ResetWidgetZHint="[UjAPI]  ResetWidgetZ takes widget whichWidget returns nothing"


SetWidgetHeight=SetWidgetHeight
SetWidgetHeight="SetWidgetHeight(",~whichWidget,", ",~height,")"
SetWidgetHeightHint="[UjAPI]  SetWidgetHeight takes widget whichWidget, real height returns nothing"


SetWidgetPlayerColour=SetWidgetPlayerColour
SetWidgetPlayerColour="SetWidgetPlayerColour(",~whichWidget,", ",~color,")"
SetWidgetPlayerColourHint="[UjAPI]  SetWidgetPlayerColour takes widget whichWidget, playercolor color returns nothing"


SetWidgetVertexColour=SetWidgetVertexColour
SetWidgetVertexColour="SetWidgetVertexColour(",~whichWidget,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetWidgetVertexColourHint="[UjAPI]  SetWidgetVertexColour takes widget whichWidget, integer red, integer green, integer blue, integer alpha returns nothing"


SetWidgetTimeScale=SetWidgetTimeScale
SetWidgetTimeScale="SetWidgetTimeScale(",~whichWidget,", ",~timeScale,")"
SetWidgetTimeScaleHint="[UjAPI]  SetWidgetTimeScale takes widget whichWidget, real timeScale returns nothing"


SetWidgetScale=SetWidgetScale
SetWidgetScale="SetWidgetScale(",~whichWidget,", ",~scale,")"
SetWidgetScaleHint="[UjAPI]  SetWidgetScale takes widget whichWidget, real scale returns nothing"


SetWidgetFacing=SetWidgetFacing
SetWidgetFacing="SetWidgetFacing(",~whichWidget,", ",~facing,", ",~isInstant,")"
SetWidgetFacingHint="[UjAPI]  SetWidgetFacing takes widget whichWidget, real facing, boolean isInstant returns nothing"


SetWidgetMatrixScale=SetWidgetMatrixScale
SetWidgetMatrixScale="SetWidgetMatrixScale(",~whichWidget,", ",~x,", ",~y,", ",~z,")"
SetWidgetMatrixScaleHint="[UjAPI]  SetWidgetMatrixScale takes widget whichWidget, real x, real y, real z returns nothing"


ResetWidgetMatrix=ResetWidgetMatrix
ResetWidgetMatrix="ResetWidgetMatrix(",~whichWidget,")"
ResetWidgetMatrixHint="[UjAPI]  ResetWidgetMatrix takes widget whichWidget returns nothing"


SetWidgetOrientationEx=SetWidgetOrientationEx
SetWidgetOrientationEx="SetWidgetOrientationEx(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetWidgetOrientationExHint="[UjAPI]  SetWidgetOrientationEx takes widget whichWidget, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetWidgetOrientation=SetWidgetOrientation
SetWidgetOrientation="SetWidgetOrientation(",~whichWidget,", ",~yaw,", ",~pitch,", ",~roll,")"
SetWidgetOrientationHint="[UjAPI]  SetWidgetOrientation takes widget whichWidget, real yaw, real pitch, real roll returns nothing"


SetWidgetYaw=SetWidgetYaw
SetWidgetYaw="SetWidgetYaw(",~whichWidget,", ",~yaw,")"
SetWidgetYawHint="[UjAPI]  SetWidgetYaw takes widget whichWidget, real yaw returns nothing"


SetWidgetPitch=SetWidgetPitch
SetWidgetPitch="SetWidgetPitch(",~whichWidget,", ",~pitch,")"
SetWidgetPitchHint="[UjAPI]  SetWidgetPitch takes widget whichWidget, real pitch returns nothing"


SetWidgetRoll=SetWidgetRoll
SetWidgetRoll="SetWidgetRoll(",~whichWidget,", ",~roll,")"
SetWidgetRollHint="[UjAPI]  SetWidgetRoll takes widget whichWidget, real roll returns nothing"


SetWidgetModel=SetWidgetModel
SetWidgetModel="SetWidgetModel(",~whichWidget,", ",~modelFile,")"
SetWidgetModelHint="[UjAPI]  SetWidgetModel takes widget whichWidget, string modelFile returns nothing"


SetWidgetModelEx=SetWidgetModelEx
SetWidgetModelEx="SetWidgetModelEx(",~whichWidget,", ",~modelFile,", ",~playerId,")"
SetWidgetModelExHint="[UjAPI]  SetWidgetModelEx takes widget whichWidget, string modelFile, integer playerId returns nothing"


SetWidgetMaterialTexture=SetWidgetMaterialTexture
SetWidgetMaterialTexture="SetWidgetMaterialTexture(",~whichWidget,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetWidgetMaterialTextureHint="[UjAPI]  SetWidgetMaterialTexture takes widget whichWidget, string textureName, integer materialId, integer textureIndex returns nothing"


SetWidgetTexture=SetWidgetTexture
SetWidgetTexture="SetWidgetTexture(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetTextureHint="[UjAPI]  SetWidgetTexture takes widget whichWidget, string textureName, integer textureIndex returns nothing"


SetWidgetReplaceableTexture=SetWidgetReplaceableTexture
SetWidgetReplaceableTexture="SetWidgetReplaceableTexture(",~whichWidget,", ",~textureName,", ",~textureIndex,")"
SetWidgetReplaceableTextureHint="[UjAPI]  SetWidgetReplaceableTexture takes widget whichWidget, string textureName, integer textureIndex returns nothing"


SetWidgetAnimationWithRarityByIndex=SetWidgetAnimationWithRarityByIndex
SetWidgetAnimationWithRarityByIndex="SetWidgetAnimationWithRarityByIndex(",~whichWidget,", ",~animIndex,", ",~rarity,")"
SetWidgetAnimationWithRarityByIndexHint="[UjAPI]  SetWidgetAnimationWithRarityByIndex takes widget whichWidget, integer animIndex, raritycontrol rarity returns nothing"


SetWidgetAnimationWithRarity=SetWidgetAnimationWithRarity
SetWidgetAnimationWithRarity="SetWidgetAnimationWithRarity(",~whichWidget,", ",~animationName,", ",~rarity,")"
SetWidgetAnimationWithRarityHint="[UjAPI]  SetWidgetAnimationWithRarity takes widget whichWidget, string animationName, raritycontrol rarity returns nothing"


SetWidgetAnimationByIndex=SetWidgetAnimationByIndex
SetWidgetAnimationByIndex="SetWidgetAnimationByIndex(",~whichWidget,", ",~animIndex,")"
SetWidgetAnimationByIndexHint="[UjAPI]  SetWidgetAnimationByIndex takes widget whichWidget, integer animIndex returns nothing"


SetWidgetAnimation=SetWidgetAnimation
SetWidgetAnimation="SetWidgetAnimation(",~whichWidget,", ",~animationName,")"
SetWidgetAnimationHint="[UjAPI]  SetWidgetAnimation takes widget whichWidget, string animationName returns nothing"


QueueWidgetAnimationByIndex=QueueWidgetAnimationByIndex
QueueWidgetAnimationByIndex="QueueWidgetAnimationByIndex(",~whichWidget,", ",~animIndex,")"
QueueWidgetAnimationByIndexHint="[UjAPI]  QueueWidgetAnimationByIndex takes widget whichWidget, integer animIndex returns nothing"


QueueWidgetAnimation=QueueWidgetAnimation
QueueWidgetAnimation="QueueWidgetAnimation(",~whichWidget,", ",~animationName,")"
QueueWidgetAnimationHint="[UjAPI]  QueueWidgetAnimation takes widget whichWidget, string animationName returns nothing"


SetWidgetAnimationOffsetPercent=SetWidgetAnimationOffsetPercent
SetWidgetAnimationOffsetPercent="SetWidgetAnimationOffsetPercent(",~whichWidget,", ",~percent,")"
SetWidgetAnimationOffsetPercentHint="[UjAPI]  SetWidgetAnimationOffsetPercent takes widget whichWidget, real percent returns nothing"


TriggerRegisterWidgetEvent=TriggerRegisterWidgetEvent
TriggerRegisterWidgetEvent="TriggerRegisterWidgetEvent(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventHint="[UjAPI]  TriggerRegisterWidgetEvent takes trigger whichTrigger, widget whichWidget, widgetevent whichWidgetEvent returns event"


SetDestructableVariation=SetDestructableVariation
SetDestructableVariation="SetDestructableVariation(",~whichDestructable,", ",~variation,")"
SetDestructableVariationHint="[UjAPI]  SetDestructableVariation takes destructable whichDestructable, integer variation returns nothing"


SetDestructableVariationEx=SetDestructableVariationEx
SetDestructableVariationEx="SetDestructableVariationEx(",~whichDestructable,", ",~variation,", ",~ignoreStateCheck,")"
SetDestructableVariationExHint="[UjAPI]  SetDestructableVariationEx takes destructable whichDestructable, integer variation, boolean ignoreStateCheck returns nothing"


SetDestructableBlighted=SetDestructableBlighted
SetDestructableBlighted="SetDestructableBlighted(",~whichDestructable,", ",~flag,")"
SetDestructableBlightedHint="[UjAPI]  SetDestructableBlighted takes destructable whichDestructable, boolean flag returns nothing"


ResetDestructableZ=ResetDestructableZ
ResetDestructableZ="ResetDestructableZ(",~whichDestructable,")"
ResetDestructableZHint="[UjAPI]  ResetDestructableZ takes destructable whichDestructable returns nothing"


SetDestructableHeight=SetDestructableHeight
SetDestructableHeight="SetDestructableHeight(",~whichDestructable,", ",~height,")"
SetDestructableHeightHint="[UjAPI]  SetDestructableHeight takes destructable whichDestructable, real height returns nothing"


SetDestructablePositionWithZ=SetDestructablePositionWithZ
SetDestructablePositionWithZ="SetDestructablePositionWithZ(",~whichDestructable,", ",~x,", ",~y,", ",~z,")"
SetDestructablePositionWithZHint="[UjAPI]  SetDestructablePositionWithZ takes destructable whichDestructable, real x, real y, real z returns nothing"


SetDestructablePosition=SetDestructablePosition
SetDestructablePosition="SetDestructablePosition(",~whichDestructable,", ",~x,", ",~y,")"
SetDestructablePositionHint="[UjAPI]  SetDestructablePosition takes destructable whichDestructable, real x, real y returns nothing"


SetDestructablePositionLoc=SetDestructablePositionLoc
SetDestructablePositionLoc="SetDestructablePositionLoc(",~whichDestructable,", ",~whichLocation,")"
SetDestructablePositionLocHint="[UjAPI]  SetDestructablePositionLoc takes destructable whichDestructable, location whichLocation returns nothing"


SetDestructableX=SetDestructableX
SetDestructableX="SetDestructableX(",~whichDestructable,", ",~x,")"
SetDestructableXHint="[UjAPI]  SetDestructableX takes destructable whichDestructable, real x returns nothing"


SetDestructableY=SetDestructableY
SetDestructableY="SetDestructableY(",~whichDestructable,", ",~y,")"
SetDestructableYHint="[UjAPI]  SetDestructableY takes destructable whichDestructable, real y returns nothing"


SetDestructableZ=SetDestructableZ
SetDestructableZ="SetDestructableZ(",~whichDestructable,", ",~z,")"
SetDestructableZHint="[UjAPI]  SetDestructableZ takes destructable whichDestructable, real z returns nothing"


SetDestructablePlayerColour=SetDestructablePlayerColour
SetDestructablePlayerColour="SetDestructablePlayerColour(",~whichDestructable,", ",~color,")"
SetDestructablePlayerColourHint="[UjAPI]  SetDestructablePlayerColour takes destructable whichDestructable, playercolor color returns nothing"


SetDestructableVertexColour=SetDestructableVertexColour
SetDestructableVertexColour="SetDestructableVertexColour(",~whichDestructable,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetDestructableVertexColourHint="[UjAPI]  SetDestructableVertexColour takes destructable whichDestructable, integer red, integer green, integer blue, integer alpha returns nothing"


SetDestructableTimeScale=SetDestructableTimeScale
SetDestructableTimeScale="SetDestructableTimeScale(",~whichDestructable,", ",~timeScale,")"
SetDestructableTimeScaleHint="[UjAPI]  SetDestructableTimeScale takes destructable whichDestructable, real timeScale returns nothing"


SetDestructableScale=SetDestructableScale
SetDestructableScale="SetDestructableScale(",~whichDestructable,", ",~scale,")"
SetDestructableScaleHint="[UjAPI]  SetDestructableScale takes destructable whichDestructable, real scale returns nothing"


SetDestructableFacing=SetDestructableFacing
SetDestructableFacing="SetDestructableFacing(",~whichDestructable,", ",~facing,", ",~isInstant,")"
SetDestructableFacingHint="[UjAPI]  SetDestructableFacing takes destructable whichDestructable, real facing, boolean isInstant returns nothing"


SetDestructableMatrixScale=SetDestructableMatrixScale
SetDestructableMatrixScale="SetDestructableMatrixScale(",~whichDestructable,", ",~x,", ",~y,", ",~z,")"
SetDestructableMatrixScaleHint="[UjAPI]  SetDestructableMatrixScale takes destructable whichDestructable, real x, real y, real z returns nothing"


ResetDestructableMatrix=ResetDestructableMatrix
ResetDestructableMatrix="ResetDestructableMatrix(",~whichDestructable,")"
ResetDestructableMatrixHint="[UjAPI]  ResetDestructableMatrix takes destructable whichDestructable returns nothing"


SetDestructableOrientationEx=SetDestructableOrientationEx
SetDestructableOrientationEx="SetDestructableOrientationEx(",~whichDestructable,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetDestructableOrientationExHint="[UjAPI]  SetDestructableOrientationEx takes destructable whichDestructable, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetDestructableOrientation=SetDestructableOrientation
SetDestructableOrientation="SetDestructableOrientation(",~whichDestructable,", ",~yaw,", ",~pitch,", ",~roll,")"
SetDestructableOrientationHint="[UjAPI]  SetDestructableOrientation takes destructable whichDestructable, real yaw, real pitch, real roll returns nothing"


SetDestructableYaw=SetDestructableYaw
SetDestructableYaw="SetDestructableYaw(",~whichDestructable,", ",~yaw,")"
SetDestructableYawHint="[UjAPI]  SetDestructableYaw takes destructable whichDestructable, real yaw returns nothing"


SetDestructablePitch=SetDestructablePitch
SetDestructablePitch="SetDestructablePitch(",~whichDestructable,", ",~pitch,")"
SetDestructablePitchHint="[UjAPI]  SetDestructablePitch takes destructable whichDestructable, real pitch returns nothing"


SetDestructableRoll=SetDestructableRoll
SetDestructableRoll="SetDestructableRoll(",~whichDestructable,", ",~roll,")"
SetDestructableRollHint="[UjAPI]  SetDestructableRoll takes destructable whichDestructable, real roll returns nothing"


SetDestructableModel=SetDestructableModel
SetDestructableModel="SetDestructableModel(",~whichDestructable,", ",~modelFile,")"
SetDestructableModelHint="[UjAPI]  SetDestructableModel takes destructable whichDestructable, string modelFile returns nothing"


SetDestructableModelEx=SetDestructableModelEx
SetDestructableModelEx="SetDestructableModelEx(",~whichDestructable,", ",~modelFile,", ",~playerId,")"
SetDestructableModelExHint="[UjAPI]  SetDestructableModelEx takes destructable whichDestructable, string modelFile, integer playerId returns nothing"


SetDestructableMaterialTexture=SetDestructableMaterialTexture
SetDestructableMaterialTexture="SetDestructableMaterialTexture(",~whichDestructable,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetDestructableMaterialTextureHint="[UjAPI]  SetDestructableMaterialTexture takes destructable whichDestructable, string textureName, integer materialId, integer textureIndex returns nothing"


SetDestructableTexture=SetDestructableTexture
SetDestructableTexture="SetDestructableTexture(",~whichDestructable,", ",~textureName,", ",~textureIndex,")"
SetDestructableTextureHint="[UjAPI]  SetDestructableTexture takes destructable whichDestructable, string textureName, integer textureIndex returns nothing"


SetDestructableReplaceableTexture=SetDestructableReplaceableTexture
SetDestructableReplaceableTexture="SetDestructableReplaceableTexture(",~whichDestructable,", ",~textureName,", ",~textureIndex,")"
SetDestructableReplaceableTextureHint="[UjAPI]  SetDestructableReplaceableTexture takes destructable whichDestructable, string textureName, integer textureIndex returns nothing"


SetDestructableAnimationWithRarityByIndex=SetDestructableAnimationWithRarityByIndex
SetDestructableAnimationWithRarityByIndex="SetDestructableAnimationWithRarityByIndex(",~whichDestructable,", ",~animIndex,", ",~rarity,")"
SetDestructableAnimationWithRarityByIndexHint="[UjAPI]  SetDestructableAnimationWithRarityByIndex takes destructable whichDestructable, integer animIndex, raritycontrol rarity returns nothing"


SetDestructableAnimationWithRarity=SetDestructableAnimationWithRarity
SetDestructableAnimationWithRarity="SetDestructableAnimationWithRarity(",~whichDestructable,", ",~animationName,", ",~rarity,")"
SetDestructableAnimationWithRarityHint="[UjAPI]  SetDestructableAnimationWithRarity takes destructable whichDestructable, string animationName, raritycontrol rarity returns nothing"


SetDestructableAnimationByIndex=SetDestructableAnimationByIndex
SetDestructableAnimationByIndex="SetDestructableAnimationByIndex(",~whichDestructable,", ",~animIndex,")"
SetDestructableAnimationByIndexHint="[UjAPI]  SetDestructableAnimationByIndex takes destructable whichDestructable, integer animIndex returns nothing"


QueueDestructableAnimationByIndex=QueueDestructableAnimationByIndex
QueueDestructableAnimationByIndex="QueueDestructableAnimationByIndex(",~whichDestructable,", ",~animIndex,")"
QueueDestructableAnimationByIndexHint="[UjAPI]  QueueDestructableAnimationByIndex takes destructable whichDestructable, integer animIndex returns nothing"


SetDestructableAnimationOffsetPercent=SetDestructableAnimationOffsetPercent
SetDestructableAnimationOffsetPercent="SetDestructableAnimationOffsetPercent(",~whichDestructable,", ",~percent,")"
SetDestructableAnimationOffsetPercentHint="[UjAPI]  SetDestructableAnimationOffsetPercent takes destructable whichDestructable, real percent returns nothing"


EnumDestructablesInRange=EnumDestructablesInRange
EnumDestructablesInRange="EnumDestructablesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumDestructablesInRangeHint="[UjAPI]  EnumDestructablesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI]  SetBaseItemIntegerFieldById takes integer itemId, itemintegerfield whichField, integer value returns boolean"


SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI]  SetBaseItemBooleanFieldById takes integer itemId, itembooleanfield whichField, boolean value returns boolean"


SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI]  SetBaseItemRealFieldById takes integer itemId, itemrealfield whichField, real value returns boolean"


SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemIntegerFieldHint="[UjAPI]  SetItemIntegerField takes item whichItem, itemintegerfield whichField, integer value returns boolean"


SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemBooleanFieldHint="[UjAPI]  SetItemBooleanField takes item whichItem, itembooleanfield whichField, boolean value returns boolean"


SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemRealFieldHint="[UjAPI]  SetItemRealField takes item whichItem, itemrealfield whichField, real value returns boolean"


SetItemPositionWithZ=SetItemPositionWithZ
SetItemPositionWithZ="SetItemPositionWithZ(",~whichItem,", ",~x,", ",~y,", ",~z,")"
SetItemPositionWithZHint="[UjAPI]  SetItemPositionWithZ takes item whichItem, real x, real y, real z returns nothing"


SetItemX=SetItemX
SetItemX="SetItemX(",~whichItem,", ",~x,")"
SetItemXHint="[UjAPI]  SetItemX takes item whichItem, real x returns nothing"


SetItemY=SetItemY
SetItemY="SetItemY(",~whichItem,", ",~y,")"
SetItemYHint="[UjAPI]  SetItemY takes item whichItem, real y returns nothing"


SetItemZ=SetItemZ
SetItemZ="SetItemZ(",~whichItem,", ",~z,")"
SetItemZHint="[UjAPI]  SetItemZ takes item whichItem, real z returns nothing"


ResetItemZ=ResetItemZ
ResetItemZ="ResetItemZ(",~whichItem,")"
ResetItemZHint="[UjAPI]  ResetItemZ takes item whichItem returns nothing"


SetItemHeight=SetItemHeight
SetItemHeight="SetItemHeight(",~whichItem,", ",~height,")"
SetItemHeightHint="[UjAPI]  SetItemHeight takes item whichItem, real height returns nothing"


SetItemLife=SetItemLife
SetItemLife="SetItemLife(",~whichItem,", ",~life,")"
SetItemLifeHint="[UjAPI]  SetItemLife takes item whichItem, real life returns nothing"


SetItemMaxLife=SetItemMaxLife
SetItemMaxLife="SetItemMaxLife(",~whichItem,", ",~maxLife,")"
SetItemMaxLifeHint="[UjAPI]  SetItemMaxLife takes item whichItem, real maxLife returns nothing"


ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(",~whichItem,", ",~whichAbility,")"
ItemAddAbilityHint="[UjAPI]  ItemAddAbility takes item whichItem, ability whichAbility returns boolean"


ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(",~whichItem,", ",~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI]  ItemRemoveAbility takes item whichItem, ability whichAbility returns boolean"


ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(",~whichItem,", ",~abilCode,")"
ItemAddAbilityByIdHint="[UjAPI]  ItemAddAbilityById takes item whichItem, integer abilCode returns boolean"


ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(",~whichItem,", ",~abilCode,")"
ItemRemoveAbilityByIdHint="[UjAPI]  ItemRemoveAbilityById takes item whichItem, integer abilCode returns boolean"


SetItemCooldown=SetItemCooldown
SetItemCooldown="SetItemCooldown(",~whichItem,", ",~cooldown,")"
SetItemCooldownHint="[UjAPI]  SetItemCooldown takes item whichItem, real cooldown returns nothing"


StartItemCooldown=StartItemCooldown
StartItemCooldown="StartItemCooldown(",~whichUnit,", ",~whichItem,", ",~cooldown,")"
StartItemCooldownHint="[UjAPI]  StartItemCooldown takes unit whichUnit, item whichItem, real cooldown returns nothing"


SetItemRemainingCooldown=SetItemRemainingCooldown
SetItemRemainingCooldown="SetItemRemainingCooldown(",~whichItem,", ",~cooldown,")"
SetItemRemainingCooldownHint="[UjAPI]  SetItemRemainingCooldown takes item whichItem, real cooldown returns nothing"


SetItemPlayerColour=SetItemPlayerColour
SetItemPlayerColour="SetItemPlayerColour(",~whichItem,", ",~color,")"
SetItemPlayerColourHint="[UjAPI]  SetItemPlayerColour takes item whichItem, playercolor color returns nothing"


SetItemVertexColour=SetItemVertexColour
SetItemVertexColour="SetItemVertexColour(",~whichItem,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetItemVertexColourHint="[UjAPI]  SetItemVertexColour takes item whichItem, integer red, integer green, integer blue, integer alpha returns nothing"


SetItemTimeScale=SetItemTimeScale
SetItemTimeScale="SetItemTimeScale(",~whichItem,", ",~timeScale,")"
SetItemTimeScaleHint="[UjAPI]  SetItemTimeScale takes item whichItem, real timeScale returns nothing"


SetItemScale=SetItemScale
SetItemScale="SetItemScale(",~whichItem,", ",~scale,")"
SetItemScaleHint="[UjAPI]  SetItemScale takes item whichItem, real scale returns nothing"


SetItemFacing=SetItemFacing
SetItemFacing="SetItemFacing(",~whichItem,", ",~facing,", ",~isInstant,")"
SetItemFacingHint="[UjAPI]  SetItemFacing takes item whichItem, real facing, boolean isInstant returns nothing"


SetItemMatrixScale=SetItemMatrixScale
SetItemMatrixScale="SetItemMatrixScale(",~whichItem,", ",~x,", ",~y,", ",~z,")"
SetItemMatrixScaleHint="[UjAPI]  SetItemMatrixScale takes item whichItem, real x, real y, real z returns nothing"


ResetItemMatrix=ResetItemMatrix
ResetItemMatrix="ResetItemMatrix(",~whichItem,")"
ResetItemMatrixHint="[UjAPI]  ResetItemMatrix takes item whichItem returns nothing"


SetItemOrientationEx=SetItemOrientationEx
SetItemOrientationEx="SetItemOrientationEx(",~whichItem,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetItemOrientationExHint="[UjAPI]  SetItemOrientationEx takes item whichItem, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetItemOrientation=SetItemOrientation
SetItemOrientation="SetItemOrientation(",~whichItem,", ",~yaw,", ",~pitch,", ",~roll,")"
SetItemOrientationHint="[UjAPI]  SetItemOrientation takes item whichItem, real yaw, real pitch, real roll returns nothing"


SetItemYaw=SetItemYaw
SetItemYaw="SetItemYaw(",~whichItem,", ",~yaw,")"
SetItemYawHint="[UjAPI]  SetItemYaw takes item whichItem, real yaw returns nothing"


SetItemPitch=SetItemPitch
SetItemPitch="SetItemPitch(",~whichItem,", ",~pitch,")"
SetItemPitchHint="[UjAPI]  SetItemPitch takes item whichItem, real pitch returns nothing"


SetItemRoll=SetItemRoll
SetItemRoll="SetItemRoll(",~whichItem,", ",~roll,")"
SetItemRollHint="[UjAPI]  SetItemRoll takes item whichItem, real roll returns nothing"


SetItemModel=SetItemModel
SetItemModel="SetItemModel(",~whichItem,", ",~modelFile,")"
SetItemModelHint="[UjAPI]  SetItemModel takes item whichItem, string modelFile returns nothing"


SetItemModelEx=SetItemModelEx
SetItemModelEx="SetItemModelEx(",~whichItem,", ",~modelFile,", ",~playerColourId,")"
SetItemModelExHint="[UjAPI]  SetItemModelEx takes item whichItem, string modelFile, integer playerColourId returns nothing"


SetItemMaterialTexture=SetItemMaterialTexture
SetItemMaterialTexture="SetItemMaterialTexture(",~whichItem,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetItemMaterialTextureHint="[UjAPI]  SetItemMaterialTexture takes item whichItem, string textureName, integer materialId, integer textureIndex returns nothing"


SetItemTexture=SetItemTexture
SetItemTexture="SetItemTexture(",~whichItem,", ",~textureName,", ",~textureIndex,")"
SetItemTextureHint="[UjAPI]  SetItemTexture takes item whichItem, string textureName, integer textureIndex returns nothing"


SetItemReplaceableTexture=SetItemReplaceableTexture
SetItemReplaceableTexture="SetItemReplaceableTexture(",~whichItem,", ",~textureName,", ",~textureIndex,")"
SetItemReplaceableTextureHint="[UjAPI]  SetItemReplaceableTexture takes item whichItem, string textureName, integer textureIndex returns nothing"


SetItemAnimationWithRarityByIndex=SetItemAnimationWithRarityByIndex
SetItemAnimationWithRarityByIndex="SetItemAnimationWithRarityByIndex(",~whichItem,", ",~animIndex,", ",~rarity,")"
SetItemAnimationWithRarityByIndexHint="[UjAPI]  SetItemAnimationWithRarityByIndex takes item whichItem, integer animIndex, raritycontrol rarity returns nothing"


SetItemAnimationWithRarity=SetItemAnimationWithRarity
SetItemAnimationWithRarity="SetItemAnimationWithRarity(",~whichItem,", ",~animationName,", ",~rarity,")"
SetItemAnimationWithRarityHint="[UjAPI]  SetItemAnimationWithRarity takes item whichItem, string animationName, raritycontrol rarity returns nothing"


SetItemAnimationByIndex=SetItemAnimationByIndex
SetItemAnimationByIndex="SetItemAnimationByIndex(",~whichItem,", ",~animIndex,")"
SetItemAnimationByIndexHint="[UjAPI]  SetItemAnimationByIndex takes item whichItem, integer animIndex returns nothing"


SetItemAnimation=SetItemAnimation
SetItemAnimation="SetItemAnimation(",~whichItem,", ",~animationName,")"
SetItemAnimationHint="[UjAPI]  SetItemAnimation takes item whichItem, string animationName returns nothing"


QueueItemAnimationByIndex=QueueItemAnimationByIndex
QueueItemAnimationByIndex="QueueItemAnimationByIndex(",~whichItem,", ",~animIndex,")"
QueueItemAnimationByIndexHint="[UjAPI]  QueueItemAnimationByIndex takes item whichItem, integer animIndex returns nothing"


QueueItemAnimation=QueueItemAnimation
QueueItemAnimation="QueueItemAnimation(",~whichItem,", ",~animationName,")"
QueueItemAnimationHint="[UjAPI]  QueueItemAnimation takes item whichItem, string animationName returns nothing"


SetItemAnimationOffsetPercent=SetItemAnimationOffsetPercent
SetItemAnimationOffsetPercent="SetItemAnimationOffsetPercent(",~whichItem,", ",~percent,")"
SetItemAnimationOffsetPercentHint="[UjAPI]  SetItemAnimationOffsetPercent takes item whichItem, real percent returns nothing"


EnumItemsInRange=EnumItemsInRange
EnumItemsInRange="EnumItemsInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumItemsInRangeHint="[UjAPI]  EnumItemsInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI]  SetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField, integer value returns boolean"


SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI]  SetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField, boolean value returns boolean"


SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI]  SetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField, real value returns boolean"


SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  SetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value returns boolean"


SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  SetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"


SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  SetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index, real value returns boolean"


SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitIntegerFieldHint="[UjAPI]  SetUnitIntegerField takes unit whichUnit, unitintegerfield whichField, integer value returns boolean"


SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitBooleanFieldHint="[UjAPI]  SetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField, boolean value returns boolean"


SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitRealFieldHint="[UjAPI]  SetUnitRealField takes unit whichUnit, unitrealfield whichField, real value returns boolean"


SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI]  SetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index, integer value returns boolean"


SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI]  SetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"


SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponRealFieldHint="[UjAPI]  SetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index, real value returns boolean"


SetUnitPositionEx=SetUnitPositionEx
SetUnitPositionEx="SetUnitPositionEx(",~whichUnit,", ",~breakOrder,", ",~checkPathing,", ",~x,", ",~y,", ",~z,")"
SetUnitPositionExHint="[UjAPI]  SetUnitPositionEx takes unit whichUnit, boolean breakOrder, boolean checkPathing, real x, real y, real z returns nothing"


SetUnitPositionWithZ=SetUnitPositionWithZ
SetUnitPositionWithZ="SetUnitPositionWithZ(",~whichUnit,", ",~x,", ",~y,", ",~z,")"
SetUnitPositionWithZHint="[UjAPI]  SetUnitPositionWithZ takes unit whichUnit, real x, real y, real z returns nothing"


SetUnitZ=SetUnitZ
SetUnitZ="SetUnitZ(",~whichUnit,", ",~z,")"
SetUnitZHint="[UjAPI]  SetUnitZ takes unit whichUnit, real z returns nothing"


ResetUnitZ=ResetUnitZ
ResetUnitZ="ResetUnitZ(",~whichUnit,")"
ResetUnitZHint="[UjAPI]  ResetUnitZ takes unit whichUnit returns nothing"


SetUnitHeight=SetUnitHeight
SetUnitHeight="SetUnitHeight(",~whichUnit,", ",~height,")"
SetUnitHeightHint="[UjAPI]  SetUnitHeight takes unit whichUnit, real height returns nothing"


SetUnitTypeId=SetUnitTypeId
SetUnitTypeId="SetUnitTypeId(",~whichUnit,", ",~newId,")"
SetUnitTypeIdHint="[UjAPI]  SetUnitTypeId takes unit whichUnit, integer newId returns nothing"


UnitEnableInventory=UnitEnableInventory
UnitEnableInventory="UnitEnableInventory(",~whichUnit,", ",~enable,", ",~ignoreErrorMessages,")"
UnitEnableInventoryHint="[UjAPI]  UnitEnableInventory takes unit whichUnit, boolean enable, boolean ignoreErrorMessages returns nothing"


UnitEnableMovement=UnitEnableMovement
UnitEnableMovement="UnitEnableMovement(",~whichUnit,", ",~enable,", ",~fullDisable,")"
UnitEnableMovementHint="[UjAPI]  UnitEnableMovement takes unit whichUnit, boolean enable, boolean fullDisable returns nothing"


UnitEnableAttack=UnitEnableAttack
UnitEnableAttack="UnitEnableAttack(",~whichUnit,", ",~enable,", ",~extraFlag,")"
UnitEnableAttackHint="[UjAPI]  UnitEnableAttack takes unit whichUnit, boolean enable, boolean extraFlag returns nothing"


RedrawUnit=RedrawUnit
RedrawUnit="RedrawUnit(",~whichUnit,")"
RedrawUnitHint="[UjAPI]  RedrawUnit takes unit whichUnit returns nothing"


UpdateUnitInfoBar=UpdateUnitInfoBar
UpdateUnitInfoBar="UpdateUnitInfoBar(",~whichUnit,")"
UpdateUnitInfoBarHint="[UjAPI]  UpdateUnitInfoBar takes unit whichUnit returns nothing"


UnitUnapplyUpgrades=UnitUnapplyUpgrades
UnitUnapplyUpgrades="UnitUnapplyUpgrades(",~whichUnit,")"
UnitUnapplyUpgradesHint="[UjAPI]  UnitUnapplyUpgrades takes unit whichUnit returns nothing"


UnitApplyUpgrades=UnitApplyUpgrades
UnitApplyUpgrades="UnitApplyUpgrades(",~whichUnit,")"
UnitApplyUpgradesHint="[UjAPI]  UnitApplyUpgrades takes unit whichUnit returns nothing"


UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(",~whichUnit,", ",~abilCode,", ",~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI]  UnitAddAbilityEx takes unit whichUnit, integer abilCode, boolean checkForDuplicates returns boolean"


UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(",~whichUnit,", ",~abilCode,", ",~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI]  UnitRemoveAbilityEx takes unit whichUnit, integer abilCode, boolean removeDuplicates returns boolean"


CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(",~whichUnit,", ",~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI]  CountUnitAbilities takes unit whichUnit, boolean alsoCountBuffs returns integer"


ShowUnitAbility=ShowUnitAbility
ShowUnitAbility="ShowUnitAbility(",~whichUnit,", ",~abilCode,", ",~show,")"
ShowUnitAbilityHint="[UjAPI]  ShowUnitAbility takes unit whichUnit, integer abilCode, boolean show returns nothing"


ShowUnitAbilityEx=ShowUnitAbilityEx
ShowUnitAbilityEx="ShowUnitAbilityEx(",~whichUnit,", ",~abilCode,", ",~show,", ",~checkDuplicates,")"
ShowUnitAbilityExHint="[UjAPI]  ShowUnitAbilityEx takes unit whichUnit, integer abilCode, boolean show, boolean checkDuplicates returns nothing"


DisableUnitAbility=DisableUnitAbility
DisableUnitAbility="DisableUnitAbility(",~whichUnit,", ",~abilCode,", ",~hide,", ",~disable,")"
DisableUnitAbilityHint="[UjAPI]  DisableUnitAbility takes unit whichUnit, integer abilCode, boolean hide, boolean disable returns nothing"


DisableUnitAbilityEx=DisableUnitAbilityEx
DisableUnitAbilityEx="DisableUnitAbilityEx(",~whichUnit,", ",~abilCode,", ",~hide,", ",~disable,", ",~checkDuplicates,")"
DisableUnitAbilityExHint="[UjAPI]  DisableUnitAbilityEx takes unit whichUnit, integer abilCode, boolean hide, boolean disable, boolean checkDuplicates returns nothing"


EnableUnitAbility=EnableUnitAbility
EnableUnitAbility="EnableUnitAbility(",~whichUnit,", ",~abilCode,", ",~show,", ",~enable,")"
EnableUnitAbilityHint="[UjAPI]  EnableUnitAbility takes unit whichUnit, integer abilCode, boolean show, boolean enable returns nothing"


EnableUnitAbilityEx=EnableUnitAbilityEx
EnableUnitAbilityEx="EnableUnitAbilityEx(",~whichUnit,", ",~abilCode,", ",~show,", ",~enable,", ",~checkDuplicates,")"
EnableUnitAbilityExHint="[UjAPI]  EnableUnitAbilityEx takes unit whichUnit, integer abilCode, boolean show, boolean enable, boolean checkDuplicates returns nothing"


UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(",~whichUnit,", ",~whichBuff,")"
UnitAddBuffHint="[UjAPI]  UnitAddBuff takes unit whichUnit, buff whichBuff returns boolean"


UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(",~whichUnit,", ",~whichBuff,", ",~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI]  UnitAddBuffEx takes unit whichUnit, buff whichBuff, boolean checkForDuplicates returns boolean"


UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(",~whichUnit,", ",~buffId,")"
UnitAddBuffByIdHint="[UjAPI]  UnitAddBuffById takes unit whichUnit, integer buffId returns boolean"


UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(",~whichUnit,", ",~buffId,", ",~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI]  UnitAddBuffByIdEx takes unit whichUnit, integer buffId, boolean checkForDuplicates returns boolean"


CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(",~whichUnit,")"
CountUnitBuffsHint="[UjAPI]  CountUnitBuffs takes unit whichUnit returns integer"


UnitCancelTimedLife=UnitCancelTimedLife
UnitCancelTimedLife="UnitCancelTimedLife(",~whichUnit,")"
UnitCancelTimedLifeHint="[UjAPI]  UnitCancelTimedLife takes unit whichUnit returns nothing"


SetUnitRemainingTimedLife=SetUnitRemainingTimedLife
SetUnitRemainingTimedLife="SetUnitRemainingTimedLife(",~whichUnit,", ",~duration,")"
SetUnitRemainingTimedLifeHint="[UjAPI]  SetUnitRemainingTimedLife takes unit whichUnit, real duration returns nothing"


SetUnitGhosted=SetUnitGhosted
SetUnitGhosted="SetUnitGhosted(",~whichUnit,", ",~state,", ",~transitionTime,")"
SetUnitGhostedHint="[UjAPI]  SetUnitGhosted takes unit whichUnit, boolean state, real transitionTime returns nothing"


SetUnitSelectable=SetUnitSelectable
SetUnitSelectable="SetUnitSelectable(",~whichUnit,", ",~selectable,")"
SetUnitSelectableHint="[UjAPI]  SetUnitSelectable takes unit whichUnit, boolean selectable returns nothing"


SetUnitTargetable=SetUnitTargetable
SetUnitTargetable="SetUnitTargetable(",~whichUnit,", ",~targetable,")"
SetUnitTargetableHint="[UjAPI]  SetUnitTargetable takes unit whichUnit, boolean targetable returns nothing"


SetUnitTruesightImmuneState=SetUnitTruesightImmuneState
SetUnitTruesightImmuneState="SetUnitTruesightImmuneState(",~whichUnit,", ",~state,")"
SetUnitTruesightImmuneStateHint="[UjAPI]  SetUnitTruesightImmuneState takes unit whichUnit, boolean state returns nothing"


SetUnitVisibleByPlayer=SetUnitVisibleByPlayer
SetUnitVisibleByPlayer="SetUnitVisibleByPlayer(",~whichUnit,", ",~whichPlayer,", ",~flag,")"
SetUnitVisibleByPlayerHint="[UjAPI]  SetUnitVisibleByPlayer takes unit whichUnit, player whichPlayer, boolean flag returns nothing"


SetUnitDetectableByPlayer=SetUnitDetectableByPlayer
SetUnitDetectableByPlayer="SetUnitDetectableByPlayer(",~whichUnit,", ",~whichPlayer,", ",~flag,")"
SetUnitDetectableByPlayerHint="[UjAPI]  SetUnitDetectableByPlayer takes unit whichUnit, player whichPlayer, boolean flag returns nothing"


SetUnitFlyHeightEnabled=SetUnitFlyHeightEnabled
SetUnitFlyHeightEnabled="SetUnitFlyHeightEnabled(",~whichUnit,", ",~enable,")"
SetUnitFlyHeightEnabledHint="[UjAPI]  SetUnitFlyHeightEnabled takes unit whichUnit, boolean enable returns nothing"


SetUnitResourceCurrent=SetUnitResourceCurrent
SetUnitResourceCurrent="SetUnitResourceCurrent(",~whichUnit,", ",~amount,")"
SetUnitResourceCurrentHint="[UjAPI]  SetUnitResourceCurrent takes unit whichUnit, integer amount returns nothing"


SetUnitResourceCapacity=SetUnitResourceCapacity
SetUnitResourceCapacity="SetUnitResourceCapacity(",~whichUnit,", ",~resourceType,", ",~amount,")"
SetUnitResourceCapacityHint="[UjAPI]  SetUnitResourceCapacity takes unit whichUnit, integer resourceType, integer amount returns nothing"


SetUnitResourcePerGather=SetUnitResourcePerGather
SetUnitResourcePerGather="SetUnitResourcePerGather(",~whichUnit,", ",~resourceType,", ",~amount,")"
SetUnitResourcePerGatherHint="[UjAPI]  SetUnitResourcePerGather takes unit whichUnit, integer resourceType, integer amount returns nothing"


SetUnitResourceGatherInterval=SetUnitResourceGatherInterval
SetUnitResourceGatherInterval="SetUnitResourceGatherInterval(",~whichUnit,", ",~interval,")"
SetUnitResourceGatherIntervalHint="[UjAPI]  SetUnitResourceGatherInterval takes unit whichUnit, real interval returns nothing"


SetUnitCurrentSight=SetUnitCurrentSight
SetUnitCurrentSight="SetUnitCurrentSight(",~whichUnit,", ",~realValue,")"
SetUnitCurrentSightHint="[UjAPI]  SetUnitCurrentSight takes unit whichUnit, real realValue returns nothing"


SetUnitAttackRemainingCooldown=SetUnitAttackRemainingCooldown
SetUnitAttackRemainingCooldown="SetUnitAttackRemainingCooldown(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingCooldownHint="[UjAPI]  SetUnitAttackRemainingCooldown takes unit whichUnit, real time returns nothing"


SetUnitAttackRemainingDamagePoint=SetUnitAttackRemainingDamagePoint
SetUnitAttackRemainingDamagePoint="SetUnitAttackRemainingDamagePoint(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingDamagePointHint="[UjAPI]  SetUnitAttackRemainingDamagePoint takes unit whichUnit, real time returns nothing"


SetUnitAttackRemainingBackswing=SetUnitAttackRemainingBackswing
SetUnitAttackRemainingBackswing="SetUnitAttackRemainingBackswing(",~whichUnit,", ",~time,")"
SetUnitAttackRemainingBackswingHint="[UjAPI]  SetUnitAttackRemainingBackswing takes unit whichUnit, real time returns nothing"


UnitAttackTarget=UnitAttackTarget
UnitAttackTarget="UnitAttackTarget(",~whichUnit,", ",~whichTarget,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetHint="[UjAPI]  UnitAttackTarget takes unit whichUnit, widget whichTarget, boolean ignoreDistance, boolean isInstant returns nothing"


UnitAttackTargetPointZ=UnitAttackTargetPointZ
UnitAttackTargetPointZ="UnitAttackTargetPointZ(",~whichUnit,", ",~x,", ",~y,", ",~z,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointZHint="[UjAPI]  UnitAttackTargetPointZ takes unit whichUnit, real x, real y, real z, boolean ignoreDistance, boolean isInstant returns nothing"


UnitAttackTargetPoint=UnitAttackTargetPoint
UnitAttackTargetPoint="UnitAttackTargetPoint(",~whichUnit,", ",~x,", ",~y,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointHint="[UjAPI]  UnitAttackTargetPoint takes unit whichUnit, real x, real y, boolean ignoreDistance, boolean isInstant returns nothing"


UnitAttackTargetPointLoc=UnitAttackTargetPointLoc
UnitAttackTargetPointLoc="UnitAttackTargetPointLoc(",~whichUnit,", ",~whichLocation,", ",~ignoreDistance,", ",~isInstant,")"
UnitAttackTargetPointLocHint="[UjAPI]  UnitAttackTargetPointLoc takes unit whichUnit, location whichLocation, boolean ignoreDistance, boolean isInstant returns nothing"


UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(",~whichUnit,")"
UnitAttackCancelHint="[UjAPI]  UnitAttackCancel takes unit whichUnit returns boolean"


UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(",~whichUnit,")"
UnitAttackRestartHint="[UjAPI]  UnitAttackRestart takes unit whichUnit returns boolean"


UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(",~whichUnit,")"
UnitAttackFinishHint="[UjAPI]  UnitAttackFinish takes unit whichUnit returns boolean"


SetUnitAttackTypeByIndex=SetUnitAttackTypeByIndex
SetUnitAttackTypeByIndex="SetUnitAttackTypeByIndex(",~whichUnit,", ",~attackIndex,", ",~whichAttackType,")"
SetUnitAttackTypeByIndexHint="[UjAPI]  SetUnitAttackTypeByIndex takes unit whichUnit, integer attackIndex, attacktype whichAttackType returns nothing"


SetUnitWeaponTypeByIndex=SetUnitWeaponTypeByIndex
SetUnitWeaponTypeByIndex="SetUnitWeaponTypeByIndex(",~whichUnit,", ",~attackIndex,", ",~whichWeaponType,")"
SetUnitWeaponTypeByIndexHint="[UjAPI]  SetUnitWeaponTypeByIndex takes unit whichUnit, integer attackIndex, weapontype whichWeaponType returns nothing"


SetUnitWeaponSoundByIndex=SetUnitWeaponSoundByIndex
SetUnitWeaponSoundByIndex="SetUnitWeaponSoundByIndex(",~whichUnit,", ",~attackIndex,", ",~weaponSound,")"
SetUnitWeaponSoundByIndexHint="[UjAPI]  SetUnitWeaponSoundByIndex takes unit whichUnit, integer attackIndex, integer weaponSound returns nothing"


SetUnitBaseDamageByIndex=SetUnitBaseDamageByIndex
SetUnitBaseDamageByIndex="SetUnitBaseDamageByIndex(",~whichUnit,", ",~attackIndex,", ",~damage,")"
SetUnitBaseDamageByIndexHint="[UjAPI]  SetUnitBaseDamageByIndex takes unit whichUnit, integer attackIndex, integer damage returns nothing"


SetUnitBonusDamageByIndex=SetUnitBonusDamageByIndex
SetUnitBonusDamageByIndex="SetUnitBonusDamageByIndex(",~whichUnit,", ",~attackIndex,", ",~bonusDamage,")"
SetUnitBonusDamageByIndexHint="[UjAPI]  SetUnitBonusDamageByIndex takes unit whichUnit, integer attackIndex, integer bonusDamage returns nothing"


SetUnitDamageDicesSideByIndex=SetUnitDamageDicesSideByIndex
SetUnitDamageDicesSideByIndex="SetUnitDamageDicesSideByIndex(",~whichUnit,", ",~attackIndex,", ",~dicesSides,")"
SetUnitDamageDicesSideByIndexHint="[UjAPI]  SetUnitDamageDicesSideByIndex takes unit whichUnit, integer attackIndex, integer dicesSides returns nothing"


SetUnitDamageDicesByIndex=SetUnitDamageDicesByIndex
SetUnitDamageDicesByIndex="SetUnitDamageDicesByIndex(",~whichUnit,", ",~attackIndex,", ",~dices,")"
SetUnitDamageDicesByIndexHint="[UjAPI]  SetUnitDamageDicesByIndex takes unit whichUnit, integer attackIndex, integer dices returns nothing"


SetUnitAttackRangeByIndex=SetUnitAttackRangeByIndex
SetUnitAttackRangeByIndex="SetUnitAttackRangeByIndex(",~whichUnit,", ",~attackIndex,", ",~range,")"
SetUnitAttackRangeByIndexHint="[UjAPI]  SetUnitAttackRangeByIndex takes unit whichUnit, integer attackIndex, real range returns nothing"


SetUnitAttackSpeed=SetUnitAttackSpeed
SetUnitAttackSpeed="SetUnitAttackSpeed(",~whichUnit,", ",~attackSpeed,")"
SetUnitAttackSpeedHint="[UjAPI]  SetUnitAttackSpeed takes unit whichUnit, real attackSpeed returns nothing"


SetUnitAttackCooldownByIndex=SetUnitAttackCooldownByIndex
SetUnitAttackCooldownByIndex="SetUnitAttackCooldownByIndex(",~whichUnit,", ",~attackIndex,", ",~attackCooldown,")"
SetUnitAttackCooldownByIndexHint="[UjAPI]  SetUnitAttackCooldownByIndex takes unit whichUnit, integer attackIndex, real attackCooldown returns nothing"


SetUnitBackswingPointByIndex=SetUnitBackswingPointByIndex
SetUnitBackswingPointByIndex="SetUnitBackswingPointByIndex(",~whichUnit,", ",~attackIndex,", ",~backswing,")"
SetUnitBackswingPointByIndexHint="[UjAPI]  SetUnitBackswingPointByIndex takes unit whichUnit, integer attackIndex, real backswing returns nothing"


SetUnitDamagePointByIndex=SetUnitDamagePointByIndex
SetUnitDamagePointByIndex="SetUnitDamagePointByIndex(",~whichUnit,", ",~attackIndex,", ",~damagePoint,")"
SetUnitDamagePointByIndexHint="[UjAPI]  SetUnitDamagePointByIndex takes unit whichUnit, integer attackIndex, real damagePoint returns nothing"


SetUnitArmourType=SetUnitArmourType
SetUnitArmourType="SetUnitArmourType(",~whichUnit,", ",~whichArmour,")"
SetUnitArmourTypeHint="[UjAPI]  SetUnitArmourType takes unit whichUnit, defensetype whichArmour returns nothing"


SetUnitArmour=SetUnitArmour
SetUnitArmour="SetUnitArmour(",~whichUnit,", ",~armour,")"
SetUnitArmourHint="[UjAPI]  SetUnitArmour takes unit whichUnit, real armour returns nothing"


SetUnitBaseMoveSpeed=SetUnitBaseMoveSpeed
SetUnitBaseMoveSpeed="SetUnitBaseMoveSpeed(",~whichUnit,", ",~baseMoveSpeed,")"
SetUnitBaseMoveSpeedHint="[UjAPI]  SetUnitBaseMoveSpeed takes unit whichUnit, real baseMoveSpeed returns nothing"


SetUnitBonusMoveSpeedPercent=SetUnitBonusMoveSpeedPercent
SetUnitBonusMoveSpeedPercent="SetUnitBonusMoveSpeedPercent(",~whichUnit,", ",~bonusMoveSpeedPercent,")"
SetUnitBonusMoveSpeedPercentHint="[UjAPI]  SetUnitBonusMoveSpeedPercent takes unit whichUnit, real bonusMoveSpeedPercent returns nothing"


SetUnitPlayerColour=SetUnitPlayerColour
SetUnitPlayerColour="SetUnitPlayerColour(",~whichUnit,", ",~color,")"
SetUnitPlayerColourHint="[UjAPI]  SetUnitPlayerColour takes unit whichUnit, playercolor color returns nothing"


ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(",~whichUnit,", ",~x,", ",~y,")"
ReviveUnitHint="[UjAPI]  ReviveUnit takes unit whichUnit, real x, real y returns boolean"


ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(",~whichUnit,", ",~loc,")"
ReviveUnitLocHint="[UjAPI]  ReviveUnitLoc takes unit whichUnit, location loc returns boolean"


SetUnitCurrentLife=SetUnitCurrentLife
SetUnitCurrentLife="SetUnitCurrentLife(",~whichUnit,", ",~life,")"
SetUnitCurrentLifeHint="[UjAPI]  SetUnitCurrentLife takes unit whichUnit, real life returns nothing"


SetUnitMaxLife=SetUnitMaxLife
SetUnitMaxLife="SetUnitMaxLife(",~whichUnit,", ",~maxLife,")"
SetUnitMaxLifeHint="[UjAPI]  SetUnitMaxLife takes unit whichUnit, real maxLife returns nothing"


SetUnitLifeRegen=SetUnitLifeRegen
SetUnitLifeRegen="SetUnitLifeRegen(",~whichUnit,", ",~lifeRegen,")"
SetUnitLifeRegenHint="[UjAPI]  SetUnitLifeRegen takes unit whichUnit, real lifeRegen returns nothing"


SetUnitCurrentMana=SetUnitCurrentMana
SetUnitCurrentMana="SetUnitCurrentMana(",~whichUnit,", ",~mana,")"
SetUnitCurrentManaHint="[UjAPI]  SetUnitCurrentMana takes unit whichUnit, real mana returns nothing"


SetUnitMaxMana=SetUnitMaxMana
SetUnitMaxMana="SetUnitMaxMana(",~whichUnit,", ",~maxMana,")"
SetUnitMaxManaHint="[UjAPI]  SetUnitMaxMana takes unit whichUnit, real maxMana returns nothing"


SetUnitManaRegen=SetUnitManaRegen
SetUnitManaRegen="SetUnitManaRegen(",~whichUnit,", ",~manaRegen,")"
SetUnitManaRegenHint="[UjAPI]  SetUnitManaRegen takes unit whichUnit, real manaRegen returns nothing"


SetHeroPrimaryAttribute=SetHeroPrimaryAttribute
SetHeroPrimaryAttribute="SetHeroPrimaryAttribute(",~whichUnit,", ",~whichHeroAttribute,")"
SetHeroPrimaryAttributeHint="[UjAPI]  SetHeroPrimaryAttribute takes unit whichUnit, heroattribute whichHeroAttribute returns nothing"


SetUnitModel=SetUnitModel
SetUnitModel="SetUnitModel(",~whichUnit,", ",~modelName,")"
SetUnitModelHint="[UjAPI]  SetUnitModel takes unit whichUnit, string modelName returns nothing"


SetUnitModelEx=SetUnitModelEx
SetUnitModelEx="SetUnitModelEx(",~whichUnit,", ",~modelName,", ",~playercolourId,")"
SetUnitModelExHint="[UjAPI]  SetUnitModelEx takes unit whichUnit, string modelName, integer playercolourId returns nothing"


SetUnitMaterialTexture=SetUnitMaterialTexture
SetUnitMaterialTexture="SetUnitMaterialTexture(",~whichUnit,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetUnitMaterialTextureHint="[UjAPI]  SetUnitMaterialTexture takes unit whichUnit, string textureName, integer materialId, integer textureIndex returns nothing"


SetUnitTexture=SetUnitTexture
SetUnitTexture="SetUnitTexture(",~whichUnit,", ",~textureName,", ",~textureIndex,")"
SetUnitTextureHint="[UjAPI]  SetUnitTexture takes unit whichUnit, string textureName, integer textureIndex returns nothing"


SetUnitReplaceableTexture=SetUnitReplaceableTexture
SetUnitReplaceableTexture="SetUnitReplaceableTexture(",~whichUnit,", ",~textureName,", ",~textureIndex,")"
SetUnitReplaceableTextureHint="[UjAPI]  SetUnitReplaceableTexture takes unit whichUnit, string textureName, integer textureIndex returns nothing"


SetUnitCollisionType=SetUnitCollisionType
SetUnitCollisionType="SetUnitCollisionType(",~whichUnit,", ",~collisionType,")"
SetUnitCollisionTypeHint="[UjAPI]  SetUnitCollisionType takes unit whichUnit, collisiontype collisionType returns nothing"


SetUnitPathingAIType=SetUnitPathingAIType
SetUnitPathingAIType="SetUnitPathingAIType(",~whichUnit,", ",~pathingAIType,")"
SetUnitPathingAITypeHint="[UjAPI]  SetUnitPathingAIType takes unit whichUnit, pathingaitype pathingAIType returns nothing"


SetUnitPathingType=SetUnitPathingType
SetUnitPathingType="SetUnitPathingType(",~whichUnit,", ",~pathingType,")"
SetUnitPathingTypeHint="[UjAPI]  SetUnitPathingType takes unit whichUnit, pathingtype pathingType returns nothing"


SetUnitItemSlots=SetUnitItemSlots
SetUnitItemSlots="SetUnitItemSlots(",~whichUnit,", ",~itemSlots,")"
SetUnitItemSlotsHint="[UjAPI]  SetUnitItemSlots takes unit whichUnit, integer itemSlots returns nothing"


SetUnitFacingEx=SetUnitFacingEx
SetUnitFacingEx="SetUnitFacingEx(",~whichUnit,", ",~facing,", ",~isInstant,")"
SetUnitFacingExHint="[UjAPI]  SetUnitFacingEx takes unit whichUnit, real facing, boolean isInstant returns nothing"


SetUnitFacingInstant=SetUnitFacingInstant
SetUnitFacingInstant="SetUnitFacingInstant(",~whichUnit,", ",~facing,")"
SetUnitFacingInstantHint="[UjAPI]  SetUnitFacingInstant takes unit whichUnit, real facing returns nothing"


UnitApplySilence=UnitApplySilence
UnitApplySilence="UnitApplySilence(",~whichUnit,", ",~state,")"
UnitApplySilenceHint="[UjAPI]  UnitApplySilence takes unit whichUnit, boolean state returns nothing"


UnitDisableAbilities=UnitDisableAbilities
UnitDisableAbilities="UnitDisableAbilities(",~whichUnit,", ",~state,")"
UnitDisableAbilitiesHint="[UjAPI]  UnitDisableAbilities takes unit whichUnit, boolean state returns nothing"


PauseUnitEx=PauseUnitEx
PauseUnitEx="PauseUnitEx(",~whichUnit,", ",~pause,")"
PauseUnitExHint="[UjAPI]  PauseUnitEx takes unit whichUnit, boolean pause returns nothing"


SetUnitStunned=SetUnitStunned
SetUnitStunned="SetUnitStunned(",~whichUnit,", ",~state,")"
SetUnitStunnedHint="[UjAPI]  SetUnitStunned takes unit whichUnit, boolean state returns nothing"


SetUnitStunCounter=SetUnitStunCounter
SetUnitStunCounter="SetUnitStunCounter(",~whichUnit,", ",~stunCounter,")"
SetUnitStunCounterHint="[UjAPI]  SetUnitStunCounter takes unit whichUnit, integer stunCounter returns nothing"


SetUnitKiller=SetUnitKiller
SetUnitKiller="SetUnitKiller(",~whichUnit,", ",~killer,")"
SetUnitKillerHint="[UjAPI]  SetUnitKiller takes unit whichUnit, unit killer returns nothing"


KillUnitEx=KillUnitEx
KillUnitEx="KillUnitEx(",~whichUnit,", ",~killer,")"
KillUnitExHint="[UjAPI]  KillUnitEx takes unit whichUnit, unit killer returns nothing"


SetUnitAnimationOffsetPercent=SetUnitAnimationOffsetPercent
SetUnitAnimationOffsetPercent="SetUnitAnimationOffsetPercent(",~whichUnit,", ",~percent,")"
SetUnitAnimationOffsetPercentHint="[UjAPI]  SetUnitAnimationOffsetPercent takes unit whichUnit, real percent returns nothing"


UnitEnableAutoOrientation=UnitEnableAutoOrientation
UnitEnableAutoOrientation="UnitEnableAutoOrientation(",~whichUnit,", ",~enable,")"
UnitEnableAutoOrientationHint="[UjAPI]  UnitEnableAutoOrientation takes unit whichUnit, boolean enable returns nothing"


SetUnitYaw=SetUnitYaw
SetUnitYaw="SetUnitYaw(",~whichUnit,", ",~yaw,")"
SetUnitYawHint="[UjAPI]  SetUnitYaw takes unit whichUnit, real yaw returns nothing"


SetUnitPitch=SetUnitPitch
SetUnitPitch="SetUnitPitch(",~whichUnit,", ",~pitch,")"
SetUnitPitchHint="[UjAPI]  SetUnitPitch takes unit whichUnit, real pitch returns nothing"


SetUnitRoll=SetUnitRoll
SetUnitRoll="SetUnitRoll(",~whichUnit,", ",~roll,")"
SetUnitRollHint="[UjAPI]  SetUnitRoll takes unit whichUnit, real roll returns nothing"


SetUnitMatrixScale=SetUnitMatrixScale
SetUnitMatrixScale="SetUnitMatrixScale(",~whichUnit,", ",~x,", ",~y,", ",~z,")"
SetUnitMatrixScaleHint="[UjAPI]  SetUnitMatrixScale takes unit whichUnit, real x, real y, real z returns nothing"


ResetUnitMatrix=ResetUnitMatrix
ResetUnitMatrix="ResetUnitMatrix(",~whichUnit,")"
ResetUnitMatrixHint="[UjAPI]  ResetUnitMatrix takes unit whichUnit returns nothing"


SetUnitOrientationEx=SetUnitOrientationEx
SetUnitOrientationEx="SetUnitOrientationEx(",~whichUnit,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetUnitOrientationExHint="[UjAPI]  SetUnitOrientationEx takes unit whichUnit, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetUnitOrientation=SetUnitOrientation
SetUnitOrientation="SetUnitOrientation(",~whichUnit,", ",~yaw,", ",~pitch,", ",~roll,")"
SetUnitOrientationHint="[UjAPI]  SetUnitOrientation takes unit whichUnit, real yaw, real pitch, real roll returns nothing"


CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateBuildingHint="[UjAPI]  CreateBuilding takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"


CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,", ",~isAutoBuild,", ",~workersCanAssist,")"
CreateBuildingExHint="[UjAPI]  CreateBuildingEx takes player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist returns unit"


UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(",~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI]  UnitGetConstructionProgress takes unit whichUnit returns real"


UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(",~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI]  UnitGetConstructionRemainingTime takes unit whichUnit returns real"


UnitSetConstructionRemainingTime=UnitSetConstructionRemainingTime
UnitSetConstructionRemainingTime="UnitSetConstructionRemainingTime(",~whichUnit,", ",~time,")"
UnitSetConstructionRemainingTimeHint="[UjAPI]  UnitSetConstructionRemainingTime takes unit whichUnit, real time returns nothing"


UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(",~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI]  UnitGetUpgradeProgress takes unit whichUnit returns real"


UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(",~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI]  UnitGetUpgradeRemainingTime takes unit whichUnit returns real"


UnitSetUpgradeRemainingTime=UnitSetUpgradeRemainingTime
UnitSetUpgradeRemainingTime="UnitSetUpgradeRemainingTime(",~whichUnit,", ",~time,")"
UnitSetUpgradeRemainingTimeHint="[UjAPI]  UnitSetUpgradeRemainingTime takes unit whichUnit, real time returns nothing"


UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(",~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI]  UnitGetTrainingProgress takes unit whichUnit returns real"


UnitSetTrainingProgress=UnitSetTrainingProgress
UnitSetTrainingProgress="UnitSetTrainingProgress(",~whichUnit,", ",~trainingPercentage,")"
UnitSetTrainingProgressHint="[UjAPI]  UnitSetTrainingProgress takes unit whichUnit, integer trainingPercentage returns nothing"


UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(",~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI]  UnitGetTrainingRemainingTime takes unit whichUnit returns real"


UnitSetTrainingRemainingTime=UnitSetTrainingRemainingTime
UnitSetTrainingRemainingTime="UnitSetTrainingRemainingTime(",~whichUnit,", ",~time,")"
UnitSetTrainingRemainingTimeHint="[UjAPI]  UnitSetTrainingRemainingTime takes unit whichUnit, real time returns nothing"


UnitCancelTrainingAt=UnitCancelTrainingAt
UnitCancelTrainingAt="UnitCancelTrainingAt(",~whichUnit,", ",~index,")"
UnitCancelTrainingAtHint="[UjAPI]  UnitCancelTrainingAt takes unit whichUnit, integer index returns nothing"


UnitSetTrainingTypeIdAt=UnitSetTrainingTypeIdAt
UnitSetTrainingTypeIdAt="UnitSetTrainingTypeIdAt(",~whichUnit,", ",~index,", ",~typeId,")"
UnitSetTrainingTypeIdAtHint="[UjAPI]  UnitSetTrainingTypeIdAt takes unit whichUnit, integer index, integer typeId returns nothing"


UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(",~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI]  UnitGetResearchProgress takes unit whichUnit returns real"


UnitSetResearchProgress=UnitSetResearchProgress
UnitSetResearchProgress="UnitSetResearchProgress(",~whichUnit,", ",~trainingPercentage,")"
UnitSetResearchProgressHint="[UjAPI]  UnitSetResearchProgress takes unit whichUnit, integer trainingPercentage returns nothing"


UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(",~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI]  UnitGetResearchRemainingTime takes unit whichUnit returns real"


UnitSetResearchRemainingTime=UnitSetResearchRemainingTime
UnitSetResearchRemainingTime="UnitSetResearchRemainingTime(",~whichUnit,", ",~time,")"
UnitSetResearchRemainingTimeHint="[UjAPI]  UnitSetResearchRemainingTime takes unit whichUnit, real time returns nothing"


UnitCancelResearchAt=UnitCancelResearchAt
UnitCancelResearchAt="UnitCancelResearchAt(",~whichUnit,", ",~index,")"
UnitCancelResearchAtHint="[UjAPI]  UnitCancelResearchAt takes unit whichUnit, integer index returns nothing"


UnitSetResearchTypeIdAt=UnitSetResearchTypeIdAt
UnitSetResearchTypeIdAt="UnitSetResearchTypeIdAt(",~whichUnit,", ",~index,", ",~typeId,")"
UnitSetResearchTypeIdAtHint="[UjAPI]  UnitSetResearchTypeIdAt takes unit whichUnit, integer index, integer typeId returns nothing"


CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateIllusionHint="[UjAPI]  CreateIllusion takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"


CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(",~whichPlayer,", ",~unitTypeId,", ",~whichLocation,", ",~facing,")"
CreateIllusionAtLocHint="[UjAPI]  CreateIllusionAtLoc takes player whichPlayer, integer unitTypeId, location whichLocation, real facing returns unit"


CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(",~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI]  CreateIllusionFromUnit takes unit whichUnit returns unit"


CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(",~whichUnit,", ",~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI]  CreateIllusionFromUnitEx takes unit whichUnit, boolean copyPassives returns unit"


SetIllusionDamageDealt=SetIllusionDamageDealt
SetIllusionDamageDealt="SetIllusionDamageDealt(",~whichUnit,", ",~multiplier,")"
SetIllusionDamageDealtHint="[UjAPI]  SetIllusionDamageDealt takes unit whichUnit, real multiplier returns nothing"


SetIllusionDamageReceived=SetIllusionDamageReceived
SetIllusionDamageReceived="SetIllusionDamageReceived(",~whichUnit,", ",~multiplier,")"
SetIllusionDamageReceivedHint="[UjAPI]  SetIllusionDamageReceived takes unit whichUnit, real multiplier returns nothing"


QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(",~whichUnit,", ",~order,")"
QueueImmediateOrderByIdHint="[UjAPI]  QueueImmediateOrderById takes unit whichUnit, integer order returns boolean"


QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,")"
QueuePointOrderByIdHint="[UjAPI]  QueuePointOrderById takes unit whichUnit, integer order, real x, real y returns boolean"


QueueTargetOrderById=QueueTargetOrderById
QueueTargetOrderById="QueueTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,")"
QueueTargetOrderByIdHint="[UjAPI]  QueueTargetOrderById takes unit whichUnit, integer order, widget targetWidget returns boolean"


QueueInstantPointOrderById=QueueInstantPointOrderById
QueueInstantPointOrderById="QueueInstantPointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdHint="[UjAPI]  QueueInstantPointOrderById takes unit whichUnit, integer order, real x, real y, widget instantTargetWidget returns boolean"


QueueInstantTargetOrderById=QueueInstantTargetOrderById
QueueInstantTargetOrderById="QueueInstantTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdHint="[UjAPI]  QueueInstantTargetOrderById takes unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget returns boolean"


QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(",~whichPeon,", ",~unitId,", ",~x,", ",~y,")"
QueueBuildOrderByIdHint="[UjAPI]  QueueBuildOrderById takes unit whichPeon, integer unitId, real x, real y returns boolean"


QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI]  QueueNeutralImmediateOrderById takes player whichPlayer, unit neutralStructure, integer unitId returns boolean"


QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~x,", ",~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI]  QueueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitId, real x, real y returns boolean"


QueueNeutralTargetOrderById=QueueNeutralTargetOrderById
QueueNeutralTargetOrderById="QueueNeutralTargetOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~target,")"
QueueNeutralTargetOrderByIdHint="[UjAPI]  QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitId, widget target returns boolean"


UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(",~whichUnit,", ",~index,")"
UnitRemoveOrderByIndexHint="[UjAPI]  UnitRemoveOrderByIndex takes unit whichUnit, integer index returns boolean"


UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(",~whichUnit,", ",~orderId,", ",~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI]  UnitRemoveOrderByOrderId takes unit whichUnit, integer orderId, boolean eraseAllSimilar returns boolean"


UnitReverseOrders=UnitReverseOrders
UnitReverseOrders="UnitReverseOrders(",~whichUnit,")"
UnitReverseOrdersHint="[UjAPI]  UnitReverseOrders takes unit whichUnit returns nothing"


UnitClearOrders=UnitClearOrders
UnitClearOrders="UnitClearOrders(",~whichUnit,", ",~onlyQueued,")"
UnitClearOrdersHint="[UjAPI]  UnitClearOrders takes unit whichUnit, boolean onlyQueued returns nothing"


UnitForceStopOrder=UnitForceStopOrder
UnitForceStopOrder="UnitForceStopOrder(",~whichUnit,", ",~clearQueue,")"
UnitForceStopOrderHint="[UjAPI]  UnitForceStopOrder takes unit whichUnit, boolean clearQueue returns nothing"


OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(",~whichOrder,")"
OrderGetNextHint="[UjAPI]  OrderGetNext takes orderhandle whichOrder returns orderhandle"


OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(",~whichOrder,")"
OrderGetTargetXHint="[UjAPI]  OrderGetTargetX takes orderhandle whichOrder returns real"


OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(",~whichOrder,")"
OrderGetTargetYHint="[UjAPI]  OrderGetTargetY takes orderhandle whichOrder returns real"


OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(",~whichOrder,")"
OrderGetTargetLocHint="[UjAPI]  OrderGetTargetLoc takes orderhandle whichOrder returns location"


OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(",~whichOrder,")"
OrderGetSourceXHint="[UjAPI]  OrderGetSourceX takes orderhandle whichOrder returns real"


OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(",~whichOrder,")"
OrderGetSourceYHint="[UjAPI]  OrderGetSourceY takes orderhandle whichOrder returns real"


OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(",~whichOrder,")"
OrderGetSourceLocHint="[UjAPI]  OrderGetSourceLoc takes orderhandle whichOrder returns location"


OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(",~whichOrder,")"
OrderGetTargetHint="[UjAPI]  OrderGetTarget takes orderhandle whichOrder returns widget"


OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(",~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI]  OrderGetTargetDestructable takes orderhandle whichOrder returns destructable"


OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(",~whichOrder,")"
OrderGetTargetItemHint="[UjAPI]  OrderGetTargetItem takes orderhandle whichOrder returns item"


OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(",~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI]  OrderGetTargetUnit takes orderhandle whichOrder returns unit"


CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(",~projectileTypeId,")"
CreateProjectileHint="[UjAPI]  CreateProjectile takes integer projectileTypeId returns projectile"


CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(",~owner,", ",~projectileTypeId,", ",~attackIndex,")"
CreateProjectileExHint="[UjAPI]  CreateProjectileEx takes unit owner, integer projectileTypeId, integer attackIndex returns projectile"


SetProjectileUnitData=SetProjectileUnitData
SetProjectileUnitData="SetProjectileUnitData(",~whichProjectile,", ",~owner,", ",~attackIndex,")"
SetProjectileUnitDataHint="[UjAPI]  SetProjectileUnitData takes projectile whichProjectile, unit owner, integer attackIndex returns nothing"


KillProjectile=KillProjectile
KillProjectile="KillProjectile(",~whichProjectile,")"
KillProjectileHint="[UjAPI]  KillProjectile takes projectile whichProjectile returns nothing"


RemoveProjectile=RemoveProjectile
RemoveProjectile="RemoveProjectile(",~whichProjectile,")"
RemoveProjectileHint="[UjAPI]  RemoveProjectile takes projectile whichProjectile returns nothing"


LaunchProjectile=LaunchProjectile
LaunchProjectile="LaunchProjectile(",~whichProjectile,")"
LaunchProjectileHint="[UjAPI]  LaunchProjectile takes projectile whichProjectile returns nothing"


LaunchProjectileTarget=LaunchProjectileTarget
LaunchProjectileTarget="LaunchProjectileTarget(",~whichProjectile,", ",~whichWidget,")"
LaunchProjectileTargetHint="[UjAPI]  LaunchProjectileTarget takes projectile whichProjectile, widget whichWidget returns nothing"


LaunchProjectileAt=LaunchProjectileAt
LaunchProjectileAt="LaunchProjectileAt(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
LaunchProjectileAtHint="[UjAPI]  LaunchProjectileAt takes projectile whichProjectile, real x, real y, real z returns nothing"


SetProjectileVisible=SetProjectileVisible
SetProjectileVisible="SetProjectileVisible(",~whichProjectile,", ",~visibility,")"
SetProjectileVisibleHint="[UjAPI]  SetProjectileVisible takes projectile whichProjectile, boolean visibility returns nothing"


SetProjectileX=SetProjectileX
SetProjectileX="SetProjectileX(",~whichProjectile,", ",~x,")"
SetProjectileXHint="[UjAPI]  SetProjectileX takes projectile whichProjectile, real x returns nothing"


SetProjectileY=SetProjectileY
SetProjectileY="SetProjectileY(",~whichProjectile,", ",~y,")"
SetProjectileYHint="[UjAPI]  SetProjectileY takes projectile whichProjectile, real y returns nothing"


SetProjectileZ=SetProjectileZ
SetProjectileZ="SetProjectileZ(",~whichProjectile,", ",~z,")"
SetProjectileZHint="[UjAPI]  SetProjectileZ takes projectile whichProjectile, real z returns nothing"


SetProjectileHeight=SetProjectileHeight
SetProjectileHeight="SetProjectileHeight(",~whichProjectile,", ",~height,")"
SetProjectileHeightHint="[UjAPI]  SetProjectileHeight takes projectile whichProjectile, real height returns nothing"


SetProjectilePosition=SetProjectilePosition
SetProjectilePosition="SetProjectilePosition(",~whichProjectile,", ",~x,", ",~y,")"
SetProjectilePositionHint="[UjAPI]  SetProjectilePosition takes projectile whichProjectile, real x, real y returns nothing"


SetProjectilePositionWithZ=SetProjectilePositionWithZ
SetProjectilePositionWithZ="SetProjectilePositionWithZ(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectilePositionWithZHint="[UjAPI]  SetProjectilePositionWithZ takes projectile whichProjectile, real x, real y, real z returns nothing"


SetProjectilePositionLoc=SetProjectilePositionLoc
SetProjectilePositionLoc="SetProjectilePositionLoc(",~whichProjectile,", ",~loc,")"
SetProjectilePositionLocHint="[UjAPI]  SetProjectilePositionLoc takes projectile whichProjectile, location loc returns nothing"


SetProjectileScale=SetProjectileScale
SetProjectileScale="SetProjectileScale(",~whichProjectile,", ",~scale,")"
SetProjectileScaleHint="[UjAPI]  SetProjectileScale takes projectile whichProjectile, real scale returns nothing"


SetProjectileTimeScale=SetProjectileTimeScale
SetProjectileTimeScale="SetProjectileTimeScale(",~whichProjectile,", ",~timescale,")"
SetProjectileTimeScaleHint="[UjAPI]  SetProjectileTimeScale takes projectile whichProjectile, real timescale returns nothing"


SetProjectilePlayerColour=SetProjectilePlayerColour
SetProjectilePlayerColour="SetProjectilePlayerColour(",~whichProjectile,", ",~color,")"
SetProjectilePlayerColourHint="[UjAPI]  SetProjectilePlayerColour takes projectile whichProjectile, playercolor color returns nothing"


SetProjectileColour=SetProjectileColour
SetProjectileColour="SetProjectileColour(",~whichProjectile,", ",~colour,")"
SetProjectileColourHint="[UjAPI]  SetProjectileColour takes projectile whichProjectile, integer colour returns nothing"


SetProjectileAlpha=SetProjectileAlpha
SetProjectileAlpha="SetProjectileAlpha(",~whichProjectile,", ",~alpha,")"
SetProjectileAlphaHint="[UjAPI]  SetProjectileAlpha takes projectile whichProjectile, integer alpha returns nothing"


SetProjectileVertexColour=SetProjectileVertexColour
SetProjectileVertexColour="SetProjectileVertexColour(",~whichProjectile,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetProjectileVertexColourHint="[UjAPI]  SetProjectileVertexColour takes projectile whichProjectile, integer red, integer green, integer blue, integer alpha returns nothing"


SetProjectileMatrixScale=SetProjectileMatrixScale
SetProjectileMatrixScale="SetProjectileMatrixScale(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectileMatrixScaleHint="[UjAPI]  SetProjectileMatrixScale takes projectile whichProjectile, real x, real y, real z returns nothing"


ResetProjectileMatrix=ResetProjectileMatrix
ResetProjectileMatrix="ResetProjectileMatrix(",~whichProjectile,")"
ResetProjectileMatrixHint="[UjAPI]  ResetProjectileMatrix takes projectile whichProjectile returns nothing"


SetProjectileOrientationEx=SetProjectileOrientationEx
SetProjectileOrientationEx="SetProjectileOrientationEx(",~whichProjectile,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetProjectileOrientationExHint="[UjAPI]  SetProjectileOrientationEx takes projectile whichProjectile, real yaw, real pitch, real roll, integer eulerOrder returns nothing"


SetProjectileYaw=SetProjectileYaw
SetProjectileYaw="SetProjectileYaw(",~whichProjectile,", ",~yaw,")"
SetProjectileYawHint="[UjAPI]  SetProjectileYaw takes projectile whichProjectile, real yaw returns nothing"


SetProjectileFacing=SetProjectileFacing
SetProjectileFacing="SetProjectileFacing(",~whichProjectile,", ",~facing,")"
SetProjectileFacingHint="[UjAPI]  SetProjectileFacing takes projectile whichProjectile, real facing returns nothing"


SetProjectilePitch=SetProjectilePitch
SetProjectilePitch="SetProjectilePitch(",~whichProjectile,", ",~pitch,")"
SetProjectilePitchHint="[UjAPI]  SetProjectilePitch takes projectile whichProjectile, real pitch returns nothing"


SetProjectileRoll=SetProjectileRoll
SetProjectileRoll="SetProjectileRoll(",~whichProjectile,", ",~roll,")"
SetProjectileRollHint="[UjAPI]  SetProjectileRoll takes projectile whichProjectile, real roll returns nothing"


SetProjectileOrientation=SetProjectileOrientation
SetProjectileOrientation="SetProjectileOrientation(",~whichProjectile,", ",~yaw,", ",~pitch,", ",~roll,")"
SetProjectileOrientationHint="[UjAPI]  SetProjectileOrientation takes projectile whichProjectile, real yaw, real pitch, real roll returns nothing"


SetProjectileMaterialTexture=SetProjectileMaterialTexture
SetProjectileMaterialTexture="SetProjectileMaterialTexture(",~whichProjectile,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetProjectileMaterialTextureHint="[UjAPI]  SetProjectileMaterialTexture takes projectile whichProjectile, string textureName, integer materialId, integer textureIndex returns nothing"


SetProjectileTexture=SetProjectileTexture
SetProjectileTexture="SetProjectileTexture(",~whichProjectile,", ",~textureName,", ",~textureIndex,")"
SetProjectileTextureHint="[UjAPI]  SetProjectileTexture takes projectile whichProjectile, string textureName, integer textureIndex returns nothing"


SetProjectileReplaceableTexture=SetProjectileReplaceableTexture
SetProjectileReplaceableTexture="SetProjectileReplaceableTexture(",~whichProjectile,", ",~textureName,", ",~textureIndex,")"
SetProjectileReplaceableTextureHint="[UjAPI]  SetProjectileReplaceableTexture takes projectile whichProjectile, string textureName, integer textureIndex returns nothing"


SetProjectileModel=SetProjectileModel
SetProjectileModel="SetProjectileModel(",~whichProjectile,", ",~modelName,")"
SetProjectileModelHint="[UjAPI]  SetProjectileModel takes projectile whichProjectile, string modelName returns nothing"


SetProjectileModelEx=SetProjectileModelEx
SetProjectileModelEx="SetProjectileModelEx(",~whichProjectile,", ",~modelName,", ",~playerColour,")"
SetProjectileModelExHint="[UjAPI]  SetProjectileModelEx takes projectile whichProjectile, string modelName, integer playerColour returns nothing"


SetProjectileAnimationWithRarityByIndex=SetProjectileAnimationWithRarityByIndex
SetProjectileAnimationWithRarityByIndex="SetProjectileAnimationWithRarityByIndex(",~whichProjectile,", ",~animIndex,", ",~rarity,")"
SetProjectileAnimationWithRarityByIndexHint="[UjAPI]  SetProjectileAnimationWithRarityByIndex takes projectile whichProjectile, integer animIndex, raritycontrol rarity returns nothing"


SetProjectileAnimationWithRarity=SetProjectileAnimationWithRarity
SetProjectileAnimationWithRarity="SetProjectileAnimationWithRarity(",~whichProjectile,", ",~animationName,", ",~rarity,")"
SetProjectileAnimationWithRarityHint="[UjAPI]  SetProjectileAnimationWithRarity takes projectile whichProjectile, string animationName, raritycontrol rarity returns nothing"


SetProjectileAnimationByIndex=SetProjectileAnimationByIndex
SetProjectileAnimationByIndex="SetProjectileAnimationByIndex(",~whichProjectile,", ",~animIndex,")"
SetProjectileAnimationByIndexHint="[UjAPI]  SetProjectileAnimationByIndex takes projectile whichProjectile, integer animIndex returns nothing"


SetProjectileAnimation=SetProjectileAnimation
SetProjectileAnimation="SetProjectileAnimation(",~whichProjectile,", ",~animationName,")"
SetProjectileAnimationHint="[UjAPI]  SetProjectileAnimation takes projectile whichProjectile, string animationName returns nothing"


QueueProjectileAnimationByIndex=QueueProjectileAnimationByIndex
QueueProjectileAnimationByIndex="QueueProjectileAnimationByIndex(",~whichProjectile,", ",~animIndex,")"
QueueProjectileAnimationByIndexHint="[UjAPI]  QueueProjectileAnimationByIndex takes projectile whichProjectile, integer animIndex returns nothing"


QueueProjectileAnimation=QueueProjectileAnimation
QueueProjectileAnimation="QueueProjectileAnimation(",~whichProjectile,", ",~animationName,")"
QueueProjectileAnimationHint="[UjAPI]  QueueProjectileAnimation takes projectile whichProjectile, string animationName returns nothing"


SetProjectileAnimationOffsetPercent=SetProjectileAnimationOffsetPercent
SetProjectileAnimationOffsetPercent="SetProjectileAnimationOffsetPercent(",~whichProjectile,", ",~percent,")"
SetProjectileAnimationOffsetPercentHint="[UjAPI]  SetProjectileAnimationOffsetPercent takes projectile whichProjectile, real percent returns nothing"


SetProjectileSource=SetProjectileSource
SetProjectileSource="SetProjectileSource(",~whichProjectile,", ",~whichUnit,")"
SetProjectileSourceHint="[UjAPI]  SetProjectileSource takes projectile whichProjectile, unit whichUnit returns nothing"


SetProjectileSourceAbility=SetProjectileSourceAbility
SetProjectileSourceAbility="SetProjectileSourceAbility(",~whichProjectile,", ",~whichAbility,")"
SetProjectileSourceAbilityHint="[UjAPI]  SetProjectileSourceAbility takes projectile whichProjectile, ability whichAbility returns nothing"


SetProjectileTargetX=SetProjectileTargetX
SetProjectileTargetX="SetProjectileTargetX(",~whichProjectile,", ",~x,")"
SetProjectileTargetXHint="[UjAPI]  SetProjectileTargetX takes projectile whichProjectile, real x returns nothing"


SetProjectileTargetY=SetProjectileTargetY
SetProjectileTargetY="SetProjectileTargetY(",~whichProjectile,", ",~y,")"
SetProjectileTargetYHint="[UjAPI]  SetProjectileTargetY takes projectile whichProjectile, real y returns nothing"


SetProjectileTargetZ=SetProjectileTargetZ
SetProjectileTargetZ="SetProjectileTargetZ(",~whichProjectile,", ",~z,")"
SetProjectileTargetZHint="[UjAPI]  SetProjectileTargetZ takes projectile whichProjectile, real z returns nothing"


SetProjectileTargetPositionLoc=SetProjectileTargetPositionLoc
SetProjectileTargetPositionLoc="SetProjectileTargetPositionLoc(",~whichProjectile,", ",~loc,")"
SetProjectileTargetPositionLocHint="[UjAPI]  SetProjectileTargetPositionLoc takes projectile whichProjectile, location loc returns nothing"


SetProjectileTargetPosition=SetProjectileTargetPosition
SetProjectileTargetPosition="SetProjectileTargetPosition(",~whichProjectile,", ",~x,", ",~y,")"
SetProjectileTargetPositionHint="[UjAPI]  SetProjectileTargetPosition takes projectile whichProjectile, real x, real y returns nothing"


SetProjectileTargetPositionWithZ=SetProjectileTargetPositionWithZ
SetProjectileTargetPositionWithZ="SetProjectileTargetPositionWithZ(",~whichProjectile,", ",~x,", ",~y,", ",~z,")"
SetProjectileTargetPositionWithZHint="[UjAPI]  SetProjectileTargetPositionWithZ takes projectile whichProjectile, real x, real y, real z returns nothing"


SetProjectileTarget=SetProjectileTarget
SetProjectileTarget="SetProjectileTarget(",~whichProjectile,", ",~whichWidget,")"
SetProjectileTargetHint="[UjAPI]  SetProjectileTarget takes projectile whichProjectile, widget whichWidget returns nothing"


SetProjectileAttackType=SetProjectileAttackType
SetProjectileAttackType="SetProjectileAttackType(",~whichProjectile,", ",~whichAttackType,")"
SetProjectileAttackTypeHint="[UjAPI]  SetProjectileAttackType takes projectile whichProjectile, attacktype whichAttackType returns nothing"


SetProjectileDamage=SetProjectileDamage
SetProjectileDamage="SetProjectileDamage(",~whichProjectile,", ",~damage,")"
SetProjectileDamageHint="[UjAPI]  SetProjectileDamage takes projectile whichProjectile, real damage returns nothing"


SetProjectileAreaOfEffectFullDamage=SetProjectileAreaOfEffectFullDamage
SetProjectileAreaOfEffectFullDamage="SetProjectileAreaOfEffectFullDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectFullDamageHint="[UjAPI]  SetProjectileAreaOfEffectFullDamage takes projectile whichProjectile, real area returns nothing"


SetProjectileAreaOfEffectMediumDamage=SetProjectileAreaOfEffectMediumDamage
SetProjectileAreaOfEffectMediumDamage="SetProjectileAreaOfEffectMediumDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectMediumDamageHint="[UjAPI]  SetProjectileAreaOfEffectMediumDamage takes projectile whichProjectile, real area returns nothing"


SetProjectileAreaOfEffectSmallDamage=SetProjectileAreaOfEffectSmallDamage
SetProjectileAreaOfEffectSmallDamage="SetProjectileAreaOfEffectSmallDamage(",~whichProjectile,", ",~area,")"
SetProjectileAreaOfEffectSmallDamageHint="[UjAPI]  SetProjectileAreaOfEffectSmallDamage takes projectile whichProjectile, real area returns nothing"


SetProjectileAreaOfEffectMediumDamageFactor=SetProjectileAreaOfEffectMediumDamageFactor
SetProjectileAreaOfEffectMediumDamageFactor="SetProjectileAreaOfEffectMediumDamageFactor(",~whichProjectile,", ",~factor,")"
SetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI]  SetProjectileAreaOfEffectMediumDamageFactor takes projectile whichProjectile, real factor returns nothing"


SetProjectileAreaOfEffectSmallDamageFactor=SetProjectileAreaOfEffectSmallDamageFactor
SetProjectileAreaOfEffectSmallDamageFactor="SetProjectileAreaOfEffectSmallDamageFactor(",~whichProjectile,", ",~factor,")"
SetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI]  SetProjectileAreaOfEffectSmallDamageFactor takes projectile whichProjectile, real factor returns nothing"


SetProjectileSpeed=SetProjectileSpeed
SetProjectileSpeed="SetProjectileSpeed(",~whichProjectile,", ",~speed,")"
SetProjectileSpeedHint="[UjAPI]  SetProjectileSpeed takes projectile whichProjectile, real speed returns nothing"


SetProjectileArc=SetProjectileArc
SetProjectileArc="SetProjectileArc(",~whichProjectile,", ",~arc,")"
SetProjectileArcHint="[UjAPI]  SetProjectileArc takes projectile whichProjectile, real arc returns nothing"


SetProjectileWeaponType=SetProjectileWeaponType
SetProjectileWeaponType="SetProjectileWeaponType(",~whichProjectile,", ",~whichWeaponType,")"
SetProjectileWeaponTypeHint="[UjAPI]  SetProjectileWeaponType takes projectile whichProjectile, weapontype whichWeaponType returns nothing"


SetProjectileDamageType=SetProjectileDamageType
SetProjectileDamageType="SetProjectileDamageType(",~whichProjectile,", ",~whichDamageType,")"
SetProjectileDamageTypeHint="[UjAPI]  SetProjectileDamageType takes projectile whichProjectile, damagetype whichDamageType returns nothing"


SetProjectileDamageFlags=SetProjectileDamageFlags
SetProjectileDamageFlags="SetProjectileDamageFlags(",~whichProjectile,", ",~flags,")"
SetProjectileDamageFlagsHint="[UjAPI]  SetProjectileDamageFlags takes projectile whichProjectile, integer flags returns nothing"


EnumProjectilesInRange=EnumProjectilesInRange
EnumProjectilesInRange="EnumProjectilesInRange(",~x,", ",~y,", ",~radius,", ",~filter,", ",~handlerFunc,")"
EnumProjectilesInRangeHint="[UjAPI]  EnumProjectilesInRange takes real x, real y, real radius, boolexpr filter, code handlerFunc returns nothing"


EnumProjectilesInRect=EnumProjectilesInRect
EnumProjectilesInRect="EnumProjectilesInRect(",~whichRect,", ",~filter,", ",~handlerFunc,")"
EnumProjectilesInRectHint="[UjAPI]  EnumProjectilesInRect takes rect whichRect, boolexpr filter, code handlerFunc returns nothing"


HideOriginFrames=HideOriginFrames
HideOriginFrames="HideOriginFrames(",~flag,")"
HideOriginFramesHint="[UjAPI]  HideOriginFrames takes boolean flag returns nothing"


EditBlackBorders=EditBlackBorders
EditBlackBorders="EditBlackBorders(",~upperHeight,", ",~bottomHeight,")"
EditBlackBordersHint="[UjAPI]  EditBlackBorders takes real upperHeight, real bottomHeight returns nothing"


LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(",~TOCFile,")"
LoadTOCFileHint="[UjAPI]  LoadTOCFile takes string TOCFile returns boolean"


CreateFrame=CreateFrame
CreateFrame="CreateFrame(",~templateName,", ",~whichParent,", ",~priority,", ",~createContext,")"
CreateFrameHint="[UjAPI]  CreateFrame takes string templateName, framehandle whichParent, integer priority, integer createContext returns framehandle"


CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(",~templateName,", ",~whichParent,", ",~createContext,")"
CreateSimpleFrameHint="[UjAPI]  CreateSimpleFrame takes string templateName, framehandle whichParent, integer createContext returns framehandle"


CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(",~whichSimpleParent,", ",~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI]  CreateSimpleGlueFrame takes framehandle whichSimpleParent, framehandle whichSpriteFrame returns framehandle"


CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(",~frameType,", ",~contextName,", ",~whichParent,", ",~templateName,", ",~createContext,")"
CreateFrameByTypeHint="[UjAPI]  CreateFrameByType takes string frameType, string contextName, framehandle whichParent, string templateName, integer createContext returns framehandle"


DestroyFrame=DestroyFrame
DestroyFrame="DestroyFrame(",~whichFrame,")"
DestroyFrameHint="[UjAPI]  DestroyFrame takes framehandle whichFrame returns nothing"


SetFrameRelativePoint=SetFrameRelativePoint
SetFrameRelativePoint="SetFrameRelativePoint(",~whichFrame,", ",~point,", ",~relativeFrame,", ",~relativePoint,", ",~x,", ",~y,")"
SetFrameRelativePointHint="[UjAPI]  SetFrameRelativePoint takes framehandle whichFrame, framepointtype point, framehandle relativeFrame, framepointtype relativePoint, real x, real y returns nothing"


SetFrameAbsolutePoint=SetFrameAbsolutePoint
SetFrameAbsolutePoint="SetFrameAbsolutePoint(",~whichFrame,", ",~point,", ",~x,", ",~y,")"
SetFrameAbsolutePointHint="[UjAPI]  SetFrameAbsolutePoint takes framehandle whichFrame, framepointtype point, real x, real y returns nothing"


ClearFrameAllPoints=ClearFrameAllPoints
ClearFrameAllPoints="ClearFrameAllPoints(",~whichFrame,")"
ClearFrameAllPointsHint="[UjAPI]  ClearFrameAllPoints takes framehandle whichFrame returns nothing"


SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(",~whichFrame,", ",~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI]  SetFrameAllPoints takes framehandle whichFrame, framehandle relativeFrame returns boolean"


ShowFrame=ShowFrame
ShowFrame="ShowFrame(",~whichFrame,", ",~isShow,")"
ShowFrameHint="[UjAPI]  ShowFrame takes framehandle whichFrame, boolean isShow returns nothing"


SetFrameName=SetFrameName
SetFrameName="SetFrameName(",~whichFrame,", ",~contextName,")"
SetFrameNameHint="[UjAPI]  SetFrameName takes framehandle whichFrame, string contextName returns nothing"


SetFrameContext=SetFrameContext
SetFrameContext="SetFrameContext(",~whichFrame,", ",~createContext,")"
SetFrameContextHint="[UjAPI]  SetFrameContext takes framehandle whichFrame, integer createContext returns nothing"


SetFrameContextName=SetFrameContextName
SetFrameContextName="SetFrameContextName(",~whichFrame,", ",~contextName,", ",~createContext,")"
SetFrameContextNameHint="[UjAPI]  SetFrameContextName takes framehandle whichFrame, string contextName, integer createContext returns nothing"


ClickFrameEx=ClickFrameEx
ClickFrameEx="ClickFrameEx(",~whichFrame,", ",~whichMouseButton,")"
ClickFrameExHint="[UjAPI]  ClickFrameEx takes framehandle whichFrame, mousebuttontype whichMouseButton returns nothing"


ClickFrame=ClickFrame
ClickFrame="ClickFrame(",~whichFrame,")"
ClickFrameHint="[UjAPI]  ClickFrame takes framehandle whichFrame returns nothing"


SetFrameText=SetFrameText
SetFrameText="SetFrameText(",~whichFrame,", ",~text,")"
SetFrameTextHint="[UjAPI]  SetFrameText takes framehandle whichFrame, string text returns nothing"


AddFrameText=AddFrameText
AddFrameText="AddFrameText(",~whichFrame,", ",~text,")"
AddFrameTextHint="[UjAPI]  AddFrameText takes framehandle whichFrame, string text returns nothing"


SetFrameTextSizeLimit=SetFrameTextSizeLimit
SetFrameTextSizeLimit="SetFrameTextSizeLimit(",~whichFrame,", ",~textSize,")"
SetFrameTextSizeLimitHint="[UjAPI]  SetFrameTextSizeLimit takes framehandle whichFrame, integer textSize returns nothing"


SetFrameTextColourEx=SetFrameTextColourEx
SetFrameTextColourEx="SetFrameTextColourEx(",~whichFrame,", ",~stateId,", ",~colour,")"
SetFrameTextColourExHint="[UjAPI]  SetFrameTextColourEx takes framehandle whichFrame, integer stateId, integer colour returns nothing"


SetFrameTextColour=SetFrameTextColour
SetFrameTextColour="SetFrameTextColour(",~whichFrame,", ",~colour,")"
SetFrameTextColourHint="[UjAPI]  SetFrameTextColour takes framehandle whichFrame, integer colour returns nothing"


SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(",~whichFrame,", ",~isFocus,")"
SetFrameFocusHint="[UjAPI]  SetFrameFocus takes framehandle whichFrame, boolean isFocus returns boolean"


SetFrameModel=SetFrameModel
SetFrameModel="SetFrameModel(",~whichFrame,", ",~model,", ",~cameraIndex,")"
SetFrameModelHint="[UjAPI]  SetFrameModel takes framehandle whichFrame, string model, integer cameraIndex returns nothing"


SetFrameState=SetFrameState
SetFrameState="SetFrameState(",~whichFrame,", ",~whichFrameState,")"
SetFrameStateHint="[UjAPI]  SetFrameState takes framehandle whichFrame, framestate whichFrameState returns nothing"


SetFrameEnabled=SetFrameEnabled
SetFrameEnabled="SetFrameEnabled(",~whichFrame,", ",~enabled,")"
SetFrameEnabledHint="[UjAPI]  SetFrameEnabled takes framehandle whichFrame, boolean enabled returns nothing"


SetFrameLayoutFlag=SetFrameLayoutFlag
SetFrameLayoutFlag="SetFrameLayoutFlag(",~whichFrame,", ",~whichLayoutStyle,", ",~isSet,")"
SetFrameLayoutFlagHint="[UjAPI]  SetFrameLayoutFlag takes framehandle whichFrame, layoutstyleflag whichLayoutStyle, boolean isSet returns nothing"


SetFrameGridFlag=SetFrameGridFlag
SetFrameGridFlag="SetFrameGridFlag(",~whichFrame,", ",~whichGridStyle,", ",~isSet,")"
SetFrameGridFlagHint="[UjAPI]  SetFrameGridFlag takes framehandle whichFrame, gridstyleflag whichGridStyle, boolean isSet returns nothing"


SetFrameLayerFlag=SetFrameLayerFlag
SetFrameLayerFlag="SetFrameLayerFlag(",~whichFrame,", ",~whichLayerStyle,", ",~isSet,")"
SetFrameLayerFlagHint="[UjAPI]  SetFrameLayerFlag takes framehandle whichFrame, layerstyleflag whichLayerStyle, boolean isSet returns nothing"


SetFrameControlFlag=SetFrameControlFlag
SetFrameControlFlag="SetFrameControlFlag(",~whichFrame,", ",~whichControlStyle,", ",~isSet,")"
SetFrameControlFlagHint="[UjAPI]  SetFrameControlFlag takes framehandle whichFrame, controlstyleflag whichControlStyle, boolean isSet returns nothing"


SetFrameColourEx=SetFrameColourEx
SetFrameColourEx="SetFrameColourEx(",~whichFrame,", ",~textureId,", ",~colour,")"
SetFrameColourExHint="[UjAPI]  SetFrameColourEx takes framehandle whichFrame, integer textureId, integer colour returns nothing"


SetFrameColour=SetFrameColour
SetFrameColour="SetFrameColour(",~whichFrame,", ",~colour,")"
SetFrameColourHint="[UjAPI]  SetFrameColour takes framehandle whichFrame, integer colour returns nothing"


SetFrameVertexColour=SetFrameVertexColour
SetFrameVertexColour="SetFrameVertexColour(",~whichFrame,", ",~alpha,", ",~red,", ",~green,", ",~blue,")"
SetFrameVertexColourHint="[UjAPI]  SetFrameVertexColour takes framehandle whichFrame, integer alpha, integer red, integer green, integer blue returns nothing"


SetFrameVertexColourEx=SetFrameVertexColourEx
SetFrameVertexColourEx="SetFrameVertexColourEx(",~whichFrame,", ",~textureId,", ",~alpha,", ",~red,", ",~green,", ",~blue,")"
SetFrameVertexColourExHint="[UjAPI]  SetFrameVertexColourEx takes framehandle whichFrame, integer textureId, integer alpha, integer red, integer green, integer blue returns nothing"


SetFrameAlphaEx=SetFrameAlphaEx
SetFrameAlphaEx="SetFrameAlphaEx(",~whichFrame,", ",~textureId,", ",~alpha,")"
SetFrameAlphaExHint="[UjAPI]  SetFrameAlphaEx takes framehandle whichFrame, integer textureId, integer alpha returns nothing"


SetFrameAlpha=SetFrameAlpha
SetFrameAlpha="SetFrameAlpha(",~whichFrame,", ",~alpha,")"
SetFrameAlphaHint="[UjAPI]  SetFrameAlpha takes framehandle whichFrame, integer alpha returns nothing"


SetFrameBackdropTexture=SetFrameBackdropTexture
SetFrameBackdropTexture="SetFrameBackdropTexture(",~whichFrame,", ",~textureId,", ",~backgroundTextureFile,", ",~allowTransparency,", ",~blend,", ",~borderTextureFile,", ",~borderFlags,", ",~isControlBackdrop,")"
SetFrameBackdropTextureHint="[UjAPI]  SetFrameBackdropTexture takes framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean allowTransparency, boolean blend, string borderTextureFile, integer borderFlags, boolean isControlBackdrop returns nothing"


SetFrameTextureEx=SetFrameTextureEx
SetFrameTextureEx="SetFrameTextureEx(",~whichFrame,", ",~textureId,", ",~backgroundTextureFile,", ",~blend,", ",~borderTextureFile,", ",~borderFlags,")"
SetFrameTextureExHint="[UjAPI]  SetFrameTextureEx takes framehandle whichFrame, integer textureId, string backgroundTextureFile, boolean blend, string borderTextureFile, integer borderFlags returns nothing"


SetFrameTexture=SetFrameTexture
SetFrameTexture="SetFrameTexture(",~whichFrame,", ",~textureFile,", ",~textureId,", ",~blend,")"
SetFrameTextureHint="[UjAPI]  SetFrameTexture takes framehandle whichFrame, string textureFile, integer textureId, boolean blend returns nothing"


SetFrameBlendMode=SetFrameBlendMode
SetFrameBlendMode="SetFrameBlendMode(",~whichFrame,", ",~textureId,", ",~whichMode,")"
SetFrameBlendModeHint="[UjAPI]  SetFrameBlendMode takes framehandle whichFrame, integer textureId, blendmode whichMode returns nothing"


SetFrameMouseCaged=SetFrameMouseCaged
SetFrameMouseCaged="SetFrameMouseCaged(",~whichFrame,", ",~enable,")"
SetFrameMouseCagedHint="[UjAPI]  SetFrameMouseCaged takes framehandle whichFrame, boolean enable returns nothing"


SetFrameValue=SetFrameValue
SetFrameValue="SetFrameValue(",~whichFrame,", ",~value,")"
SetFrameValueHint="[UjAPI]  SetFrameValue takes framehandle whichFrame, real value returns nothing"


SetFrameValueEx=SetFrameValueEx
SetFrameValueEx="SetFrameValueEx(",~whichFrame,", ",~value,", ",~isFireEvent,")"
SetFrameValueExHint="[UjAPI]  SetFrameValueEx takes framehandle whichFrame, real value, boolean isFireEvent returns nothing"


SetFrameMinMaxValues=SetFrameMinMaxValues
SetFrameMinMaxValues="SetFrameMinMaxValues(",~whichFrame,", ",~minVal,", ",~maxVal,")"
SetFrameMinMaxValuesHint="[UjAPI]  SetFrameMinMaxValues takes framehandle whichFrame, real minVal, real maxVal returns nothing"


SetFrameStepSize=SetFrameStepSize
SetFrameStepSize="SetFrameStepSize(",~whichFrame,", ",~stepSize,")"
SetFrameStepSizeHint="[UjAPI]  SetFrameStepSize takes framehandle whichFrame, real stepSize returns nothing"


SetFrameWidth=SetFrameWidth
SetFrameWidth="SetFrameWidth(",~whichFrame,", ",~width,")"
SetFrameWidthHint="[UjAPI]  SetFrameWidth takes framehandle whichFrame, real width returns nothing"


SetFrameHeight=SetFrameHeight
SetFrameHeight="SetFrameHeight(",~whichFrame,", ",~height,")"
SetFrameHeightHint="[UjAPI]  SetFrameHeight takes framehandle whichFrame, real height returns nothing"


SetFrameSize=SetFrameSize
SetFrameSize="SetFrameSize(",~whichFrame,", ",~width,", ",~height,")"
SetFrameSizeHint="[UjAPI]  SetFrameSize takes framehandle whichFrame, real width, real height returns nothing"


SetFrameScale=SetFrameScale
SetFrameScale="SetFrameScale(",~whichFrame,", ",~scale,")"
SetFrameScaleHint="[UjAPI]  SetFrameScale takes framehandle whichFrame, real scale returns nothing"


SetFramePriority=SetFramePriority
SetFramePriority="SetFramePriority(",~whichFrame,", ",~priority,")"
SetFramePriorityHint="[UjAPI]  SetFramePriority takes framehandle whichFrame, integer priority returns nothing"


SetFrameParent=SetFrameParent
SetFrameParent="SetFrameParent(",~whichFrame,", ",~whichParent,")"
SetFrameParentHint="[UjAPI]  SetFrameParent takes framehandle whichFrame, framehandle whichParent returns nothing"


SetFrameFont=SetFrameFont
SetFrameFont="SetFrameFont(",~whichFrame,", ",~fontName,", ",~size,", ",~flags,")"
SetFrameFontHint="[UjAPI]  SetFrameFont takes framehandle whichFrame, string fontName, real size, integer flags returns nothing"


SetFrameTextAlignmentValue=SetFrameTextAlignmentValue
SetFrameTextAlignmentValue="SetFrameTextAlignmentValue(",~whichFrame,", ",~id,", ",~offset,")"
SetFrameTextAlignmentValueHint="[UjAPI]  SetFrameTextAlignmentValue takes framehandle whichFrame, integer id, real offset returns nothing"


SetFrameTextAlignment=SetFrameTextAlignment
SetFrameTextAlignment="SetFrameTextAlignment(",~whichFrame,", ",~verticalAlign,", ",~horizontalAlign,")"
SetFrameTextAlignmentHint="[UjAPI]  SetFrameTextAlignment takes framehandle whichFrame, textaligntype verticalAlign, textaligntype horizontalAlign returns nothing"


SetFrameTextVerticalAlignment=SetFrameTextVerticalAlignment
SetFrameTextVerticalAlignment="SetFrameTextVerticalAlignment(",~whichFrame,", ",~verticalAlign,")"
SetFrameTextVerticalAlignmentHint="[UjAPI]  SetFrameTextVerticalAlignment takes framehandle whichFrame, textaligntype verticalAlign returns nothing"


SetFrameTextHorizontalAlignment=SetFrameTextHorizontalAlignment
SetFrameTextHorizontalAlignment="SetFrameTextHorizontalAlignment(",~whichFrame,", ",~horizontalAlign,")"
SetFrameTextHorizontalAlignmentHint="[UjAPI]  SetFrameTextHorizontalAlignment takes framehandle whichFrame, textaligntype horizontalAlign returns nothing"


SetFrameCheckState=SetFrameCheckState
SetFrameCheckState="SetFrameCheckState(",~whichFrame,", ",~isCheck,")"
SetFrameCheckStateHint="[UjAPI]  SetFrameCheckState takes framehandle whichFrame, boolean isCheck returns nothing"


SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(",~texturePath,")"
SetMiniMapTextureHint="[UjAPI]  SetMiniMapTexture takes string texturePath returns boolean"


AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(",~whichFrame,")"
AddFrameSliderHint="[UjAPI]  AddFrameSlider takes framehandle whichFrame returns framehandle"


SetFrameItemsBorder=SetFrameItemsBorder
SetFrameItemsBorder="SetFrameItemsBorder(",~whichFrame,", ",~value,")"
SetFrameItemsBorderHint="[UjAPI]  SetFrameItemsBorder takes framehandle whichFrame, real value returns nothing"


SetFrameItemsHeight=SetFrameItemsHeight
SetFrameItemsHeight="SetFrameItemsHeight(",~whichFrame,", ",~value,")"
SetFrameItemsHeightHint="[UjAPI]  SetFrameItemsHeight takes framehandle whichFrame, real value returns nothing"


AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(",~whichFrame,", ",~text,", ",~frameToAdd,")"
AddFrameListItemHint="[UjAPI]  AddFrameListItem takes framehandle whichFrame, string text, framehandle frameToAdd returns framehandle"


SetFrameListItemById=SetFrameListItemById
SetFrameListItemById="SetFrameListItemById(",~whichFrame,", ",~id,", ",~listBoxItem,")"
SetFrameListItemByIdHint="[UjAPI]  SetFrameListItemById takes framehandle whichFrame, integer id, framehandle listBoxItem returns nothing"


SetFrameListItemByFrame=SetFrameListItemByFrame
SetFrameListItemByFrame="SetFrameListItemByFrame(",~whichFrame,", ",~frameToFind,", ",~listBoxItem,")"
SetFrameListItemByFrameHint="[UjAPI]  SetFrameListItemByFrame takes framehandle whichFrame, framehandle frameToFind, framehandle listBoxItem returns nothing"


RemoveFrameListItem=RemoveFrameListItem
RemoveFrameListItem="RemoveFrameListItem(",~whichFrame,", ",~listBoxItem,")"
RemoveFrameListItemHint="[UjAPI]  RemoveFrameListItem takes framehandle whichFrame, framehandle listBoxItem returns nothing"


RemoveFrameListItemById=RemoveFrameListItemById
RemoveFrameListItemById="RemoveFrameListItemById(",~whichFrame,", ",~id,")"
RemoveFrameListItemByIdHint="[UjAPI]  RemoveFrameListItemById takes framehandle whichFrame, integer id returns nothing"


RemoveFrameListItemByFrame=RemoveFrameListItemByFrame
RemoveFrameListItemByFrame="RemoveFrameListItemByFrame(",~whichFrame,", ",~listBoxItem,")"
RemoveFrameListItemByFrameHint="[UjAPI]  RemoveFrameListItemByFrame takes framehandle whichFrame, framehandle listBoxItem returns nothing"


SetFrameItemOwner=SetFrameItemOwner
SetFrameItemOwner="SetFrameItemOwner(",~listBoxItem,", ",~whichFrame,")"
SetFrameItemOwnerHint="[UjAPI]  SetFrameItemOwner takes framehandle listBoxItem, framehandle whichFrame returns nothing"


SetFrameHighlightTexture=SetFrameHighlightTexture
SetFrameHighlightTexture="SetFrameHighlightTexture(",~whichFrame,", ",~highlightId,", ",~texturePath,", ",~blendMode,")"
SetFrameHighlightTextureHint="[UjAPI]  SetFrameHighlightTexture takes framehandle whichFrame, integer highlightId, string texturePath, blendmode blendMode returns nothing"


SetFrameBorderEnabled=SetFrameBorderEnabled
SetFrameBorderEnabled="SetFrameBorderEnabled(",~whichFrame,", ",~backdropId,", ",~isEnable,")"
SetFrameBorderEnabledHint="[UjAPI]  SetFrameBorderEnabled takes framehandle whichFrame, integer backdropId, boolean isEnable returns nothing"


SetFrameBorderFlags=SetFrameBorderFlags
SetFrameBorderFlags="SetFrameBorderFlags(",~whichFrame,", ",~backdropId,", ",~borderFlag,")"
SetFrameBorderFlagsHint="[UjAPI]  SetFrameBorderFlags takes framehandle whichFrame, integer backdropId, integer borderFlag returns nothing"


SetFrameBorderSize=SetFrameBorderSize
SetFrameBorderSize="SetFrameBorderSize(",~whichFrame,", ",~backdropId,", ",~value,")"
SetFrameBorderSizeHint="[UjAPI]  SetFrameBorderSize takes framehandle whichFrame, integer backdropId, real value returns nothing"


SetFrameBackgroundSize=SetFrameBackgroundSize
SetFrameBackgroundSize="SetFrameBackgroundSize(",~whichFrame,", ",~backdropId,", ",~value,")"
SetFrameBackgroundSizeHint="[UjAPI]  SetFrameBackgroundSize takes framehandle whichFrame, integer backdropId, real value returns nothing"


SetFrameBackgroundInsetById=SetFrameBackgroundInsetById
SetFrameBackgroundInsetById="SetFrameBackgroundInsetById(",~whichFrame,", ",~backdropId,", ",~insetId,", ",~value,")"
SetFrameBackgroundInsetByIdHint="[UjAPI]  SetFrameBackgroundInsetById takes framehandle whichFrame, integer backdropId, integer insetId, real value returns nothing"


SetFrameBackgroundInsets=SetFrameBackgroundInsets
SetFrameBackgroundInsets="SetFrameBackgroundInsets(",~whichFrame,", ",~backdropId,", ",~minX,", ",~minY,", ",~maxX,", ",~maxY,")"
SetFrameBackgroundInsetsHint="[UjAPI]  SetFrameBackgroundInsets takes framehandle whichFrame, integer backdropId, real minX, real minY, real maxX, real maxY returns nothing"


SetFrameGridSize=SetFrameGridSize
SetFrameGridSize="SetFrameGridSize(",~grid,", ",~row,", ",~column,")"
SetFrameGridSizeHint="[UjAPI]  SetFrameGridSize takes framehandle grid, integer row, integer column returns nothing"


SetFrameGridFrame=SetFrameGridFrame
SetFrameGridFrame="SetFrameGridFrame(",~grid,", ",~row,", ",~column,", ",~whichFrame,")"
SetFrameGridFrameHint="[UjAPI]  SetFrameGridFrame takes framehandle grid, integer row, integer column, framehandle whichFrame returns nothing"


SetBuffBarRenderDuplicates=SetBuffBarRenderDuplicates
SetBuffBarRenderDuplicates="SetBuffBarRenderDuplicates(",~allow,")"
SetBuffBarRenderDuplicatesHint="[UjAPI]  SetBuffBarRenderDuplicates takes boolean allow returns nothing"


TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(",~whichTrigger,", ",~whichFrame,", ",~frameEvent,")"
TriggerRegisterFrameEventHint="[UjAPI]  TriggerRegisterFrameEvent takes trigger whichTrigger, framehandle whichFrame, frameeventtype frameEvent returns event"


RegisterFrameMouseButton=RegisterFrameMouseButton
RegisterFrameMouseButton="RegisterFrameMouseButton(",~whichFrame,", ",~whichButton,", ",~isAdd,")"
RegisterFrameMouseButtonHint="[UjAPI]  RegisterFrameMouseButton takes framehandle whichFrame, mousebuttontype whichButton, boolean isAdd returns nothing"


SetFrameSpriteScale=SetFrameSpriteScale
SetFrameSpriteScale="SetFrameSpriteScale(",~whichFrame,", ",~scale,")"
SetFrameSpriteScaleHint="[UjAPI]  SetFrameSpriteScale takes framehandle whichFrame, real scale returns nothing"


SetFrameSpriteTimeScale=SetFrameSpriteTimeScale
SetFrameSpriteTimeScale="SetFrameSpriteTimeScale(",~whichFrame,", ",~timescale,")"
SetFrameSpriteTimeScaleHint="[UjAPI]  SetFrameSpriteTimeScale takes framehandle whichFrame, real timescale returns nothing"


SetFrameSpritePlayerColour=SetFrameSpritePlayerColour
SetFrameSpritePlayerColour="SetFrameSpritePlayerColour(",~whichFrame,", ",~color,")"
SetFrameSpritePlayerColourHint="[UjAPI]  SetFrameSpritePlayerColour takes framehandle whichFrame, playercolor color returns nothing"


SetFrameSpriteAlpha=SetFrameSpriteAlpha
SetFrameSpriteAlpha="SetFrameSpriteAlpha(",~whichFrame,", ",~alpha,")"
SetFrameSpriteAlphaHint="[UjAPI]  SetFrameSpriteAlpha takes framehandle whichFrame, integer alpha returns boolean"


SetFrameSpriteColour=SetFrameSpriteColour
SetFrameSpriteColour="SetFrameSpriteColour(",~whichFrame,", ",~colour,")"
SetFrameSpriteColourHint="[UjAPI]  SetFrameSpriteColour takes framehandle whichFrame, integer colour returns boolean"


SetFrameSpriteVertexColour=SetFrameSpriteVertexColour
SetFrameSpriteVertexColour="SetFrameSpriteVertexColour(",~whichFrame,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetFrameSpriteVertexColourHint="[UjAPI]  SetFrameSpriteVertexColour takes framehandle whichFrame, integer red, integer green, integer blue, integer alpha returns boolean"


SetFrameSpriteOrientationEx=SetFrameSpriteOrientationEx
SetFrameSpriteOrientationEx="SetFrameSpriteOrientationEx(",~whichFrame,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetFrameSpriteOrientationExHint="[UjAPI]  SetFrameSpriteOrientationEx takes framehandle whichFrame, real yaw, real pitch, real roll, integer eulerOrder returns boolean"


SetFrameSpriteYaw=SetFrameSpriteYaw
SetFrameSpriteYaw="SetFrameSpriteYaw(",~whichFrame,", ",~yaw,")"
SetFrameSpriteYawHint="[UjAPI]  SetFrameSpriteYaw takes framehandle whichFrame, real yaw returns boolean"


SetFrameSpriteFacing=SetFrameSpriteFacing
SetFrameSpriteFacing="SetFrameSpriteFacing(",~whichFrame,", ",~facing,")"
SetFrameSpriteFacingHint="[UjAPI]  SetFrameSpriteFacing takes framehandle whichFrame, real facing returns boolean"


SetFrameSpritePitch=SetFrameSpritePitch
SetFrameSpritePitch="SetFrameSpritePitch(",~whichFrame,", ",~pitch,")"
SetFrameSpritePitchHint="[UjAPI]  SetFrameSpritePitch takes framehandle whichFrame, real pitch returns boolean"


SetFrameSpriteRoll=SetFrameSpriteRoll
SetFrameSpriteRoll="SetFrameSpriteRoll(",~whichFrame,", ",~roll,")"
SetFrameSpriteRollHint="[UjAPI]  SetFrameSpriteRoll takes framehandle whichFrame, real roll returns boolean"


SetFrameSpriteOrientation=SetFrameSpriteOrientation
SetFrameSpriteOrientation="SetFrameSpriteOrientation(",~whichFrame,", ",~yaw,", ",~pitch,", ",~roll,")"
SetFrameSpriteOrientationHint="[UjAPI]  SetFrameSpriteOrientation takes framehandle whichFrame, real yaw, real pitch, real roll returns nothing"


SetFrameSpriteMaterialTexture=SetFrameSpriteMaterialTexture
SetFrameSpriteMaterialTexture="SetFrameSpriteMaterialTexture(",~whichFrame,", ",~textureName,", ",~materialId,", ",~textureIndex,")"
SetFrameSpriteMaterialTextureHint="[UjAPI]  SetFrameSpriteMaterialTexture takes framehandle whichFrame, string textureName, integer materialId, integer textureIndex returns nothing"


SetFrameSpriteMatrixScale=SetFrameSpriteMatrixScale
SetFrameSpriteMatrixScale="SetFrameSpriteMatrixScale(",~whichFrame,", ",~sizeX,", ",~sizeY,", ",~sizeZ,")"
SetFrameSpriteMatrixScaleHint="[UjAPI]  SetFrameSpriteMatrixScale takes framehandle whichFrame, real sizeX, real sizeY, real sizeZ returns nothing"


ResetFrameSpriteMatrix=ResetFrameSpriteMatrix
ResetFrameSpriteMatrix="ResetFrameSpriteMatrix(",~whichFrame,")"
ResetFrameSpriteMatrixHint="[UjAPI]  ResetFrameSpriteMatrix takes framehandle whichFrame returns nothing"


SetFrameSpriteTexture=SetFrameSpriteTexture
SetFrameSpriteTexture="SetFrameSpriteTexture(",~whichFrame,", ",~textureName,", ",~textureIndex,")"
SetFrameSpriteTextureHint="[UjAPI]  SetFrameSpriteTexture takes framehandle whichFrame, string textureName, integer textureIndex returns nothing"


SetFrameSpriteReplaceableTexture=SetFrameSpriteReplaceableTexture
SetFrameSpriteReplaceableTexture="SetFrameSpriteReplaceableTexture(",~whichFrame,", ",~textureName,", ",~textureIndex,")"
SetFrameSpriteReplaceableTextureHint="[UjAPI]  SetFrameSpriteReplaceableTexture takes framehandle whichFrame, string textureName, integer textureIndex returns nothing"


SetFrameSpriteModel=SetFrameSpriteModel
SetFrameSpriteModel="SetFrameSpriteModel(",~whichFrame,", ",~modelName,")"
SetFrameSpriteModelHint="[UjAPI]  SetFrameSpriteModel takes framehandle whichFrame, string modelName returns nothing"


SetFrameSpriteModelEx=SetFrameSpriteModelEx
SetFrameSpriteModelEx="SetFrameSpriteModelEx(",~whichFrame,", ",~modelName,", ",~playerColour,")"
SetFrameSpriteModelExHint="[UjAPI]  SetFrameSpriteModelEx takes framehandle whichFrame, string modelName, integer playerColour returns nothing"


SetFrameSpriteAnimationWithRarityByIndex=SetFrameSpriteAnimationWithRarityByIndex
SetFrameSpriteAnimationWithRarityByIndex="SetFrameSpriteAnimationWithRarityByIndex(",~whichFrame,", ",~animIndex,", ",~rarity,")"
SetFrameSpriteAnimationWithRarityByIndexHint="[UjAPI]  SetFrameSpriteAnimationWithRarityByIndex takes framehandle whichFrame, integer animIndex, raritycontrol rarity returns nothing"


SetFrameSpriteAnimationByIndex=SetFrameSpriteAnimationByIndex
SetFrameSpriteAnimationByIndex="SetFrameSpriteAnimationByIndex(",~whichFrame,", ",~animIndex,")"
SetFrameSpriteAnimationByIndexHint="[UjAPI]  SetFrameSpriteAnimationByIndex takes framehandle whichFrame, integer animIndex returns nothing"


QueueFrameSpriteAnimationByIndex=QueueFrameSpriteAnimationByIndex
QueueFrameSpriteAnimationByIndex="QueueFrameSpriteAnimationByIndex(",~whichFrame,", ",~animIndex,")"
QueueFrameSpriteAnimationByIndexHint="[UjAPI]  QueueFrameSpriteAnimationByIndex takes framehandle whichFrame, integer animIndex returns nothing"


SetFrameSpriteAnimationWithRarity=SetFrameSpriteAnimationWithRarity
SetFrameSpriteAnimationWithRarity="SetFrameSpriteAnimationWithRarity(",~whichFrame,", ",~animationName,", ",~rarity,")"
SetFrameSpriteAnimationWithRarityHint="[UjAPI]  SetFrameSpriteAnimationWithRarity takes framehandle whichFrame, string animationName, raritycontrol rarity returns nothing"


SetFrameSpriteAnimation=SetFrameSpriteAnimation
SetFrameSpriteAnimation="SetFrameSpriteAnimation(",~whichFrame,", ",~animationName,")"
SetFrameSpriteAnimationHint="[UjAPI]  SetFrameSpriteAnimation takes framehandle whichFrame, string animationName returns nothing"


QueueFrameSpriteAnimation=QueueFrameSpriteAnimation
QueueFrameSpriteAnimation="QueueFrameSpriteAnimation(",~whichFrame,", ",~animationName,")"
QueueFrameSpriteAnimationHint="[UjAPI]  QueueFrameSpriteAnimation takes framehandle whichFrame, string animationName returns nothing"


SetFrameSpriteAnimationOffsetPercent=SetFrameSpriteAnimationOffsetPercent
SetFrameSpriteAnimationOffsetPercent="SetFrameSpriteAnimationOffsetPercent(",~whichFrame,", ",~percent,")"
SetFrameSpriteAnimationOffsetPercentHint="[UjAPI]  SetFrameSpriteAnimationOffsetPercent takes framehandle whichFrame, real percent returns nothing"


SyncInteger=SyncInteger
SyncInteger="SyncInteger(",~variableName,")"
SyncIntegerHint="[UjAPI]  SyncInteger takes string variableName returns nothing"


SyncReal=SyncReal
SyncReal="SyncReal(",~variableName,")"
SyncRealHint="[UjAPI]  SyncReal takes string variableName returns nothing"


SyncHandle=SyncHandle
SyncHandle="SyncHandle(",~variableName,")"
SyncHandleHint="[UjAPI]  SyncHandle takes string variableName returns nothing"


SyncBoolean=SyncBoolean
SyncBoolean="SyncBoolean(",~variableName,")"
SyncBooleanHint="[UjAPI]  SyncBoolean takes string variableName returns nothing"


TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI]  TriggerRegisterPlayerVariableSyncEvent takes trigger whichTrigger, player whichPlayer, string variableName returns event"


SyncSavedInteger=SyncSavedInteger
SyncSavedInteger="SyncSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedIntegerHint="[UjAPI]  SyncSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


SyncSavedReal=SyncSavedReal
SyncSavedReal="SyncSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedRealHint="[UjAPI]  SyncSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


SyncSavedHandle=SyncSavedHandle
SyncSavedHandle="SyncSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedHandleHint="[UjAPI]  SyncSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


SyncSavedBoolean=SyncSavedBoolean
SyncSavedBoolean="SyncSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedBooleanHint="[UjAPI]  SyncSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI]  TriggerRegisterPlayerHashtableDataSyncEvent takes trigger whichTrigger, player whichPlayer, hashtable whichHashtable returns event"


SendSyncData=SendSyncData
SendSyncData="SendSyncData(",~prefix,", ",~data,")"
SendSyncDataHint="[UjAPI]  SendSyncData takes string prefix, string data returns boolean"


TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~prefix,", ",~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI]  TriggerRegisterPlayerSyncEvent takes trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer returns event"


TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichKey,", ",~whichMetaKey,", ",~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI]  TriggerRegisterPlayerKeyEvent takes trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown returns event"


SetMouseMoveEventScreenAxisEnabled=SetMouseMoveEventScreenAxisEnabled
SetMouseMoveEventScreenAxisEnabled="SetMouseMoveEventScreenAxisEnabled(",~enable,")"
SetMouseMoveEventScreenAxisEnabledHint="[UjAPI]  SetMouseMoveEventScreenAxisEnabled takes boolean enable returns nothing"


SetMouseMoveEventWorldAxisEnabled=SetMouseMoveEventWorldAxisEnabled
SetMouseMoveEventWorldAxisEnabled="SetMouseMoveEventWorldAxisEnabled(",~enable,")"
SetMouseMoveEventWorldAxisEnabledHint="[UjAPI]  SetMouseMoveEventWorldAxisEnabled takes boolean enable returns nothing"


SetMouseMoveEventDelay=SetMouseMoveEventDelay
SetMouseMoveEventDelay="SetMouseMoveEventDelay(",~delay,")"
SetMouseMoveEventDelayHint="[UjAPI]  SetMouseMoveEventDelay takes integer delay returns nothing"


SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(",~flag,", ",~isSet,")"
SetEventDamageFlagHint="[UjAPI]  SetEventDamageFlag takes integer flag, boolean isSet returns boolean"


SetEventDamageExtraFlag=SetEventDamageExtraFlag
SetEventDamageExtraFlag="SetEventDamageExtraFlag(",~flag,", ",~isSet,")"
SetEventDamageExtraFlagHint="[UjAPI]  SetEventDamageExtraFlag takes integer flag, boolean isSet returns boolean"


SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(",~attackType,")"
SetEventAttackTypeHint="[UjAPI]  SetEventAttackType takes attacktype attackType returns boolean"


SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(",~damageType,")"
SetEventDamageTypeHint="[UjAPI]  SetEventDamageType takes damagetype damageType returns boolean"


SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(",~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI]  SetEventDamageTypeFlags takes integer damageFlags returns boolean"


SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(",~weaponType,")"
SetEventWeaponTypeHint="[UjAPI]  SetEventWeaponType takes weapontype weaponType returns boolean"


SetEventDamage=SetEventDamage
SetEventDamage="SetEventDamage(",~damage,")"
SetEventDamageHint="[UjAPI]  SetEventDamage takes real damage returns nothing"


SetEnemyStartLocPrioCount=SetEnemyStartLocPrioCount
SetEnemyStartLocPrioCount="SetEnemyStartLocPrioCount(",~whichStartLoc,", ",~prioSlotCount,")"
SetEnemyStartLocPrioCountHint="[UjAPI]  SetEnemyStartLocPrioCount takes integer whichStartLoc, integer prioSlotCount returns nothing"


SetEnemyStartLocPrio=SetEnemyStartLocPrio
SetEnemyStartLocPrio="SetEnemyStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,", ",~otherStartLocIndex,", ",~priority,")"
SetEnemyStartLocPrioHint="[UjAPI]  SetEnemyStartLocPrio takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing"


ParseTags=ParseTags
ParseTags="ParseTags(",~taggedString,")"
ParseTagsHint="[UjAPI]  ParseTags takes string taggedString returns string"


TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(",~whichTrigger,", ",~whichAbility,", ",~order,")"
TriggerRegisterCommandEventHint="[UjAPI]  TriggerRegisterCommandEvent takes trigger whichTrigger, integer whichAbility, string order returns event"


TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(",~whichTrigger,", ",~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI]  TriggerRegisterUpgradeCommandEvent takes trigger whichTrigger, integer whichUpgrade returns event"


SetPlayerHandicapReviveTime=SetPlayerHandicapReviveTime
SetPlayerHandicapReviveTime="SetPlayerHandicapReviveTime(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapReviveTimeHint="[UjAPI]  SetPlayerHandicapReviveTime takes player whichPlayer, real handicap returns nothing"


SetPlayerHandicapDamage=SetPlayerHandicapDamage
SetPlayerHandicapDamage="SetPlayerHandicapDamage(",~whichPlayer,", ",~handicap,")"
SetPlayerHandicapDamageHint="[UjAPI]  SetPlayerHandicapDamage takes player whichPlayer, real handicap returns nothing"


SetMaxCheckpointSaves=SetMaxCheckpointSaves
SetMaxCheckpointSaves="SetMaxCheckpointSaves(",~maxCheckpointSaves,")"
SetMaxCheckpointSavesHint="[UjAPI]  SetMaxCheckpointSaves takes integer maxCheckpointSaves returns nothing"


SaveGameCheckpoint=SaveGameCheckpoint
SaveGameCheckpoint="SaveGameCheckpoint(",~saveFileName,", ",~showWindow,")"
SaveGameCheckpointHint="[UjAPI]  SaveGameCheckpoint takes string saveFileName, boolean showWindow returns nothing"


SetPortraitLight=SetPortraitLight
SetPortraitLight="SetPortraitLight(",~portraitDNCFile,")"
SetPortraitLightHint="[UjAPI]  SetPortraitLight takes string portraitDNCFile returns nothing"


CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI]  CreateMinimapIconOnUnit takes unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(",~where,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI]  CreateMinimapIconAtLoc takes location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(",~x,", ",~y,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconHint="[UjAPI]  CreateMinimapIcon takes real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(",~key,")"
SkinManagerGetLocalPathHint="[UjAPI]  SkinManagerGetLocalPath takes string key returns string"


DestroyMinimapIcon=DestroyMinimapIcon
DestroyMinimapIcon="DestroyMinimapIcon(",~pingId,")"
DestroyMinimapIconHint="[UjAPI]  DestroyMinimapIcon takes minimapicon pingId returns nothing"


SetMinimapIconVisible=SetMinimapIconVisible
SetMinimapIconVisible="SetMinimapIconVisible(",~whichMinimapIcon,", ",~visible,")"
SetMinimapIconVisibleHint="[UjAPI]  SetMinimapIconVisible takes minimapicon whichMinimapIcon, boolean visible returns nothing"


SetMinimapIconOrphanDestroy=SetMinimapIconOrphanDestroy
SetMinimapIconOrphanDestroy="SetMinimapIconOrphanDestroy(",~whichMinimapIcon,", ",~doDestroy,")"
SetMinimapIconOrphanDestroyHint="[UjAPI]  SetMinimapIconOrphanDestroy takes minimapicon whichMinimapIcon, boolean doDestroy returns nothing"


CameraSetFocalDistance=CameraSetFocalDistance
CameraSetFocalDistance="CameraSetFocalDistance(",~distance,")"
CameraSetFocalDistanceHint="[UjAPI]  CameraSetFocalDistance takes real distance returns nothing"


CameraSetDepthOfFieldScale=CameraSetDepthOfFieldScale
CameraSetDepthOfFieldScale="CameraSetDepthOfFieldScale(",~scale,")"
CameraSetDepthOfFieldScaleHint="[UjAPI]  CameraSetDepthOfFieldScale takes real scale returns nothing"


SetCinematicAudio=SetCinematicAudio
SetCinematicAudio="SetCinematicAudio(",~cinematicAudio,")"
SetCinematicAudioHint="[UjAPI]  SetCinematicAudio takes boolean cinematicAudio returns nothing"


StartSoundEx=StartSoundEx
StartSoundEx="StartSoundEx(",~soundHandle,", ",~fadeIn,")"
StartSoundExHint="[UjAPI]  StartSoundEx takes sound soundHandle, boolean fadeIn returns nothing"


SetThematicMusicVolume=SetThematicMusicVolume
SetThematicMusicVolume="SetThematicMusicVolume(",~volume,")"
SetThematicMusicVolumeHint="[UjAPI]  SetThematicMusicVolume takes integer volume returns nothing"


SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(",~soundHandle,", ",~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI]  SetSoundFacialAnimationLabel takes sound soundHandle, string animationLabel returns boolean"


SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(",~soundHandle,", ",~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI]  SetSoundFacialAnimationGroupLabel takes sound soundHandle, string groupLabel returns boolean"


SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(",~soundHandle,", ",~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI]  SetSoundFacialAnimationSetFilepath takes sound soundHandle, string animationSetFilepath returns boolean"


SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(",~soundHandle,", ",~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI]  SetDialogueSpeakerNameKey takes sound soundHandle, string speakerName returns boolean"


SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(",~soundHandle,", ",~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI]  SetDialogueTextKey takes sound soundHandle, string dialogueText returns boolean"


AutomationSetTestType=AutomationSetTestType
AutomationSetTestType="AutomationSetTestType(",~testType,")"
AutomationSetTestTypeHint="[UjAPI]  AutomationSetTestType takes string testType returns nothing"


AutomationTestStart=AutomationTestStart
AutomationTestStart="AutomationTestStart(",~testName,")"
AutomationTestStartHint="[UjAPI]  AutomationTestStart takes string testName returns nothing"


AutomationTestEnd=AutomationTestEnd
AutomationTestEnd="AutomationTestEnd(",")"
AutomationTestEndHint="[UjAPI]  AutomationTestEnd takes nothing returns nothing"


AutomationTestingFinished=AutomationTestingFinished
AutomationTestingFinished="AutomationTestingFinished(",")"
AutomationTestingFinishedHint="[UjAPI]  AutomationTestingFinished takes nothing returns nothing"


CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(",~abilCode,", ",~order,")"
CreateCommandButtonEffectHint="[UjAPI]  CreateCommandButtonEffect takes integer abilCode, string order returns commandbuttoneffect"


CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(",~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI]  CreateUpgradeCommandButtonEffect takes integer whichUprgade returns commandbuttoneffect"


CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(",~abilCode,")"
CreateLearnCommandButtonEffectHint="[UjAPI]  CreateLearnCommandButtonEffect takes integer abilCode returns commandbuttoneffect"


DestroyCommandButtonEffect=DestroyCommandButtonEffect
DestroyCommandButtonEffect="DestroyCommandButtonEffect(",~whichEffect,")"
DestroyCommandButtonEffectHint="[UjAPI]  DestroyCommandButtonEffect takes commandbuttoneffect whichEffect returns nothing"

DoNothing=Do Nothing
DoNothing="Do nothing"

CommentString=Comment
CommentString="-------- ",~Comment Text," --------"

CustomScriptCode=Custom Script
CustomScriptCode="Custom script:   ",~Script Code
CustomScriptCodeHint=Enter one line of script code.  Example: 'call my_func(udg_my_var)'

TriggerSleepAction=Wait
TriggerSleepAction="Wait ",~Time," seconds"
TriggerSleepActionHint=The duration of this wait is specified in real-time seconds.

PolledWait=Wait (Game-Time)
PolledWait="Wait ",~Time," game-time seconds"
PolledWaitHint=The duration of this wait is specified in game-time seconds.  This is a polled wait, so it may last slightly longer than requested.

WaitForCondition=Wait For Condition
WaitForCondition="Wait until ",~Condition,", checking every ",~Interval," seconds"

WaitForSoundBJ=Wait For Sound
WaitForSoundBJ="Wait for ",~Sound," to be ",~Time," seconds from finished playing"
WaitForSoundBJHint=This action only waits if the sound is currently playing.  If the sound has not yet started, or has already finished, this action does nothing.

SetVariable=Set Variable
SetVariable="Set ",~Variable," = ",~Value

ReturnAction=Skip Remaining Actions
ReturnAction="Skip remaining actions"
ReturnActionHint=This causes all remaining actions in the trigger to be skipped.

IfThenElseMultiple=If / Then / Else, Multiple Functions
IfThenElseMultiple="If (All Conditions are True) then do (Then Actions) else do (Else Actions)"
IfThenElseMultipleHint=Add conditions and actions to this function in the main display.

IfThenElse=If / Then / Else
IfThenElse="If ",~Condition," then do ",~Action," else do ",~Action

ForLoopAMultiple=For Each Integer A, Do Multiple Actions
ForLoopAMultiple="For each (Integer A) from ",~Start," to ",~End,", do (Actions)"
ForLoopAMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopBMultiple=For Each Integer B, Do Multiple Actions
ForLoopBMultiple="For each (Integer B) from ",~Start," to ",~End,", do (Actions)"
ForLoopBMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopVarMultiple=For Each Integer Variable, Do Multiple Actions
ForLoopVarMultiple="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do (Actions)"
ForLoopVarMultipleHint=Add actions to this function in the main display. The end value is assumed to be larger than the start value.

ForLoopA=For Each Integer A, Do Action
ForLoopA="For each (Integer A) from ",~Start," to ",~End,", do ",~Action
ForLoopAHint=The end value is assumed to be larger than the start value.

ForLoopB=For Each Integer B, Do Action
ForLoopB="For each (Integer B) from ",~Start," to ",~End,", do ",~Action
ForLoopBHint=The end value is assumed to be larger than the start value.

ForLoopVar=For Each Integer Variable, Do Action
ForLoopVar="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do ",~Action
ForLoopVarHint=The end value is assumed to be larger than the start value.

StartMeleeAI=Start Melee AI Script
StartMeleeAI="Start melee AI script for ",~Player,": ",~Script
StartMeleeAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

StartCampaignAI=Start Campaign AI Script
StartCampaignAI="Start campaign AI script for ",~Player,": ",~Script
StartCampaignAIHint=This should only only be used for computer-controlled player slots.  When using this action, it is advised that you enable the 'Fixed Player Settings' force property.

CommandAI=Send AI Command
CommandAI="Send ",~Player," the AI Command (",~Command,", ",~Data,")"
CommandAIHint=This action is for internal use in AI scripts.

RemoveGuardPosition=Ignore Unit Guard Position
RemoveGuardPosition="Ignore ",~Unit,"'s guard position"
RemoveGuardPositionHint=This action tells the AI to neither use nor replace a given preplaced unit.  This has no effect on Heroes and peon-type units.

RemoveAllGuardPositions=Ignore All Unit Guard Positions
RemoveAllGuardPositions="Ignore the guard positions of all ",~Player," units"
RemoveAllGuardPositionsHint=This action tells the AI for the given player to neither use nor replace any of its preplaced units.  This has no effect on Heroes and peon-type units.

RecycleGuardPosition=Recycle Unit Guard Position
RecycleGuardPosition="Recycle ",~Unit,"'s guard position"
RecycleGuardPositionHint=This action requests that the AI recycle the guard position that once belonged to the specified unit.

LockGuardPosition=Lock Guard Position
LockGuardPosition="Lock guard position of ",~Unit
LockGuardPositionHint=This action prevents the AI from changing the guard position of a unit.

SetUnitAnimation=Play Unit Animation
SetUnitAnimation="Play ",~Unit,"'s ",~Animation Name," animation"
SetUnitAnimationHint=Use 'Reset Unit Animation' to revert to a unit's normal animation.

SetUnitAnimationWithRarity=Play Unit Animation (Specify Rarity)
SetUnitAnimationWithRarity="Play ",~Unit,"'s ",~Animation Name," animation, using only ",~Rarity," animations"
SetUnitAnimationWithRarityHint=This animation will repeat until reset with 'Reset Unit Animation'.

QueueUnitAnimationBJ=Queue Unit Animation
QueueUnitAnimationBJ="Queue ",~Unit,"'s ",~Animation Name," animation"

ResetUnitAnimation=Reset Unit Animation
ResetUnitAnimation="Reset ",~Unit,"'s animation"
ResetUnitAnimationHint=Sets the unit's animation back to whatever the unit is doing.

AddUnitAnimationPropertiesBJ=Add/Remove Unit Animation Tag
AddUnitAnimationPropertiesBJ=~Add/Remove," the ",~Tag," animation tag to ",~Unit

SetUnitLookAt=Lock Body-Part Facing
SetUnitLookAt="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used.  The offset is taken as (X, Y, Z) from the target's feet.

ResetUnitLookAt=Reset Body-Part Facing
ResetUnitLookAt="Reset ",~Unit,"'s body-part facing"
ResetUnitLookAtHint=Returns a unit's body-part facing to normal.

SetUnitScalePercent=Change Unit Size
SetUnitScalePercent="Change ",~Unit,"'s size to (",~X,"%, ",~Y,"%, ",~Z,"%) of its original size"
SetUnitScalePercentHint=The scaling values apply to (Length, Width, Height) when viewing a unit head-on.

SetUnitVertexColorBJ=Change Unit Vertex Coloring
SetUnitVertexColorBJ="Change ",~Unit,"'s vertex coloring to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetUnitVertexColorBJHint=The color values are (Red, Green, Blue).  Most units default to 100% red, green, and blue, with 0% transparency.  A 100% transparent unit is completely invisible.

SetUnitTimeScalePercent=Change Unit Animation Speed
SetUnitTimeScalePercent="Change ",~Unit,"'s animation speed to ",~Percent,"% of its original speed"
SetUnitTimeScalePercentHint=To revert a unit's animation speed to default, set its animation speed to 100%.

SetUnitTurnSpeedBJ=Change Unit Turn Speed
SetUnitTurnSpeedBJ="Change ",~Unit," turn speed to ",~Value
SetUnitTurnSpeedBJHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

SetUnitBlendTimeBJ=Change Unit Blend Time
SetUnitBlendTimeBJ="Change ",~Unit," blend time to ",~Value
SetUnitBlendTimeBJHint=A unit's blend time determines how quickly the unit's body parts turn to face a direction.

SetUnitFlyHeightBJ=Change Unit Flying Height
SetUnitFlyHeightBJ="Change ",~Unit," flying height to ",~Height," at ",~Rate
SetUnitFlyHeightBJHint=Only flying units use flying heights.

SetUnitPropWindowBJ=Change Unit Prop Window Angle
SetUnitPropWindowBJ="Change ",~Unit," prop window angle to ",~Angle

SetDestructableAnimationBJ=Play Destructible Animation
SetDestructableAnimationBJ="Play ",~Destructible,"'s ",~Animation Name," animation"

QueueDestructableAnimationBJ=Queue Destructible Animation
QueueDestructableAnimationBJ="Queue ",~Destructible,"'s ",~Animation Name," animation"

SetDestAnimationSpeedPercent=Change Destructible Animation Speed
SetDestAnimationSpeedPercent="Change ",~Destructible,"'s animation speed to ",~Percent,"% of its original speed"
SetDestAnimationSpeedPercentHint=To revert a destructible's animation speed to default, set its animation speed to 100%.

SetDoodadAnimationRectBJ=Play Animation For Doodads In Rect
SetDoodadAnimationRectBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Rect
SetDoodadAnimationRectBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

SetDoodadAnimationBJ=Play Animation For Doodads In Circle
SetDoodadAnimationBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Radius," of ",~Point
SetDoodadAnimationBJHint=Special animation names: 'show', 'hide', 'soundon', 'soundoff'

CameraSetupApplyForPlayer=Apply Camera Object (Timed)
CameraSetupApplyForPlayer=~Apply Method," ",~Camera Object," for ",~Player," over ",~Time," seconds"

PanCameraToTimedLocForPlayer=Pan Camera (Timed)
PanCameraToTimedLocForPlayer="Pan camera for ",~Player," to ",~Point," over ",~Time," seconds"

PanCameraToTimedLocWithZForPlayer=Pan Camera With Interpolated Height (Timed)
PanCameraToTimedLocWithZForPlayer="Pan camera for ",~Player," to ",~Point," with height ",~Z," above the terrain over ",~Time," seconds"
PanCameraToTimedLocWithZForPlayerHint=The camera will not drop below the terrain height during its camera path.

SmartCameraPanBJ=Pan Camera As Necessary (Timed)
SmartCameraPanBJ="Pan camera as necessary for ",~Player," to ",~Point," over ",~Time," seconds"
SmartCameraPanBJHint=If the camera is very far from the destination, it will snap instead of pan.  If the camera is very close to the destination, the pan request will be skipped.

SetCameraFieldForPlayer=Set Camera Field (Timed)
SetCameraFieldForPlayer="Set ",~Player,"'s camera ",~Field," to ",~Value," over ",~Time," seconds"

RotateCameraAroundLocBJ=Rotate Camera Around Point
RotateCameraAroundLocBJ="Rotate camera ",~Angle," degrees around ",~Point," for ",~Player," over ",~Time," seconds"

SetCameraTargetControllerNoZForPlayer=Lock Camera Target To Unit
SetCameraTargetControllerNoZForPlayer="Lock camera target for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,") using ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint=The camera target is offset by (X, Y) from the center of the unit's feet.

SetCameraOrientControllerForPlayerBJ=Lock Camera Orientation To Unit
SetCameraOrientControllerForPlayerBJ="Lock camera orientation for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,")"

SetCinematicCameraForPlayer=Play Cinematic Camera
SetCinematicCameraForPlayer="Run camera for ",~Player," through ",~Camera File," cinematic camera"

StopCameraForPlayerBJ=Stop Camera
StopCameraForPlayerBJ="Stop the camera for ",~Player

ResetToGameCameraForPlayer=Reset Game Camera
ResetToGameCameraForPlayer="Reset camera for ",~Player," to standard game-view over ",~Time," seconds"

CameraSetSmoothingFactorBJ=Change Camera Smoothing Factor
CameraSetSmoothingFactorBJ="Change camera smoothing factor to ",~Factor

CameraResetSmoothingFactorBJ=Reset Camera Smoothing Factor
CameraResetSmoothingFactorBJ="Reset camera smoothing factor"

CameraSetSourceNoiseForPlayer=Sway Camera Source
CameraSetSourceNoiseForPlayer="Sway the camera source for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetSourceNoiseForPlayerHint=This constantly sways the camera source until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetTargetNoiseForPlayer=Sway Camera Target
CameraSetTargetNoiseForPlayer="Sway the camera target for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetTargetNoiseForPlayerHint=This constantly sways the camera target until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'.

CameraSetEQNoiseForPlayer=Shake Camera
CameraSetEQNoiseForPlayer="Shake the camera for ",~Player," with magnitude ",~Magnitude
CameraSetEQNoiseForPlayerHint=This constantly shakes the camera until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying/Shaking Camera'.

CameraClearNoiseForPlayer=Stop Swaying/Shaking Camera
CameraClearNoiseForPlayer="Stop swaying/shaking the camera for ",~Player
CameraClearNoiseForPlayerHint=This stops the camera from swaying after a 'Camera - Sway Camera' or 'Camera - Shake Camera' action is used.

AdjustCameraBoundsForPlayerBJ=Extend/Shrink Camera Bounds
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," the camera bounds for ",~Player," west by ",~West,", east by ",~East,", north by ",~North,", and south by ",~South

SetCameraBoundsToRectForPlayerBJ=Set Camera Bounds
SetCameraBoundsToRectForPlayerBJ="Set the camera bounds for ",~Player," to ",~Rect
SetCameraBoundsToRectForPlayerBJHint=This restricts the game camera to the specified rect.  Changing the camera bounds does not change the scale of the minimap.  This should only be called while the camera is facing north.

SetCameraQuickPositionLocForPlayer=Set Spacebar-Point
SetCameraQuickPositionLocForPlayer="Set a spacebar-point for ",~Player," at ",~Point
SetCameraQuickPositionLocForPlayerHint=A spacebar-point is a location that the game camera jumps to when the player presses the spacebar.

TransmissionFromUnitWithNameBJ=Transmission From Unit
TransmissionFromUnitWithNameBJ="Send transmission to ",~Player Group," from ",~Unit," named ",~Name,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint=The duration of 'No sound' is 5 seconds.

TransmissionFromUnitTypeWithNameBJ=Transmission From Unit-Type
TransmissionFromUnitTypeWithNameBJ="Send transmission to ",~Player Group," from a ",~Player," ",~Unit-Type," named ",~Name," at ",~Point,": Play ",~Sound," and display ",~Message,".  Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint=The duration of 'No sound' is 5 seconds.

ForceCinematicSubtitlesBJ=Subtitle Display Override
ForceCinematicSubtitlesBJ="Turn subtitle display override ",~On/Off
ForceCinematicSubtitlesBJHint=Turning this on will cause transmission text to be displayed on the screen even if the user normally has subtitles turned off.

CinematicModeBJ=Cinematic Mode
CinematicModeBJ="Turn cinematic mode ",~On/Off," for ",~Player Group

CinematicModeExBJ=Cinematic Mode (Timed)
CinematicModeExBJ="Turn cinematic mode ",~On/Off," for ",~Player Group," over ",~Time," seconds"

CinematicFadeBJ=Fade Filter
CinematicFadeBJ=~Fade Type," over ",~Duration," seconds using texture ",~Texture," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
CinematicFadeBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CinematicFilterGenericBJ=Advanced Filter
CinematicFilterGenericBJ="Apply a filter over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DisplayCineFilterBJ=Show/Hide Filter
DisplayCineFilterBJ=~Show/Hide," filter"

PingMinimapLocForForce=Ping Minimap
PingMinimapLocForForce="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds"

PingMinimapLocForForceEx=Ping Minimap With Color
PingMinimapLocForForceEx="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds, using a ",~Style," ping of color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint=The color values are (Red, Green, Blue).  Warning pings are always red.

UnitAddIndicatorBJ=Flash Speech Indicator For Unit
UnitAddIndicatorBJ="Flash a speech indicator for ",~Unit," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
UnitAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

DestructableAddIndicatorBJ=Flash Speech Indicator For Destructible
DestructableAddIndicatorBJ="Flash a speech indicator for ",~Destructible," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
DestructableAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ItemAddIndicatorBJ=Flash Speech Indicator For Item
ItemAddIndicatorBJ="Flash a speech indicator for ",~Item," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
ItemAddIndicatorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

ClearTextMessagesBJ=Clear Text Messages
ClearTextMessagesBJ="Clear the screen of text messages for ",~Player Group

ShowInterfaceForceOff=Letterbox Mode On
ShowInterfaceForceOff="Turn on letterbox mode (hide interface) for ",~Player Group,": fade out over ",~Duration," seconds"
ShowInterfaceForceOffHint=Puts the camera into letterbox mode, hiding the game interface.

ShowInterfaceForceOn=Letterbox Mode Off
ShowInterfaceForceOn="Turn off letterbox mode (show interface) for ",~Player Group,": fade in over ",~Duration," seconds"
ShowInterfaceForceOnHint=Puts the camera into normal (non-letterbox) mode, displaying the game interface.

SetUserControlForceOff=Disable User Control
SetUserControlForceOff="Disable user control for ",~Player Group

SetUserControlForceOn=Enable User Control
SetUserControlForceOn="Enable user control for ",~Player Group

EnableOcclusionBJ=Enable/Disable Occlusion
EnableOcclusionBJ=~Enable/Disable," occlusion for ",~Player Group
EnableOcclusionBJHint=When occlusion is enabled, trees that block vision of units become transparent.

EnableWorldFogBoundaryBJ=Enable/Disable Boundary Tinting
EnableWorldFogBoundaryBJ=~Enable/Disable," boundary tinting for ",~Player Group

StartTimerBJ=Start Timer
StartTimerBJ="Start ",~Timer," as a ",~One-Shot/Repeating," timer that will expire in ",~Time," seconds"

PauseTimerBJ=Pause Timer
PauseTimerBJ=~Pause/Resume," ",~Timer

CreateTimerDialogBJ=Create Timer Window
CreateTimerDialogBJ="Create a timer window for ",~Timer," with title ",~Title
CreateTimerDialogBJHint=Timer Windows cannot be displayed at map initialization.

DestroyTimerDialogBJ=Destroy Timer Window
DestroyTimerDialogBJ="Destroy ",~Timer Window

TimerDialogDisplayForPlayerBJ=Show/Hide Timer Window For Player
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," for ",~Player
TimerDialogDisplayForPlayerBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogDisplayBJ=Show/Hide Timer Window
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint=Timer Windows cannot be displayed at map initialization.

TimerDialogSetTitleBJ=Change Timer Window Title
TimerDialogSetTitleBJ="Change the title of ",~Timer Window," to ",~Title

TimerDialogSetTitleColorBJ=Change Timer Window Title Color
TimerDialogSetTitleColorBJ="Change the color of the title for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTitleColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

TimerDialogSetTimeColorBJ=Change Timer Window Time Color
TimerDialogSetTimeColorBJ="Change the color of the time for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTimeColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

CreateDestructableLoc=Create
CreateDestructableLoc="Create a ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

CreateDeadDestructableLocBJ=Create (Dead)
CreateDeadDestructableLocBJ="Create a dead ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableLocBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible.

KillDestructable=Kill
KillDestructable="Kill ",~Destructible

RemoveDestructable=Remove
RemoveDestructable="Remove ",~Destructible

DestructableRestoreLife=Resurrect
DestructableRestoreLife="Resurrect ",~Destructible," with ",~Value," life and ",~Show/Hide," birth animation"

ShowDestructableBJ=Show/Hide
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint=Hidden destructibles are not displayed, but still affect pathing and visibility.

SetDestructableLifePercentBJ=Set Life (To Percentage)
SetDestructableLifePercentBJ="Set life of ",~Destructible," to ",~Percent,"%"

SetDestructableLife=Set Life (To Value)
SetDestructableLife="Set life of ",~Destructible," to ",~Value

SetDestructableMaxLifeBJ=Set Max Life
SetDestructableMaxLifeBJ="Set max life of ",~Destructible," to ",~Value

ModifyGateBJ=Open/Close/Destroy Gate
ModifyGateBJ=~Open/Close/Destroy," ",~Gate

ChangeElevatorWalls=Open/Close Elevator Walls
ChangeElevatorWalls=~Open/Close," ",~Walls," of ",~Elevator

ChangeElevatorHeight=Set Elevator Height
ChangeElevatorHeight="Set height of ",~Elevator," to ",~Height

SetDestructableInvulnerableBJ=Make Invulnerable/Vulnerable
SetDestructableInvulnerableBJ="Make ",~Destructible," ",~Invulnerable/Vulnerable

SetDestructableOccluderHeight=Set Occlusion Height
SetDestructableOccluderHeight="Set the occlusion height of ",~Destructible," to ",~Height

EnumDestructablesInRectAllMultiple=Pick Every Destructible In Rect And Do Multiple Actions
EnumDestructablesInRectAllMultiple="Pick every destructible in ",~Rect," and do (Actions)"
EnumDestructablesInRectAllMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInCircleBJMultiple=Pick Every Destructible In Circle And Do Multiple Actions
EnumDestructablesInCircleBJMultiple="Pick every destructible within ",~Radius," of ",~Point," and do (Actions)"
EnumDestructablesInCircleBJMultipleHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumDestructablesInRectAll=Pick Every Destructible In Rect And Do Action
EnumDestructablesInRectAll="Pick every destructible in ",~Rect," and do ",~Action
EnumDestructablesInRectAllHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the rect, including dead destructibles.  Wait actions should not be used within this function.

EnumDestructablesInCircleBJ=Pick Every Destructible In Circle And Do Action
EnumDestructablesInCircleBJ="Pick every destructible within ",~Radius," of ",~Point," and do ",~Action
EnumDestructablesInCircleBJHint=Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.

DialogDisplayBJ=Show/Hide
DialogDisplayBJ=~Show/Hide," ",~Dialog," for ",~Player
DialogDisplayBJHint=Dialogs cannot be displayed at map initialization.

DialogSetMessageBJ=Change Title
DialogSetMessageBJ="Change the title of ",~Dialog," to ",~Title

DialogAddButtonBJ=Create Dialog Button
DialogAddButtonBJ="Create a dialog button for ",~Dialog," labelled ",~Text

DialogClearBJ=Clear
DialogClearBJ="Clear ",~Dialog
DialogClearBJHint=This clears the title and all buttons for the specified dialog.

AddWeatherEffectSaveLast=Create Weather Effect
AddWeatherEffectSaveLast="Create at ",~Rect," the weather effect ",~Weather Id

EnableWeatherEffect=Enable/Disable Weather Effect
EnableWeatherEffect="Turn ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint=You can create weather effects via the 'Environment - Create Weather Effect' action.

RemoveWeatherEffectBJ=Remove Weather Effect
RemoveWeatherEffectBJ="Remove ",~Weather Effect

TerrainDeformationCraterBJ=Create Terrain Deformation: Crater
TerrainDeformationCraterBJ="Create a ",~Duration," second ",~Type," crater deformation at ",~Point," with radius ",~Radius," and depth ",~Depth
TerrainDeformationCraterBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.  Permanent deformations are not preserved in saved game files.

TerrainDeformationRippleBJ=Create Terrain Deformation: Ripple
TerrainDeformationRippleBJ="Create a ",~Duration," second ",~Type," ripple deformation at ",~Point," with starting radius ",~Radius,", ending radius ",~Radius,", and depth ",~Depth,", using ",~Time," second ripples spaced ",~Distance," apart"
TerrainDeformationRippleBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationWaveBJ=Create Terrain Deformation: Wave
TerrainDeformationWaveBJ="Create a ",~Duration," second wave deformation from ",~Source," to ",~Target," with radius ",~Radius,", depth ",~Depth,", and a ",~Delay," second trailing delay"
TerrainDeformationWaveBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.

TerrainDeformationRandomBJ=Create Terrain Deformation: Random
TerrainDeformationRandomBJ="Create a ",~Duration," second random deformation at ",~Point," with radius ",~Radius,", using depths between ",~Minimum," and ",~Maximum,", updating every ",~Update Interval," seconds"
TerrainDeformationRandomBJHint=Use 'Last Created Terrain Deformation' to refer to this terrain deformation.

TerrainDeformationStopBJ=Stop Terrain Deformation
TerrainDeformationStopBJ="Stop ",~Terrain Deformation," over ",~Duration," seconds"
TerrainDeformationStopBJHint=The deformation will smoothly reduce to nothing over the duration.

TerrainDeformStopAll=Stop All Terrain Deformations
TerrainDeformStopAll="Stop all active terrain deformations instantly"
TerrainDeformStopAllHint=This includes any terrain deformations indirectly caused by spells or abilities.

SetWaterDeforms=Turn Water Deformation On/Off
SetWaterDeforms="Turn water deformation ",~On/Off
SetWaterDeformsHint=When this is turned on, terrain deformations will also apply to any water above the terrain.  This does not work with permanent deformations.

SetTerrainTypeBJ=Change Terrain Type
SetTerrainTypeBJ="Change terrain type at ",~Location," to ",~Terrain Type," using variation ",~Variation," in an area of size ",~Area," and shape ",~Shape
SetTerrainTypeBJHint=Use a variation of -1 to generate random variations across the area.

SetTerrainPathableBJ=Turn Terrain Pathing On/Off
SetTerrainPathableBJ="Set terrain pathing at ",~Location," of type ",~Pathing," to ",~On/Off
SetTerrainPathableBJHint=Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.).

SetWaterBaseColorBJ=Set Water Tinting Color
SetWaterBaseColorBJ="Change water tinting color to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetWaterBaseColorBJHint=The color values are (Red, Green, Blue).  100% transparent water is completely invisible.

SetSkyModel=Set Sky
SetSkyModel="Set sky to ",~Sky

SetTerrainFogExBJ=Set Fog
SetTerrainFogExBJ="Set fog to style ",~Style,", z-start ",~Z-Start,", z-end ",~Z-End,", density ",~Density," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint=The color values are (Red, Green, Blue).

ResetTerrainFogBJ=Reset Fog
ResetTerrainFogBJ="Reset fog to default values"

SetBlightRectBJ=Create/Remove Blight Rect
SetBlightRectBJ=~Create/Remove," Blight for ",~Player," across ",~Rect

SetBlightRadiusLocBJ=Create/Remove Blight Circle
SetBlightRadiusLocBJ=~Create/Remove," Blight for ",~Player," from ",~Point," to a radius of ",~Radius

CreateTextTagLocBJ=Create Floating Text At Point
CreateTextTagLocBJ="Create floating text that reads ",~Message," at ",~Point," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagLocBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

CreateTextTagUnitBJ=Create Floating Text Above Unit
CreateTextTagUnitBJ="Create floating text that reads ",~Message," above ",~Unit," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagUnitBJHint=Floating text created in this manner does not follow the unit's movement.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary.

DestroyTextTagBJ=Destroy
DestroyTextTagBJ="Destroy ",~Floating Text

ShowTextTagForceBJ=Show/Hide
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," for ",~Player Group

SetTextTagVelocityBJ=Set Velocity
SetTextTagVelocityBJ="Set the velocity of ",~Floating Text," to ",~Speed," towards ",~Angle," degrees"
SetTextTagVelocityBJHint=You can only accurately set the velocity of floating text once, when it is first created.  The angle is expected in degrees, with 0 being east and 90 being north.

SetTextTagColorBJ=Change Color
SetTextTagColorBJ="Change the color of ",~Floating Text," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetTextTagColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetTextTagPosBJ=Change Position To Point
SetTextTagPosBJ="Change the position of ",~Floating Text," to ",~Point," with Z offset ",~Z

SetTextTagPosUnitBJ=Change Position To Unit
SetTextTagPosUnitBJ="Change the position of ",~Floating Text," to ",~Unit," with Z offset ",~Z

SetTextTagTextBJ=Change Text
SetTextTagTextBJ="Change text of ",~Floating Text," to ",~Message," using font size ",~Size

SetTextTagSuspendedBJ=Suspend/Resume
SetTextTagSuspendedBJ="Change ",~Floating Text,": ",~Enable/Disable," suspend state"

SetTextTagPermanentBJ=Permanent/Expires
SetTextTagPermanentBJ="Change ",~Floating Text,": ",~Enable/Disable," permanence"

SetTextTagLifespanBJ=Change Lifespan
SetTextTagLifespanBJ="Change the lifespan of ",~Floating Text," to ",~Time," seconds"
SetTextTagLifespanBJHint=This does not affect permanent floating text.  This sets the age at which floating text is removed and cleaned up.

SetTextTagFadepointBJ=Change Fading Age
SetTextTagFadepointBJ="Change the fading age of ",~Floating Text," to ",~Time," seconds"
SetTextTagFadepointBJHint=This does not affect permanent floating text.  This sets the age at which floating text begins fading.

SetTextTagAgeBJ=Change Age
SetTextTagAgeBJ="Change the age of ",~Floating Text," to ",~Time," seconds"
SetTextTagAgeBJHint=This does not affect permanent floating text.

DisplayTextToForce=Text Message (Auto-Timed) (Auto-Timed)
DisplayTextToForce="Display to ",~Player Group," the text: ",~Text
DisplayTextToForceHint=The text is shown for an amount of time that automatically increases with the text length.

DisplayTimedTextToForce=Text Message (Explicitly Timed) (Explicitly Timed)
DisplayTimedTextToForce="Display to ",~Player Group," for ",~Time," seconds the text: ",~Text

PauseGameOn=Pause Game
PauseGameOn="Pause the game"

PauseGameOff=Unpause Game
PauseGameOff="Unpause the game"

SetGameSpeed=Set Game Speed
SetGameSpeed="Set game speed to ",~Speed
SetGameSpeedHint=You can lock the game speed with the 'Game - Lock Game Speed' trigger action.

LockGameSpeedBJ=Lock Game Speed
LockGameSpeedBJ="Lock the game speed"
LockGameSpeedBJHint=This prevents the game speed from being modified.  Not even triggers can modify the game speed when it is locked.

UnlockGameSpeedBJ=Unlock Game Speed
UnlockGameSpeedBJ="Unlock the game speed"
UnlockGameSpeedBJHint=This allows the game speed to be modified again after a 'Game - Lock Game Speed' action is used.

SetMapFlag=Set Map Flag
SetMapFlag="Set ",~Map Flag," to ",~On/Off

SetTimeOfDay=Set Time Of Day
SetTimeOfDay="Set the time of day to ",~Time
SetTimeOfDayHint=A game day is 24 hours long.  Six a.m. is 6.00, and six p.m. is 18.00.

SetTimeOfDayScalePercentBJ=Set Time Of Day Speed
SetTimeOfDayScalePercentBJ="Set time of day speed to ",~Percent,"% of the default speed"
SetTimeOfDayScalePercentBJHint=Use 100% to revert the speed to normal.

UseTimeOfDayBJ=Turn Day/Night Cycle On/Off
UseTimeOfDayBJ="Turn the day/night cycle ",~On/Off

ShareEverythingWithTeam=Share Vision And Full Unit Control With Team
ShareEverythingWithTeam="Grant shared vision and full shared unit control of ",~Player," units with his/her allies"
ShareEverythingWithTeamHint=Two players are considered allies if they are both allied with each other.

MakeUnitsPassiveForPlayer=Give Units To Neutral Victim
MakeUnitsPassiveForPlayer="Give all ",~Player," units to the Neutral Victim player"
MakeUnitsPassiveForPlayerHint=By default, the Neutral Victim player treats all other players as allies, but is treated as an enemy by all other players.

SetNextLevelBJ=Set Next Level
SetNextLevelBJ="Set the next level to ",~Level
SetNextLevelBJHint=This sets a level to be started after the current game ends.

CustomVictoryBJ=Victory
CustomVictoryBJ="Victory ",~Player," (",~Show/Skip," dialogs, ",~Show/Skip," scores)"

CustomDefeatBJ=Defeat
CustomDefeatBJ="Defeat ",~Player," with the message: ",~Message

LoadGameBJ=Load Game
LoadGameBJ="Load ",~Filename," (",~Show/Skip," scores)"

SaveAndLoadGameBJ=Save Game And Load Game
SaveAndLoadGameBJ="Save game as ",~Filename," and load ",~Filename," (",~Show/Skip," scores)"

SaveAndChangeLevelBJ=Save Game And Change Level
SaveAndChangeLevelBJ="Save game as ",~Filename," and change level to ",~Filename," (",~Show/Skip," scores)"

RenameSaveDirectoryBJ=Rename Saved-Game Folder
RenameSaveDirectoryBJ="Rename the ",~Folder," saved-game folder to ",~Folder

RemoveSaveDirectoryBJ=Delete Saved-Game Folder
RemoveSaveDirectoryBJ="Delete the ",~Folder," saved-game folder"
RemoveSaveDirectoryBJHint=This deletes the specified saved-game folder and all of its contents.

CopySaveGameBJ=Copy Saved-Game
CopySaveGameBJ="Create a copy of the ",~Filename," saved-game and name it ",~Filename
CopySaveGameBJHint=This action only works in response to Game Load and Game Save events, and can only be used up to 16 times per event.

SetCampaignMenuRaceBJ=Set Campaign Screen
SetCampaignMenuRaceBJ="Set campaign to ",~Campaign

SetMissionAvailableBJ=Enable/Disable Mission
SetMissionAvailableBJ=~Enable/Disable," ",~Mission

SetCampaignAvailableBJ=Enable/Disable Campaign
SetCampaignAvailableBJ=~Enable/Disable," the ",~Campaign

SetCinematicAvailableBJ=Enable/Disable Cinematic
SetCinematicAvailableBJ=~Enable/Disable," the ",~Cinematic

ShowCustomCampaignButton=Show/Hide Custom Campaign Button
ShowCustomCampaignButton=~Show/Hide," custom campaign button ",~Number

SetAllyColorFilterState=Set Ally Color Filter
SetAllyColorFilterState="Set ally color filtering to ",~State
SetAllyColorFilterStateHint=A value of 0 disables filtering.  A value of 1 enables filtering for the minimap.  A value of 2 enables filtering for the minimap and the game view.

SetCreepCampFilterState=Show/Hide Creep Camps On Minimap
SetCreepCampFilterState=~Show/Hide," creep camps on the minimap"

EnableMinimapFilterButtons=Enable/Disable Minimap Buttons
EnableMinimapFilterButtons=~Enable/Disable," ally color button and ",~Enable/Disable," creep camp button"

EnableSelect=Enable/Disable Selection
EnableSelect=~Enable/Disable," selection and deselection functionality (",~Enable/Disable," selection circles)"
EnableSelectHint=Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled.

EnableDragSelect=Enable/Disable Drag-Selection
EnableDragSelect=~Enable/Disable," drag-selection functionality (",~Enable/Disable," drag-selection box)"

EnablePreSelect=Enable/Disable Pre-Selection
EnablePreSelect=~Enable/Disable," pre-selection functionality (",~Enable/Disable," pre-selection circles, life bars, and object info)"

ForceUIKeyBJ=Force UI Key
ForceUIKeyBJ="Force ",~Player," to press the key ",~Key

ForceUICancelBJ=Force UI Cancel
ForceUICancelBJ="Force ",~Player," to press Escape/Cancel"

Preload=Preload File
Preload="Preload ",~Filename

PreloadEnd=Begin Preloading
PreloadEnd="Begin preloading with a ",~Time," second timeout"

Preloader=Preload Batch
Preloader="Preload all files listed in ",~Filename

InitGameCacheBJ=Create Game Cache
InitGameCacheBJ="Create a game cache from ",~Filename
InitGameCacheBJHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created.

SaveGameCacheBJ=Save Game Cache
SaveGameCacheBJ="Save ",~Game Cache
SaveGameCacheBJHint=Saves the game cache, using the same filename from which it was created.

StoreUnitBJ=Store Unit
StoreUnitBJ="Store ",~Unit," as ",~Label," of ",~Category," in ",~Game Cache
StoreUnitBJHint=Use the 'Game Cache - Restore Unit' actions to load this unit from a cache.  Label and Category names should not contain spaces.

StoreRealBJ=Store Real
StoreRealBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreRealBJHint=Use the 'Game Cache - Load Real Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreIntegerBJ=Store Integer
StoreIntegerBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreIntegerBJHint=Use the 'Game Cache - Load Integer Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreBooleanBJ=Store Boolean
StoreBooleanBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreBooleanBJHint=Use the 'Game Cache - Load Boolean Value' function to load this value from a cache.  Label and Category names should not contain spaces.

StoreStringBJ=Store String
StoreStringBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreStringBJHint=Use the 'Game Cache - Load String Value' function to load this value from a cache.  Label and Category names should not contain spaces.

InitHashtableBJ=Create Hashtable
InitHashtableBJ="Create a hashtable"
InitHashtableBJHint=A hashtable allows you to store data.

SaveRealBJ=Save Real
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint=Use the 'Hashtable - Load Real Value' function to load this value from a hashtable.

SaveIntegerBJ=Save Integer
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint=Use the 'Hashtable - Load Integer Value' function to load this value from a hashtable.

SaveBooleanBJ=Save Boolean
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint=Use the 'Hashtable - Load Boolean Value' function to load this value from a hashtable.

SaveStringBJ=Save String
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint=Use the 'Hashtable - Load String Value' function to load this value from a hashtable.

SavePlayerHandleBJ=Save Player Handle
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint=Use the 'Hashtable - Load Player' actions to load this player from a hashtable.

SaveWidgetHandleBJ=Save Widget Handle
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~%s
SaveWidgetHandleBJHint=Use the 'Hashtable - Load Widget' actions to load this widget from a hashtable.

SaveDestructableHandleBJ=Save Destructable Handle
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint=Use the 'Hashtable - Load Destructable' actions to load this destructable from a hashtable.

SaveItemHandleBJ=Save Item Handle
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint=Use the 'Hashtable - Load Item' actions to load this item from a hashtable.

SaveUnitHandleBJ=Save Unit Handle
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint=Use the 'Hashtable - Load Unit' actions to load this unit from a hashtable.

SaveAbilityHandleBJ=Save Ability Handle
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~%s
SaveAbilityHandleBJHint=Use the 'Hashtable - Load Ability' actions to load this ability from a hashtable.

SaveTimerHandleBJ=Save Timer Handle
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint=Use the 'Hashtable - Load Timer' actions to load this timer from a hashtable.

SaveTriggerHandleBJ=Save Trigger Handle
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint=Use the 'Hashtable - Load Trigger' actions to load this trigger from a hashtable.

SaveTriggerConditionHandleBJ=Save Triggercondition Handle
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint=Use the 'Hashtable - Load Triggercondition' actions to load this triggercondition from a hashtable.

SaveTriggerActionHandleBJ=Save Triggeraction Handle
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint=Use the 'Hashtable - Load Triggeraction' actions to load this triggeraction from a hashtable.

SaveTriggerEventHandleBJ=Save Eventid Handle
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~%s
SaveTriggerEventHandleBJHint=Use the 'Hashtable - Load Eventid' actions to load this eventid from a hashtable.

SaveForceHandleBJ=Save Force Handle
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint=Use the 'Hashtable - Load Force' actions to load this force from a hashtable.

SaveGroupHandleBJ=Save Group Handle
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint=Use the 'Hashtable - Load Group' actions to load this group from a hashtable.

SaveLocationHandleBJ=Save Location Handle
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint=Use the 'Hashtable - Load Location' actions to load this location from a hashtable.

SaveRegionHandleBJ=Save Region Handle
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~%s
SaveRegionHandleBJHint=Use the 'Hashtable - Load Region' actions to load this region from a hashtable.

SaveRectHandleBJ=Save Rect Handle
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint=Use the 'Hashtable - Load Rect' actions to load this rect from a hashtable.

SaveBooleanExprHandleBJ=Save Boolexpr Handle
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint=Use the 'Hashtable - Load Boolexpr' actions to load this boolexpr from a hashtable.

SaveSoundHandleBJ=Save Sound Handle
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint=Use the 'Hashtable - Load Sound' actions to load this sound from a hashtable.

SaveEffectHandleBJ=Save Effect Handle
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint=Use the 'Hashtable - Load Effect' actions to load this effect from a hashtable.

SaveUnitPoolHandleBJ=Save Unitpool Handle
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~%s
SaveUnitPoolHandleBJHint=Use the 'Hashtable - Load Unitpool' actions to load this unitpool from a hashtable.

SaveItemPoolHandleBJ=Save Itempool Handle
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~%s
SaveItemPoolHandleBJHint=Use the 'Hashtable - Load Itempool' actions to load this itempool from a hashtable.

SaveQuestHandleBJ=Save Quest Handle
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint=Use the 'Hashtable - Load Quest' actions to load this quest from a hashtable.

SaveQuestItemHandleBJ=Save Questitem Handle
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint=Use the 'Hashtable - Load Questitem' actions to load this questitem from a hashtable.

SaveDefeatConditionHandleBJ=Save Defeatcondition Handle
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint=Use the 'Hashtable - Load Defeatcondition' actions to load this defeatcondition from a hashtable.

SaveTimerDialogHandleBJ=Save Timerdialog Handle
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint=Use the 'Hashtable - Load Timerdialog' actions to load this timerdialog from a hashtable.

SaveLeaderboardHandleBJ=Save Leaderboard Handle
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint=Use the 'Hashtable - Load Leaderboard' actions to load this leaderboard from a hashtable.

SaveMultiboardHandleBJ=Save Multiboard Handle
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint=Use the 'Hashtable - Load Multiboard' actions to load this multiboard from a hashtable.

SaveMultiboardItemHandleBJ=Save Multiboarditem Handle
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~%s
SaveMultiboardItemHandleBJHint=Use the 'Hashtable - Load Multiboarditem' actions to load this multiboarditem from a hashtable.

SaveTrackableHandleBJ=Save Trackable Handle
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~%s
SaveTrackableHandleBJHint=Use the 'Hashtable - Load Trackable' actions to load this trackable from a hashtable.

SaveGameCacheHandleBJ=Save Gamecache Handle
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint=Use the 'Hashtable - Load Gamecache' actions to load this gamecache from a hashtable.

SaveDialogHandleBJ=Save Dialog Handle
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint=Use the 'Hashtable - Load Dialog' actions to load this dialog from a hashtable.

SaveButtonHandleBJ=Save Button Handle
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint=Use the 'Hashtable - Load Button' actions to load this button from a hashtable.

SaveTextTagHandleBJ=Save Texttag Handle
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint=Use the 'Hashtable - Load Texttag' actions to load this texttag from a hashtable.

SaveLightningHandleBJ=Save Lightning Handle
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint=Use the 'Hashtable - Load Lightning' actions to load this lightning from a hashtable.

SaveImageHandleBJ=Save Image Handle
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint=Use the 'Hashtable - Load Image' actions to load this image from a hashtable.

SaveUbersplatHandleBJ=Save Ubersplat Handle
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint=Use the 'Hashtable - Load Ubersplat' actions to load this ubersplat from a hashtable.

SaveFogStateHandleBJ=Save Fogstate Handle
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint=Use the 'Hashtable - Load Fogstate' actions to load this fogstate from a hashtable.

SaveFogModifierHandleBJ=Save Fogmodifier Handle
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint=Use the 'Hashtable - Load Fogmodifier' actions to load this fogmodifier from a hashtable.

RestoreUnitLocFacingAngleBJ=Restore Unit Facing Angle
RestoreUnitLocFacingAngleBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Angle
RestoreUnitLocFacingAngleBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

RestoreUnitLocFacingPointBJ=Restore Unit Facing Point
RestoreUnitLocFacingPointBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Point
RestoreUnitLocFacingPointBJHint=Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'.

ReloadGameCachesFromDisk=Reload All
ReloadGameCachesFromDisk="Reload all game cache data from disk"

FlushGameCacheBJ=Clear Game Cache
FlushGameCacheBJ="Clear ",~Game Cache
FlushGameCacheBJHint=Clears all labels of all categories in a game cache.

FlushStoredMissionBJ=Clear Category
FlushStoredMissionBJ="Clear all labels of ",~Category," in ",~Game Cache
FlushStoredMissionBJHint=Clears all labels of a specific category in a game cache.

FlushParentHashtableBJ=Clear Parent Hashtable
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint=Clears all parent and child hashtables.

FlushChildHashtableBJ=Clear Child Hashtable
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint=Clears all childen of a specific parent in a hashtable.

SelectHeroSkill=Learn Skill
SelectHeroSkill="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkillHint=This only works if the Hero has at least one skill point to spend.

SetHeroLevel=Set Level
SetHeroLevel="Set ",~Hero," Hero-level to ",~Level,", ",~Show/Hide," level-up graphics"

SetHeroXP=Set Experience
SetHeroXP="Set ",~Hero," experience to ",~Quantity,", ",~Show/Hide," level-up graphics"

AddHeroXPSwapped=Add Experience
AddHeroXPSwapped="Add ",~Quantity," experience to ",~Hero,", ",~Show/Hide," level-up graphics"

SuspendHeroXPBJ=Enable/Disable Experience Gain
SuspendHeroXPBJ=~Enable/Disable," experience gain for ",~Hero

SetPlayerHandicapXPBJ=Set Experience Rate
SetPlayerHandicapXPBJ="Make ",~Player," Heroes gain ",~Percent,"% experience from future kills"

ReviveHeroLoc=Revive (Instantly)
ReviveHeroLoc="Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive.

ModifyHeroStat=Modify Hero Attribute
ModifyHeroStat="Modify ",~Attribute," of ",~Hero,": ",~Modify," ",~Value

ModifyHeroSkillPoints=Modify Hero Skill Points
ModifyHeroSkillPoints="Modify unspent skill points of ",~Hero,": ",~Modify," ",~Value," points"

SetReservedLocalHeroButtons=Reserve Hero Buttons
SetReservedLocalHeroButtons="Reserve ",~Number," Hero buttons for the local player"
SetReservedLocalHeroButtonsHint=Button slots reserved by this action are not used by Heroes controlled via shared unit control.

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Give ",~Item," to ",~Hero

UnitAddItemByIdSwapped=Create Item For Hero
UnitAddItemByIdSwapped="Create ",~Item-Type," and give it to ",~Hero

UnitRemoveItemSwapped=Drop Item From Hero
UnitRemoveItemSwapped="Drop ",~Item," from ",~Hero
UnitRemoveItemSwappedHint=The item is removed from the Hero and placed on the ground at the Hero's feet.

UnitRemoveItemFromSlotSwapped=Drop Item From Hero Inventory Slot
UnitRemoveItemFromSlotSwapped="Drop the item from slot ",~Index," of ",~Hero
UnitRemoveItemFromSlotSwappedHint=If an item exists in the given slot, it is removed from the Hero and placed on the ground at the Hero's feet.

UnitUseItemTarget=Use Item On A Unit
UnitUseItemTarget="Order ",~Hero," to use ",~Item," on ",~Unit

UnitUseItemPointLoc=Use Item On A Point
UnitUseItemPointLoc="Order ",~Hero," to use ",~Item," on ",~Point

UnitUseItemDestructable=Use Item On A Destructible
UnitUseItemDestructable="Order ",~Hero," to use ",~Item," on ",~Destructible

UnitUseItem=Use Item
UnitUseItem="Order ",~Hero," to use ",~Item

CreateItemLoc=Create
CreateItemLoc="Create ",~Item," at ",~Point

RemoveItem=Remove
RemoveItem="Remove ",~Item

SetItemVisibleBJ=Show/Hide Item
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint=This hides items on the ground.  It does not affect items held by units.

SetItemPositionLoc=Move (Instantly)
SetItemPositionLoc="Move ",~Item," to ",~Point

SetItemLifeBJ=Set Life
SetItemLifeBJ="Set life of ",~Item," to ",~Value

SetItemCharges=Set Charges Remaining
SetItemCharges="Set charges remaining in ",~Item," to ",~Charges
SetItemChargesHint=Use a value of zero to give the item unlimited charges.

SetItemInvulnerableBJ=Make Invulnerable/Vulnerable
SetItemInvulnerableBJ="Make ",~Item," ",~Invulnerable/Vulnerable

SetItemPawnable=Make Pawnable
SetItemPawnable="Make ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint=A pawnable item can be sold at item vendors.

SetItemDroppableBJ=Make Undroppable
SetItemDroppableBJ="Make ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint=An undroppable item cannot be removed from a Hero's inventory once it has been picked up.

SetItemDropOnDeathBJ=Make Item Drop From Heroes Upon Death
SetItemDropOnDeathBJ="Make ",~Item," ",~Drop from/Stay with," Heroes upon death"

SetItemPlayerBJ=Change Owner
SetItemPlayerBJ="Change ownership of ",~Item," to ",~Player," and ",~Change/Retain Color
SetItemPlayerBJHint=Not all items are capable of changing color.

SetItemUserData=Set Custom Value
SetItemUserData="Set the custom value of ",~Item," to ",~Index
SetItemUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

EnumItemsInRectBJMultiple=Pick Every Item In Rect And Do Multiple Actions
EnumItemsInRectBJMultiple="Pick every item in ",~Rect," and do (Actions)"
EnumItemsInRectBJMultipleHint=Use 'Picked Item' to refer each item as it is picked.  This works for every item in the rect, including hidden items.  Wait actions should not be used within this function.  Add actions to this function in the main display.

EnumItemsInRectBJ=Pick Every Item In Rect And Do Action
EnumItemsInRectBJ="Pick every item in ",~Rect," and do ",~Action
EnumItemsInRectBJHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function.

CreateImageBJ=Create
CreateImageBJ="Create an image using ",~Image," of size ",~Size," at ",~Point," with Z offset ",~Z," using image type ",~Type
CreateImageBJHint=Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly.

DestroyImage=Destroy
DestroyImage="Destroy ",~Image

ShowImageBJ=Show/Hide
ShowImageBJ=~Show/Hide," ",~Image

SetImageConstantHeight=Change Constant Height
SetImageConstantHeight="Change the height state of ",~Image," to ",~Enable/Disable," at ",~Height

SetImagePositionBJ=Change Position
SetImagePositionBJ="Change the position of ",~Image," to ",~Position," with Z offset ",~Z
SetImagePositionBJHint=The point specified is used as the bottom-left corner of the image.

SetImageColorBJ=Change Color
SetImageColorBJ="Change the color of ",~Image," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetImageColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

SetImageRender=Change Render State
SetImageRender="Change ",~Image,": ",~Enable/Disable," rendering state"

SetImageRenderAlways=Change Render Always State
SetImageRenderAlways="Change ",~Image,": ",~Enable/Disable," render always state"

SetImageAboveWater=Change Above Water State
SetImageAboveWater="Change ",~Image,": ",~Enable/Disable," above water state, ",~Enable/Disable," water alpha inheritance"

SetImageType=Change Type
SetImageType="Change type of ",~Image," to ",~Type

CreateLeaderboardBJ=Create
CreateLeaderboardBJ="Create a leaderboard for ",~Player Group," titled ",~Title
CreateLeaderboardBJHint=Leaderboards cannot be displayed at map initialization.  If no title is specified, the title line will not be displayed.

DestroyLeaderboardBJ=Destroy
DestroyLeaderboardBJ="Destroy ",~Leaderboard

LeaderboardSortItemsBJ=Sort
LeaderboardSortItemsBJ="Sort ",~Leaderboard," by ",~Field," in ",~Ascending/Descending," order"

LeaderboardDisplayBJ=Show/Hide
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint=Leaderboards cannot be displayed at map initialization.

LeaderboardSetLabelBJ=Change Title
LeaderboardSetLabelBJ="Change the title of ",~Leaderboard," to ",~Title

LeaderboardSetLabelColorBJ=Change Label Colors
LeaderboardSetLabelColorBJ="Change the color of all labels for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetValueColorBJ=Change Value Colors
LeaderboardSetValueColorBJ="Change the color of all values for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetStyleBJ=Change Style
LeaderboardSetStyleBJ="Change the display style for ",~Leaderboard," to ",~Show/Hide," the title, ",~Show/Hide," labels, ",~Show/Hide," values, and ",~Show/Hide," icons"

LeaderboardAddItemBJ=Add Player
LeaderboardAddItemBJ="Add ",~Player," to ",~Leaderboard," with label ",~Label," and value ",~Value

LeaderboardRemovePlayerItemBJ=Remove Player
LeaderboardRemovePlayerItemBJ="Remove ",~Player," from ",~Leaderboard

LeaderboardSetPlayerItemLabelBJ=Change Player Label
LeaderboardSetPlayerItemLabelBJ="Change the label for ",~Player," in ",~Leaderboard," to ",~Label

LeaderboardSetPlayerItemLabelColorBJ=Change Player Label Color
LeaderboardSetPlayerItemLabelColorBJ="Change the color of the label for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemLabelColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemValueBJ=Change Player Value
LeaderboardSetPlayerItemValueBJ="Change the value for ",~Player," in ",~Leaderboard," to ",~Value

LeaderboardSetPlayerItemValueColorBJ=Change Player Value Color
LeaderboardSetPlayerItemValueColorBJ="Change the color of the value for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemValueColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

LeaderboardSetPlayerItemStyleBJ=Change Player Style
LeaderboardSetPlayerItemStyleBJ="Change the display style for ",~Player," in ",~Leaderboard," to ",~Show/Hide," the label, ",~Show/Hide," the value, and ",~Show/Hide," the icon"

AddLightningLoc=Create Lightning Effect
AddLightningLoc="Create a ",~Type," lightning effect from source ",~Point," to target ",~Point

DestroyLightningBJ=Destroy Lightning Effect
DestroyLightningBJ="Destroy ",~Lightning

MoveLightningLoc=Move Lightning Effect
MoveLightningLoc="Move ",~Lightning," to source ",~Point," and target ",~Point

SetLightningColorBJ=Set Lightning Effect Color
SetLightningColorBJ="Change color of ",~Lightning," to (",~Red," ",~Green," ",~Blue,") with ",~Alpha," alpha"
SetLightningColorBJHint=The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible.

MeleeStartingVisibility=Use Melee Time Of Day
MeleeStartingVisibility="Use melee time of day (for all players)"

MeleeStartingHeroLimit=Hero Limits
MeleeStartingHeroLimit="Limit Heroes to 1 per Hero-type (for all players)"

MeleeGrantHeroItems=Hero Starting Items
MeleeGrantHeroItems="Give trained Heroes a Scroll of Town Portal (for all players)"

MeleeStartingResources=Set Starting Resources
MeleeStartingResources="Set starting resources (for all players)"

MeleeClearExcessUnits=Remove Excess Units
MeleeClearExcessUnits="Remove creeps and critters from used start locations (for all players)"
MeleeClearExcessUnitsHint=Removes all Neutral Hostile units and non-building Neutral Passive units within a radius of 1024 around each used start location.

MeleeStartingUnits=Create Starting Units
MeleeStartingUnits="Create starting units (for all players)"

MeleeStartingAI=Run AI
MeleeStartingAI="Run melee AI scripts (for computer players)"
MeleeStartingAIHint=Players should have starting units and resources before this action is run.

MeleeInitVictoryDefeat=Victory/Defeat Conditions
MeleeInitVictoryDefeat="Enforce victory/defeat conditions (for all players)"
MeleeInitVictoryDefeatHint=Players should have starting units before this action is run.

MeleeStartingUnitsForPlayer=Create Starting Units For Player
MeleeStartingUnitsForPlayer="Create ",~Race," starting units for ",~Player," at ",~Point," (",~Include/Exclude," Heroes)"
MeleeStartingUnitsForPlayerHint=This action creates the same starting units that are created for melee games.

CreateMultiboardBJ=Create
CreateMultiboardBJ="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title
CreateMultiboardBJHint=Multiboards cannot be displayed at map initialization.

DestroyMultiboardBJ=Destroy
DestroyMultiboardBJ="Destroy ",~Multiboard

MultiboardDisplayBJ=Show/Hide
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint=Multiboards cannot be displayed at map initialization.

MultiboardAllowDisplayBJ=Show/Hide All Multiboards
MultiboardAllowDisplayBJ=~Show/Hide," all multiboards"

MultiboardMinimizeBJ=Minimize/Maximize
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint=A minimized multiboard will only display the title.

MultiboardClear=Clear
MultiboardClear="Clear ",~Multiboard
MultiboardClearHint=This will remove all rows and columns from the multiboard.

MultiboardSetTitleText=Change Title
MultiboardSetTitleText="Change the title of ",~Multiboard," to ",~Title

MultiboardSetTitleTextColorBJ=Change Title Color
MultiboardSetTitleTextColorBJ="Change the color of the title for ",~Multiboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetTitleTextColorBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetRowCount=Change Number Of Rows
MultiboardSetRowCount="Change the number of rows for ",~Multiboard," to ",~Rows

MultiboardSetColumnCount=Change Number Of Columns
MultiboardSetColumnCount="Change the number of columns for ",~Multiboard," to ",~Columns

MultiboardSetItemStyleBJ=Set Item Display Style
MultiboardSetItemStyleBJ="Set the display style for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Show/Hide," text and ",~Show/Hide," icons"
MultiboardSetItemStyleBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemValueBJ=Set Item Text
MultiboardSetItemValueBJ="Set the text for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Text
MultiboardSetItemValueBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.

MultiboardSetItemColorBJ=Set Item Color
MultiboardSetItemColorBJ="Set the color for ",~Multiboard," item in column ",~Column,", row ",~Row," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetItemColorBJHint=Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.

MultiboardSetItemWidthBJ=Set Item Width
MultiboardSetItemWidthBJ="Set the width for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Width,"% of the total screen width"

MultiboardSetItemIconBJ=Set Item Icon
MultiboardSetItemIconBJ="Set the icon for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Icon File

AddResourceAmountBJ=Add Gold To Gold Mine
AddResourceAmountBJ="Add ",~Quantity," gold to ",~Gold Mine
AddResourceAmountBJHint=Use a negative number to subtract.

SetResourceAmount=Set Resources Of Gold Mine
SetResourceAmount="Set ",~Gold Mine," to ",~Quantity," gold"

BlightGoldMineForPlayer=Haunt Gold Mine (Instantly)
BlightGoldMineForPlayer="Haunt ",~Gold Mine," for ",~Player
BlightGoldMineForPlayerHint=This replaces the Gold Mine with a Haunted Gold Mine of equal resources.

WaygateActivateBJ=Enable/Disable Way Gate
WaygateActivateBJ=~Enable/Disable," ",~Way Gate

WaygateSetDestinationLocBJ=Set Way Gate Destination
WaygateSetDestinationLocBJ="Set ",~Way Gate," destination to ",~Target

SetAltMinimapIcon=Change Special Minimap Icon
SetAltMinimapIcon="Change the special minimap icon to ",~Image
SetAltMinimapIconHint=The image used for this action must be exactly 16x16 pixels in size.

UnitSetUsesAltIconBJ=Turn Special Minimap Icon On/Off
UnitSetUsesAltIconBJ="Turn special minimap icon ",~On/Off," for ",~Unit
UnitSetUsesAltIconBJHint=Use the 'Neutral Building - Change Special Minimap Icon' action to control the icon that is displayed.

AddItemToStockBJ=Add Item-Type (To Marketplace)
AddItemToStockBJ="Add ",~Item-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddItemToStockBJHint=This only affects a building if it has the 'Sell Items' ability.

AddItemToAllStock=Add Item-Type (To All Marketplaces)
AddItemToAllStock="Add ",~Item-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddItemToAllStockHint=This affects all buildings that have the 'Sell Items' ability.

AddUnitToStockBJ=Add Unit-Type (To Marketplace)
AddUnitToStockBJ="Add ",~Unit-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddUnitToStockBJHint=This only affects a building if it has the 'Sell Units' ability.

AddUnitToAllStock=Add Unit-Type (To All Marketplaces)
AddUnitToAllStock="Add ",~Unit-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddUnitToAllStockHint=This affects all buildings that have the 'Sell Units' ability.

RemoveItemFromStockBJ=Remove Item-Type (From Marketplace)
RemoveItemFromStockBJ="Remove ",~Item-Type," from ",~Marketplace
RemoveItemFromStockBJHint=This only affects a building if it has the 'Sell Items' ability.

RemoveItemFromAllStock=Remove Item-Type (From All Marketplaces)
RemoveItemFromAllStock="Remove ",~Item-Type," from all marketplaces"
RemoveItemFromAllStockHint=This affects all buildings that have the 'Sell Items' ability.

RemoveUnitFromStockBJ=Remove Unit-Type (From Marketplace)
RemoveUnitFromStockBJ="Remove ",~Unit-Type," from ",~Marketplace
RemoveUnitFromStockBJHint=This only affects a building if it has the 'Sell Units' ability.

RemoveUnitFromAllStock=Remove Unit-Type (From All Marketplaces)
RemoveUnitFromAllStock="Remove ",~Unit-Type," from all marketplaces"
RemoveUnitFromAllStockHint=This affects all buildings that have the 'Sell Units' ability.

SetItemTypeSlots=Limit Item Slots (Of Marketplace)
SetItemTypeSlots="Limit ",~Marketplace," to ",~Quantity," item slots"
SetItemTypeSlotsHint=This only affects a building if it has the 'Sell Items' ability.

SetAllItemTypeSlots=Limit Item Slots (Of All Marketplaces)
SetAllItemTypeSlots="Limit all marketplaces to ",~Quantity," item slots"
SetAllItemTypeSlotsHint=This affects all buildings that have the 'Sell Items' ability.

SetUnitTypeSlots=Limit Unit Slots (Of Marketplace)
SetUnitTypeSlots="Limit ",~Marketplace," to ",~Quantity," unit slots"
SetUnitTypeSlotsHint=This only affects a building if it has the 'Sell Units' ability.

SetAllUnitTypeSlots=Limit Unit Slots (Of All Marketplaces)
SetAllUnitTypeSlots="Limit all marketplaces to ",~Quantity," unit slots"
SetAllUnitTypeSlotsHint=This affects all buildings that have the 'Sell Units' ability.

SetPlayerState=Set Property
SetPlayerState="Set ",~Player," ",~Property," to ",~Value

AdjustPlayerStateBJ=Add Property
AdjustPlayerStateBJ="Add ",~Value," to ",~Player," ",~Property
AdjustPlayerStateBJHint=Use a negative number to subtract.

SetPlayerFlagBJ=Turn Player Flag On/Off
SetPlayerFlagBJ="Turn ",~Player Flag," ",~On/Off," for ",~Player

SetPlayerTaxRateBJ=Divert Player Income (Tax)
SetPlayerTaxRateBJ="Divert ",~Rate,"% of the ",~Resource," income of ",~Player," to ",~Player
SetPlayerTaxRateBJHint=Income lost in this way can be accessed using the 'Player Score' function with 'Gold/Lumber Lost To Tax' values.

EnableCreepSleepBJ=Enable/Disable Sleeping For All Creeps
EnableCreepSleepBJ=~Enable/Disable," sleeping for all creeps"
EnableCreepSleepBJHint=This affects nocturnal sleep, not magical sleep.

SetPlayerAllianceStateBJ=Set Alliance
SetPlayerAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetPlayerAllianceStateBJHint=Note that neutral player slots cannot share their vision.

SetPlayerAllianceBJ=Set Aspect Of Alliance
SetPlayerAllianceBJ="For ",~Player,", turn ",~Alliance Type," ",~On/Off," toward ",~Player
SetPlayerAllianceBJHint=This modifies one aspect of a player's alliance state, leaving others untouched.  Note that neutral player slots cannot share their vision.

SetPlayerAbilityAvailableBJ=Enable/Disable Ability
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~Ability," for ",~Player

SetPlayerUnitAvailableBJ=Set Training/Construction Availability Of Unit
SetPlayerUnitAvailableBJ="Make ",~Unit-Type," ",~Available/Unavailable," for training/construction by ",~Player
SetPlayerUnitAvailableBJHint=This determines whether or not a type of unit can be trained or constructed by a player.

SetPlayerUnitMaxAllowed=Limit Training Of Unit-Type
SetPlayerUnitMaxAllowed="Limit training of ",~Unit-Type," to ",~Limit," for ",~Player
SetPlayerUnitMaxAllowedHint=A limit of -1 allows unlimited training of the unit-type.  A limit of 0 makes the unit-type unavailable for training.

SetPlayerMaxHeroesAllowed=Limit Training Of Heroes
SetPlayerMaxHeroesAllowed="Limit training of Heroes to ",~Limit," for ",~Player
SetPlayerMaxHeroesAllowedHint=A limit of -1 allows unlimited training of Heroes.  A limit of 0 makes Heroes unavailable for training.

SetPlayerTechResearchedSwap=Set Current Research Level
SetPlayerTechResearchedSwap="Set the current research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechResearchedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.  Tech cannot be unlearned through the use of this action.

SetPlayerTechMaxAllowedSwap=Set Max Research Level
SetPlayerTechMaxAllowedSwap="Set the max research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechMaxAllowedSwapHint=Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

SetPlayerColorBJ=Change Color
SetPlayerColorBJ="Change color of ",~Player," to ",~Color,", ",~Changing/Retaining color," of existing units"

SetPlayerHandicapBJ=Set Handicap
SetPlayerHandicapBJ="Set ",~Player," handicap to ",~Percent,"%"
SetPlayerHandicapBJHint=Handicaps apply to the max life of all units owned or created for the player.  Heroes are less affected by handicaps than non-Hero units.

SetPlayerOnScoreScreenBJ=Show/Hide In Score Screen
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," in the post-game score screen"

SetPlayerName=Set Name
SetPlayerName="Set name of ",~Player," to ",~Name

ForForceMultiple=Pick Every Player In Player Group And Do Multiple Actions
ForForceMultiple="Pick every player in ",~Player Group," and do (Actions)"
ForForceMultipleHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForForce=Pick Every Player In Player Group And Do Action
ForForce="Pick every player in ",~Player Group," and do ",~Action
ForForceHint=Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.

ForceAddPlayerSimple=Add Player
ForceAddPlayerSimple="Add ",~Player," to ",~Player Group
ForceAddPlayerSimpleHint=This adds a player to a Player Group variable.  This does not affect the player.

ForceRemovePlayerSimple=Remove Player
ForceRemovePlayerSimple="Remove ",~Player," from ",~Player Group
ForceRemovePlayerSimpleHint=This removes a player from a Player Group variable.  This does not affect the player.

ForceClear=Clear
ForceClear="Remove all players from ",~Player Group
ForceClearHint=This removes all players from a Player Group variable.  This does not affect the players themselves.

SetForceAllianceStateBJ=Set Alliance
SetForceAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetForceAllianceStateBJHint=Note that neutral player slots cannot share their vision.

QuestMessageBJ=Quest Message
QuestMessageBJ="Display to ",~Player Group," the ",~Quest Message Type," message: ",~Message

CreateQuestBJ=Create Quest
CreateQuestBJ="Create a ",~Quest Type," quest titled ",~Title," with the description ",~Description,", using icon path ",~Icon Path

DestroyQuestBJ=Destroy Quest
DestroyQuestBJ="Destroy ",~Quest
DestroyQuestBJHint=Destroyed quests are removed from the quest log.

QuestSetEnabledBJ=Enable/Disable Quest
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint=Disabled quests are not displayed in the quest log.

QuestSetCompletedBJ=Mark Quest As Completed
QuestSetCompletedBJ="Mark ",~Quest," as ",~Completed/Incomplete

QuestSetFailedBJ=Mark Quest As Failed
QuestSetFailedBJ="Mark ",~Quest," as ",~Failed/Not Failed

QuestSetDiscoveredBJ=Mark Quest As Discovered
QuestSetDiscoveredBJ="Mark ",~Quest," as ",~Discovered/Undiscovered

QuestSetTitleBJ=Change Quest Title
QuestSetTitleBJ="Change the title of ",~Quest," to ",~Title

QuestSetDescriptionBJ=Change Quest Description
QuestSetDescriptionBJ="Change the description of ",~Quest," to ",~Description

CreateQuestItemBJ=Create Quest Requirement
CreateQuestItemBJ="Create a quest requirement for ",~Quest," with the description ",~Description

QuestItemSetCompletedBJ=Mark Quest Requirement As Completed
QuestItemSetCompletedBJ="Mark ",~Quest Requirement," as ",~Completed/Incomplete

QuestItemSetDescriptionBJ=Change Quest Requirement Description
QuestItemSetDescriptionBJ="Change the description of ",~Quest Requirement," to ",~Description

CreateDefeatConditionBJ=Create Defeat Condition
CreateDefeatConditionBJ="Create a defeat condition with the description ",~Description
CreateDefeatConditionBJHint=Defeat conditions are displayed for every quest.

DestroyDefeatConditionBJ=Destroy Defeat Condition
DestroyDefeatConditionBJ="Destroy ",~Defeat Condition
DestroyDefeatConditionBJHint=Destroyed defeat conditions are removed from the quest log.

DefeatConditionSetDescriptionBJ=Change Defeat Condition Description
DefeatConditionSetDescriptionBJ="Change the description of ",~Defeat Condition," to ",~Description

FlashQuestDialogButtonBJ=Flash Quest Dialog Button
FlashQuestDialogButtonBJ="Flash the quest dialog button"

MoveRectToLoc=Move
MoveRectToLoc="Center ",~Rect," on ",~Point
MoveRectToLocHint=This has no effect unless the specified rect is a variable.

ClearSelectionForPlayer=Clear Selection For Player
ClearSelectionForPlayer="Clear selection for ",~Player
ClearSelectionForPlayerHint=Forces a player to deselect all units.

SelectGroupForPlayerBJ=Select Unit Group For Player
SelectGroupForPlayerBJ="Select ",~Unit Group," for ",~Player
SelectGroupForPlayerBJHint=Forces a player to deselect all units and select up to 12 units of the unit group.

SelectUnitForPlayerSingle=Select Unit For Player
SelectUnitForPlayerSingle="Select ",~Unit," for ",~Player
SelectUnitForPlayerSingleHint=Forces a player to deselect all units and select only the given unit.

SelectUnitAddForPlayer=Add Unit To Selection For Player
SelectUnitAddForPlayer="Add ",~Unit," to selection for ",~Player
SelectUnitAddForPlayerHint=Forces a player to select the given unit in addition to whatever is already selected.

SelectUnitRemoveForPlayer=Remove Unit From Selection For Player
SelectUnitRemoveForPlayer="Remove ",~Unit," from selection for ",~Player
SelectUnitRemoveForPlayerHint=Forces a player to deselect the given unit, retaining the rest of the current selection.

ClearSelection=Clear
ClearSelection="Clear selection"
ClearSelectionHint=Deselect all units.

SelectGroupBJ=Select Unit Group
SelectGroupBJ="Select ",~Unit Group
SelectGroupBJHint=Deselects all units and selects up to 12 units of the unit group.

SelectUnitSingle=Select Unit
SelectUnitSingle="Select ",~Unit
SelectUnitSingleHint=Deselects all units and selects only the given unit.

SelectUnitAdd=Add Unit
SelectUnitAdd="Add ",~Unit," to selection"
SelectUnitAddHint=Selects the given unit in addition to whatever is already selected.

SelectUnitRemove=Remove Unit
SelectUnitRemove="Remove ",~Unit," from selection"
SelectUnitRemoveHint=Deselects the given unit, retaining the rest of the current selection.

PlaySoundBJ=Play Sound
PlaySoundBJ="Play ",~Sound
PlaySoundBJHint=Sounds cannot be played at map initialization.  Use the Sound Editor to create sound variables.  Note that a 3D sound must be positioned to be played.

PlaySoundAtPointBJ=Play Sound At Point
PlaySoundAtPointBJ="Play ",~3D Sound," at ",~Volume,"% volume, located at ",~Point," with Z offset ",~Z
PlaySoundAtPointBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundOnUnitBJ=Play Sound On Unit
PlaySoundOnUnitBJ="Play ",~3D Sound," at ",~Volume,"% volume, attached to ",~Unit
PlaySoundOnUnitBJHint=Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

PlaySoundFromOffsetBJ=Play Sound From Offset
PlaySoundFromOffsetBJ="Play ",~Sound," at ",~Volume,"% volume, skipping the first ",~Offset," seconds"
PlaySoundFromOffsetBJHint=Sounds cannot be played at map initialization.  This should not be used on 3D sounds.

StopSoundBJ=Stop Sound
StopSoundBJ="Stop ",~Sound," ",~After Fading/Immediately

KillSoundWhenDoneBJ=Destroy Sound
KillSoundWhenDoneBJ="Destroy ",~Sound
KillSoundWhenDoneBJHint=If the sound is already playing, it will be destroyed upon finishing.

SetSoundVolumeBJ=Set Sound Volume
SetSoundVolumeBJ="Set volume of ",~Sound," to ",~Volume,"%"

SetSoundOffsetBJ=Skip To Sound Offset
SetSoundOffsetBJ="Skip to ",~Offset," seconds from the start of ",~Sound
SetSoundOffsetBJHint=This should only be used on sounds that are currently playing.  This should not be used on 3D sounds.

SetSoundDistanceCutoffBJ=Set Sound Cutoff Distance
SetSoundDistanceCutoffBJ="Set cutoff distance of ",~Sound," to ",~Distance

SetSoundPitchBJ=Set Sound Pitch
SetSoundPitchBJ="Set pitch of ",~Sound," to ",~Pitch

AttachSoundToUnitBJ=Attach 3D Sound To Unit
AttachSoundToUnitBJ="Attach ",~3D Sound," to ",~Unit
AttachSoundToUnitBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundPositionLocBJ=Set 3D Sound Position
SetSoundPositionLocBJ="Set position of ",~3D Sound," to ",~Point," with Z offset ",~Z
SetSoundPositionLocBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetSoundDistances=Set 3D Sound Distances
SetSoundDistances="Set ",~3D Sound," distances to ",~Distance," minimum and ",~Distance," maximum"
SetSoundDistancesHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetStackedSoundBJ=Add/Remove 3D Sound Across Rect
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," across ",~Rect
SetStackedSoundBJHint=This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor.

SetAmbientDaySound=Use Daytime Ambient Theme
SetAmbientDaySound="Use the ",~Theme," daytime ambient theme"

SetAmbientNightSound=Use Nighttime Ambient Theme
SetAmbientNightSound="Use the ",~Theme," nighttime ambient theme"

EnableDawnDusk=Enable/Disable Dawn And Dusk Sounds
EnableDawnDusk=~Enable/Disable," dawn and dusk sounds"

SetMapMusicIndexedBJ=Set Music List (Using A Specific Initial Song)
SetMapMusicIndexedBJ="Set the music list to ",~Music,", starting with song ",~Index
SetMapMusicIndexedBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

SetMapMusicRandomBJ=Set Music List (Using A Random Initial Song)
SetMapMusicRandomBJ="Set the music list to ",~Music,", starting with a random song"
SetMapMusicRandomBJHint=This sets the list of music to use when the current song ends.  This does not stop the currently playing music.

ClearMapMusicBJ=Clear Music List
ClearMapMusicBJ="Clear the music list"
ClearMapMusicBJHint=Clearing the music list will cause music to cease after the currently playing music ends.

PlayMusicBJ=Play Music
PlayMusicBJ="Play ",~Music

PlayMusicExBJ=Play Music From Offset
PlayMusicExBJ="Play ",~Music,", skipping the first ",~Offset," seconds and fading in over ",~Fade Time," seconds"

PlayThematicMusicBJ=Play Music Theme
PlayThematicMusicBJ="Play ",~Music Theme
PlayThematicMusicBJHint=This will play a music theme once, and then resume the game music.

PlayThematicMusicExBJ=Play Music Theme From Offset
PlayThematicMusicExBJ="Play ",~Music Theme,", skipping the first ",~Offset," seconds"
PlayThematicMusicExBJHint=This will play a music theme once, and then resume the game music.

EndThematicMusicBJ=Stop Music Theme
EndThematicMusicBJ="Stop the currently playing music theme"

StopMusicBJ=Stop Music
StopMusicBJ="Stop music ",~After Fading/Immediately

ResumeMusicBJ=Resume Music
ResumeMusicBJ="Resume music"

SetMusicVolumeBJ=Set Music Volume
SetMusicVolumeBJ="Set music volume to ",~Volume,"%"

SetMusicOffsetBJ=Skip To Music Offset
SetMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music"

SetThematicMusicOffsetBJ=Skip To Music Theme Offset
SetThematicMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music theme"

VolumeGroupSetVolumeBJ=Set Volume Channel
VolumeGroupSetVolumeBJ="Set ",~Volume Channel," to ",~Volume,"%"

SetCineModeVolumeGroupsBJ=Set All Volume Channels For Cinematics
SetCineModeVolumeGroupsBJ="Setup all volume channels for cinematics"
SetCineModeVolumeGroupsBJHint=This uses the same volume channel settings as the 'Cinematic - Cinematic Mode' action.

SetSpeechVolumeGroupsBJ=Set All Volume Channels For Speech
SetSpeechVolumeGroupsBJ="Setup all volume channels for speech"

VolumeGroupResetBJ=Reset All Volume Channels
VolumeGroupResetBJ="Reset all volume channels to 100%"

AddSpecialEffectLocBJ=Create Special Effect At Point
AddSpecialEffectLocBJ="Create a special effect at ",~Point," using ",~Model File

AddSpecialEffectTargetUnitBJ=Create Special Effect On Unit
AddSpecialEffectTargetUnitBJ="Create a special effect attached to the ",~Attachment Point," of ",~Unit," using ",~Model File

DestroyEffectBJ=Destroy Special Effect
DestroyEffectBJ="Destroy ",~Special Effect

DisableTrigger=Turn Off
DisableTrigger="Turn off ",~Trigger
DisableTriggerHint=Does not interrupt existing executions of the trigger, but prevents future executions.

EnableTrigger=Turn On
EnableTrigger="Turn on ",~Trigger
EnableTriggerHint=Allows the trigger to be executed.

ConditionalTriggerExecute=Run (Checking Conditions)
ConditionalTriggerExecute="Run ",~Trigger," (checking conditions)"
ConditionalTriggerExecuteHint=Runs the trigger's actions if its conditions are true.

TriggerExecute=Run (Ignoring Conditions)
TriggerExecute="Run ",~Trigger," (ignoring conditions)"
TriggerExecuteHint=Runs the trigger's actions while ignoring events and conditions.

QueuedTriggerAddBJ=Add To Trigger Queue
QueuedTriggerAddBJ="Add ",~Trigger," to the trigger queue (",~Checking/Ignoring," conditions)"
QueuedTriggerAddBJHint=Triggers added to the trigger queue are executed one at a time, in turn.  Triggers added in this manner should remove themselves using 'Trigger - Remove From Queue'.

QueuedTriggerRemoveBJ=Remove From Trigger Queue
QueuedTriggerRemoveBJ="Remove ",~Trigger," from the trigger queue"
QueuedTriggerRemoveBJHint=If a trigger is already running via the trigger queue, removing it will allow the next trigger in the trigger queue to run, but will not stop the trigger itself from finishing its execution.

QueuedTriggerClearBJ=Clear Trigger Queue
QueuedTriggerClearBJ="Clear the trigger queue"
QueuedTriggerClearBJHint=This will remove all triggers from the trigger queue.

QueuedTriggerClearInactiveBJ=Clear Trigger Queue Of Pending Triggers
QueuedTriggerClearInactiveBJ="Clear all pending triggers from the trigger queue"
QueuedTriggerClearInactiveBJHint=This will remove all pending triggers from the trigger queue.  If a trigger is currently running in the queue, it will not be removed.

AddTriggerEvent=Add New Event
AddTriggerEvent="Add to ",~Trigger," the event ",~Event

CreateNUnitsAtLoc=Create Units Facing Angle
CreateNUnitsAtLoc="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreateNUnitsAtLocHint=The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateNUnitsAtLocFacingLocBJ=Create Units Facing Point
CreateNUnitsAtLocFacingLocBJ="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Point
CreateNUnitsAtLocFacingLocBJHint=Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units.

CreateCorpseLocBJ=Create Corpse
CreateCorpseLocBJ="Create a ",~Unit," corpse for ",~Player," at ",~Point
CreateCorpseLocBJHint=Not all units have corpse forms.  Use 'Last Created Unit' to refer to this unit.

CreatePermanentCorpseLocBJ=Create Permanent Corpse
CreatePermanentCorpseLocBJ="Create a permanent ",~Style," ",~Unit," corpse for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreatePermanentCorpseLocBJHint=Fleshy corpses will often appear skeletal for the first 8 seconds of their existence.

KillUnit=Kill
KillUnit="Kill ",~Unit

RemoveUnit=Remove
RemoveUnit="Remove ",~Unit," from the game"
RemoveUnitHint=Leaves no corpse.  If used on a Hero, that Hero cannot be resurrected.

ExplodeUnitBJ=Explode
ExplodeUnitBJ="Explode ",~Unit

ReplaceUnitBJ=Replace
ReplaceUnitBJ="Replace ",~Unit," with a ",~Unit-Type," using ",~Property Usage," life and mana"
ReplaceUnitBJHint=Use 'Last Replaced Unit' to refer to the replacement unit.  Note that any variables referring to the old unit will need to be updated.  Replacing a Haunted Gold Mine will usually yield a normal Gold Mine in addition to the replacement unit.

ShowUnitHide=Hide
ShowUnitHide="Hide ",~Unit
ShowUnitHideHint=Use the 'Unhide Unit' action to show a unit.  Hidden units do not show up in 'Units In Rect' queries.

ShowUnitShow=Unhide
ShowUnitShow="Unhide ",~Unit
ShowUnitShowHint=Use the 'Hide Unit' action to hide a unit.  Hidden units do not show up in 'Units In Rect' queries.

SetUnitColor=Change Color
SetUnitColor="Change color of ",~Unit," to ",~Color
SetUnitColorHint=Changing a unit's color does not change the unit's ownership.

SetUnitOwner=Change Owner
SetUnitOwner="Change ownership of ",~Unit," to ",~Player," and ",~Change/Retain Color

UnitShareVisionBJ=Shared Vision
UnitShareVisionBJ=~Grant/Deny," shared vision of ",~Unit," to ",~Player
UnitShareVisionBJHint=Note that neutral player slots cannot share their vision.

SetUnitPositionLoc=Move Unit (Instantly)
SetUnitPositionLoc="Move ",~Unit," instantly to ",~Point

SetUnitPositionLocFacingBJ=Move Unit And Face Angle (Instantly)
SetUnitPositionLocFacingBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Direction," degrees"
SetUnitPositionLocFacingBJHint=The facing angle is expected in degrees, with 0 being east and 90 being north.

SetUnitPositionLocFacingLocBJ=Move Unit And Face Point (Instantly)
SetUnitPositionLocFacingLocBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Point

SetUnitRallyPoint=Set Rally-Point To Point
SetUnitRallyPoint="Set Rally-Point for ",~Unit," to ",~Point

SetUnitRallyUnit=Set Rally-Point To Unit
SetUnitRallyUnit="Set Rally-Point for ",~Unit," to ",~Unit

SetUnitRallyDestructable=Set Rally-Point To Destructible
SetUnitRallyDestructable="Set Rally-Point for ",~Unit," to ",~Destructible

SetUnitLifePercentBJ=Set Life (To Percentage)
SetUnitLifePercentBJ="Set life of ",~Unit," to ",~Percent,"%"

SetUnitManaPercentBJ=Set Mana (To Percentage)
SetUnitManaPercentBJ="Set mana of ",~Unit," to ",~Percent,"%"

SetUnitLifeBJ=Set Life (To Value)
SetUnitLifeBJ="Set life of ",~Unit," to ",~Value

SetUnitManaBJ=Set Mana (To Value)
SetUnitManaBJ="Set mana of ",~Unit," to ",~Value

SetUnitInvulnerable=Make Invulnerable/Vulnerable
SetUnitInvulnerable="Make ",~Unit," ",~Invulnerable/Vulnerable

PauseUnitBJ=Pause/Unpause
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.

PauseAllUnitsBJ=Pause/Unpause All Units
PauseAllUnitsBJ=~Pause/Unpause," all units"
PauseAllUnitsBJHint=A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.  This action only affects units that exist when this action is run.

UnitPauseTimedLifeBJ=Pause/Unpause Expiration Timer
UnitPauseTimedLifeBJ=~Pause/Unpause," the expiration timer for ",~Unit
UnitPauseTimedLifeBJHint=Only summoned units have expiration timers.

UnitApplyTimedLifeBJ=Add Expiration Timer
UnitApplyTimedLifeBJ="Add a ",~Duration," second ",~Buff Type," expiration timer to ",~Unit

SetUnitExplodedBJ=Make Unit Explode On Death
SetUnitExplodedBJ="Make ",~Unit," ",~Explode/Die Normally," on death"

UnitSuspendDecayBJ=Suspend Corpse Decay
UnitSuspendDecayBJ=~Suspend/Resume," corpse decay for ",~Unit
UnitSuspendDecayBJHint=This only works on corpses, and only after the corpses' death animations have finished.

UnitResetCooldown=Reset Ability Cooldowns
UnitResetCooldown="Reset ability cooldowns for ",~Unit
UnitResetCooldownHint=This makes all of the unit's abilities available for use again almost immediately.

UnitSetConstructionProgress=Set Building Construction Progress
UnitSetConstructionProgress="Set ",~Building," construction progress to ",~Progress,"%"
UnitSetConstructionProgressHint=This should only be used on buildings that are currently under construction.

UnitSetUpgradeProgress=Set Building Upgrade Progress
UnitSetUpgradeProgress="Set ",~Building," upgrade progress to ",~Progress,"%"
UnitSetUpgradeProgressHint=This should only be used on buildings that are currently being upgraded.  This does not affect research-based upgrades.

UnitAddSleepPerm=Make Unit Sleep
UnitAddSleepPerm="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked"
UnitAddSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitSetCanSleepBJ=Make Unit Sleep At Night
UnitSetCanSleepBJ="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked at night"
UnitSetCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitWakeUpBJ=Wake Up
UnitWakeUpBJ="Wake up ",~Unit
UnitWakeUpBJHint=This affects nocturnal sleep, not magical sleep.

UnitGenerateAlarms=Turn Alarm Generation On/Off
UnitGenerateAlarms="Turn alarm generation for ",~Unit," ",~On/Off
UnitGenerateAlarmsHint=This only affects buildings.

RescueUnitBJ=Rescue Unit
RescueUnitBJ="Rescue ",~Unit," for ",~Player," and ",~Change/Retain Color

MakeUnitRescuableToForceBJ=Make Rescuable
MakeUnitRescuableToForceBJ="Make ",~Unit," ",~Rescuable/Unrescuable," by ",~Player Group

SetUnitRescueRange=Set Rescue Range
SetUnitRescueRange="Limit rescue events for ",~Unit," to a range of ",~Range
SetUnitRescueRangeHint=To make a unit rescuable, use 'Unit - Make Rescuable' or set the unit's owner to 'Rescuable'.

SetRescueUnitColorChangeBJ=Set Rescue Behavior For Units
SetRescueUnitColorChangeBJ="Make units ",~Change/Retain Color," when rescued"
SetRescueUnitColorChangeBJHint=By default, units owned by 'Rescuable' players do not change color when rescued.  This action does not affect units that have already been rescued.

SetRescueBuildingColorChangeBJ=Set Rescue Behavior For Buildings
SetRescueBuildingColorChangeBJ="Make buildings ",~Change/Retain Color," when rescued"
SetRescueBuildingColorChangeBJHint=By default, buildings owned by 'Rescuable' players change color when rescued.  This action does not affect buildings that have already been rescued.

SetUnitUseFoodBJ=Enable/Disable Supply Usage
SetUnitUseFoodBJ=~Enable/Disable," supply usage for ",~Unit

SetUnitFacingToFaceUnitTimed=Make Unit Face Unit
SetUnitFacingToFaceUnitTimed="Make ",~Unit," face ",~Unit," over ",~Time," seconds"
SetUnitFacingToFaceUnitTimedHint=Forces a unit to face another unit.  This only works if the source unit is not moving at the time.

SetUnitFacingToFaceLocTimed=Make Unit Face Point
SetUnitFacingToFaceLocTimed="Make ",~Unit," face ",~Point," over ",~Time," seconds"
SetUnitFacingToFaceLocTimedHint=Forces a unit to face a point.  This only works if the source unit is not moving at the time.

SetUnitFacingTimed=Make Unit Face Angle
SetUnitFacingTimed="Make ",~Unit," face ",~Angle," over ",~Time," seconds"
SetUnitFacingTimedHint=Forces a unit to face a directional angle, expected in degrees, with 0 being east.  This only works if the source unit is not moving at the time.

SetUnitMoveSpeed=Set Movement Speed
SetUnitMoveSpeed="Set ",~Unit," movement speed to ",~Speed
SetUnitMoveSpeedHint=Common movement speeds range from 150 to 300.

SetUnitPathing=Turn Collision On/Off
SetUnitPathing="Turn collision for ",~Unit," ",~On/Off
SetUnitPathingHint=Collision-disabled units ignore obstacles, but are still themselves treated as obstacles.

SetUnitAcquireRangeBJ=Set Acquisition Range
SetUnitAcquireRangeBJ="Set ",~Unit," acquisition range to ",~Range
SetUnitAcquireRangeBJHint=The acquisition range of a unit is the distance at which the unit acquires targets to attack.

SetUnitUserData=Set Custom Value
SetUnitUserData="Set the custom value of ",~Unit," to ",~Index
SetUnitUserDataHint=Custom values are only used in triggers, and can be used to store any integer value.

UnitRemoveBuffsBJ=Remove Buffs
UnitRemoveBuffsBJ="Remove ",~Buff Type," buffs from ",~Unit

UnitRemoveBuffsExBJ=Remove Buffs By Type
UnitRemoveBuffsExBJ="Remove ",~Buff Type," buffs considered ",~Buff Resist," from ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

UnitRemoveBuffBJ=Remove Specific Buff
UnitRemoveBuffBJ="Remove ",~Buff," buff from ",~Unit

UnitAddAbilityBJ=Add Ability
UnitAddAbilityBJ="Add ",~Ability," to ",~Unit

UnitRemoveAbilityBJ=Remove Ability
UnitRemoveAbilityBJ="Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent.

UnitAddTypeBJ=Add Classification
UnitAddTypeBJ="Add classification of ",~Classification," to ",~Unit
UnitAddTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

UnitRemoveTypeBJ=Remove Classification
UnitRemoveTypeBJ="Remove classification of ",~Classification," from ",~Unit
UnitRemoveTypeBJHint=The info panel for a selected unit won't update until the unit is re-selected.

IssueTargetOrder=Issue Order Targeting A Unit
IssueTargetOrder="Order ",~Unit," to ",~Order," ",~Unit

IssuePointOrderLoc=Issue Order Targeting A Point
IssuePointOrderLoc="Order ",~Unit," to ",~Order," ",~Point

IssueTargetDestructableOrder=Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Order ",~Unit," to ",~Order," ",~Destructible

IssueTargetItemOrder=Issue Order Targeting An Item
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item

IssueImmediateOrder=Issue Order With No Target
IssueImmediateOrder="Order ",~Unit," to ",~Order

IssueTrainOrderByIdBJ=Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.

IssueUpgradeOrderByIdBJ=Issue Research Order
IssueUpgradeOrderByIdBJ="Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action.

IssueBuildOrderByIdLocBJ=Issue Build Order
IssueBuildOrderByIdLocBJ="Order ",~Unit," to build a ",~Unit-Type," at ",~Point

UnitDropItemPointLoc=Issue Drop Item Order
UnitDropItemPointLoc="Order ",~Unit," to drop ",~Item," at ",~Point

UnitDropItemSlotBJ=Issue Move Item In Inventory Order
UnitDropItemSlotBJ="Order ",~Unit," to move ",~Item," to inventory slot ",~Index
UnitDropItemSlotBJHint=This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped.

UnitDropItemTargetBJ=Issue Give Item Order
UnitDropItemTargetBJ="Order ",~Unit," to give ",~Item," to ",~Unit

UnitDamagePointLoc=Damage Area
UnitDamagePointLoc="Cause ",~Unit," to damage circular area after ",~Seconds," seconds of radius ",~Size," at ",~Location,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamagePointLocHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

UnitDamageTargetBJ=Damage Target
UnitDamageTargetBJ="Cause ",~Unit," to damage ",~Target,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamageTargetBJHint=This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage.

DecUnitAbilityLevelSwapped=Decrease Level Of Ability For Unit
DecUnitAbilityLevelSwapped="Decrease level of ",~Ability," for ",~Unit
DecUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

IncUnitAbilityLevelSwapped=Increase Level Of Ability For Unit
IncUnitAbilityLevelSwapped="Increase level of ",~Ability," for ",~Unit
IncUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

SetUnitAbilityLevelSwapped=Set Level Of Ability For Unit
SetUnitAbilityLevelSwapped="Set level of ",~Ability," for ",~Unit," to ",~Level
SetUnitAbilityLevelSwappedHint=If the unit does not have the ability, this does nothing.

ForGroupMultiple=Pick Every Unit In Unit Group And Do Multiple Actions
ForGroupMultiple="Pick every unit in ",~Unit Group," and do (Actions)"
ForGroupMultipleHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.  Add actions to this function in the main display.

ForGroup=Pick Every Unit In Unit Group And Do Action
ForGroup="Pick every unit in ",~Unit Group," and do ",~Action
ForGroupHint=Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.

GroupAddUnitSimple=Add Unit
GroupAddUnitSimple="Add ",~Unit," to ",~Unit Group
GroupAddUnitSimpleHint=This adds a unit to a Unit Group variable.  This does not affect the unit itself.

GroupAddGroup=Add Unit Group
GroupAddGroup="Add all units of ",~Unit Group," to ",~Unit Group
GroupAddGroupHint=This adds all units of a unit group to a Unit Group variable.  This does not affect the units themselves.

GroupRemoveUnitSimple=Remove Unit
GroupRemoveUnitSimple="Remove ",~Unit," from ",~Unit Group
GroupRemoveUnitSimpleHint=This removes a unit from a Unit Group variable.  This does not affect the unit itself.

GroupRemoveGroup=Remove Unit Group
GroupRemoveGroup="Remove all units of ",~Unit Group," from ",~Unit Group
GroupRemoveGroupHint=This removes all units of a unit group from a Unit Group variable.  This does not affect the units themselves.

GroupClear=Clear
GroupClear="Remove all units from ",~Unit Group
GroupClearHint=This removes all units from a Unit Group variable.  This does not affect the units themselves.

GroupTargetOrder=Issue Order Targeting A Unit
GroupTargetOrder="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game.

GroupPointOrderLoc=Issue Order Targeting A Point
GroupPointOrderLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetDestructableOrder=Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTargetItemOrder=Issue Order Targeting An Item
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupImmediateOrder=Issue Order With No Target
GroupImmediateOrder="Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group.

GroupTrainOrderByIdBJ=Issue Train Order
GroupTrainOrderByIdBJ="Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group.

CreateUbersplatBJ=Create
CreateUbersplatBJ="Create ubersplat at ",~Location," of type ",~Type," with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency (",~Enable/Disable," paused state, ",~Enble/Disable," skipping birth time)"
CreateUbersplatBJHint=The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Ubersplat - Change Render Always State' to toggle display of this ubersplat.  By default, ubersplats are not rendered.

DestroyUbersplat=Destroy
DestroyUbersplat="Destroy ",~Ubersplat

ResetUbersplat=Reset
ResetUbersplat="Reset ",~Ubersplat

FinishUbersplat=Finish
FinishUbersplat="Finish ",~Ubersplat

ShowUbersplatBJ=Show/Hide
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat

SetUbersplatRender=Change Render State
SetUbersplatRender="Change ",~Ubersplat,": ",~Enable/Disable," render state"

SetUbersplatRenderAlways=Change Render Always State
SetUbersplatRenderAlways="Change ",~Ubersplat,": ",~Enable/Disable," render always state"

FogEnableOn=Enable Fog Of War
FogEnableOn="Enable fog of war"

FogEnableOff=Disable Fog Of War
FogEnableOff="Disable fog of war"

FogMaskEnableOn=Enable Black Mask
FogMaskEnableOn="Enable black mask"

FogMaskEnableOff=Disable Black Mask
FogMaskEnableOff="Disable black mask"

CreateFogModifierRectBJ=Create Visibility Modifier Rect
CreateFogModifierRectBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," across ",~Rect

CreateFogModifierRadiusLocBJ=Create Visibility Modifier Circle
CreateFogModifierRadiusLocBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," from ",~Point," to a radius of ",~Radius

FogModifierStart=Enable Visibility Modifier
FogModifierStart="Enable ",~Visibility Modifier

FogModifierStop=Disable Visibility Modifier
FogModifierStop="Disable ",~Visibility Modifier

DestroyFogModifier=Destroy Visibility Modifier
DestroyFogModifier="Destroy ",~Visibility Modifier

DestroyTimer=Destroy
DestroyTimer="Destroy ",~Timer
DestroyTimerHint=Removes a timer from memory. Always destroy no longer needed timers. [UMSWE]

DialogDestroy=Destroy
DialogDestroy="Destroy ",~Dialog
DialogDestroyHint=Removes a dialog from memory. Always destroy no longer needed dialogs. [UMSWE]

DestroyForce=Destroy
DestroyForce="Destroy ",~Force
DestroyForceHint=Removes a Player Group from memory. Always destroy no longer needed Player Groups. [UMSWE]

DestroyGroup=Destroy Unit Group
DestroyGroup="Destroy unit group ",~Group
DestroyGroupHint=Destroy unit groups you don't need any mor to save memory [UMSWE]

DestroyTrigger=Destroy
DestroyTrigger="Destroy ",~Trigger
DestroyTriggerHint=Destroys a trigger [UMSWE]

RemoveRegion=Remove Region
RemoveRegion="Remove ",~Region
RemoveRegionHint=Use this to delete a region to save memory. The variable itself will remain without data [UMSWE]

MultiboardSetItemsValueColor=All Items - Set Item Lable Color
MultiboardSetItemsValueColor="Set item lable color for all items of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemsValueColorHint=Changes the color of all items. The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

MultiboardSetItemValueColor=Set Item Lable Color
MultiboardSetItemValueColor="Set item lable color for multiboard item ",~Item," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemValueColorHint=The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]

AddLightningEx=Create Lightning Effect (Advanced)
AddLightningEx="Create a ",~Type,", ",~Visibility," lightning effect from source (",~X1,",",~Y1,",",~Z1,") to target (",~X2,",",~Y2,",",~Z2,") "
AddLightningExHint=Use coordinates, Z values are elevation [UMSWE]

MoveLightningEx=Move Lightning Effect (Advanced)
MoveLightningEx="Make ",~Bolt," ",~Boolean," and move it to reach from (",~X1,",",~Y1,",",~Z1,") to (",~X2,",",~Y2,",",~Z2,") "
MoveLightningExHint=Use coordinates, Z values are elevation [UMSWE]

SetHeroAgi=Set Hero Agility
SetHeroAgi="Set Agility of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroAgiHint=Changes the hero's agility [UMSWE]

SetHeroInt=Set Hero Intelligence
SetHeroInt="Set Intelligence of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroIntHint=Changes the hero's Intelligence [UMSWE]

SetHeroStr=Set Hero Strength
SetHeroStr="Set Strength of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroStrHint=Changes the hero's strength [UMSWE]

GroupTargetOrderBJ=Issue Order Targeting A Unit (takes string)
GroupTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetOrderById=Issue Order Targeting A Unit (takes ordercode)
GroupTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderBJ=Issue Order Targeting An Item (takes string)
GroupItemTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupItemTargetOrderById=Issue Order Targeting An Item (takes ordercode)
GroupItemTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLocBJ=Issue Order Targeting A Point (takes string)
GroupPointOrderLocBJ="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupPointOrderByIdLoc=Issue Order Targeting A Point (takes ordercode)
GroupPointOrderByIdLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderByIdLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetDestructableOrderS=Issue Order Targeting A Destructible (takes string)
GroupTargetDestructableOrderS="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderSHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderByIdD=Issue Order Targeting A Destructible (takes ordercode)
GroupTargetOrderByIdD="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetOrderByIdDHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderBJ=Issue Order With No Target (takes string)
GroupImmediateOrderBJ="Order ",~Unit Group," to ",~Order
GroupImmediateOrderBJHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrderById=Issue Order With No Target (takes ordercode)
GroupImmediateOrderById="Order ",~Unit Group," to ",~Order
GroupImmediateOrderByIdHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupEnumUnitsOfType=Add Units of Type to Group
GroupEnumUnitsOfType="Take group ",~group," and add all units of type ",~unitname," matching condition ",~Condition
GroupEnumUnitsOfTypeHint=Use the names in the 6th column in UnitUI.slk as unitnames [UMSWE]

GroupEnumUnitsOfTypeCounted=Add Number Of Units Of Type
GroupEnumUnitsOfTypeCounted="To ",~Group" add units of type ","",~Type," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsOfTypeCountedHint=For the type use the unit names of the 6th column in UnitUI.slk [UMSWE]

GroupEnumUnitsOfPlayer=Add Units Of Player
GroupEnumUnitsOfPlayer="To ",~Group," add units of player ",~Player," matching ",~Condition
GroupEnumUnitsOfPlayerHint=[UMSWE]

GroupEnumUnitsInRect=Add Units In Rect
GroupEnumUnitsInRect="To ",~Group," add units in ",~Rect," matching ",~Condition
GroupEnumUnitsInRectHint=[UMSWE]

GroupEnumUnitsInRectCounted=Add Number Of Units In Rect
GroupEnumUnitsInRectCounted="To ",~Group," add units in ",~Rect," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRectCountedHint=[UMSWE]

GroupEnumUnitsInRangeOfLoc=Add Units in Range of Point
GroupEnumUnitsInRangeOfLoc="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition
GroupEnumUnitsInRangeOfLocHint=[UMSWE]

GroupEnumUnitsInRangeOfLocCounted=Add Number of Units in Range of Point
GroupEnumUnitsInRangeOfLocCounted="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRangeOfLocCountedHint=[UMSWE]

GroupEnumUnitsSelected=Add Units Selected by Player
GroupEnumUnitsSelected="To ",~Group," add units selected by ",~Player," matching ",~Condition
GroupEnumUnitsSelectedHint=[UMSWE]

SetPlayerTechMaxAllowed=Set Max Number Of Units by Type
SetPlayerTechMaxAllowed="For ",~Player,", set the maximun number of ",~Unit-Type," to ",~Number
SetPlayerTechMaxAllowedHint=Just here for COMPATIBILITY reasons. Use the specific functions provided by blizzard instead. [UMSWE]

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey: ",~Key
DialogAddButtonHint=Use ASCII numbers for the hotkey number [UMSWE]

DialogAddQuitButton=Create Quit Button
DialogAddQuitButton="Create a quit button for dialog ",~Dialog," (",~Show," score screen) labeled ",~Text," and use the shortcut ",~ASCII
DialogAddQuitButtonHint=Use ASCII numbers to add a shortcut [UMSWE]

DisplayTextToPlayer=Text Message to Player (Auto-Timed)
DisplayTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") the text: ",~Text
DisplayTextToPlayerHint=The text is shown for an amount of time that automatically increases with the text length. The offset is the X,Y position on the screen. [UMSWE]

DisplayTimedTextToPlayer=Text Message to Player (Explicitly Timed)
DisplayTimedTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") for ",~Time," seconds the text: ",~Text
DisplayTimedTextToPlayerHint=The offset is the X,Y position on the screen. [UMSWE]

EnumItemsInRect=Pick Every Item In Rect Matching Condition And Do Action
EnumItemsInRect="Pick every item in ",~Rect," matching ",~Condition," and do ",~Action
EnumItemsInRectHint=Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function. [UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

SelectHeroSkill2=Learn Skill (Takes Abilcode)
SelectHeroSkill2="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkill2Hint=This only works if the Hero has at least one skill point to spend. [UMSWE]

TimerStart=Start Timer (With Callback)
TimerStart="Start ",~Timer," lasting ",~Time," and ",~Repeat," and execute ",~Action," when it expires"
TimerStartHint=[UMSWE]

PlayCinematic=Play Movie
PlayCinematic="Play the cinematic movie called ",~name
PlayCinematicHint=The Movie must be in the Movies folder of Warcraft and in the same format as the other movies. String without .mpq 

RandomDistAddItem=Add Item To Random Item Pool
RandomDistAddItem="Add the item type ",~id," to the pool and give it a chance of ",~percent," to be chosen"
RandomDistAddItemHint=Use 'Get Random Item From Pool' to use your own item pool, the chances of all items added to the pool are summed up to calculate the final chance [UMSWE]

RandomDistReset=Reset Random Item Pool
RandomDistReset="Reset your own pool for random items"
RandomDistResetHint=[UMSWE]

SetUnitLookAtS=Lock Body-Part Facing (Takes String)
SetUnitLookAtS="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtSHint=The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet. Use this to specify any bone by it's name. [UMSWE]

UnitApplyTimedLifeB=Apply Life Timer (takes buffcode)
UnitApplyTimedLifeB="Set timed life for unit ",~Unit," with buff ID ",~Buff Type," and duration ",~Integer," seconds"
UnitApplyTimedLifeBHint=Gives a unit a life timer. [UMSWE]

UnitMakeAbilityPermanentBJ=Make Ability Permanent
UnitMakeAbilityPermanentBJ="For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentBJHint=[UMSWE]

SetUnitAnimationByIndex=Set Unit Animation by Index
SetUnitAnimationByIndex="Set current animation for ",~unit," to its ",~nr,"th animation"
SetUnitAnimationByIndexHint=Use the arrow buttons in the preview window to see all animations [UMSWE]

UnitIgnoreAlarm=Ignore Alarm
UnitIgnoreAlarm="Make unit ",~Unit," ignore alarms ",~Flag
UnitIgnoreAlarmHint=[UMSWE]

ExecuteFunc=Execute Function
ExecuteFunc="Execute ",~Function
ExecuteFuncHint=Use 'Conversion - Trigger Name To Function' to access the actions part of a trigger, the called function shouldn't have parameters [UMSWE]

EnableUserUI=Enable/Disable User UI
EnableUserUI=~Enable/Disable," User UI"
EnableUserUIHint=[UMSWE]

EndGame=End Game
EndGame="End game and ",~Show/Skip," scores"
EndGameHint=No victory or defeat dialog [UMSWE]

ChangeLevel=Load Next Map
ChangeLevel="End game, load the map ",~Mapname," and ",~Show/Skip," scores"
ChangeLevelHint=No victory or defeat dialog and no 'Connect to Server Bug' [UMSWE]

RestartGame=Restart Game
RestartGame="Restart the current map and ",~Show/Skip," scores"
RestartGameHint=No victory or defeat dialog [UMSWE]

DisableRestartMission=Disable Restart Mission
DisableRestartMission="Disable restart mission ",~Flag
DisableRestartMissionHint=[UMSWE]

DoNotSaveReplay=Do Not Save Replay
DoNotSaveReplay="Do not save replay"
DoNotSaveReplayHint=[UMSWE]

SetIntegerGameState=Set Game State
SetIntegerGameState="Set ",~Gamestate," to ",~Value
SetIntegerGameStateHint=[UMSWE]

SyncSelections=Synchronize Selections
SyncSelections="Synchronize the unit selections"
SyncSelectionsHint=Used to avoid desyncs before getting the selection state with custom script calls [UMSWE]

MoveLocation=Move Point
MoveLocation="Move ",~Point," to offset(",~X,", ",~Y,")"
MoveLocationHint=[UMSWE]

RemoveLocation=Remove Point
RemoveLocation="Remove ",~Location
RemoveLocationHint=Use this to delete a point to save memory. The variable itself will remain without data [UMSWE]

MoveRectTo=Move to Offset
MoveRectTo="Center ",~Rect," on offset(",~Real,", ",~Real,")"
MoveRectToHint=This has no effect unless the specified rect is a variable [UMSWE]

RemoveRect=Remove
RemoveRect="Remove ",~Rect
RemoveRectHint=Use this to delete a rect to save memory. The variable itself will remain without data [UMSWE]

TriggerAddCondition=Add Condition To Trigger
TriggerAddCondition="Take ",~Trigger," and add this condition: ",~Condition
TriggerAddConditionHint=[UMSWE]

TriggerAddAction=Add Action To Trigger
TriggerAddAction="Take ",~Trigger," and add this action: ",~Action
TriggerAddActionHint=[UMSWE]

TriggerRemoveCondition=Remove Condition
TriggerRemoveCondition="Take ",~Trigger," and remove the condition ",~Boolexp
TriggerRemoveConditionHint=Removes a condition from a trigger [UMSWE]

TriggerClearConditions=Clear Conditions
TriggerClearConditions="Take ",~Trigger," and remove all conditions "
TriggerClearConditionsHint=Removes all conditions from a trigger [UMSWE]

TriggerRemoveAction=Remove Action
TriggerRemoveAction="Take ",~Trigger," and remove the action ",~Action
TriggerRemoveActionHint=Removes an action from a trigger [UMSWE]

TriggerClearActions=Clear Actions
TriggerClearActions="Take ",~Trigger," and remove all actions"
TriggerClearActionsHint=Removes all actions from a trigger [UMSWE]

ResetTrigger=Reset Trigger
ResetTrigger="Reset ",~Trigger
ResetTriggerHint=Resets a trigger to its original state [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

IssueInstantTargetOrder=Give Item from Unit to Unit
IssueInstantTargetOrder="Order ",~Unit," to ",~Order," ",~Item," to ",~Unit
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueNeutralImmediateOrderById=Buy Unit from Store
IssueNeutralImmediateOrderById="For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

IssueTargetOrderBJ=Issue Order Targeting A Unit (Takes String)
IssueTargetOrderBJ="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderById=Issue Order Targeting A Unit (Takes Ordercode)
IssueTargetOrderById="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderByIdHint=[UMSWE]

IssuePointOrderLocBJ=Issue Order Targeting A Point (Takes String)
IssuePointOrderLocBJ="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssuePointOrderByIdLoc=Issue Order Targeting A Point (Takes Ordercode)
IssuePointOrderByIdLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderByIdLocHint=[UMSWE]

IssueTargetOrderD=Issue Order Targeting A Destructible (Takes String)
IssueTargetOrderD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderDHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueTargetOrderByIdD=Issue Order Targeting A Destructible (Takes Ordercode)
IssueTargetOrderByIdD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderByIdDHint=[UMSWE]

IssueImmediateOrderBJ=Issue Order With No Target (Takes String)
IssueImmediateOrderBJ="Order ",~Unit," to ",~Order
IssueImmediateOrderBJHint=Use this to enter a string as order instead of picking a preset [UMSWE]

IssueImmediateOrderById=Issue Order With No Target (Takes Ordercode)
IssueImmediateOrderById="Order ",~Unit," to ",~Order
IssueImmediateOrderByIdHint=[UMSWE]

IssueItemTargetOrderS=Issue Order Targeting An Item (Takes String)
IssueItemTargetOrderS="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderSHint=[UMSWE]

IssueItemTargetOrderId=Issue Order Targeting An Item (Takes Ordercode)
IssueItemTargetOrderId="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderIdHint=[UMSWE]

RegionAddCell=Add Cell To Region
RegionAddCell="Take ",~region," and add a cell at location (",~X,",",~Y,")"
RegionAddCellHint=[UMSWE]

RegionAddCellAtLoc=Region Add Cell At Location
RegionAddCellAtLoc="Take ",~region," and add a cell at ",~location
RegionAddCellAtLocHint=[UMSWE]

RegionAddRect=Add Rect To Region
RegionAddRect="Take ",~region," and add ",~rect," to it"
RegionAddRectHint=[UMSWE]

RegionClearCell=Remove Cell From Region
RegionClearCell="Take ",~region," and remove the cell at (",~X,",",~Y,")"
RegionClearCellHint=[UMSWE]

RegionClearCellAtLoc=Remove Cell At Location From Region
RegionClearCellAtLoc="Take ",~region," and remove the cell at",~location
RegionClearCellAtLocHint=[UMSWE]

RegionClearRect=Remove Rect From Region
RegionClearRect="Take ",~region," and remove ",~rect," from it"
RegionClearRectHint=[UMSWE]

FlushStoredInteger=Flush Stored Integer
FlushStoredInteger="Flush the Integer stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredIntegerHint=[UMSWE]

FlushStoredBoolean=Flush Stored Boolean
FlushStoredBoolean="Flush the Boolean stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredBooleanHint=[UMSWE]

FlushStoredReal=Flush Stored Real
FlushStoredReal="Flush the Real stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredRealHint=[UMSWE]

FlushStoredUnit=Flush Stored Unit
FlushStoredUnit="Flush the Unit stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredUnitHint=[UMSWE]

FlushStoredString=Flush Stored String
FlushStoredString="Flush the String stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredStringHint=[UMSWE]

CreateDestructableZA=Create With Z Offset
CreateDestructableZA="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

CreateDeadDestructableZA=Create With Z Offset (Dead)
CreateDeadDestructableZA="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZAHint=Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]

DialogAddButtonWithHotkeyBJ=Create Dialog Button with Hotkey (GU Version)
DialogAddButtonWithHotkeyBJ="Create a dialog button for ",~Dialog," labelled ",~Text," and keycode ",~Code
DialogAddButtonWithHotkeyBJHint=Just here for COMPATIBILITY reasons. Better use the common.j version of this action. [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=Just here for COMPATIBILITY reasons. Better use the function returning the trackable to save it to a variable. [UMSWE]

MultiboardDisplay=Display Multiboard
MultiboardDisplay="Take multiboard ",~board," and ",~ShowHide," it"
MultiboardDisplayHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

DestroyMultiboard=Destroy Multiboard
DestroyMultiboard="Destroy multiboard ",~board
DestroyMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardMinimize=Minimize Multiboard
MultiboardMinimize="Take multiboard ",~board," and ",~Min," it"
MultiboardMinimizeHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetTitleTextColor=Set Title Text Color
MultiboardSetTitleTextColor="Set title text color of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetTitleTextColorHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsStyle=All Items - Set Item Style
MultiboardSetItemsStyle="Set item style for all items of multiboard ",~board," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemsStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsValue=All Items - Set Item Value
MultiboardSetItemsValue="Set the label for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsWidth=All Items - Set Item Width
MultiboardSetItemsWidth="Set width for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemsIcon=All Items - Set Item Icon
MultiboardSetItemsIcon="Set used icon for all items of multiboard ",~board," to ",~Icon
MultiboardSetItemsIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardReleaseItem=Release Multiboard Item
MultiboardReleaseItem="Release multiboard item ",~Item
MultiboardReleaseItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemStyle=Set Item Style
MultiboardSetItemStyle="Set item style of multiboard item ",~Item," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemStyleHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemValue=Set Item Value
MultiboardSetItemValue="Set the label for multiboard item ",~Item," to ",~Value
MultiboardSetItemValueHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemWidth=Set Item Width
MultiboardSetItemWidth="Set width for multiboard item ",~Item," to ",~Value
MultiboardSetItemWidthHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

MultiboardSetItemIcon=Set Item Icon
MultiboardSetItemIcon="Set used icon for multiboard item ",~Item," to ",~Icon
MultiboardSetItemIconHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Location
AddSpellEffectByIdLoc="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectByIdLocB=Create Buff Effect At Location
AddSpellEffectByIdLocB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

AddSpellEffectTargetByIdB=Create Buff Effect On Unit
AddSpellEffectTargetByIdB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdBHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

UnitApplyTimedLife=Apply Life Timer
UnitApplyTimedLife="Set timed life for unit ",~Unit," with buff ID ",~Integer," and duration ",~Integer," seconds"
UnitApplyTimedLifeHint=Just here for COMPATIBILITY reasons. Better use the new official action. [UMSWE]

IssueItemTargetOrder=Issue Order Targeting An Item
IssueItemTargetOrder="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]

GroupItemTargetOrder=Group Issue Order Targeting An Item
GroupItemTargetOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderHint=Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]


[TriggerCallStrings]

ConvertRace=ConvertRace
ConvertRace="ConvertRace(",~i,")"
ConvertRaceHint="[NATIVE]  ConvertRace takes integer i returns race"


ConvertAllianceType=ConvertAllianceType
ConvertAllianceType="ConvertAllianceType(",~i,")"
ConvertAllianceTypeHint="[NATIVE]  ConvertAllianceType takes integer i returns alliancetype"


ConvertRacePref=ConvertRacePref
ConvertRacePref="ConvertRacePref(",~i,")"
ConvertRacePrefHint="[NATIVE]  ConvertRacePref takes integer i returns racepreference"


ConvertIGameState=ConvertIGameState
ConvertIGameState="ConvertIGameState(",~i,")"
ConvertIGameStateHint="[NATIVE]  ConvertIGameState takes integer i returns igamestate"


ConvertFGameState=ConvertFGameState
ConvertFGameState="ConvertFGameState(",~i,")"
ConvertFGameStateHint="[NATIVE]  ConvertFGameState takes integer i returns fgamestate"


ConvertPlayerState=ConvertPlayerState
ConvertPlayerState="ConvertPlayerState(",~i,")"
ConvertPlayerStateHint="[NATIVE]  ConvertPlayerState takes integer i returns playerstate"


ConvertPlayerScore=ConvertPlayerScore
ConvertPlayerScore="ConvertPlayerScore(",~i,")"
ConvertPlayerScoreHint="[NATIVE]  ConvertPlayerScore takes integer i returns playerscore"


ConvertPlayerGameResult=ConvertPlayerGameResult
ConvertPlayerGameResult="ConvertPlayerGameResult(",~i,")"
ConvertPlayerGameResultHint="[NATIVE]  ConvertPlayerGameResult takes integer i returns playergameresult"


ConvertUnitState=ConvertUnitState
ConvertUnitState="ConvertUnitState(",~i,")"
ConvertUnitStateHint="[NATIVE]  ConvertUnitState takes integer i returns unitstate"


ConvertAIDifficulty=ConvertAIDifficulty
ConvertAIDifficulty="ConvertAIDifficulty(",~i,")"
ConvertAIDifficultyHint="[NATIVE]  ConvertAIDifficulty takes integer i returns aidifficulty"


ConvertGameEvent=ConvertGameEvent
ConvertGameEvent="ConvertGameEvent(",~i,")"
ConvertGameEventHint="[NATIVE]  ConvertGameEvent takes integer i returns gameevent"


ConvertPlayerEvent=ConvertPlayerEvent
ConvertPlayerEvent="ConvertPlayerEvent(",~i,")"
ConvertPlayerEventHint="[NATIVE]  ConvertPlayerEvent takes integer i returns playerevent"


ConvertPlayerUnitEvent=ConvertPlayerUnitEvent
ConvertPlayerUnitEvent="ConvertPlayerUnitEvent(",~i,")"
ConvertPlayerUnitEventHint="[NATIVE]  ConvertPlayerUnitEvent takes integer i returns playerunitevent"


ConvertWidgetEvent=ConvertWidgetEvent
ConvertWidgetEvent="ConvertWidgetEvent(",~i,")"
ConvertWidgetEventHint="[NATIVE]  ConvertWidgetEvent takes integer i returns widgetevent"


ConvertDialogEvent=ConvertDialogEvent
ConvertDialogEvent="ConvertDialogEvent(",~i,")"
ConvertDialogEventHint="[NATIVE]  ConvertDialogEvent takes integer i returns dialogevent"


ConvertUnitEvent=ConvertUnitEvent
ConvertUnitEvent="ConvertUnitEvent(",~i,")"
ConvertUnitEventHint="[NATIVE]  ConvertUnitEvent takes integer i returns unitevent"


ConvertLimitOp=ConvertLimitOp
ConvertLimitOp="ConvertLimitOp(",~i,")"
ConvertLimitOpHint="[NATIVE]  ConvertLimitOp takes integer i returns limitop"


ConvertUnitType=ConvertUnitType
ConvertUnitType="ConvertUnitType(",~i,")"
ConvertUnitTypeHint="[NATIVE]  ConvertUnitType takes integer i returns unittype"


ConvertGameSpeed=ConvertGameSpeed
ConvertGameSpeed="ConvertGameSpeed(",~i,")"
ConvertGameSpeedHint="[NATIVE]  ConvertGameSpeed takes integer i returns gamespeed"


ConvertPlacement=ConvertPlacement
ConvertPlacement="ConvertPlacement(",~i,")"
ConvertPlacementHint="[NATIVE]  ConvertPlacement takes integer i returns placement"


ConvertStartLocPrio=ConvertStartLocPrio
ConvertStartLocPrio="ConvertStartLocPrio(",~i,")"
ConvertStartLocPrioHint="[NATIVE]  ConvertStartLocPrio takes integer i returns startlocprio"


ConvertGameDifficulty=ConvertGameDifficulty
ConvertGameDifficulty="ConvertGameDifficulty(",~i,")"
ConvertGameDifficultyHint="[NATIVE]  ConvertGameDifficulty takes integer i returns gamedifficulty"


ConvertGameType=ConvertGameType
ConvertGameType="ConvertGameType(",~i,")"
ConvertGameTypeHint="[NATIVE]  ConvertGameType takes integer i returns gametype"


ConvertMapFlag=ConvertMapFlag
ConvertMapFlag="ConvertMapFlag(",~i,")"
ConvertMapFlagHint="[NATIVE]  ConvertMapFlag takes integer i returns mapflag"


ConvertMapVisibility=ConvertMapVisibility
ConvertMapVisibility="ConvertMapVisibility(",~i,")"
ConvertMapVisibilityHint="[NATIVE]  ConvertMapVisibility takes integer i returns mapvisibility"


ConvertMapSetting=ConvertMapSetting
ConvertMapSetting="ConvertMapSetting(",~i,")"
ConvertMapSettingHint="[NATIVE]  ConvertMapSetting takes integer i returns mapsetting"


ConvertMapDensity=ConvertMapDensity
ConvertMapDensity="ConvertMapDensity(",~i,")"
ConvertMapDensityHint="[NATIVE]  ConvertMapDensity takes integer i returns mapdensity"


ConvertMapControl=ConvertMapControl
ConvertMapControl="ConvertMapControl(",~i,")"
ConvertMapControlHint="[NATIVE]  ConvertMapControl takes integer i returns mapcontrol"


ConvertPlayerColor=ConvertPlayerColor
ConvertPlayerColor="ConvertPlayerColor(",~i,")"
ConvertPlayerColorHint="[NATIVE]  ConvertPlayerColor takes integer i returns playercolor"


ConvertPlayerSlotState=ConvertPlayerSlotState
ConvertPlayerSlotState="ConvertPlayerSlotState(",~i,")"
ConvertPlayerSlotStateHint="[NATIVE]  ConvertPlayerSlotState takes integer i returns playerslotstate"


ConvertVolumeGroup=ConvertVolumeGroup
ConvertVolumeGroup="ConvertVolumeGroup(",~i,")"
ConvertVolumeGroupHint="[NATIVE]  ConvertVolumeGroup takes integer i returns volumegroup"


ConvertCameraField=ConvertCameraField
ConvertCameraField="ConvertCameraField(",~i,")"
ConvertCameraFieldHint="[NATIVE]  ConvertCameraField takes integer i returns camerafield"


ConvertBlendMode=ConvertBlendMode
ConvertBlendMode="ConvertBlendMode(",~i,")"
ConvertBlendModeHint="[NATIVE]  ConvertBlendMode takes integer i returns blendmode"


ConvertRarityControl=ConvertRarityControl
ConvertRarityControl="ConvertRarityControl(",~i,")"
ConvertRarityControlHint="[NATIVE]  ConvertRarityControl takes integer i returns raritycontrol"


ConvertTexMapFlags=ConvertTexMapFlags
ConvertTexMapFlags="ConvertTexMapFlags(",~i,")"
ConvertTexMapFlagsHint="[NATIVE]  ConvertTexMapFlags takes integer i returns texmapflags"


ConvertFogState=ConvertFogState
ConvertFogState="ConvertFogState(",~i,")"
ConvertFogStateHint="[NATIVE]  ConvertFogState takes integer i returns fogstate"


ConvertEffectType=ConvertEffectType
ConvertEffectType="ConvertEffectType(",~i,")"
ConvertEffectTypeHint="[NATIVE]  ConvertEffectType takes integer i returns effecttype"


ConvertVersion=ConvertVersion
ConvertVersion="ConvertVersion(",~i,")"
ConvertVersionHint="[NATIVE]  ConvertVersion takes integer i returns version"


ConvertItemType=ConvertItemType
ConvertItemType="ConvertItemType(",~i,")"
ConvertItemTypeHint="[NATIVE]  ConvertItemType takes integer i returns itemtype"


ConvertAttackType=ConvertAttackType
ConvertAttackType="ConvertAttackType(",~i,")"
ConvertAttackTypeHint="[NATIVE]  ConvertAttackType takes integer i returns attacktype"


ConvertDamageType=ConvertDamageType
ConvertDamageType="ConvertDamageType(",~i,")"
ConvertDamageTypeHint="[NATIVE]  ConvertDamageType takes integer i returns damagetype"


ConvertWeaponType=ConvertWeaponType
ConvertWeaponType="ConvertWeaponType(",~i,")"
ConvertWeaponTypeHint="[NATIVE]  ConvertWeaponType takes integer i returns weapontype"


ConvertSoundType=ConvertSoundType
ConvertSoundType="ConvertSoundType(",~i,")"
ConvertSoundTypeHint="[NATIVE]  ConvertSoundType takes integer i returns soundtype"


ConvertPathingType=ConvertPathingType
ConvertPathingType="ConvertPathingType(",~i,")"
ConvertPathingTypeHint="[NATIVE]  ConvertPathingType takes integer i returns pathingtype"


ConvertProjectileType=ConvertProjectileType
ConvertProjectileType="ConvertProjectileType(",~i,")"
ConvertProjectileTypeHint="[UjAPI]  ConvertProjectileType takes integer i returns projectiletype"


ConvertMappedField=ConvertMappedField
ConvertMappedField="ConvertMappedField(",~i,")"
ConvertMappedFieldHint="[UjAPI]  ConvertMappedField takes integer i returns mappedfield"


ConvertAttachmentType=ConvertAttachmentType
ConvertAttachmentType="ConvertAttachmentType(",~i,")"
ConvertAttachmentTypeHint="[UjAPI]  ConvertAttachmentType takes integer i returns attachmenttype"


ConvertBoneType=ConvertBoneType
ConvertBoneType="ConvertBoneType(",~i,")"
ConvertBoneTypeHint="[UjAPI]  ConvertBoneType takes integer i returns bonetype"


ConvertAnimType=ConvertAnimType
ConvertAnimType="ConvertAnimType(",~i,")"
ConvertAnimTypeHint="[UjAPI]  ConvertAnimType takes integer i returns animtype"


ConvertSubAnimType=ConvertSubAnimType
ConvertSubAnimType="ConvertSubAnimType(",~i,")"
ConvertSubAnimTypeHint="[UjAPI]  ConvertSubAnimType takes integer i returns subanimtype"


ConvertCursorAnimType=ConvertCursorAnimType
ConvertCursorAnimType="ConvertCursorAnimType(",~i,")"
ConvertCursorAnimTypeHint="[UjAPI]  ConvertCursorAnimType takes integer i returns cursoranimtype"


ConvertOriginFrameType=ConvertOriginFrameType
ConvertOriginFrameType="ConvertOriginFrameType(",~i,")"
ConvertOriginFrameTypeHint="[UjAPI]  ConvertOriginFrameType takes integer i returns originframetype"


ConvertFramePointType=ConvertFramePointType
ConvertFramePointType="ConvertFramePointType(",~i,")"
ConvertFramePointTypeHint="[UjAPI]  ConvertFramePointType takes integer i returns framepointtype"


ConvertTextAlignType=ConvertTextAlignType
ConvertTextAlignType="ConvertTextAlignType(",~i,")"
ConvertTextAlignTypeHint="[UjAPI]  ConvertTextAlignType takes integer i returns textaligntype"


ConvertFrameEventType=ConvertFrameEventType
ConvertFrameEventType="ConvertFrameEventType(",~i,")"
ConvertFrameEventTypeHint="[UjAPI]  ConvertFrameEventType takes integer i returns frameeventtype"


ConvertOsKeyType=ConvertOsKeyType
ConvertOsKeyType="ConvertOsKeyType(",~i,")"
ConvertOsKeyTypeHint="[UjAPI]  ConvertOsKeyType takes integer i returns oskeytype"


ConvertMouseButtonType=ConvertMouseButtonType
ConvertMouseButtonType="ConvertMouseButtonType(",~i,")"
ConvertMouseButtonTypeHint="[UjAPI]  ConvertMouseButtonType takes integer i returns mousebuttontype"


ConvertAbilityIntegerField=ConvertAbilityIntegerField
ConvertAbilityIntegerField="ConvertAbilityIntegerField(",~i,")"
ConvertAbilityIntegerFieldHint="[UjAPI]  ConvertAbilityIntegerField takes integer i returns abilityintegerfield"


ConvertAbilityRealField=ConvertAbilityRealField
ConvertAbilityRealField="ConvertAbilityRealField(",~i,")"
ConvertAbilityRealFieldHint="[UjAPI]  ConvertAbilityRealField takes integer i returns abilityrealfield"


ConvertAbilityBooleanField=ConvertAbilityBooleanField
ConvertAbilityBooleanField="ConvertAbilityBooleanField(",~i,")"
ConvertAbilityBooleanFieldHint="[UjAPI]  ConvertAbilityBooleanField takes integer i returns abilitybooleanfield"


ConvertAbilityStringField=ConvertAbilityStringField
ConvertAbilityStringField="ConvertAbilityStringField(",~i,")"
ConvertAbilityStringFieldHint="[UjAPI]  ConvertAbilityStringField takes integer i returns abilitystringfield"


ConvertAbilityIntegerLevelField=ConvertAbilityIntegerLevelField
ConvertAbilityIntegerLevelField="ConvertAbilityIntegerLevelField(",~i,")"
ConvertAbilityIntegerLevelFieldHint="[UjAPI]  ConvertAbilityIntegerLevelField takes integer i returns abilityintegerlevelfield"


ConvertAbilityRealLevelField=ConvertAbilityRealLevelField
ConvertAbilityRealLevelField="ConvertAbilityRealLevelField(",~i,")"
ConvertAbilityRealLevelFieldHint="[UjAPI]  ConvertAbilityRealLevelField takes integer i returns abilityreallevelfield"


ConvertAbilityBooleanLevelField=ConvertAbilityBooleanLevelField
ConvertAbilityBooleanLevelField="ConvertAbilityBooleanLevelField(",~i,")"
ConvertAbilityBooleanLevelFieldHint="[UjAPI]  ConvertAbilityBooleanLevelField takes integer i returns abilitybooleanlevelfield"


ConvertAbilityStringLevelField=ConvertAbilityStringLevelField
ConvertAbilityStringLevelField="ConvertAbilityStringLevelField(",~i,")"
ConvertAbilityStringLevelFieldHint="[UjAPI]  ConvertAbilityStringLevelField takes integer i returns abilitystringlevelfield"


ConvertAbilityIntegerLevelArrayField=ConvertAbilityIntegerLevelArrayField
ConvertAbilityIntegerLevelArrayField="ConvertAbilityIntegerLevelArrayField(",~i,")"
ConvertAbilityIntegerLevelArrayFieldHint="[UjAPI]  ConvertAbilityIntegerLevelArrayField takes integer i returns abilityintegerlevelarrayfield"


ConvertAbilityRealLevelArrayField=ConvertAbilityRealLevelArrayField
ConvertAbilityRealLevelArrayField="ConvertAbilityRealLevelArrayField(",~i,")"
ConvertAbilityRealLevelArrayFieldHint="[UjAPI]  ConvertAbilityRealLevelArrayField takes integer i returns abilityreallevelarrayfield"


ConvertAbilityBooleanLevelArrayField=ConvertAbilityBooleanLevelArrayField
ConvertAbilityBooleanLevelArrayField="ConvertAbilityBooleanLevelArrayField(",~i,")"
ConvertAbilityBooleanLevelArrayFieldHint="[UjAPI]  ConvertAbilityBooleanLevelArrayField takes integer i returns abilitybooleanlevelarrayfield"


ConvertAbilityStringLevelArrayField=ConvertAbilityStringLevelArrayField
ConvertAbilityStringLevelArrayField="ConvertAbilityStringLevelArrayField(",~i,")"
ConvertAbilityStringLevelArrayFieldHint="[UjAPI]  ConvertAbilityStringLevelArrayField takes integer i returns abilitystringlevelarrayfield"


ConvertDestructableStringField=ConvertDestructableStringField
ConvertDestructableStringField="ConvertDestructableStringField(",~i,")"
ConvertDestructableStringFieldHint="[UjAPI]  ConvertDestructableStringField takes integer i returns destructablestringfield"


ConvertItemIntegerField=ConvertItemIntegerField
ConvertItemIntegerField="ConvertItemIntegerField(",~i,")"
ConvertItemIntegerFieldHint="[UjAPI]  ConvertItemIntegerField takes integer i returns itemintegerfield"


ConvertItemRealField=ConvertItemRealField
ConvertItemRealField="ConvertItemRealField(",~i,")"
ConvertItemRealFieldHint="[UjAPI]  ConvertItemRealField takes integer i returns itemrealfield"


ConvertItemBooleanField=ConvertItemBooleanField
ConvertItemBooleanField="ConvertItemBooleanField(",~i,")"
ConvertItemBooleanFieldHint="[UjAPI]  ConvertItemBooleanField takes integer i returns itembooleanfield"


ConvertItemStringField=ConvertItemStringField
ConvertItemStringField="ConvertItemStringField(",~i,")"
ConvertItemStringFieldHint="[UjAPI]  ConvertItemStringField takes integer i returns itemstringfield"


ConvertUnitIntegerField=ConvertUnitIntegerField
ConvertUnitIntegerField="ConvertUnitIntegerField(",~i,")"
ConvertUnitIntegerFieldHint="[UjAPI]  ConvertUnitIntegerField takes integer i returns unitintegerfield"


ConvertUnitRealField=ConvertUnitRealField
ConvertUnitRealField="ConvertUnitRealField(",~i,")"
ConvertUnitRealFieldHint="[UjAPI]  ConvertUnitRealField takes integer i returns unitrealfield"


ConvertUnitBooleanField=ConvertUnitBooleanField
ConvertUnitBooleanField="ConvertUnitBooleanField(",~i,")"
ConvertUnitBooleanFieldHint="[UjAPI]  ConvertUnitBooleanField takes integer i returns unitbooleanfield"


ConvertUnitStringField=ConvertUnitStringField
ConvertUnitStringField="ConvertUnitStringField(",~i,")"
ConvertUnitStringFieldHint="[UjAPI]  ConvertUnitStringField takes integer i returns unitstringfield"


ConvertUnitWeaponIntegerField=ConvertUnitWeaponIntegerField
ConvertUnitWeaponIntegerField="ConvertUnitWeaponIntegerField(",~i,")"
ConvertUnitWeaponIntegerFieldHint="[UjAPI]  ConvertUnitWeaponIntegerField takes integer i returns unitweaponintegerfield"


ConvertUnitWeaponRealField=ConvertUnitWeaponRealField
ConvertUnitWeaponRealField="ConvertUnitWeaponRealField(",~i,")"
ConvertUnitWeaponRealFieldHint="[UjAPI]  ConvertUnitWeaponRealField takes integer i returns unitweaponrealfield"


ConvertUnitWeaponBooleanField=ConvertUnitWeaponBooleanField
ConvertUnitWeaponBooleanField="ConvertUnitWeaponBooleanField(",~i,")"
ConvertUnitWeaponBooleanFieldHint="[UjAPI]  ConvertUnitWeaponBooleanField takes integer i returns unitweaponbooleanfield"


ConvertUnitWeaponStringField=ConvertUnitWeaponStringField
ConvertUnitWeaponStringField="ConvertUnitWeaponStringField(",~i,")"
ConvertUnitWeaponStringFieldHint="[UjAPI]  ConvertUnitWeaponStringField takes integer i returns unitweaponstringfield"


ConvertMoveType=ConvertMoveType
ConvertMoveType="ConvertMoveType(",~i,")"
ConvertMoveTypeHint="[UjAPI]  ConvertMoveType takes integer i returns movetype"


ConvertPathingAIType=ConvertPathingAIType
ConvertPathingAIType="ConvertPathingAIType(",~i,")"
ConvertPathingAITypeHint="[UjAPI]  ConvertPathingAIType takes integer i returns pathingaitype"


ConvertCollisionType=ConvertCollisionType
ConvertCollisionType="ConvertCollisionType(",~i,")"
ConvertCollisionTypeHint="[UjAPI]  ConvertCollisionType takes integer i returns collisiontype"


ConvertTargetFlag=ConvertTargetFlag
ConvertTargetFlag="ConvertTargetFlag(",~i,")"
ConvertTargetFlagHint="[UjAPI]  ConvertTargetFlag takes integer i returns targetflag"


ConvertArmorType=ConvertArmorType
ConvertArmorType="ConvertArmorType(",~i,")"
ConvertArmorTypeHint="[UjAPI]  ConvertArmorType takes integer i returns armortype"


ConvertHeroAttribute=ConvertHeroAttribute
ConvertHeroAttribute="ConvertHeroAttribute(",~i,")"
ConvertHeroAttributeHint="[UjAPI]  ConvertHeroAttribute takes integer i returns heroattribute"


ConvertDefenseType=ConvertDefenseType
ConvertDefenseType="ConvertDefenseType(",~i,")"
ConvertDefenseTypeHint="[UjAPI]  ConvertDefenseType takes integer i returns defensetype"


ConvertRegenType=ConvertRegenType
ConvertRegenType="ConvertRegenType(",~i,")"
ConvertRegenTypeHint="[UjAPI]  ConvertRegenType takes integer i returns regentype"


ConvertUnitCategory=ConvertUnitCategory
ConvertUnitCategory="ConvertUnitCategory(",~i,")"
ConvertUnitCategoryHint="[UjAPI]  ConvertUnitCategory takes integer i returns unitcategory"


ConvertPathingFlag=ConvertPathingFlag
ConvertPathingFlag="ConvertPathingFlag(",~i,")"
ConvertPathingFlagHint="[UjAPI]  ConvertPathingFlag takes integer i returns pathingflag"


ConvertTimeType=ConvertTimeType
ConvertTimeType="ConvertTimeType(",~i,")"
ConvertTimeTypeHint="[UjAPI]  ConvertTimeType takes integer i returns timetype"


ConvertVariableType=ConvertVariableType
ConvertVariableType="ConvertVariableType(",~i,")"
ConvertVariableTypeHint="[UjAPI]  ConvertVariableType takes integer i returns variabletype"


ConvertRenderStage=ConvertRenderStage
ConvertRenderStage="ConvertRenderStage(",~i,")"
ConvertRenderStageHint="[UjAPI]  ConvertRenderStage takes integer i returns renderstage"


ConvertLayoutStyleFlag=ConvertLayoutStyleFlag
ConvertLayoutStyleFlag="ConvertLayoutStyleFlag(",~i,")"
ConvertLayoutStyleFlagHint="[UjAPI]  ConvertLayoutStyleFlag takes integer i returns layoutstyleflag"


ConvertGridStyleFlag=ConvertGridStyleFlag
ConvertGridStyleFlag="ConvertGridStyleFlag(",~i,")"
ConvertGridStyleFlagHint="[UjAPI]  ConvertGridStyleFlag takes integer i returns gridstyleflag"


ConvertLayerStyleFlag=ConvertLayerStyleFlag
ConvertLayerStyleFlag="ConvertLayerStyleFlag(",~i,")"
ConvertLayerStyleFlagHint="[UjAPI]  ConvertLayerStyleFlag takes integer i returns layerstyleflag"


ConvertControlStyleFlag=ConvertControlStyleFlag
ConvertControlStyleFlag="ConvertControlStyleFlag(",~i,")"
ConvertControlStyleFlagHint="[UjAPI]  ConvertControlStyleFlag takes integer i returns controlstyleflag"


ConvertFrameState=ConvertFrameState
ConvertFrameState="ConvertFrameState(",~i,")"
ConvertFrameStateHint="[UjAPI]  ConvertFrameState takes integer i returns framestate"


ConvertAbilityType=ConvertAbilityType
ConvertAbilityType="ConvertAbilityType(",~i,")"
ConvertAbilityTypeHint="[UjAPI]  ConvertAbilityType takes integer i returns abilitytype"


ConvertConnectionType=ConvertConnectionType
ConvertConnectionType="ConvertConnectionType(",~i,")"
ConvertConnectionTypeHint="[UjAPI]  ConvertConnectionType takes integer i returns connectiontype"


ConvertTradeState=ConvertTradeState
ConvertTradeState="ConvertTradeState(",~i,")"
ConvertTradeStateHint="[UjAPI]  ConvertTradeState takes integer i returns tradestate"


OrderId=OrderId
OrderId="OrderId(",~orderIdString,")"
OrderIdHint="[NATIVE]  OrderId takes string orderIdString returns integer"


OrderId2String=OrderId2String
OrderId2String="OrderId2String(",~orderId,")"
OrderId2StringHint="[NATIVE]  OrderId2String takes integer orderId returns string"


UnitId=UnitId
UnitId="UnitId(",~unitIdString,")"
UnitIdHint="[NATIVE]  UnitId takes string unitIdString returns integer"


UnitId2String=UnitId2String
UnitId2String="UnitId2String(",~unitId,")"
UnitId2StringHint="[NATIVE]  UnitId2String takes integer unitId returns string"


AbilityId=AbilityId
AbilityId="AbilityId(",~abilityIdString,")"
AbilityIdHint="[NATIVE]  AbilityId takes string abilityIdString returns integer"


AbilityId2String=AbilityId2String
AbilityId2String="AbilityId2String(",~abilCode,")"
AbilityId2StringHint="[NATIVE]  AbilityId2String takes integer abilCode returns string"


GetObjectName=GetObjectName
GetObjectName="GetObjectName(",~objectId,")"
GetObjectNameHint="[NATIVE]  GetObjectName takes integer objectId returns string"


GetBJMaxPlayers=GetBJMaxPlayers
GetBJMaxPlayers="GetBJMaxPlayers(",")"
GetBJMaxPlayersHint="[UjAPI]  GetBJMaxPlayers takes nothing returns integer"


GetBJPlayerNeutralVictim=GetBJPlayerNeutralVictim
GetBJPlayerNeutralVictim="GetBJPlayerNeutralVictim(",")"
GetBJPlayerNeutralVictimHint="[UjAPI]  GetBJPlayerNeutralVictim takes nothing returns integer"


GetBJPlayerNeutralExtra=GetBJPlayerNeutralExtra
GetBJPlayerNeutralExtra="GetBJPlayerNeutralExtra(",")"
GetBJPlayerNeutralExtraHint="[UjAPI]  GetBJPlayerNeutralExtra takes nothing returns integer"


GetBJMaxPlayerSlots=GetBJMaxPlayerSlots
GetBJMaxPlayerSlots="GetBJMaxPlayerSlots(",")"
GetBJMaxPlayerSlotsHint="[UjAPI]  GetBJMaxPlayerSlots takes nothing returns integer"


GetPlayerNeutralPassive=GetPlayerNeutralPassive
GetPlayerNeutralPassive="GetPlayerNeutralPassive(",")"
GetPlayerNeutralPassiveHint="[UjAPI]  GetPlayerNeutralPassive takes nothing returns integer"


GetPlayerNeutralAggressive=GetPlayerNeutralAggressive
GetPlayerNeutralAggressive="GetPlayerNeutralAggressive(",")"
GetPlayerNeutralAggressiveHint="[UjAPI]  GetPlayerNeutralAggressive takes nothing returns integer"


GetJassArrayLimit=GetJassArrayLimit
GetJassArrayLimit="GetJassArrayLimit(",")"
GetJassArrayLimitHint="[UjAPI]  GetJassArrayLimit takes nothing returns integer"


GetTextTagLimit=GetTextTagLimit
GetTextTagLimit="GetTextTagLimit(",")"
GetTextTagLimitHint="[UjAPI]  GetTextTagLimit takes nothing returns integer"


Sin=Sin
Sin="Sin(",~radians,")"
SinHint="[NATIVE]  Sin takes real radians returns real"


Cos=Cos
Cos="Cos(",~radians,")"
CosHint="[NATIVE]  Cos takes real radians returns real"


Tan=Tan
Tan="Tan(",~radians,")"
TanHint="[NATIVE]  Tan takes real radians returns real"


Asin=Asin
Asin="Asin(",~y,")"
AsinHint="[NATIVE]  Asin takes real y returns real"


Acos=Acos
Acos="Acos(",~x,")"
AcosHint="[NATIVE]  Acos takes real x returns real"


Atan=Atan
Atan="Atan(",~x,")"
AtanHint="[NATIVE]  Atan takes real x returns real"


Atan2=Atan2
Atan2="Atan2(",~y,", ",~x,")"
Atan2Hint="[NATIVE]  Atan2 takes real y, real x returns real"


GetHandleId=GetHandleId
GetHandleId="GetHandleId(",~h,")"
GetHandleIdHint="[NATIVE]  GetHandleId takes handle h returns integer"


SubString=SubString
SubString="SubString(",~source,", ",~start,", ",~end,")"
SubStringHint="[NATIVE]  SubString takes string source, integer start, integer end returns string"


StringHash=StringHash
StringHash="StringHash(",~s,")"
StringHashHint="[NATIVE]  StringHash takes string s returns integer"


GetLocalizedString=GetLocalizedString
GetLocalizedString="GetLocalizedString(",~source,")"
GetLocalizedStringHint="[NATIVE]  GetLocalizedString takes string source returns string"


GetLocalizedHotkey=GetLocalizedHotkey
GetLocalizedHotkey="GetLocalizedHotkey(",~source,")"
GetLocalizedHotkeyHint="[NATIVE]  GetLocalizedHotkey takes string source returns integer"


GetStartLocPrioSlot=GetStartLocPrioSlot
GetStartLocPrioSlot="GetStartLocPrioSlot(",~whichStartLoc,", ",~prioSlotIndex,")"
GetStartLocPrioSlotHint="[NATIVE]  GetStartLocPrioSlot takes integer whichStartLoc, integer prioSlotIndex returns integer"


GetStartLocPrio=GetStartLocPrio
GetStartLocPrio="GetStartLocPrio(",~whichStartLoc,", ",~prioSlotIndex,")"
GetStartLocPrioHint="[NATIVE]  GetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex returns startlocprio"


IsGameTypeSupported=IsGameTypeSupported
IsGameTypeSupported="IsGameTypeSupported(",~whichGameType,")"
IsGameTypeSupportedHint="[NATIVE]  IsGameTypeSupported takes gametype whichGameType returns boolean"


GetGameTypeSelected=GetGameTypeSelected
GetGameTypeSelected="GetGameTypeSelected(",")"
GetGameTypeSelectedHint="[NATIVE]  GetGameTypeSelected takes nothing returns gametype"


GetGamePlacement=GetGamePlacement
GetGamePlacement="GetGamePlacement(",")"
GetGamePlacementHint="[NATIVE]  GetGamePlacement takes nothing returns placement"


GetResourceDensity=GetResourceDensity
GetResourceDensity="GetResourceDensity(",")"
GetResourceDensityHint="[NATIVE]  GetResourceDensity takes nothing returns mapdensity"


GetCreatureDensity=GetCreatureDensity
GetCreatureDensity="GetCreatureDensity(",")"
GetCreatureDensityHint="[NATIVE]  GetCreatureDensity takes nothing returns mapdensity"


GetStartLocationX=GetStartLocationX
GetStartLocationX="GetStartLocationX(",~whichStartLocation,")"
GetStartLocationXHint="[NATIVE]  GetStartLocationX takes integer whichStartLocation returns real"


GetStartLocationY=GetStartLocationY
GetStartLocationY="GetStartLocationY(",~whichStartLocation,")"
GetStartLocationYHint="[NATIVE]  GetStartLocationY takes integer whichStartLocation returns real"


GetStartLocationLoc=GetStartLocationLoc
GetStartLocationLoc="GetStartLocationLoc(",~whichStartLocation,")"
GetStartLocationLocHint="[NATIVE]  GetStartLocationLoc takes integer whichStartLocation returns location"


GetPlayerStartLocation=GetPlayerStartLocation
GetPlayerStartLocation="GetPlayerStartLocation(",~whichPlayer,")"
GetPlayerStartLocationHint="[NATIVE]  GetPlayerStartLocation takes player whichPlayer returns integer"


GetPlayerSelectable=GetPlayerSelectable
GetPlayerSelectable="GetPlayerSelectable(",~whichPlayer,")"
GetPlayerSelectableHint="[NATIVE]  GetPlayerSelectable takes player whichPlayer returns boolean"


GetPlayerTaxRate=GetPlayerTaxRate
GetPlayerTaxRate="GetPlayerTaxRate(",~sourcePlayer,", ",~otherPlayer,", ",~whichResource,")"
GetPlayerTaxRateHint="[NATIVE]  GetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource returns integer"


IsPlayerRacePrefSet=IsPlayerRacePrefSet
IsPlayerRacePrefSet="IsPlayerRacePrefSet(",~whichPlayer,", ",~pref,")"
IsPlayerRacePrefSetHint="[NATIVE]  IsPlayerRacePrefSet takes player whichPlayer, racepreference pref returns boolean"


GroupImmediateOrderById=GroupImmediateOrderById
GroupImmediateOrderById="GroupImmediateOrderById(",~whichGroup,", ",~order,")"
GroupImmediateOrderByIdHint="[NATIVE]  GroupImmediateOrderById takes group whichGroup, integer order returns boolean"


GroupPointOrder=GroupPointOrder
GroupPointOrder="GroupPointOrder(",~whichGroup,", ",~order,", ",~x,", ",~y,")"
GroupPointOrderHint="[NATIVE]  GroupPointOrder takes group whichGroup, string order, real x, real y returns boolean"


GroupPointOrderById=GroupPointOrderById
GroupPointOrderById="GroupPointOrderById(",~whichGroup,", ",~order,", ",~x,", ",~y,")"
GroupPointOrderByIdHint="[NATIVE]  GroupPointOrderById takes group whichGroup, integer order, real x, real y returns boolean"


GroupPointOrderByIdLoc=GroupPointOrderByIdLoc
GroupPointOrderByIdLoc="GroupPointOrderByIdLoc(",~whichGroup,", ",~order,", ",~whichLocation,")"
GroupPointOrderByIdLocHint="[NATIVE]  GroupPointOrderByIdLoc takes group whichGroup, integer order, location whichLocation returns boolean"


GroupTargetOrderById=GroupTargetOrderById
GroupTargetOrderById="GroupTargetOrderById(",~whichGroup,", ",~order,", ",~targetWidget,")"
GroupTargetOrderByIdHint="[NATIVE]  GroupTargetOrderById takes group whichGroup, integer order, widget targetWidget returns boolean"


MoveRectTo=MoveRectTo
MoveRectTo="MoveRectTo(",~whichRect,", ",~newCenterX,", ",~newCenterY,")"
MoveRectToHint="[NATIVE]  MoveRectTo takes rect whichRect, real newCenterX, real newCenterY returns nothing"


MoveRectToLoc=MoveRectToLoc
MoveRectToLoc="MoveRectToLoc(",~whichRect,", ",~newCenterLoc,")"
MoveRectToLocHint="[NATIVE]  MoveRectToLoc takes rect whichRect, location newCenterLoc returns nothing"


GetLocationZ=GetLocationZ
GetLocationZ="GetLocationZ(",~whichLocation,")"
GetLocationZHint="[NATIVE]  GetLocationZ takes location whichLocation returns real"


GetWorldBounds=GetWorldBounds
GetWorldBounds="GetWorldBounds(",")"
GetWorldBoundsHint="[NATIVE]  GetWorldBounds takes nothing returns rect"


IsTriggerWaitOnSleeps=IsTriggerWaitOnSleeps
IsTriggerWaitOnSleeps="IsTriggerWaitOnSleeps(",~whichTrigger,")"
IsTriggerWaitOnSleepsHint="[NATIVE]  IsTriggerWaitOnSleeps takes trigger whichTrigger returns boolean"


And=And
And="And(",~operandA,", ",~operandB,")"
AndHint="[NATIVE]  And takes boolexpr operandA, boolexpr operandB returns boolexpr"


Or=Or
Or="Or(",~operandA,", ",~operandB,")"
OrHint="[NATIVE]  Or takes boolexpr operandA, boolexpr operandB returns boolexpr"


Not=Not
Not="Not(",~operand,")"
NotHint="[NATIVE]  Not takes boolexpr operand returns boolexpr"


Condition=Condition
Condition="Condition(",~func,")"
ConditionHint="[NATIVE]  Condition takes code func returns conditionfunc"


Filter=Filter
Filter="Filter(",~func,")"
FilterHint="[NATIVE]  Filter takes code func returns filterfunc"


TriggerRegisterTimerEvent=TriggerRegisterTimerEvent
TriggerRegisterTimerEvent="TriggerRegisterTimerEvent(",~whichTrigger,", ",~timeout,", ",~periodic,")"
TriggerRegisterTimerEventHint="[NATIVE]  TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event"


TriggerRegisterGameStateEvent=TriggerRegisterGameStateEvent
TriggerRegisterGameStateEvent="TriggerRegisterGameStateEvent(",~whichTrigger,", ",~whichState,", ",~opcode,", ",~limitval,")"
TriggerRegisterGameStateEventHint="[NATIVE]  TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event"


TriggerRegisterTrackableHitEvent=TriggerRegisterTrackableHitEvent
TriggerRegisterTrackableHitEvent="TriggerRegisterTrackableHitEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableHitEventHint="[NATIVE]  TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable whichTrackable returns event"


TriggerRegisterTrackableTrackEvent=TriggerRegisterTrackableTrackEvent
TriggerRegisterTrackableTrackEvent="TriggerRegisterTrackableTrackEvent(",~whichTrigger,", ",~whichTrackable,")"
TriggerRegisterTrackableTrackEventHint="[NATIVE]  TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable whichTrackable returns event"


GetClickedButton=GetClickedButton
GetClickedButton="GetClickedButton(",")"
GetClickedButtonHint="[NATIVE]  GetClickedButton takes nothing returns button"


GetClickedDialog=GetClickedDialog
GetClickedDialog="GetClickedDialog(",")"
GetClickedDialogHint="[NATIVE]  GetClickedDialog takes nothing returns dialog"


GetTournamentFinishNowPlayer=GetTournamentFinishNowPlayer
GetTournamentFinishNowPlayer="GetTournamentFinishNowPlayer(",")"
GetTournamentFinishNowPlayerHint="[NATIVE]  GetTournamentFinishNowPlayer takes nothing returns player"


GetLearnedSkill=GetLearnedSkill
GetLearnedSkill="GetLearnedSkill(",")"
GetLearnedSkillHint="[NATIVE]  GetLearnedSkill takes nothing returns integer"


GetKillingUnit=GetKillingUnit
GetKillingUnit="GetKillingUnit(",")"
GetKillingUnitHint="[NATIVE]  GetKillingUnit takes nothing returns unit"


GetTransportUnit=GetTransportUnit
GetTransportUnit="GetTransportUnit(",")"
GetTransportUnitHint="[NATIVE]  GetTransportUnit takes nothing returns unit"


GetLoadedUnit=GetLoadedUnit
GetLoadedUnit="GetLoadedUnit(",")"
GetLoadedUnitHint="[NATIVE]  GetLoadedUnit takes nothing returns unit"


GetIssuedOrderId=GetIssuedOrderId
GetIssuedOrderId="GetIssuedOrderId(",")"
GetIssuedOrderIdHint="[NATIVE]  GetIssuedOrderId takes nothing returns integer"


GetOrderPointX=GetOrderPointX
GetOrderPointX="GetOrderPointX(",")"
GetOrderPointXHint="[NATIVE]  GetOrderPointX takes nothing returns real"


GetOrderPointY=GetOrderPointY
GetOrderPointY="GetOrderPointY(",")"
GetOrderPointYHint="[NATIVE]  GetOrderPointY takes nothing returns real"


GetOrderTarget=GetOrderTarget
GetOrderTarget="GetOrderTarget(",")"
GetOrderTargetHint="[NATIVE]  GetOrderTarget takes nothing returns widget"


GetSpellAbility=GetSpellAbility
GetSpellAbility="GetSpellAbility(",")"
GetSpellAbilityHint="[NATIVE]  GetSpellAbility takes nothing returns ability"


GetSpellTargetX=GetSpellTargetX
GetSpellTargetX="GetSpellTargetX(",")"
GetSpellTargetXHint="[NATIVE]  GetSpellTargetX takes nothing returns real"


GetSpellTargetY=GetSpellTargetY
GetSpellTargetY="GetSpellTargetY(",")"
GetSpellTargetYHint="[NATIVE]  GetSpellTargetY takes nothing returns real"


TriggerRegisterPlayerAllianceChange=TriggerRegisterPlayerAllianceChange
TriggerRegisterPlayerAllianceChange="TriggerRegisterPlayerAllianceChange(",~whichTrigger,", ",~whichPlayer,", ",~whichAlliance,")"
TriggerRegisterPlayerAllianceChangeHint="[NATIVE]  TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event"


TriggerRegisterFilterUnitEvent=TriggerRegisterFilterUnitEvent
TriggerRegisterFilterUnitEvent="TriggerRegisterFilterUnitEvent(",~whichTrigger,", ",~whichUnit,", ",~whichEvent,", ",~filter,")"
TriggerRegisterFilterUnitEventHint="[NATIVE]  TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event"


TriggerRegisterUnitInRange=TriggerRegisterUnitInRange
TriggerRegisterUnitInRange="TriggerRegisterUnitInRange(",~whichTrigger,", ",~whichUnit,", ",~range,", ",~filter,")"
TriggerRegisterUnitInRangeHint="[NATIVE]  TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event"


GetWidgetLife=GetWidgetLife
GetWidgetLife="GetWidgetLife(",~whichWidget,")"
GetWidgetLifeHint="[NATIVE]  GetWidgetLife takes widget whichWidget returns real"


GetWidgetX=GetWidgetX
GetWidgetX="GetWidgetX(",~whichWidget,")"
GetWidgetXHint="[NATIVE]  GetWidgetX takes widget whichWidget returns real"


GetWidgetY=GetWidgetY
GetWidgetY="GetWidgetY(",~whichWidget,")"
GetWidgetYHint="[NATIVE]  GetWidgetY takes widget whichWidget returns real"


GetTriggerWidget=GetTriggerWidget
GetTriggerWidget="GetTriggerWidget(",")"
GetTriggerWidgetHint="[NATIVE]  GetTriggerWidget takes nothing returns widget"


CreateDestructable=CreateDestructable
CreateDestructable="CreateDestructable(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDestructableHint="[NATIVE]  CreateDestructable takes integer objectid, real x, real y, real facing, real scale, integer variation returns destructable"


CreateDeadDestructable=CreateDeadDestructable
CreateDeadDestructable="CreateDeadDestructable(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDeadDestructableHint="[NATIVE]  CreateDeadDestructable takes integer objectid, real x, real y, real facing, real scale, integer variation returns destructable"


IsDestructableInvulnerable=IsDestructableInvulnerable
IsDestructableInvulnerable="IsDestructableInvulnerable(",~whichDestructable,")"
IsDestructableInvulnerableHint="[NATIVE]  IsDestructableInvulnerable takes destructable whichDestructable returns boolean"


GetDestructableX=GetDestructableX
GetDestructableX="GetDestructableX(",~whichDestructable,")"
GetDestructableXHint="[NATIVE]  GetDestructableX takes destructable whichDestructable returns real"


GetDestructableY=GetDestructableY
GetDestructableY="GetDestructableY(",~whichDestructable,")"
GetDestructableYHint="[NATIVE]  GetDestructableY takes destructable whichDestructable returns real"


GetTriggerDestructable=GetTriggerDestructable
GetTriggerDestructable="GetTriggerDestructable(",")"
GetTriggerDestructableHint="[NATIVE]  GetTriggerDestructable takes nothing returns destructable"


CreateItem=CreateItem
CreateItem="CreateItem(",~itemid,", ",~x,", ",~y,")"
CreateItemHint="[NATIVE]  CreateItem takes integer itemid, real x, real y returns item"


GetItemX=GetItemX
GetItemX="GetItemX(",~whichItem,")"
GetItemXHint="[NATIVE]  GetItemX takes item whichItem returns real"


GetItemY=GetItemY
GetItemY="GetItemY(",~whichItem,")"
GetItemYHint="[NATIVE]  GetItemY takes item whichItem returns real"


IsItemVisible=IsItemVisible
IsItemVisible="IsItemVisible(",~whichItem,")"
IsItemVisibleHint="[NATIVE]  IsItemVisible takes item whichItem returns boolean"


IsItemPowerup=IsItemPowerup
IsItemPowerup="IsItemPowerup(",~whichItem,")"
IsItemPowerupHint="[NATIVE]  IsItemPowerup takes item whichItem returns boolean"


IsItemSellable=IsItemSellable
IsItemSellable="IsItemSellable(",~whichItem,")"
IsItemSellableHint="[NATIVE]  IsItemSellable takes item whichItem returns boolean"


IsItemPawnable=IsItemPawnable
IsItemPawnable="IsItemPawnable(",~whichItem,")"
IsItemPawnableHint="[NATIVE]  IsItemPawnable takes item whichItem returns boolean"


IsItemIdPowerup=IsItemIdPowerup
IsItemIdPowerup="IsItemIdPowerup(",~itemId,")"
IsItemIdPowerupHint="[NATIVE]  IsItemIdPowerup takes integer itemId returns boolean"


IsItemIdSellable=IsItemIdSellable
IsItemIdSellable="IsItemIdSellable(",~itemId,")"
IsItemIdSellableHint="[NATIVE]  IsItemIdSellable takes integer itemId returns boolean"


IsItemIdPawnable=IsItemIdPawnable
IsItemIdPawnable="IsItemIdPawnable(",~itemId,")"
IsItemIdPawnableHint="[NATIVE]  IsItemIdPawnable takes integer itemId returns boolean"


CreateUnitByName=CreateUnitByName
CreateUnitByName="CreateUnitByName(",~whichPlayer,", ",~unitname,", ",~x,", ",~y,", ",~facing,")"
CreateUnitByNameHint="[NATIVE]  CreateUnitByName takes player whichPlayer, string unitname, real x, real y, real facing returns unit"


CreateUnitAtLocByName=CreateUnitAtLocByName
CreateUnitAtLocByName="CreateUnitAtLocByName(",~whichPlayer,", ",~unitname,", ",~whichLocation,", ",~facing,")"
CreateUnitAtLocByNameHint="[NATIVE]  CreateUnitAtLocByName takes player whichPlayer, string unitname, location whichLocation, real facing returns unit"


CreateCorpse=CreateCorpse
CreateCorpse="CreateCorpse(",~whichPlayer,", ",~unitid,", ",~x,", ",~y,", ",~facing,")"
CreateCorpseHint="[NATIVE]  CreateCorpse takes player whichPlayer, integer unitid, real x, real y, real facing returns unit"


GetUnitPropWindow=GetUnitPropWindow
GetUnitPropWindow="GetUnitPropWindow(",~whichUnit,")"
GetUnitPropWindowHint="[NATIVE]  GetUnitPropWindow takes unit whichUnit returns real"


GetUnitDefaultPropWindow=GetUnitDefaultPropWindow
GetUnitDefaultPropWindow="GetUnitDefaultPropWindow(",~whichUnit,")"
GetUnitDefaultPropWindowHint="[NATIVE]  GetUnitDefaultPropWindow takes unit whichUnit returns real"


GetHeroStr=GetHeroStr
GetHeroStr="GetHeroStr(",~whichHero,", ",~includeBonuses,")"
GetHeroStrHint="[NATIVE]  GetHeroStr takes unit whichHero, boolean includeBonuses returns integer"


GetHeroAgi=GetHeroAgi
GetHeroAgi="GetHeroAgi(",~whichHero,", ",~includeBonuses,")"
GetHeroAgiHint="[NATIVE]  GetHeroAgi takes unit whichHero, boolean includeBonuses returns integer"


GetHeroInt=GetHeroInt
GetHeroInt="GetHeroInt(",~whichHero,", ",~includeBonuses,")"
GetHeroIntHint="[NATIVE]  GetHeroInt takes unit whichHero, boolean includeBonuses returns integer"


UnitStripHeroLevel=UnitStripHeroLevel
UnitStripHeroLevel="UnitStripHeroLevel(",~whichHero,", ",~howManyLevels,")"
UnitStripHeroLevelHint="[NATIVE]  UnitStripHeroLevel takes unit whichHero, integer howManyLevels returns boolean"


UnitModifySkillPoints=UnitModifySkillPoints
UnitModifySkillPoints="UnitModifySkillPoints(",~whichHero,", ",~skillPointDelta,")"
UnitModifySkillPointsHint="[NATIVE]  UnitModifySkillPoints takes unit whichHero, integer skillPointDelta returns boolean"


DecUnitAbilityLevel=DecUnitAbilityLevel
DecUnitAbilityLevel="DecUnitAbilityLevel(",~whichUnit,", ",~abilcode,")"
DecUnitAbilityLevelHint="[NATIVE]  DecUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer"


IncUnitAbilityLevel=IncUnitAbilityLevel
IncUnitAbilityLevel="IncUnitAbilityLevel(",~whichUnit,", ",~abilcode,")"
IncUnitAbilityLevelHint="[NATIVE]  IncUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer"


SetUnitAbilityLevel=SetUnitAbilityLevel
SetUnitAbilityLevel="SetUnitAbilityLevel(",~whichUnit,", ",~abilcode,", ",~level,")"
SetUnitAbilityLevelHint="[NATIVE]  SetUnitAbilityLevel takes unit whichUnit, integer abilcode, integer level returns integer"


ReviveHero=ReviveHero
ReviveHero="ReviveHero(",~whichHero,", ",~x,", ",~y,", ",~doEyecandy,")"
ReviveHeroHint="[NATIVE]  ReviveHero takes unit whichHero, real x, real y, boolean doEyecandy returns boolean"


IsUnitPaused=IsUnitPaused
IsUnitPaused="IsUnitPaused(",~whichHero,")"
IsUnitPausedHint="[NATIVE]  IsUnitPaused takes unit whichHero returns boolean"


UnitAddItem=UnitAddItem
UnitAddItem="UnitAddItem(",~whichUnit,", ",~whichItem,")"
UnitAddItemHint="[NATIVE]  UnitAddItem takes unit whichUnit, item whichItem returns boolean"


UnitAddItemById=UnitAddItemById
UnitAddItemById="UnitAddItemById(",~whichUnit,", ",~itemId,")"
UnitAddItemByIdHint="[NATIVE]  UnitAddItemById takes unit whichUnit, integer itemId returns item"


UnitRemoveItemFromSlot=UnitRemoveItemFromSlot
UnitRemoveItemFromSlot="UnitRemoveItemFromSlot(",~whichUnit,", ",~itemSlot,")"
UnitRemoveItemFromSlotHint="[NATIVE]  UnitRemoveItemFromSlot takes unit whichUnit, integer itemSlot returns item"


UnitItemInSlot=UnitItemInSlot
UnitItemInSlot="UnitItemInSlot(",~whichUnit,", ",~itemSlot,")"
UnitItemInSlotHint="[NATIVE]  UnitItemInSlot takes unit whichUnit, integer itemSlot returns item"


UnitInventorySize=UnitInventorySize
UnitInventorySize="UnitInventorySize(",~whichUnit,")"
UnitInventorySizeHint="[NATIVE]  UnitInventorySize takes unit whichUnit returns integer"


UnitDropItemPoint=UnitDropItemPoint
UnitDropItemPoint="UnitDropItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitDropItemPointHint="[NATIVE]  UnitDropItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"


UnitDropItemSlot=UnitDropItemSlot
UnitDropItemSlot="UnitDropItemSlot(",~whichUnit,", ",~whichItem,", ",~slot,")"
UnitDropItemSlotHint="[NATIVE]  UnitDropItemSlot takes unit whichUnit, item whichItem, integer slot returns boolean"


UnitDropItemTarget=UnitDropItemTarget
UnitDropItemTarget="UnitDropItemTarget(",~whichUnit,", ",~whichItem,", ",~target,")"
UnitDropItemTargetHint="[NATIVE]  UnitDropItemTarget takes unit whichUnit, item whichItem, widget target returns boolean"


UnitUseItemPoint=UnitUseItemPoint
UnitUseItemPoint="UnitUseItemPoint(",~whichUnit,", ",~whichItem,", ",~x,", ",~y,")"
UnitUseItemPointHint="[NATIVE]  UnitUseItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean"


GetUnitState=GetUnitState
GetUnitState="GetUnitState(",~whichUnit,", ",~whichUnitState,")"
GetUnitStateHint="[NATIVE]  GetUnitState takes unit whichUnit, unitstate whichUnitState returns real"


IsUnitDetected=IsUnitDetected
IsUnitDetected="IsUnitDetected(",~whichUnit,", ",~whichPlayer,")"
IsUnitDetectedHint="[NATIVE]  IsUnitDetected takes unit whichUnit, player whichPlayer returns boolean"


IsUnit=IsUnit
IsUnit="IsUnit(",~whichUnit,", ",~whichSpecifiedUnit,")"
IsUnitHint="[NATIVE]  IsUnit takes unit whichUnit, unit whichSpecifiedUnit returns boolean"


IsUnitHidden=IsUnitHidden
IsUnitHidden="IsUnitHidden(",~whichUnit,")"
IsUnitHiddenHint="[NATIVE]  IsUnitHidden takes unit whichUnit returns boolean"


IsUnitIllusion=IsUnitIllusion
IsUnitIllusion="IsUnitIllusion(",~whichUnit,")"
IsUnitIllusionHint="[NATIVE]  IsUnitIllusion takes unit whichUnit returns boolean"


IsUnitInTransport=IsUnitInTransport
IsUnitInTransport="IsUnitInTransport(",~whichUnit,", ",~whichTransport,")"
IsUnitInTransportHint="[NATIVE]  IsUnitInTransport takes unit whichUnit, unit whichTransport returns boolean"


IsUnitLoaded=IsUnitLoaded
IsUnitLoaded="IsUnitLoaded(",~whichUnit,")"
IsUnitLoadedHint="[NATIVE]  IsUnitLoaded takes unit whichUnit returns boolean"


IsHeroUnitId=IsHeroUnitId
IsHeroUnitId="IsHeroUnitId(",~unitId,")"
IsHeroUnitIdHint="[NATIVE]  IsHeroUnitId takes integer unitId returns boolean"


UnitAddType=UnitAddType
UnitAddType="UnitAddType(",~whichUnit,", ",~whichUnitType,")"
UnitAddTypeHint="[NATIVE]  UnitAddType takes unit whichUnit, unittype whichUnitType returns boolean"


UnitRemoveType=UnitRemoveType
UnitRemoveType="UnitRemoveType(",~whichUnit,", ",~whichUnitType,")"
UnitRemoveTypeHint="[NATIVE]  UnitRemoveType takes unit whichUnit, unittype whichUnitType returns boolean"


UnitAddAbility=UnitAddAbility
UnitAddAbility="UnitAddAbility(",~whichUnit,", ",~abilCode,")"
UnitAddAbilityHint="[NATIVE]  UnitAddAbility takes unit whichUnit, integer abilCode returns boolean"


UnitRemoveAbility=UnitRemoveAbility
UnitRemoveAbility="UnitRemoveAbility(",~whichUnit,", ",~abilCode,")"
UnitRemoveAbilityHint="[NATIVE]  UnitRemoveAbility takes unit whichUnit, integer abilCode returns boolean"


UnitHasBuffsEx=UnitHasBuffsEx
UnitHasBuffsEx="UnitHasBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitHasBuffsExHint="[NATIVE]  UnitHasBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean"


UnitCountBuffsEx=UnitCountBuffsEx
UnitCountBuffsEx="UnitCountBuffsEx(",~whichUnit,", ",~removePositive,", ",~removeNegative,", ",~magic,", ",~physical,", ",~timedLife,", ",~aura,", ",~autoDispel,")"
UnitCountBuffsExHint="[NATIVE]  UnitCountBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer"


UnitCanSleep=UnitCanSleep
UnitCanSleep="UnitCanSleep(",~whichUnit,")"
UnitCanSleepHint="[NATIVE]  UnitCanSleep takes unit whichUnit returns boolean"


UnitIsSleeping=UnitIsSleeping
UnitIsSleeping="UnitIsSleeping(",~whichUnit,")"
UnitIsSleepingHint="[NATIVE]  UnitIsSleeping takes unit whichUnit returns boolean"


UnitIgnoreAlarm=UnitIgnoreAlarm
UnitIgnoreAlarm="UnitIgnoreAlarm(",~whichUnit,", ",~flag,")"
UnitIgnoreAlarmHint="[NATIVE]  UnitIgnoreAlarm takes unit whichUnit, boolean flag returns boolean"


UnitDamagePoint=UnitDamagePoint
UnitDamagePoint="UnitDamagePoint(",~whichUnit,", ",~delay,", ",~radius,", ",~x,", ",~y,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamagePointHint="[NATIVE]  UnitDamagePoint takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"


UnitDamageTarget=UnitDamageTarget
UnitDamageTarget="UnitDamageTarget(",~whichUnit,", ",~target,", ",~amount,", ",~attack,", ",~ranged,", ",~attackType,", ",~damageType,", ",~weaponType,")"
UnitDamageTargetHint="[NATIVE]  UnitDamageTarget takes unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean"


IssueImmediateOrderById=IssueImmediateOrderById
IssueImmediateOrderById="IssueImmediateOrderById(",~whichUnit,", ",~order,")"
IssueImmediateOrderByIdHint="[NATIVE]  IssueImmediateOrderById takes unit whichUnit, integer order returns boolean"


IssuePointOrder=IssuePointOrder
IssuePointOrder="IssuePointOrder(",~whichUnit,", ",~order,", ",~x,", ",~y,")"
IssuePointOrderHint="[NATIVE]  IssuePointOrder takes unit whichUnit, string order, real x, real y returns boolean"


IssuePointOrderById=IssuePointOrderById
IssuePointOrderById="IssuePointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,")"
IssuePointOrderByIdHint="[NATIVE]  IssuePointOrderById takes unit whichUnit, integer order, real x, real y returns boolean"


IssuePointOrderByIdLoc=IssuePointOrderByIdLoc
IssuePointOrderByIdLoc="IssuePointOrderByIdLoc(",~whichUnit,", ",~order,", ",~whichLocation,")"
IssuePointOrderByIdLocHint="[NATIVE]  IssuePointOrderByIdLoc takes unit whichUnit, integer order, location whichLocation returns boolean"


IssueTargetOrderById=IssueTargetOrderById
IssueTargetOrderById="IssueTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,")"
IssueTargetOrderByIdHint="[NATIVE]  IssueTargetOrderById takes unit whichUnit, integer order, widget targetWidget returns boolean"


IssueInstantPointOrder=IssueInstantPointOrder
IssueInstantPointOrder="IssueInstantPointOrder(",~whichUnit,", ",~order,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderHint="[NATIVE]  IssueInstantPointOrder takes unit whichUnit, string order, real x, real y, widget instantTargetWidget returns boolean"


IssueInstantPointOrderById=IssueInstantPointOrderById
IssueInstantPointOrderById="IssueInstantPointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,", ",~instantTargetWidget,")"
IssueInstantPointOrderByIdHint="[NATIVE]  IssueInstantPointOrderById takes unit whichUnit, integer order, real x, real y, widget instantTargetWidget returns boolean"


IssueInstantTargetOrderById=IssueInstantTargetOrderById
IssueInstantTargetOrderById="IssueInstantTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,", ",~instantTargetWidget,")"
IssueInstantTargetOrderByIdHint="[NATIVE]  IssueInstantTargetOrderById takes unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget returns boolean"


IssueBuildOrder=IssueBuildOrder
IssueBuildOrder="IssueBuildOrder(",~whichPeon,", ",~unitToBuild,", ",~x,", ",~y,")"
IssueBuildOrderHint="[NATIVE]  IssueBuildOrder takes unit whichPeon, string unitToBuild, real x, real y returns boolean"


IssueBuildOrderById=IssueBuildOrderById
IssueBuildOrderById="IssueBuildOrderById(",~whichPeon,", ",~unitId,", ",~x,", ",~y,")"
IssueBuildOrderByIdHint="[NATIVE]  IssueBuildOrderById takes unit whichPeon, integer unitId, real x, real y returns boolean"


IssueNeutralImmediateOrder=IssueNeutralImmediateOrder
IssueNeutralImmediateOrder="IssueNeutralImmediateOrder(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,")"
IssueNeutralImmediateOrderHint="[NATIVE]  IssueNeutralImmediateOrder takes player whichPlayer, unit neutralStructure, string unitToBuild returns boolean"


IssueNeutralPointOrder=IssueNeutralPointOrder
IssueNeutralPointOrder="IssueNeutralPointOrder(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~x,", ",~y,")"
IssueNeutralPointOrderHint="[NATIVE]  IssueNeutralPointOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, real x, real y returns boolean"


IssueNeutralPointOrderById=IssueNeutralPointOrderById
IssueNeutralPointOrderById="IssueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~x,", ",~y,")"
IssueNeutralPointOrderByIdHint="[NATIVE]  IssueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitId, real x, real y returns boolean"


IssueNeutralTargetOrder=IssueNeutralTargetOrder
IssueNeutralTargetOrder="IssueNeutralTargetOrder(",~whichPlayer,", ",~neutralStructure,", ",~unitToBuild,", ",~target,")"
IssueNeutralTargetOrderHint="[NATIVE]  IssueNeutralTargetOrder takes player whichPlayer, unit neutralStructure, string unitToBuild, widget target returns boolean"


IssueNeutralTargetOrderById=IssueNeutralTargetOrderById
IssueNeutralTargetOrderById="IssueNeutralTargetOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~target,")"
IssueNeutralTargetOrderByIdHint="[NATIVE]  IssueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitId, widget target returns boolean"


WaygateGetDestinationX=WaygateGetDestinationX
WaygateGetDestinationX="WaygateGetDestinationX(",~waygate,")"
WaygateGetDestinationXHint="[NATIVE]  WaygateGetDestinationX takes unit waygate returns real"


WaygateGetDestinationY=WaygateGetDestinationY
WaygateGetDestinationY="WaygateGetDestinationY(",~waygate,")"
WaygateGetDestinationYHint="[NATIVE]  WaygateGetDestinationY takes unit waygate returns real"


WaygateIsActive=WaygateIsActive
WaygateIsActive="WaygateIsActive(",~waygate,")"
WaygateIsActiveHint="[NATIVE]  WaygateIsActive takes unit waygate returns boolean"


AddItemToAllStock=AddItemToAllStock
AddItemToAllStock="AddItemToAllStock(",~itemId,", ",~currentStock,", ",~stockMax,")"
AddItemToAllStockHint="[NATIVE]  AddItemToAllStock takes integer itemId, integer currentStock, integer stockMax returns nothing"


AddItemToStock=AddItemToStock
AddItemToStock="AddItemToStock(",~whichUnit,", ",~itemId,", ",~currentStock,", ",~stockMax,")"
AddItemToStockHint="[NATIVE]  AddItemToStock takes unit whichUnit, integer itemId, integer currentStock, integer stockMax returns nothing"


AddUnitToAllStock=AddUnitToAllStock
AddUnitToAllStock="AddUnitToAllStock(",~unitId,", ",~currentStock,", ",~stockMax,")"
AddUnitToAllStockHint="[NATIVE]  AddUnitToAllStock takes integer unitId, integer currentStock, integer stockMax returns nothing"


AddUnitToStock=AddUnitToStock
AddUnitToStock="AddUnitToStock(",~whichUnit,", ",~unitId,", ",~currentStock,", ",~stockMax,")"
AddUnitToStockHint="[NATIVE]  AddUnitToStock takes unit whichUnit, integer unitId, integer currentStock, integer stockMax returns nothing"


Player=Player
Player="Player(",~number,")"
PlayerHint="[NATIVE]  Player takes integer number returns player"


IsPlayerObserver=IsPlayerObserver
IsPlayerObserver="IsPlayerObserver(",~whichPlayer,")"
IsPlayerObserverHint="[NATIVE]  IsPlayerObserver takes player whichPlayer returns boolean"


IsVisibleToPlayer=IsVisibleToPlayer
IsVisibleToPlayer="IsVisibleToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsVisibleToPlayerHint="[NATIVE]  IsVisibleToPlayer takes real x, real y, player whichPlayer returns boolean"


IsFoggedToPlayer=IsFoggedToPlayer
IsFoggedToPlayer="IsFoggedToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsFoggedToPlayerHint="[NATIVE]  IsFoggedToPlayer takes real x, real y, player whichPlayer returns boolean"


IsMaskedToPlayer=IsMaskedToPlayer
IsMaskedToPlayer="IsMaskedToPlayer(",~x,", ",~y,", ",~whichPlayer,")"
IsMaskedToPlayerHint="[NATIVE]  IsMaskedToPlayer takes real x, real y, player whichPlayer returns boolean"


GetPlayerId=GetPlayerId
GetPlayerId="GetPlayerId(",~whichPlayer,")"
GetPlayerIdHint="[NATIVE]  GetPlayerId takes player whichPlayer returns integer"


GetPlayerHandicap=GetPlayerHandicap
GetPlayerHandicap="GetPlayerHandicap(",~whichPlayer,")"
GetPlayerHandicapHint="[NATIVE]  GetPlayerHandicap takes player whichPlayer returns real"


GetPlayerHandicapXP=GetPlayerHandicapXP
GetPlayerHandicapXP="GetPlayerHandicapXP(",~whichPlayer,")"
GetPlayerHandicapXPHint="[NATIVE]  GetPlayerHandicapXP takes player whichPlayer returns real"


GetPlayerTechMaxAllowed=GetPlayerTechMaxAllowed
GetPlayerTechMaxAllowed="GetPlayerTechMaxAllowed(",~whichPlayer,", ",~techid,")"
GetPlayerTechMaxAllowedHint="[NATIVE]  GetPlayerTechMaxAllowed takes player whichPlayer, integer techid returns integer"


GetPlayerTechResearched=GetPlayerTechResearched
GetPlayerTechResearched="GetPlayerTechResearched(",~whichPlayer,", ",~techid,", ",~specificonly,")"
GetPlayerTechResearchedHint="[NATIVE]  GetPlayerTechResearched takes player whichPlayer, integer techid, boolean specificonly returns boolean"


GetPlayerTechCount=GetPlayerTechCount
GetPlayerTechCount="GetPlayerTechCount(",~whichPlayer,", ",~techid,", ",~specificonly,")"
GetPlayerTechCountHint="[NATIVE]  GetPlayerTechCount takes player whichPlayer, integer techid, boolean specificonly returns integer"


CreateFogModifierRect=CreateFogModifierRect
CreateFogModifierRect="CreateFogModifierRect(",~whichPlayer,", ",~whichState,", ",~whichRect,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRectHint="[NATIVE]  CreateFogModifierRect takes player whichPlayer, fogstate whichState, rect whichRect, boolean useSharedVision, boolean afterUnits returns fogmodifier"


CreateFogModifierRadius=CreateFogModifierRadius
CreateFogModifierRadius="CreateFogModifierRadius(",~whichPlayer,", ",~whichState,", ",~centerX,", ",~centerY,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusHint="[NATIVE]  CreateFogModifierRadius takes player whichPlayer, fogstate whichState, real centerX, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"


CreateFogModifierRadiusLoc=CreateFogModifierRadiusLoc
CreateFogModifierRadiusLoc="CreateFogModifierRadiusLoc(",~whichPlayer,", ",~whichState,", ",~center,", ",~radius,", ",~useSharedVision,", ",~afterUnits,")"
CreateFogModifierRadiusLocHint="[NATIVE]  CreateFogModifierRadiusLoc takes player whichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier"


VersionGet=VersionGet
VersionGet="VersionGet(",")"
VersionGetHint="[NATIVE]  VersionGet takes nothing returns version"


VersionCompatible=VersionCompatible
VersionCompatible="VersionCompatible(",~whichVersion,")"
VersionCompatibleHint="[NATIVE]  VersionCompatible takes version whichVersion returns boolean"


VersionSupported=VersionSupported
VersionSupported="VersionSupported(",~whichVersion,")"
VersionSupportedHint="[NATIVE]  VersionSupported takes version whichVersion returns boolean"


RenameSaveDirectory=RenameSaveDirectory
RenameSaveDirectory="RenameSaveDirectory(",~sourceDirName,", ",~destDirName,")"
RenameSaveDirectoryHint="[NATIVE]  RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean"


RemoveSaveDirectory=RemoveSaveDirectory
RemoveSaveDirectory="RemoveSaveDirectory(",~sourceDirName,")"
RemoveSaveDirectoryHint="[NATIVE]  RemoveSaveDirectory takes string sourceDirName returns boolean"


CopySaveGame=CopySaveGame
CopySaveGame="CopySaveGame(",~sourceSaveName,", ",~destSaveName,")"
CopySaveGameHint="[NATIVE]  CopySaveGame takes string sourceSaveName, string destSaveName returns boolean"


GetFloatGameState=GetFloatGameState
GetFloatGameState="GetFloatGameState(",~whichFloatGameState,")"
GetFloatGameStateHint="[NATIVE]  GetFloatGameState takes fgamestate whichFloatGameState returns real"


GetDefaultDifficulty=GetDefaultDifficulty
GetDefaultDifficulty="GetDefaultDifficulty(",")"
GetDefaultDifficultyHint="[NATIVE]  GetDefaultDifficulty takes nothing returns gamedifficulty"


GetCustomCampaignButtonVisible=GetCustomCampaignButtonVisible
GetCustomCampaignButtonVisible="GetCustomCampaignButtonVisible(",~whichButton,")"
GetCustomCampaignButtonVisibleHint="[NATIVE]  GetCustomCampaignButtonVisible takes integer whichButton returns boolean"


DialogAddQuitButton=DialogAddQuitButton
DialogAddQuitButton="DialogAddQuitButton(",~whichDialog,", ",~doScoreScreen,", ",~buttonText,", ",~hotkey,")"
DialogAddQuitButtonHint="[NATIVE]  DialogAddQuitButton takes dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey returns button"


ReloadGameCachesFromDisk=ReloadGameCachesFromDisk
ReloadGameCachesFromDisk="ReloadGameCachesFromDisk(",")"
ReloadGameCachesFromDiskHint="[NATIVE]  ReloadGameCachesFromDisk takes nothing returns boolean"


SaveGameCache=SaveGameCache
SaveGameCache="SaveGameCache(",~whichCache,")"
SaveGameCacheHint="[NATIVE]  SaveGameCache takes gamecache whichCache returns boolean"


StoreUnit=StoreUnit
StoreUnit="StoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichUnit,")"
StoreUnitHint="[NATIVE]  StoreUnit takes gamecache whichGamecache, string missionKey, string key, unit whichUnit returns boolean"


StoreString=StoreString
StoreString="StoreString(",~whichGamecache,", ",~missionKey,", ",~key,", ",~value,")"
StoreStringHint="[NATIVE]  StoreString takes gamecache whichGamecache, string missionKey, string key, string value returns boolean"


SyncStoredString=SyncStoredString
SyncStoredString="SyncStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
SyncStoredStringHint="[NATIVE]  SyncStoredString takes gamecache whichGamecache, string missionKey, string key returns nothing"


FlushStoredString=FlushStoredString
FlushStoredString="FlushStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
FlushStoredStringHint="[NATIVE]  FlushStoredString takes gamecache whichGamecache, string missionKey, string key returns nothing"


GetStoredInteger=GetStoredInteger
GetStoredInteger="GetStoredInteger(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredIntegerHint="[NATIVE]  GetStoredInteger takes gamecache whichGamecache, string missionKey, string key returns integer"


GetStoredReal=GetStoredReal
GetStoredReal="GetStoredReal(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredRealHint="[NATIVE]  GetStoredReal takes gamecache whichGamecache, string missionKey, string key returns real"


GetStoredBoolean=GetStoredBoolean
GetStoredBoolean="GetStoredBoolean(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredBooleanHint="[NATIVE]  GetStoredBoolean takes gamecache whichGamecache, string missionKey, string key returns boolean"


GetStoredString=GetStoredString
GetStoredString="GetStoredString(",~whichGamecache,", ",~missionKey,", ",~key,")"
GetStoredStringHint="[NATIVE]  GetStoredString takes gamecache whichGamecache, string missionKey, string key returns string"


RestoreUnit=RestoreUnit
RestoreUnit="RestoreUnit(",~whichGamecache,", ",~missionKey,", ",~key,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
RestoreUnitHint="[NATIVE]  RestoreUnit takes gamecache whichGamecache, string missionKey, string key, player whichPlayer, real x, real y, real facing returns unit"


InitHashtable=InitHashtable
InitHashtable="InitHashtable(",")"
InitHashtableHint="[NATIVE]  InitHashtable takes nothing returns hashtable"


SaveStr=SaveStr
SaveStr="SaveStr(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~value,")"
SaveStrHint="[NATIVE]  SaveStr takes hashtable whichHashtable, integer parentKey, integer childKey, string value returns boolean"


SavePlayerHandle=SavePlayerHandle
SavePlayerHandle="SavePlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichPlayer,")"
SavePlayerHandleHint="[NATIVE]  SavePlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, player whichPlayer returns boolean"


SaveWidgetHandle=SaveWidgetHandle
SaveWidgetHandle="SaveWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWidget,")"
SaveWidgetHandleHint="[NATIVE]  SaveWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey, widget whichWidget returns boolean"


SaveDestructableHandle=SaveDestructableHandle
SaveDestructableHandle="SaveDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDestructable,")"
SaveDestructableHandleHint="[NATIVE]  SaveDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, destructable whichDestructable returns boolean"


SaveItemHandle=SaveItemHandle
SaveItemHandle="SaveItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItem,")"
SaveItemHandleHint="[NATIVE]  SaveItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, item whichItem returns boolean"


SaveUnitHandle=SaveUnitHandle
SaveUnitHandle="SaveUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnit,")"
SaveUnitHandleHint="[NATIVE]  SaveUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unit whichUnit returns boolean"


SaveAbilityHandle=SaveAbilityHandle
SaveAbilityHandle="SaveAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAbility,")"
SaveAbilityHandleHint="[NATIVE]  SaveAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ability whichAbility returns boolean"


SaveTimerHandle=SaveTimerHandle
SaveTimerHandle="SaveTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimer,")"
SaveTimerHandleHint="[NATIVE]  SaveTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timer whichTimer returns boolean"


SaveTriggerHandle=SaveTriggerHandle
SaveTriggerHandle="SaveTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrigger,")"
SaveTriggerHandleHint="[NATIVE]  SaveTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trigger whichTrigger returns boolean"


SaveTriggerConditionHandle=SaveTriggerConditionHandle
SaveTriggerConditionHandle="SaveTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggercondition,")"
SaveTriggerConditionHandleHint="[NATIVE]  SaveTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean"


SaveTriggerActionHandle=SaveTriggerActionHandle
SaveTriggerActionHandle="SaveTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTriggeraction,")"
SaveTriggerActionHandleHint="[NATIVE]  SaveTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean"


SaveTriggerEventHandle=SaveTriggerEventHandle
SaveTriggerEventHandle="SaveTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEvent,")"
SaveTriggerEventHandleHint="[NATIVE]  SaveTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey, event whichEvent returns boolean"


SaveForceHandle=SaveForceHandle
SaveForceHandle="SaveForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichForce,")"
SaveForceHandleHint="[NATIVE]  SaveForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey, force whichForce returns boolean"


SaveGroupHandle=SaveGroupHandle
SaveGroupHandle="SaveGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichGroup,")"
SaveGroupHandleHint="[NATIVE]  SaveGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey, group whichGroup returns boolean"


SaveLocationHandle=SaveLocationHandle
SaveLocationHandle="SaveLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLocation,")"
SaveLocationHandleHint="[NATIVE]  SaveLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey, location whichLocation returns boolean"


SaveRectHandle=SaveRectHandle
SaveRectHandle="SaveRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRect,")"
SaveRectHandleHint="[NATIVE]  SaveRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, rect whichRect returns boolean"


SaveBooleanExprHandle=SaveBooleanExprHandle
SaveBooleanExprHandle="SaveBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBoolexpr,")"
SaveBooleanExprHandleHint="[NATIVE]  SaveBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean"


SaveSoundHandle=SaveSoundHandle
SaveSoundHandle="SaveSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichSound,")"
SaveSoundHandleHint="[NATIVE]  SaveSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sound whichSound returns boolean"


SaveEffectHandle=SaveEffectHandle
SaveEffectHandle="SaveEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichEffect,")"
SaveEffectHandleHint="[NATIVE]  SaveEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey, effect whichEffect returns boolean"


SaveUnitPoolHandle=SaveUnitPoolHandle
SaveUnitPoolHandle="SaveUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUnitpool,")"
SaveUnitPoolHandleHint="[NATIVE]  SaveUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean"


SaveItemPoolHandle=SaveItemPoolHandle
SaveItemPoolHandle="SaveItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichItempool,")"
SaveItemPoolHandleHint="[NATIVE]  SaveItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey, itempool whichItempool returns boolean"


SaveQuestHandle=SaveQuestHandle
SaveQuestHandle="SaveQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuest,")"
SaveQuestHandleHint="[NATIVE]  SaveQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey, quest whichQuest returns boolean"


SaveQuestItemHandle=SaveQuestItemHandle
SaveQuestItemHandle="SaveQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichQuestitem,")"
SaveQuestItemHandleHint="[NATIVE]  SaveQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, questitem whichQuestitem returns boolean"


SaveDefeatConditionHandle=SaveDefeatConditionHandle
SaveDefeatConditionHandle="SaveDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDefeatcondition,")"
SaveDefeatConditionHandleHint="[NATIVE]  SaveDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean"


SaveTimerDialogHandle=SaveTimerDialogHandle
SaveTimerDialogHandle="SaveTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTimerdialog,")"
SaveTimerDialogHandleHint="[NATIVE]  SaveTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean"


SaveLeaderboardHandle=SaveLeaderboardHandle
SaveLeaderboardHandle="SaveLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLeaderboard,")"
SaveLeaderboardHandleHint="[NATIVE]  SaveLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean"


SaveMultiboardHandle=SaveMultiboardHandle
SaveMultiboardHandle="SaveMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboard,")"
SaveMultiboardHandleHint="[NATIVE]  SaveMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean"


SaveMultiboardItemHandle=SaveMultiboardItemHandle
SaveMultiboardItemHandle="SaveMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichMultiboarditem,")"
SaveMultiboardItemHandleHint="[NATIVE]  SaveMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean"


SaveTrackableHandle=SaveTrackableHandle
SaveTrackableHandle="SaveTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTrackable,")"
SaveTrackableHandleHint="[NATIVE]  SaveTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, trackable whichTrackable returns boolean"


SaveDialogHandle=SaveDialogHandle
SaveDialogHandle="SaveDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDialog,")"
SaveDialogHandleHint="[NATIVE]  SaveDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey, dialog whichDialog returns boolean"


SaveButtonHandle=SaveButtonHandle
SaveButtonHandle="SaveButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichButton,")"
SaveButtonHandleHint="[NATIVE]  SaveButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey, button whichButton returns boolean"


SaveTextTagHandle=SaveTextTagHandle
SaveTextTagHandle="SaveTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichTexttag,")"
SaveTextTagHandleHint="[NATIVE]  SaveTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey, texttag whichTexttag returns boolean"


SaveLightningHandle=SaveLightningHandle
SaveLightningHandle="SaveLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichLightning,")"
SaveLightningHandleHint="[NATIVE]  SaveLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey, lightning whichLightning returns boolean"


SaveImageHandle=SaveImageHandle
SaveImageHandle="SaveImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichImage,")"
SaveImageHandleHint="[NATIVE]  SaveImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, image whichImage returns boolean"


SaveUbersplatHandle=SaveUbersplatHandle
SaveUbersplatHandle="SaveUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichUbersplat,")"
SaveUbersplatHandleHint="[NATIVE]  SaveUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean"


SaveRegionHandle=SaveRegionHandle
SaveRegionHandle="SaveRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichRegion,")"
SaveRegionHandleHint="[NATIVE]  SaveRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey, region whichRegion returns boolean"


SaveFogStateHandle=SaveFogStateHandle
SaveFogStateHandle="SaveFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogState,")"
SaveFogStateHandleHint="[NATIVE]  SaveFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogstate whichFogState returns boolean"


SaveFogModifierHandle=SaveFogModifierHandle
SaveFogModifierHandle="SaveFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFogModifier,")"
SaveFogModifierHandleHint="[NATIVE]  SaveFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean"


SaveAgentHandle=SaveAgentHandle
SaveAgentHandle="SaveAgentHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAgent,")"
SaveAgentHandleHint="[NATIVE]  SaveAgentHandle takes hashtable whichHashtable, integer parentKey, integer childKey, agent whichAgent returns boolean"


SaveHashtableHandle=SaveHashtableHandle
SaveHashtableHandle="SaveHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHashtable,")"
SaveHashtableHandleHint="[NATIVE]  SaveHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey, hashtable whichHashtable returns boolean"


LoadInteger=LoadInteger
LoadInteger="LoadInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadIntegerHint="[NATIVE]  LoadInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns integer"


LoadReal=LoadReal
LoadReal="LoadReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRealHint="[NATIVE]  LoadReal takes hashtable whichHashtable, integer parentKey, integer childKey returns real"


LoadBoolean=LoadBoolean
LoadBoolean="LoadBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanHint="[NATIVE]  LoadBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


LoadStr=LoadStr
LoadStr="LoadStr(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadStrHint="[NATIVE]  LoadStr takes hashtable whichHashtable, integer parentKey, integer childKey returns string"


LoadPlayerHandle=LoadPlayerHandle
LoadPlayerHandle="LoadPlayerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadPlayerHandleHint="[NATIVE]  LoadPlayerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns player"


LoadWidgetHandle=LoadWidgetHandle
LoadWidgetHandle="LoadWidgetHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWidgetHandleHint="[NATIVE]  LoadWidgetHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns widget"


LoadDestructableHandle=LoadDestructableHandle
LoadDestructableHandle="LoadDestructableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDestructableHandleHint="[NATIVE]  LoadDestructableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns destructable"


LoadItemHandle=LoadItemHandle
LoadItemHandle="LoadItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemHandleHint="[NATIVE]  LoadItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns item"


LoadUnitHandle=LoadUnitHandle
LoadUnitHandle="LoadUnitHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitHandleHint="[NATIVE]  LoadUnitHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unit"


LoadAbilityHandle=LoadAbilityHandle
LoadAbilityHandle="LoadAbilityHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAbilityHandleHint="[NATIVE]  LoadAbilityHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ability"


LoadTimerHandle=LoadTimerHandle
LoadTimerHandle="LoadTimerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerHandleHint="[NATIVE]  LoadTimerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timer"


LoadTriggerHandle=LoadTriggerHandle
LoadTriggerHandle="LoadTriggerHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerHandleHint="[NATIVE]  LoadTriggerHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trigger"


LoadTriggerConditionHandle=LoadTriggerConditionHandle
LoadTriggerConditionHandle="LoadTriggerConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerConditionHandleHint="[NATIVE]  LoadTriggerConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggercondition"


LoadTriggerActionHandle=LoadTriggerActionHandle
LoadTriggerActionHandle="LoadTriggerActionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerActionHandleHint="[NATIVE]  LoadTriggerActionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns triggeraction"


LoadTriggerEventHandle=LoadTriggerEventHandle
LoadTriggerEventHandle="LoadTriggerEventHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTriggerEventHandleHint="[NATIVE]  LoadTriggerEventHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns event"


LoadForceHandle=LoadForceHandle
LoadForceHandle="LoadForceHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadForceHandleHint="[NATIVE]  LoadForceHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns force"


LoadGroupHandle=LoadGroupHandle
LoadGroupHandle="LoadGroupHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadGroupHandleHint="[NATIVE]  LoadGroupHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns group"


LoadLocationHandle=LoadLocationHandle
LoadLocationHandle="LoadLocationHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLocationHandleHint="[NATIVE]  LoadLocationHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns location"


LoadRectHandle=LoadRectHandle
LoadRectHandle="LoadRectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRectHandleHint="[NATIVE]  LoadRectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns rect"


LoadBooleanExprHandle=LoadBooleanExprHandle
LoadBooleanExprHandle="LoadBooleanExprHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBooleanExprHandleHint="[NATIVE]  LoadBooleanExprHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolexpr"


LoadSoundHandle=LoadSoundHandle
LoadSoundHandle="LoadSoundHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSoundHandleHint="[NATIVE]  LoadSoundHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sound"


LoadEffectHandle=LoadEffectHandle
LoadEffectHandle="LoadEffectHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadEffectHandleHint="[NATIVE]  LoadEffectHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns effect"


LoadUnitPoolHandle=LoadUnitPoolHandle
LoadUnitPoolHandle="LoadUnitPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUnitPoolHandleHint="[NATIVE]  LoadUnitPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns unitpool"


LoadItemPoolHandle=LoadItemPoolHandle
LoadItemPoolHandle="LoadItemPoolHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadItemPoolHandleHint="[NATIVE]  LoadItemPoolHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns itempool"


LoadQuestHandle=LoadQuestHandle
LoadQuestHandle="LoadQuestHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestHandleHint="[NATIVE]  LoadQuestHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns quest"


LoadQuestItemHandle=LoadQuestItemHandle
LoadQuestItemHandle="LoadQuestItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadQuestItemHandleHint="[NATIVE]  LoadQuestItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns questitem"


LoadDefeatConditionHandle=LoadDefeatConditionHandle
LoadDefeatConditionHandle="LoadDefeatConditionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDefeatConditionHandleHint="[NATIVE]  LoadDefeatConditionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns defeatcondition"


LoadTimerDialogHandle=LoadTimerDialogHandle
LoadTimerDialogHandle="LoadTimerDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTimerDialogHandleHint="[NATIVE]  LoadTimerDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns timerdialog"


LoadLeaderboardHandle=LoadLeaderboardHandle
LoadLeaderboardHandle="LoadLeaderboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLeaderboardHandleHint="[NATIVE]  LoadLeaderboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns leaderboard"


LoadMultiboardHandle=LoadMultiboardHandle
LoadMultiboardHandle="LoadMultiboardHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardHandleHint="[NATIVE]  LoadMultiboardHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboard"


LoadMultiboardItemHandle=LoadMultiboardItemHandle
LoadMultiboardItemHandle="LoadMultiboardItemHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadMultiboardItemHandleHint="[NATIVE]  LoadMultiboardItemHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns multiboarditem"


LoadTrackableHandle=LoadTrackableHandle
LoadTrackableHandle="LoadTrackableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTrackableHandleHint="[NATIVE]  LoadTrackableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns trackable"


LoadDialogHandle=LoadDialogHandle
LoadDialogHandle="LoadDialogHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDialogHandleHint="[NATIVE]  LoadDialogHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns dialog"


LoadButtonHandle=LoadButtonHandle
LoadButtonHandle="LoadButtonHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadButtonHandleHint="[NATIVE]  LoadButtonHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns button"


LoadTextTagHandle=LoadTextTagHandle
LoadTextTagHandle="LoadTextTagHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextTagHandleHint="[NATIVE]  LoadTextTagHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns texttag"


LoadLightningHandle=LoadLightningHandle
LoadLightningHandle="LoadLightningHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadLightningHandleHint="[NATIVE]  LoadLightningHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns lightning"


LoadImageHandle=LoadImageHandle
LoadImageHandle="LoadImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadImageHandleHint="[NATIVE]  LoadImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns image"


LoadUbersplatHandle=LoadUbersplatHandle
LoadUbersplatHandle="LoadUbersplatHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadUbersplatHandleHint="[NATIVE]  LoadUbersplatHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns ubersplat"


LoadRegionHandle=LoadRegionHandle
LoadRegionHandle="LoadRegionHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadRegionHandleHint="[NATIVE]  LoadRegionHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns region"


LoadFogStateHandle=LoadFogStateHandle
LoadFogStateHandle="LoadFogStateHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogStateHandleHint="[NATIVE]  LoadFogStateHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogstate"


LoadFogModifierHandle=LoadFogModifierHandle
LoadFogModifierHandle="LoadFogModifierHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFogModifierHandleHint="[NATIVE]  LoadFogModifierHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns fogmodifier"


LoadHashtableHandle=LoadHashtableHandle
LoadHashtableHandle="LoadHashtableHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHashtableHandleHint="[NATIVE]  LoadHashtableHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns hashtable"


HaveSavedInteger=HaveSavedInteger
HaveSavedInteger="HaveSavedInteger(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedIntegerHint="[NATIVE]  HaveSavedInteger takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedReal=HaveSavedReal
HaveSavedReal="HaveSavedReal(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedRealHint="[NATIVE]  HaveSavedReal takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedBoolean=HaveSavedBoolean
HaveSavedBoolean="HaveSavedBoolean(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedBooleanHint="[NATIVE]  HaveSavedBoolean takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedString=HaveSavedString
HaveSavedString="HaveSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedStringHint="[NATIVE]  HaveSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


HaveSavedHandle=HaveSavedHandle
HaveSavedHandle="HaveSavedHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
HaveSavedHandleHint="[NATIVE]  HaveSavedHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns boolean"


RemoveSavedString=RemoveSavedString
RemoveSavedString="RemoveSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
RemoveSavedStringHint="[NATIVE]  RemoveSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


CreateUnitPool=CreateUnitPool
CreateUnitPool="CreateUnitPool(",")"
CreateUnitPoolHint="[NATIVE]  CreateUnitPool takes nothing returns unitpool"


PlaceRandomUnit=PlaceRandomUnit
PlaceRandomUnit="PlaceRandomUnit(",~whichPool,", ",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
PlaceRandomUnitHint="[NATIVE]  PlaceRandomUnit takes unitpool whichPool, player whichPlayer, real x, real y, real facing returns unit"


CreateItemPool=CreateItemPool
CreateItemPool="CreateItemPool(",")"
CreateItemPoolHint="[NATIVE]  CreateItemPool takes nothing returns itempool"


PlaceRandomItem=PlaceRandomItem
PlaceRandomItem="PlaceRandomItem(",~whichItemPool,", ",~x,", ",~y,")"
PlaceRandomItemHint="[NATIVE]  PlaceRandomItem takes itempool whichItemPool, real x, real y returns item"


ChooseRandomCreep=ChooseRandomCreep
ChooseRandomCreep="ChooseRandomCreep(",~level,")"
ChooseRandomCreepHint="[NATIVE]  ChooseRandomCreep takes integer level returns integer"


ChooseRandomNPBuilding=ChooseRandomNPBuilding
ChooseRandomNPBuilding="ChooseRandomNPBuilding(",")"
ChooseRandomNPBuildingHint="[NATIVE]  ChooseRandomNPBuilding takes nothing returns integer"


ChooseRandomItem=ChooseRandomItem
ChooseRandomItem="ChooseRandomItem(",~level,")"
ChooseRandomItemHint="[NATIVE]  ChooseRandomItem takes integer level returns integer"


ChooseRandomItemEx=ChooseRandomItemEx
ChooseRandomItemEx="ChooseRandomItemEx(",~whichType,", ",~level,")"
ChooseRandomItemExHint="[NATIVE]  ChooseRandomItemEx takes itemtype whichType, integer level returns integer"


DisplayTextToPlayer=DisplayTextToPlayer
DisplayTextToPlayer="DisplayTextToPlayer(",~toPlayer,", ",~x,", ",~y,", ",~message,")"
DisplayTextToPlayerHint="[NATIVE]  DisplayTextToPlayer takes player toPlayer, real x, real y, string message returns nothing"


DisplayTimedTextToPlayer=DisplayTimedTextToPlayer
DisplayTimedTextToPlayer="DisplayTimedTextToPlayer(",~toPlayer,", ",~x,", ",~y,", ",~duration,", ",~message,")"
DisplayTimedTextToPlayerHint="[NATIVE]  DisplayTimedTextToPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing"


GetTimeOfDayScale=GetTimeOfDayScale
GetTimeOfDayScale="GetTimeOfDayScale(",")"
GetTimeOfDayScaleHint="[NATIVE]  GetTimeOfDayScale takes nothing returns real"


CreateTextTag=CreateTextTag
CreateTextTag="CreateTextTag(",")"
CreateTextTagHint="[NATIVE]  CreateTextTag takes nothing returns texttag"


CreateQuest=CreateQuest
CreateQuest="CreateQuest(",")"
CreateQuestHint="[NATIVE]  CreateQuest takes nothing returns quest"


QuestCreateItem=QuestCreateItem
QuestCreateItem="QuestCreateItem(",~whichQuest,")"
QuestCreateItemHint="[NATIVE]  QuestCreateItem takes quest whichQuest returns questitem"


CreateDefeatCondition=CreateDefeatCondition
CreateDefeatCondition="CreateDefeatCondition(",")"
CreateDefeatConditionHint="[NATIVE]  CreateDefeatCondition takes nothing returns defeatcondition"


CreateTimerDialog=CreateTimerDialog
CreateTimerDialog="CreateTimerDialog(",~whichTimer,")"
CreateTimerDialogHint="[NATIVE]  CreateTimerDialog takes timer whichTimer returns timerdialog"


CreateLeaderboard=CreateLeaderboard
CreateLeaderboard="CreateLeaderboard(",")"
CreateLeaderboardHint="[NATIVE]  CreateLeaderboard takes nothing returns leaderboard"


LeaderboardHasPlayerItem=LeaderboardHasPlayerItem
LeaderboardHasPlayerItem="LeaderboardHasPlayerItem(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardHasPlayerItemHint="[NATIVE]  LeaderboardHasPlayerItem takes leaderboard whichLeaderboard, player whichPlayer returns boolean"


LeaderboardGetPlayerIndex=LeaderboardGetPlayerIndex
LeaderboardGetPlayerIndex="LeaderboardGetPlayerIndex(",~whichLeaderboard,", ",~whichPlayer,")"
LeaderboardGetPlayerIndexHint="[NATIVE]  LeaderboardGetPlayerIndex takes leaderboard whichLeaderboard, player whichPlayer returns integer"


PlayerGetLeaderboard=PlayerGetLeaderboard
PlayerGetLeaderboard="PlayerGetLeaderboard(",~toPlayer,")"
PlayerGetLeaderboardHint="[NATIVE]  PlayerGetLeaderboard takes player toPlayer returns leaderboard"


ResetToGameCamera=ResetToGameCamera
ResetToGameCamera="ResetToGameCamera(",~duration,")"
ResetToGameCameraHint="[NATIVE]  ResetToGameCamera takes real duration returns nothing"


PanCameraTo=PanCameraTo
PanCameraTo="PanCameraTo(",~x,", ",~y,")"
PanCameraToHint="[NATIVE]  PanCameraTo takes real x, real y returns nothing"


PanCameraToTimed=PanCameraToTimed
PanCameraToTimed="PanCameraToTimed(",~x,", ",~y,", ",~duration,")"
PanCameraToTimedHint="[NATIVE]  PanCameraToTimed takes real x, real y, real duration returns nothing"


PanCameraToWithZ=PanCameraToWithZ
PanCameraToWithZ="PanCameraToWithZ(",~x,", ",~y,", ",~zOffsetDest,")"
PanCameraToWithZHint="[NATIVE]  PanCameraToWithZ takes real x, real y, real zOffsetDest returns nothing"


PanCameraToTimedWithZ=PanCameraToTimedWithZ
PanCameraToTimedWithZ="PanCameraToTimedWithZ(",~x,", ",~y,", ",~zOffsetDest,", ",~duration,")"
PanCameraToTimedWithZHint="[NATIVE]  PanCameraToTimedWithZ takes real x, real y, real zOffsetDest, real duration returns nothing"


CreateCameraSetup=CreateCameraSetup
CreateCameraSetup="CreateCameraSetup(",")"
CreateCameraSetupHint="[NATIVE]  CreateCameraSetup takes nothing returns camerasetup"


CameraSetupGetField=CameraSetupGetField
CameraSetupGetField="CameraSetupGetField(",~whichCameraSetup,", ",~whichField,")"
CameraSetupGetFieldHint="[NATIVE]  CameraSetupGetField takes camerasetup whichCameraSetup, camerafield whichField returns real"


CameraSetupGetDestPositionX=CameraSetupGetDestPositionX
CameraSetupGetDestPositionX="CameraSetupGetDestPositionX(",~whichCameraSetup,")"
CameraSetupGetDestPositionXHint="[NATIVE]  CameraSetupGetDestPositionX takes camerasetup whichCameraSetup returns real"


CameraSetupGetDestPositionY=CameraSetupGetDestPositionY
CameraSetupGetDestPositionY="CameraSetupGetDestPositionY(",~whichCameraSetup,")"
CameraSetupGetDestPositionYHint="[NATIVE]  CameraSetupGetDestPositionY takes camerasetup whichCameraSetup returns real"


IsCineFilterDisplayed=IsCineFilterDisplayed
IsCineFilterDisplayed="IsCineFilterDisplayed(",")"
IsCineFilterDisplayedHint="[NATIVE]  IsCineFilterDisplayed takes nothing returns boolean"


GetCameraMargin=GetCameraMargin
GetCameraMargin="GetCameraMargin(",~whichMargin,")"
GetCameraMarginHint="[NATIVE]  GetCameraMargin takes integer whichMargin returns real"


GetCameraBoundMinX=GetCameraBoundMinX
GetCameraBoundMinX="GetCameraBoundMinX(",")"
GetCameraBoundMinXHint="[NATIVE]  GetCameraBoundMinX takes nothing returns real"


GetCameraBoundMinY=GetCameraBoundMinY
GetCameraBoundMinY="GetCameraBoundMinY(",")"
GetCameraBoundMinYHint="[NATIVE]  GetCameraBoundMinY takes nothing returns real"


GetCameraBoundMaxX=GetCameraBoundMaxX
GetCameraBoundMaxX="GetCameraBoundMaxX(",")"
GetCameraBoundMaxXHint="[NATIVE]  GetCameraBoundMaxX takes nothing returns real"


GetCameraBoundMaxY=GetCameraBoundMaxY
GetCameraBoundMaxY="GetCameraBoundMaxY(",")"
GetCameraBoundMaxYHint="[NATIVE]  GetCameraBoundMaxY takes nothing returns real"


CreateSound=CreateSound
CreateSound="CreateSound(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
CreateSoundHint="[NATIVE]  CreateSound takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"


CreateSoundFilenameWithLabel=CreateSoundFilenameWithLabel
CreateSoundFilenameWithLabel="CreateSoundFilenameWithLabel(",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
CreateSoundFilenameWithLabelHint="[NATIVE]  CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"


CreateSoundFromLabel=CreateSoundFromLabel
CreateSoundFromLabel="CreateSoundFromLabel(",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateSoundFromLabelHint="[NATIVE]  CreateSoundFromLabel takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"


CreateMIDISound=CreateMIDISound
CreateMIDISound="CreateMIDISound(",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
CreateMIDISoundHint="[NATIVE]  CreateMIDISound takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"


AttachSoundToUnit=AttachSoundToUnit
AttachSoundToUnit="AttachSoundToUnit(",~soundHandle,", ",~whichUnit,")"
AttachSoundToUnitHint="[NATIVE]  AttachSoundToUnit takes sound soundHandle, unit whichUnit returns nothing"


GetSoundDuration=GetSoundDuration
GetSoundDuration="GetSoundDuration(",~soundHandle,")"
GetSoundDurationHint="[NATIVE]  GetSoundDuration takes sound soundHandle returns integer"


GetSoundFileDuration=GetSoundFileDuration
GetSoundFileDuration="GetSoundFileDuration(",~musicFileName,")"
GetSoundFileDurationHint="[NATIVE]  GetSoundFileDuration takes string musicFileName returns integer"


GetSoundIsPlaying=GetSoundIsPlaying
GetSoundIsPlaying="GetSoundIsPlaying(",~soundHandle,")"
GetSoundIsPlayingHint="[NATIVE]  GetSoundIsPlaying takes sound soundHandle returns boolean"


GetSoundIsLoading=GetSoundIsLoading
GetSoundIsLoading="GetSoundIsLoading(",~soundHandle,")"
GetSoundIsLoadingHint="[NATIVE]  GetSoundIsLoading takes sound soundHandle returns boolean"


AddWeatherEffect=AddWeatherEffect
AddWeatherEffect="AddWeatherEffect(",~whichRect,", ",~effectID,")"
AddWeatherEffectHint="[NATIVE]  AddWeatherEffect takes rect whichRect, integer effectID returns weathereffect"


TerrainDeformCrater=TerrainDeformCrater
TerrainDeformCrater="TerrainDeformCrater(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~permanent,")"
TerrainDeformCraterHint="[NATIVE]  TerrainDeformCrater takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation"


TerrainDeformRipple=TerrainDeformRipple
TerrainDeformRipple="TerrainDeformRipple(",~x,", ",~y,", ",~radius,", ",~depth,", ",~duration,", ",~count,", ",~spaceWaves,", ",~timeWaves,", ",~radiusStartPct,", ",~limitNeg,")"
TerrainDeformRippleHint="[NATIVE]  TerrainDeformRipple takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation"


TerrainDeformWave=TerrainDeformWave
TerrainDeformWave="TerrainDeformWave(",~x,", ",~y,", ",~dirX,", ",~dirY,", ",~distance,", ",~speed,", ",~radius,", ",~depth,", ",~trailTime,", ",~count,")"
TerrainDeformWaveHint="[NATIVE]  TerrainDeformWave takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation"


TerrainDeformRandom=TerrainDeformRandom
TerrainDeformRandom="TerrainDeformRandom(",~x,", ",~y,", ",~radius,", ",~minDelta,", ",~maxDelta,", ",~duration,", ",~updateInterval,")"
TerrainDeformRandomHint="[NATIVE]  TerrainDeformRandom takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation"


AddSpellEffect=AddSpellEffect
AddSpellEffect="AddSpellEffect(",~abilityString,", ",~whichEffectType,", ",~x,", ",~y,")"
AddSpellEffectHint="[NATIVE]  AddSpellEffect takes string abilityString, effecttype whichEffectType, real x, real y returns effect"


AddSpellEffectLoc=AddSpellEffectLoc
AddSpellEffectLoc="AddSpellEffectLoc(",~abilityString,", ",~whichEffectType,", ",~where,")"
AddSpellEffectLocHint="[NATIVE]  AddSpellEffectLoc takes string abilityString, effecttype whichEffectType, location where returns effect"


AddSpellEffectTarget=AddSpellEffectTarget
AddSpellEffectTarget="AddSpellEffectTarget(",~modelName,", ",~whichEffectType,", ",~targetWidget,", ",~attachPoint,")"
AddSpellEffectTargetHint="[NATIVE]  AddSpellEffectTarget takes string modelName, effecttype whichEffectType, widget targetWidget, string attachPoint returns effect"


AddLightning=AddLightning
AddLightning="AddLightning(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
AddLightningHint="[NATIVE]  AddLightning takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning"


AddLightningEx=AddLightningEx
AddLightningEx="AddLightningEx(",~codeName,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~z1,", ",~x2,", ",~y2,", ",~z2,")"
AddLightningExHint="[NATIVE]  AddLightningEx takes string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns lightning"


DestroyLightning=DestroyLightning
DestroyLightning="DestroyLightning(",~whichBolt,")"
DestroyLightningHint="[NATIVE]  DestroyLightning takes lightning whichBolt returns boolean"


MoveLightning=MoveLightning
MoveLightning="MoveLightning(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~x2,", ",~y2,")"
MoveLightningHint="[NATIVE]  MoveLightning takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean"


MoveLightningEx=MoveLightningEx
MoveLightningEx="MoveLightningEx(",~whichBolt,", ",~checkVisibility,", ",~x1,", ",~y1,", ",~z1,", ",~x2,", ",~y2,", ",~z2,")"
MoveLightningExHint="[NATIVE]  MoveLightningEx takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns boolean"


GetLightningColorA=GetLightningColorA
GetLightningColorA="GetLightningColorA(",~whichBolt,")"
GetLightningColorAHint="[NATIVE]  GetLightningColorA takes lightning whichBolt returns real"


GetLightningColorR=GetLightningColorR
GetLightningColorR="GetLightningColorR(",~whichBolt,")"
GetLightningColorRHint="[NATIVE]  GetLightningColorR takes lightning whichBolt returns real"


GetLightningColorG=GetLightningColorG
GetLightningColorG="GetLightningColorG(",~whichBolt,")"
GetLightningColorGHint="[NATIVE]  GetLightningColorG takes lightning whichBolt returns real"


GetLightningColorB=GetLightningColorB
GetLightningColorB="GetLightningColorB(",~whichBolt,")"
GetLightningColorBHint="[NATIVE]  GetLightningColorB takes lightning whichBolt returns real"


SetLightningColor=SetLightningColor
SetLightningColor="SetLightningColor(",~whichBolt,", ",~r,", ",~g,", ",~b,", ",~a,")"
SetLightningColorHint="[NATIVE]  SetLightningColor takes lightning whichBolt, real r, real g, real b, real a returns boolean"


GetAbilityEffect=GetAbilityEffect
GetAbilityEffect="GetAbilityEffect(",~abilityString,", ",~whichEffectType,", ",~index,")"
GetAbilityEffectHint="[NATIVE]  GetAbilityEffect takes string abilityString, effecttype whichEffectType, integer index returns string"


GetAbilitySound=GetAbilitySound
GetAbilitySound="GetAbilitySound(",~abilityString,", ",~whichSoundType,")"
GetAbilitySoundHint="[NATIVE]  GetAbilitySound takes string abilityString, soundtype whichSoundType returns string"


GetTerrainCliffLevel=GetTerrainCliffLevel
GetTerrainCliffLevel="GetTerrainCliffLevel(",~x,", ",~y,")"
GetTerrainCliffLevelHint="[NATIVE]  GetTerrainCliffLevel takes real x, real y returns integer"


GetTerrainType=GetTerrainType
GetTerrainType="GetTerrainType(",~x,", ",~y,")"
GetTerrainTypeHint="[NATIVE]  GetTerrainType takes real x, real y returns integer"


GetTerrainVariance=GetTerrainVariance
GetTerrainVariance="GetTerrainVariance(",~x,", ",~y,")"
GetTerrainVarianceHint="[NATIVE]  GetTerrainVariance takes real x, real y returns integer"


IsTerrainPathable=IsTerrainPathable
IsTerrainPathable="IsTerrainPathable(",~x,", ",~y,", ",~t,")"
IsTerrainPathableHint="[NATIVE]  IsTerrainPathable takes real x, real y, pathingtype t returns boolean"


CreateImage=CreateImage
CreateImage="CreateImage(",~file,", ",~sizeX,", ",~sizeY,", ",~sizeZ,", ",~posX,", ",~posY,", ",~posZ,", ",~originX,", ",~originY,", ",~originZ,", ",~imageType,")"
CreateImageHint="[NATIVE]  CreateImage takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image"


CreateUbersplat=CreateUbersplat
CreateUbersplat="CreateUbersplat(",~x,", ",~y,", ",~name,", ",~red,", ",~green,", ",~blue,", ",~alpha,", ",~forcePaused,", ",~noBirthTime,")"
CreateUbersplatHint="[NATIVE]  CreateUbersplat takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat"


CreateBlightedGoldmine=CreateBlightedGoldmine
CreateBlightedGoldmine="CreateBlightedGoldmine(",~whichPlayer,", ",~x,", ",~y,", ",~facing,")"
CreateBlightedGoldmineHint="[NATIVE]  CreateBlightedGoldmine takes player whichPlayer, real x, real y, real facing returns unit"


IsPointBlighted=IsPointBlighted
IsPointBlighted="IsPointBlighted(",~x,", ",~y,")"
IsPointBlightedHint="[NATIVE]  IsPointBlighted takes real x, real y returns boolean"


IsNoVictoryCheat=IsNoVictoryCheat
IsNoVictoryCheat="IsNoVictoryCheat(",")"
IsNoVictoryCheatHint="[NATIVE]  IsNoVictoryCheat takes nothing returns boolean"


IsNoDefeatCheat=IsNoDefeatCheat
IsNoDefeatCheat="IsNoDefeatCheat(",")"
IsNoDefeatCheatHint="[NATIVE]  IsNoDefeatCheat takes nothing returns boolean"


BitwiseGetBit=BitwiseGetBit
BitwiseGetBit="BitwiseGetBit(",~i,", ",~bitIndex,")"
BitwiseGetBitHint="[UjAPI]  BitwiseGetBit takes integer i, integer bitIndex returns integer"


BitwiseSetBit=BitwiseSetBit
BitwiseSetBit="BitwiseSetBit(",~i,", ",~bitIndex,", ",~bitValue,")"
BitwiseSetBitHint="[UjAPI]  BitwiseSetBit takes integer i, integer bitIndex, integer bitValue returns integer"


BitwiseGetByte=BitwiseGetByte
BitwiseGetByte="BitwiseGetByte(",~i,", ",~byteIndex,")"
BitwiseGetByteHint="[UjAPI]  BitwiseGetByte takes integer i, integer byteIndex returns integer"


BitwiseSetByte=BitwiseSetByte
BitwiseSetByte="BitwiseSetByte(",~i,", ",~byteIndex,", ",~byteValue,")"
BitwiseSetByteHint="[UjAPI]  BitwiseSetByte takes integer i, integer byteIndex, integer byteValue returns integer"


BitwiseNOT=BitwiseNOT
BitwiseNOT="BitwiseNOT(",~i,")"
BitwiseNOTHint="[UjAPI]  BitwiseNOT takes integer i returns integer"


BitwiseAND=BitwiseAND
BitwiseAND="BitwiseAND(",~a,", ",~b,")"
BitwiseANDHint="[UjAPI]  BitwiseAND takes integer a, integer b returns integer"


BitwiseOR=BitwiseOR
BitwiseOR="BitwiseOR(",~a,", ",~b,")"
BitwiseORHint="[UjAPI]  BitwiseOR takes integer a, integer b returns integer"


BitwiseXOR=BitwiseXOR
BitwiseXOR="BitwiseXOR(",~a,", ",~b,")"
BitwiseXORHint="[UjAPI]  BitwiseXOR takes integer a, integer b returns integer"


BitwiseShiftLeft=BitwiseShiftLeft
BitwiseShiftLeft="BitwiseShiftLeft(",~i,", ",~bitsToShift,")"
BitwiseShiftLeftHint="[UjAPI]  BitwiseShiftLeft takes integer i, integer bitsToShift returns integer"


BitwiseShiftLeftLogical=BitwiseShiftLeftLogical
BitwiseShiftLeftLogical="BitwiseShiftLeftLogical(",~i,", ",~bitsToShift,")"
BitwiseShiftLeftLogicalHint="[UjAPI]  BitwiseShiftLeftLogical takes integer i, integer bitsToShift returns integer"


BitwiseShiftRight=BitwiseShiftRight
BitwiseShiftRight="BitwiseShiftRight(",~i,", ",~bitsToShift,")"
BitwiseShiftRightHint="[UjAPI]  BitwiseShiftRight takes integer i, integer bitsToShift returns integer"


BitwiseShiftRightLogical=BitwiseShiftRightLogical
BitwiseShiftRightLogical="BitwiseShiftRightLogical(",~i,", ",~bitsToShift,")"
BitwiseShiftRightLogicalHint="[UjAPI]  BitwiseShiftRightLogical takes integer i, integer bitsToShift returns integer"


BitwiseToInteger=BitwiseToInteger
BitwiseToInteger="BitwiseToInteger(",~byte1,", ",~byte2,", ",~byte3,", ",~byte4,")"
BitwiseToIntegerHint="[UjAPI]  BitwiseToInteger takes integer byte1, integer byte2, integer byte3, integer byte4 returns integer"


Id2String=Id2String
Id2String="Id2String(",~i,")"
Id2StringHint="[UjAPI]  Id2String takes integer i returns string"


String2Id=String2Id
String2Id="String2Id(",~idString,")"
String2IdHint="[UjAPI]  String2Id takes string idString returns integer"


IntToHex=IntToHex
IntToHex="IntToHex(",~i,")"
IntToHexHint="[UjAPI]  IntToHex takes integer i returns string"


IntToChar=IntToChar
IntToChar="IntToChar(",~i,")"
IntToCharHint="[UjAPI]  IntToChar takes integer i returns string"


IntToRoman=IntToRoman
IntToRoman="IntToRoman(",~i,")"
IntToRomanHint="[UjAPI]  IntToRoman takes integer i returns string"


HexToInt=HexToInt
HexToInt="HexToInt(",~hex,")"
HexToIntHint="[UjAPI]  HexToInt takes string hex returns integer"


ConvertColour=ConvertColour
ConvertColour="ConvertColour(",~alpha,", ",~red,", ",~green,", ",~blue,")"
ConvertColourHint="[UjAPI]  ConvertColour takes integer alpha, integer red, integer green, integer blue returns integer"


IntegerToHandle=IntegerToHandle
IntegerToHandle="IntegerToHandle(",~i,")"
IntegerToHandleHint="[UjAPI]  IntegerToHandle takes integer i returns handle"


AddressToHandle=AddressToHandle
AddressToHandle="AddressToHandle(",~i,")"
AddressToHandleHint="[UjAPI]  AddressToHandle takes integer i returns handle"


HandleToAddress=HandleToAddress
HandleToAddress="HandleToAddress(",~h,")"
HandleToAddressHint="[UjAPI]  HandleToAddress takes handle h returns integer"


I2C=I2C
I2C="I2C(",~i,")"
I2CHint="[UjAPI]  I2C takes integer i returns code"


C2I=C2I
C2I="C2I(",~c,")"
C2IHint="[UjAPI]  C2I takes code c returns integer"


HandleToHandle=HandleToHandle
HandleToHandle="HandleToHandle(",~h,")"
HandleToHandleHint="[UjAPI]  HandleToHandle takes handle h returns handle"


HandleToAgent=HandleToAgent
HandleToAgent="HandleToAgent(",~h,")"
HandleToAgentHint="[UjAPI]  HandleToAgent takes handle h returns agent"


HandleToEvent=HandleToEvent
HandleToEvent="HandleToEvent(",~h,")"
HandleToEventHint="[UjAPI]  HandleToEvent takes handle h returns event"


HandleToWidget=HandleToWidget
HandleToWidget="HandleToWidget(",~h,")"
HandleToWidgetHint="[UjAPI]  HandleToWidget takes handle h returns widget"


HandleToUnit=HandleToUnit
HandleToUnit="HandleToUnit(",~h,")"
HandleToUnitHint="[UjAPI]  HandleToUnit takes handle h returns unit"


HandleToDestructable=HandleToDestructable
HandleToDestructable="HandleToDestructable(",~h,")"
HandleToDestructableHint="[UjAPI]  HandleToDestructable takes handle h returns destructable"


HandleToItem=HandleToItem
HandleToItem="HandleToItem(",~h,")"
HandleToItemHint="[UjAPI]  HandleToItem takes handle h returns item"


HandleToAbility=HandleToAbility
HandleToAbility="HandleToAbility(",~h,")"
HandleToAbilityHint="[UjAPI]  HandleToAbility takes handle h returns ability"


HandleToBuff=HandleToBuff
HandleToBuff="HandleToBuff(",~h,")"
HandleToBuffHint="[UjAPI]  HandleToBuff takes handle h returns buff"


HandleToForce=HandleToForce
HandleToForce="HandleToForce(",~h,")"
HandleToForceHint="[UjAPI]  HandleToForce takes handle h returns force"


HandleToGroup=HandleToGroup
HandleToGroup="HandleToGroup(",~h,")"
HandleToGroupHint="[UjAPI]  HandleToGroup takes handle h returns group"


HandleToTrigger=HandleToTrigger
HandleToTrigger="HandleToTrigger(",~h,")"
HandleToTriggerHint="[UjAPI]  HandleToTrigger takes handle h returns trigger"


HandleToTriggercondition=HandleToTriggercondition
HandleToTriggercondition="HandleToTriggercondition(",~h,")"
HandleToTriggerconditionHint="[UjAPI]  HandleToTriggercondition takes handle h returns triggercondition"


HandleToTriggeraction=HandleToTriggeraction
HandleToTriggeraction="HandleToTriggeraction(",~h,")"
HandleToTriggeractionHint="[UjAPI]  HandleToTriggeraction takes handle h returns triggeraction"


HandleToTimer=HandleToTimer
HandleToTimer="HandleToTimer(",~h,")"
HandleToTimerHint="[UjAPI]  HandleToTimer takes handle h returns timer"


HandleToLocation=HandleToLocation
HandleToLocation="HandleToLocation(",~h,")"
HandleToLocationHint="[UjAPI]  HandleToLocation takes handle h returns location"


HandleToRegion=HandleToRegion
HandleToRegion="HandleToRegion(",~h,")"
HandleToRegionHint="[UjAPI]  HandleToRegion takes handle h returns region"


HandleToRect=HandleToRect
HandleToRect="HandleToRect(",~h,")"
HandleToRectHint="[UjAPI]  HandleToRect takes handle h returns rect"


HandleToBoolexpr=HandleToBoolexpr
HandleToBoolexpr="HandleToBoolexpr(",~h,")"
HandleToBoolexprHint="[UjAPI]  HandleToBoolexpr takes handle h returns boolexpr"


HandleToSound=HandleToSound
HandleToSound="HandleToSound(",~h,")"
HandleToSoundHint="[UjAPI]  HandleToSound takes handle h returns sound"


HandleToConditionfunc=HandleToConditionfunc
HandleToConditionfunc="HandleToConditionfunc(",~h,")"
HandleToConditionfuncHint="[UjAPI]  HandleToConditionfunc takes handle h returns conditionfunc"


HandleToFilterfunc=HandleToFilterfunc
HandleToFilterfunc="HandleToFilterfunc(",~h,")"
HandleToFilterfuncHint="[UjAPI]  HandleToFilterfunc takes handle h returns filterfunc"


HandleToUnitpool=HandleToUnitpool
HandleToUnitpool="HandleToUnitpool(",~h,")"
HandleToUnitpoolHint="[UjAPI]  HandleToUnitpool takes handle h returns unitpool"


HandleToItempool=HandleToItempool
HandleToItempool="HandleToItempool(",~h,")"
HandleToItempoolHint="[UjAPI]  HandleToItempool takes handle h returns itempool"


HandleToRace=HandleToRace
HandleToRace="HandleToRace(",~h,")"
HandleToRaceHint="[UjAPI]  HandleToRace takes handle h returns race"


HandleToAlliancetype=HandleToAlliancetype
HandleToAlliancetype="HandleToAlliancetype(",~h,")"
HandleToAlliancetypeHint="[UjAPI]  HandleToAlliancetype takes handle h returns alliancetype"


HandleToRacepreference=HandleToRacepreference
HandleToRacepreference="HandleToRacepreference(",~h,")"
HandleToRacepreferenceHint="[UjAPI]  HandleToRacepreference takes handle h returns racepreference"


HandleToGamestate=HandleToGamestate
HandleToGamestate="HandleToGamestate(",~h,")"
HandleToGamestateHint="[UjAPI]  HandleToGamestate takes handle h returns gamestate"


HandleToIGamestate=HandleToIGamestate
HandleToIGamestate="HandleToIGamestate(",~h,")"
HandleToIGamestateHint="[UjAPI]  HandleToIGamestate takes handle h returns igamestate"


HandleToFGamestate=HandleToFGamestate
HandleToFGamestate="HandleToFGamestate(",~h,")"
HandleToFGamestateHint="[UjAPI]  HandleToFGamestate takes handle h returns fgamestate"


HandleToPlayerstate=HandleToPlayerstate
HandleToPlayerstate="HandleToPlayerstate(",~h,")"
HandleToPlayerstateHint="[UjAPI]  HandleToPlayerstate takes handle h returns playerstate"


HandleToPlayerscore=HandleToPlayerscore
HandleToPlayerscore="HandleToPlayerscore(",~h,")"
HandleToPlayerscoreHint="[UjAPI]  HandleToPlayerscore takes handle h returns playerscore"


HandleToPlayergameresult=HandleToPlayergameresult
HandleToPlayergameresult="HandleToPlayergameresult(",~h,")"
HandleToPlayergameresultHint="[UjAPI]  HandleToPlayergameresult takes handle h returns playergameresult"


HandleToUnitstate=HandleToUnitstate
HandleToUnitstate="HandleToUnitstate(",~h,")"
HandleToUnitstateHint="[UjAPI]  HandleToUnitstate takes handle h returns unitstate"


HandleToAIDifficulty=HandleToAIDifficulty
HandleToAIDifficulty="HandleToAIDifficulty(",~h,")"
HandleToAIDifficultyHint="[UjAPI]  HandleToAIDifficulty takes handle h returns aidifficulty"


HandleToEventid=HandleToEventid
HandleToEventid="HandleToEventid(",~h,")"
HandleToEventidHint="[UjAPI]  HandleToEventid takes handle h returns eventid"


HandleToGameevent=HandleToGameevent
HandleToGameevent="HandleToGameevent(",~h,")"
HandleToGameeventHint="[UjAPI]  HandleToGameevent takes handle h returns gameevent"


HandleToPlayerevent=HandleToPlayerevent
HandleToPlayerevent="HandleToPlayerevent(",~h,")"
HandleToPlayereventHint="[UjAPI]  HandleToPlayerevent takes handle h returns playerevent"


HandleToPlayerunitevent=HandleToPlayerunitevent
HandleToPlayerunitevent="HandleToPlayerunitevent(",~h,")"
HandleToPlayeruniteventHint="[UjAPI]  HandleToPlayerunitevent takes handle h returns playerunitevent"


HandleToUnitevent=HandleToUnitevent
HandleToUnitevent="HandleToUnitevent(",~h,")"
HandleToUniteventHint="[UjAPI]  HandleToUnitevent takes handle h returns unitevent"


HandleToLimitop=HandleToLimitop
HandleToLimitop="HandleToLimitop(",~h,")"
HandleToLimitopHint="[UjAPI]  HandleToLimitop takes handle h returns limitop"


HandleToWidgetevent=HandleToWidgetevent
HandleToWidgetevent="HandleToWidgetevent(",~h,")"
HandleToWidgeteventHint="[UjAPI]  HandleToWidgetevent takes handle h returns widgetevent"


HandleToDialogevent=HandleToDialogevent
HandleToDialogevent="HandleToDialogevent(",~h,")"
HandleToDialogeventHint="[UjAPI]  HandleToDialogevent takes handle h returns dialogevent"


HandleToUnittype=HandleToUnittype
HandleToUnittype="HandleToUnittype(",~h,")"
HandleToUnittypeHint="[UjAPI]  HandleToUnittype takes handle h returns unittype"


HandleToGamespeed=HandleToGamespeed
HandleToGamespeed="HandleToGamespeed(",~h,")"
HandleToGamespeedHint="[UjAPI]  HandleToGamespeed takes handle h returns gamespeed"


HandleToGamedifficulty=HandleToGamedifficulty
HandleToGamedifficulty="HandleToGamedifficulty(",~h,")"
HandleToGamedifficultyHint="[UjAPI]  HandleToGamedifficulty takes handle h returns gamedifficulty"


HandleToGametype=HandleToGametype
HandleToGametype="HandleToGametype(",~h,")"
HandleToGametypeHint="[UjAPI]  HandleToGametype takes handle h returns gametype"


HandleToMapflag=HandleToMapflag
HandleToMapflag="HandleToMapflag(",~h,")"
HandleToMapflagHint="[UjAPI]  HandleToMapflag takes handle h returns mapflag"


HandleToMapvisibility=HandleToMapvisibility
HandleToMapvisibility="HandleToMapvisibility(",~h,")"
HandleToMapvisibilityHint="[UjAPI]  HandleToMapvisibility takes handle h returns mapvisibility"


HandleToMapsetting=HandleToMapsetting
HandleToMapsetting="HandleToMapsetting(",~h,")"
HandleToMapsettingHint="[UjAPI]  HandleToMapsetting takes handle h returns mapsetting"


HandleToMapdensity=HandleToMapdensity
HandleToMapdensity="HandleToMapdensity(",~h,")"
HandleToMapdensityHint="[UjAPI]  HandleToMapdensity takes handle h returns mapdensity"


HandleToMapcontrol=HandleToMapcontrol
HandleToMapcontrol="HandleToMapcontrol(",~h,")"
HandleToMapcontrolHint="[UjAPI]  HandleToMapcontrol takes handle h returns mapcontrol"


HandleToPlayerslotstate=HandleToPlayerslotstate
HandleToPlayerslotstate="HandleToPlayerslotstate(",~h,")"
HandleToPlayerslotstateHint="[UjAPI]  HandleToPlayerslotstate takes handle h returns playerslotstate"


HandleToVolumegroup=HandleToVolumegroup
HandleToVolumegroup="HandleToVolumegroup(",~h,")"
HandleToVolumegroupHint="[UjAPI]  HandleToVolumegroup takes handle h returns volumegroup"


HandleToCamerafield=HandleToCamerafield
HandleToCamerafield="HandleToCamerafield(",~h,")"
HandleToCamerafieldHint="[UjAPI]  HandleToCamerafield takes handle h returns camerafield"


HandleToCamerasetup=HandleToCamerasetup
HandleToCamerasetup="HandleToCamerasetup(",~h,")"
HandleToCamerasetupHint="[UjAPI]  HandleToCamerasetup takes handle h returns camerasetup"


HandleToPlayercolor=HandleToPlayercolor
HandleToPlayercolor="HandleToPlayercolor(",~h,")"
HandleToPlayercolorHint="[UjAPI]  HandleToPlayercolor takes handle h returns playercolor"


HandleToPlacement=HandleToPlacement
HandleToPlacement="HandleToPlacement(",~h,")"
HandleToPlacementHint="[UjAPI]  HandleToPlacement takes handle h returns placement"


HandleToStartlocprio=HandleToStartlocprio
HandleToStartlocprio="HandleToStartlocprio(",~h,")"
HandleToStartlocprioHint="[UjAPI]  HandleToStartlocprio takes handle h returns startlocprio"


HandleToRaritycontrol=HandleToRaritycontrol
HandleToRaritycontrol="HandleToRaritycontrol(",~h,")"
HandleToRaritycontrolHint="[UjAPI]  HandleToRaritycontrol takes handle h returns raritycontrol"


HandleToBlendmode=HandleToBlendmode
HandleToBlendmode="HandleToBlendmode(",~h,")"
HandleToBlendmodeHint="[UjAPI]  HandleToBlendmode takes handle h returns blendmode"


HandleToTexmapflags=HandleToTexmapflags
HandleToTexmapflags="HandleToTexmapflags(",~h,")"
HandleToTexmapflagsHint="[UjAPI]  HandleToTexmapflags takes handle h returns texmapflags"


HandleToEffect=HandleToEffect
HandleToEffect="HandleToEffect(",~h,")"
HandleToEffectHint="[UjAPI]  HandleToEffect takes handle h returns effect"


HandleToEffecttype=HandleToEffecttype
HandleToEffecttype="HandleToEffecttype(",~h,")"
HandleToEffecttypeHint="[UjAPI]  HandleToEffecttype takes handle h returns effecttype"


HandleToWeathereffect=HandleToWeathereffect
HandleToWeathereffect="HandleToWeathereffect(",~h,")"
HandleToWeathereffectHint="[UjAPI]  HandleToWeathereffect takes handle h returns weathereffect"


HandleToTerraindeformation=HandleToTerraindeformation
HandleToTerraindeformation="HandleToTerraindeformation(",~h,")"
HandleToTerraindeformationHint="[UjAPI]  HandleToTerraindeformation takes handle h returns terraindeformation"


HandleToFogstate=HandleToFogstate
HandleToFogstate="HandleToFogstate(",~h,")"
HandleToFogstateHint="[UjAPI]  HandleToFogstate takes handle h returns fogstate"


HandleToFogmodifier=HandleToFogmodifier
HandleToFogmodifier="HandleToFogmodifier(",~h,")"
HandleToFogmodifierHint="[UjAPI]  HandleToFogmodifier takes handle h returns fogmodifier"


HandleToDialog=HandleToDialog
HandleToDialog="HandleToDialog(",~h,")"
HandleToDialogHint="[UjAPI]  HandleToDialog takes handle h returns dialog"


HandleToButton=HandleToButton
HandleToButton="HandleToButton(",~h,")"
HandleToButtonHint="[UjAPI]  HandleToButton takes handle h returns button"


HandleToQuest=HandleToQuest
HandleToQuest="HandleToQuest(",~h,")"
HandleToQuestHint="[UjAPI]  HandleToQuest takes handle h returns quest"


HandleToQuestitem=HandleToQuestitem
HandleToQuestitem="HandleToQuestitem(",~h,")"
HandleToQuestitemHint="[UjAPI]  HandleToQuestitem takes handle h returns questitem"


HandleToDefeatcondition=HandleToDefeatcondition
HandleToDefeatcondition="HandleToDefeatcondition(",~h,")"
HandleToDefeatconditionHint="[UjAPI]  HandleToDefeatcondition takes handle h returns defeatcondition"


HandleToTimerdialog=HandleToTimerdialog
HandleToTimerdialog="HandleToTimerdialog(",~h,")"
HandleToTimerdialogHint="[UjAPI]  HandleToTimerdialog takes handle h returns timerdialog"


HandleToLeaderboard=HandleToLeaderboard
HandleToLeaderboard="HandleToLeaderboard(",~h,")"
HandleToLeaderboardHint="[UjAPI]  HandleToLeaderboard takes handle h returns leaderboard"


HandleToMultiboard=HandleToMultiboard
HandleToMultiboard="HandleToMultiboard(",~h,")"
HandleToMultiboardHint="[UjAPI]  HandleToMultiboard takes handle h returns multiboard"


HandleToMultiboarditem=HandleToMultiboarditem
HandleToMultiboarditem="HandleToMultiboarditem(",~h,")"
HandleToMultiboarditemHint="[UjAPI]  HandleToMultiboarditem takes handle h returns multiboarditem"


HandleToTrackable=HandleToTrackable
HandleToTrackable="HandleToTrackable(",~h,")"
HandleToTrackableHint="[UjAPI]  HandleToTrackable takes handle h returns trackable"


HandleToGamecache=HandleToGamecache
HandleToGamecache="HandleToGamecache(",~h,")"
HandleToGamecacheHint="[UjAPI]  HandleToGamecache takes handle h returns gamecache"


HandleToVersion=HandleToVersion
HandleToVersion="HandleToVersion(",~h,")"
HandleToVersionHint="[UjAPI]  HandleToVersion takes handle h returns version"


HandleToItemtype=HandleToItemtype
HandleToItemtype="HandleToItemtype(",~h,")"
HandleToItemtypeHint="[UjAPI]  HandleToItemtype takes handle h returns itemtype"


HandleToTexttag=HandleToTexttag
HandleToTexttag="HandleToTexttag(",~h,")"
HandleToTexttagHint="[UjAPI]  HandleToTexttag takes handle h returns texttag"


HandleToAttacktype=HandleToAttacktype
HandleToAttacktype="HandleToAttacktype(",~h,")"
HandleToAttacktypeHint="[UjAPI]  HandleToAttacktype takes handle h returns attacktype"


HandleToDamagetype=HandleToDamagetype
HandleToDamagetype="HandleToDamagetype(",~h,")"
HandleToDamagetypeHint="[UjAPI]  HandleToDamagetype takes handle h returns damagetype"


HandleToWeapontype=HandleToWeapontype
HandleToWeapontype="HandleToWeapontype(",~h,")"
HandleToWeapontypeHint="[UjAPI]  HandleToWeapontype takes handle h returns weapontype"


HandleToSoundtype=HandleToSoundtype
HandleToSoundtype="HandleToSoundtype(",~h,")"
HandleToSoundtypeHint="[UjAPI]  HandleToSoundtype takes handle h returns soundtype"


HandleToLightning=HandleToLightning
HandleToLightning="HandleToLightning(",~h,")"
HandleToLightningHint="[UjAPI]  HandleToLightning takes handle h returns lightning"


HandleToPathingtype=HandleToPathingtype
HandleToPathingtype="HandleToPathingtype(",~h,")"
HandleToPathingtypeHint="[UjAPI]  HandleToPathingtype takes handle h returns pathingtype"


HandleToImage=HandleToImage
HandleToImage="HandleToImage(",~h,")"
HandleToImageHint="[UjAPI]  HandleToImage takes handle h returns image"


HandleToUbersplat=HandleToUbersplat
HandleToUbersplat="HandleToUbersplat(",~h,")"
HandleToUbersplatHint="[UjAPI]  HandleToUbersplat takes handle h returns ubersplat"


HandleToHashtable=HandleToHashtable
HandleToHashtable="HandleToHashtable(",~h,")"
HandleToHashtableHint="[UjAPI]  HandleToHashtable takes handle h returns hashtable"


HandleToAnimType=HandleToAnimType
HandleToAnimType="HandleToAnimType(",~h,")"
HandleToAnimTypeHint="[UjAPI]  HandleToAnimType takes handle h returns animtype"


HandleToSubAnimType=HandleToSubAnimType
HandleToSubAnimType="HandleToSubAnimType(",~h,")"
HandleToSubAnimTypeHint="[UjAPI]  HandleToSubAnimType takes handle h returns subanimtype"


GetHandleCount=GetHandleCount
GetHandleCount="GetHandleCount(",")"
GetHandleCountHint="[UjAPI]  GetHandleCount takes nothing returns integer"


GetNextHandleIndex=GetNextHandleIndex
GetNextHandleIndex="GetNextHandleIndex(",")"
GetNextHandleIndexHint="[UjAPI]  GetNextHandleIndex takes nothing returns integer"


GetStringCount=GetStringCount
GetStringCount="GetStringCount(",")"
GetStringCountHint="[UjAPI]  GetStringCount takes nothing returns integer"


GetJassMainThread=GetJassMainThread
GetJassMainThread="GetJassMainThread(",")"
GetJassMainThreadHint="[UjAPI]  GetJassMainThread takes nothing returns jassthread"


GetJassCurrentThread=GetJassCurrentThread
GetJassCurrentThread="GetJassCurrentThread(",")"
GetJassCurrentThreadHint="[UjAPI]  GetJassCurrentThread takes nothing returns jassthread"


RunJassScriptEx=RunJassScriptEx
RunJassScriptEx="RunJassScriptEx(",~parentScriptFile,", ",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptExHint="[UjAPI]  RunJassScriptEx takes string parentScriptFile, string helperScriptFile, string jassScriptFile returns jassthread"


RunJassScript=RunJassScript
RunJassScript="RunJassScript(",~helperScriptFile,", ",~jassScriptFile,")"
RunJassScriptHint="[UjAPI]  RunJassScript takes string helperScriptFile, string jassScriptFile returns jassthread"


RunJassScriptSimple=RunJassScriptSimple
RunJassScriptSimple="RunJassScriptSimple(",~jassScriptFile,")"
RunJassScriptSimpleHint="[UjAPI]  RunJassScriptSimple takes string jassScriptFile returns jassthread"


StopJassThread=StopJassThread
StopJassThread="StopJassThread(",~thread,")"
StopJassThreadHint="[UjAPI]  StopJassThread takes jassthread thread returns boolean"


GetJassGlobalInteger=GetJassGlobalInteger
GetJassGlobalInteger="GetJassGlobalInteger(",~thread,", ",~variableName,")"
GetJassGlobalIntegerHint="[UjAPI]  GetJassGlobalInteger takes jassthread thread, string variableName returns integer"


GetJassGlobalReal=GetJassGlobalReal
GetJassGlobalReal="GetJassGlobalReal(",~thread,", ",~variableName,")"
GetJassGlobalRealHint="[UjAPI]  GetJassGlobalReal takes jassthread thread, string variableName returns real"


GetJassGlobalString=GetJassGlobalString
GetJassGlobalString="GetJassGlobalString(",~thread,", ",~variableName,")"
GetJassGlobalStringHint="[UjAPI]  GetJassGlobalString takes jassthread thread, string variableName returns string"


GetJassGlobalHandle=GetJassGlobalHandle
GetJassGlobalHandle="GetJassGlobalHandle(",~thread,", ",~variableName,")"
GetJassGlobalHandleHint="[UjAPI]  GetJassGlobalHandle takes jassthread thread, string variableName returns handle"


GetJassGlobalBoolean=GetJassGlobalBoolean
GetJassGlobalBoolean="GetJassGlobalBoolean(",~thread,", ",~variableName,")"
GetJassGlobalBooleanHint="[UjAPI]  GetJassGlobalBoolean takes jassthread thread, string variableName returns boolean"


SetJassGlobalInteger=SetJassGlobalInteger
SetJassGlobalInteger="SetJassGlobalInteger(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalIntegerHint="[UjAPI]  SetJassGlobalInteger takes jassthread thread, string variableName, integer value returns boolean"


SetJassGlobalReal=SetJassGlobalReal
SetJassGlobalReal="SetJassGlobalReal(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalRealHint="[UjAPI]  SetJassGlobalReal takes jassthread thread, string variableName, real value returns boolean"


SetJassGlobalString=SetJassGlobalString
SetJassGlobalString="SetJassGlobalString(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalStringHint="[UjAPI]  SetJassGlobalString takes jassthread thread, string variableName, string value returns boolean"


SetJassGlobalHandle=SetJassGlobalHandle
SetJassGlobalHandle="SetJassGlobalHandle(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalHandleHint="[UjAPI]  SetJassGlobalHandle takes jassthread thread, string variableName, handle value returns boolean"


SetJassGlobalBoolean=SetJassGlobalBoolean
SetJassGlobalBoolean="SetJassGlobalBoolean(",~thread,", ",~variableName,", ",~value,")"
SetJassGlobalBooleanHint="[UjAPI]  SetJassGlobalBoolean takes jassthread thread, string variableName, boolean value returns boolean"


GetJassLocalInteger=GetJassLocalInteger
GetJassLocalInteger="GetJassLocalInteger(",~variableName,")"
GetJassLocalIntegerHint="[UjAPI]  GetJassLocalInteger takes string variableName returns integer"


GetJassLocalReal=GetJassLocalReal
GetJassLocalReal="GetJassLocalReal(",~variableName,")"
GetJassLocalRealHint="[UjAPI]  GetJassLocalReal takes string variableName returns real"


GetJassLocalString=GetJassLocalString
GetJassLocalString="GetJassLocalString(",~variableName,")"
GetJassLocalStringHint="[UjAPI]  GetJassLocalString takes string variableName returns string"


GetJassLocalHandle=GetJassLocalHandle
GetJassLocalHandle="GetJassLocalHandle(",~variableName,")"
GetJassLocalHandleHint="[UjAPI]  GetJassLocalHandle takes string variableName returns handle"


GetJassLocalBoolean=GetJassLocalBoolean
GetJassLocalBoolean="GetJassLocalBoolean(",~variableName,")"
GetJassLocalBooleanHint="[UjAPI]  GetJassLocalBoolean takes string variableName returns boolean"


SetJassLocalInteger=SetJassLocalInteger
SetJassLocalInteger="SetJassLocalInteger(",~variableName,", ",~value,")"
SetJassLocalIntegerHint="[UjAPI]  SetJassLocalInteger takes string variableName, integer value returns boolean"


SetJassLocalReal=SetJassLocalReal
SetJassLocalReal="SetJassLocalReal(",~variableName,", ",~value,")"
SetJassLocalRealHint="[UjAPI]  SetJassLocalReal takes string variableName, real value returns boolean"


SetJassLocalString=SetJassLocalString
SetJassLocalString="SetJassLocalString(",~variableName,", ",~value,")"
SetJassLocalStringHint="[UjAPI]  SetJassLocalString takes string variableName, string value returns boolean"


SetJassLocalHandle=SetJassLocalHandle
SetJassLocalHandle="SetJassLocalHandle(",~variableName,", ",~value,")"
SetJassLocalHandleHint="[UjAPI]  SetJassLocalHandle takes string variableName, handle value returns boolean"


SetJassLocalBoolean=SetJassLocalBoolean
SetJassLocalBoolean="SetJassLocalBoolean(",~variableName,", ",~value,")"
SetJassLocalBooleanHint="[UjAPI]  SetJassLocalBoolean takes string variableName, boolean value returns boolean"


IsOperationLimitEnabled=IsOperationLimitEnabled
IsOperationLimitEnabled="IsOperationLimitEnabled(",")"
IsOperationLimitEnabledHint="[UjAPI]  IsOperationLimitEnabled takes nothing returns boolean"


GetOperationLimit=GetOperationLimit
GetOperationLimit="GetOperationLimit(",")"
GetOperationLimitHint="[UjAPI]  GetOperationLimit takes nothing returns integer"


GetCodeByName=GetCodeByName
GetCodeByName="GetCodeByName(",~funcName,")"
GetCodeByNameHint="[UjAPI]  GetCodeByName takes string funcName returns code"


MathRound=MathRound
MathRound="MathRound(",~r,")"
MathRoundHint="[UjAPI]  MathRound takes real r returns integer"


MathRealRound=MathRealRound
MathRealRound="MathRealRound(",~r,")"
MathRealRoundHint="[UjAPI]  MathRealRound takes real r returns real"


MathRealFloor=MathRealFloor
MathRealFloor="MathRealFloor(",~r,")"
MathRealFloorHint="[UjAPI]  MathRealFloor takes real r returns real"


MathRealCeil=MathRealCeil
MathRealCeil="MathRealCeil(",~r,")"
MathRealCeilHint="[UjAPI]  MathRealCeil takes real r returns real"


MathRealAbs=MathRealAbs
MathRealAbs="MathRealAbs(",~r,")"
MathRealAbsHint="[UjAPI]  MathRealAbs takes real r returns real"


MathRealLog=MathRealLog
MathRealLog="MathRealLog(",~r,")"
MathRealLogHint="[UjAPI]  MathRealLog takes real r returns real"


MathRealLn=MathRealLn
MathRealLn="MathRealLn(",~r,")"
MathRealLnHint="[UjAPI]  MathRealLn takes real r returns real"


MathRealModulo=MathRealModulo
MathRealModulo="MathRealModulo(",~dividend,", ",~divisor,")"
MathRealModuloHint="[UjAPI]  MathRealModulo takes real dividend, real divisor returns real"


MathRealMin=MathRealMin
MathRealMin="MathRealMin(",~a,", ",~b,")"
MathRealMinHint="[UjAPI]  MathRealMin takes real a, real b returns real"


MathRealMax=MathRealMax
MathRealMax="MathRealMax(",~a,", ",~b,")"
MathRealMaxHint="[UjAPI]  MathRealMax takes real a, real b returns real"


MathRealSign=MathRealSign
MathRealSign="MathRealSign(",~r,")"
MathRealSignHint="[UjAPI]  MathRealSign takes real r returns integer"


MathRealClamp=MathRealClamp
MathRealClamp="MathRealClamp(",~value,", ",~min,", ",~max,")"
MathRealClampHint="[UjAPI]  MathRealClamp takes real value, real min, real max returns real"


MathRealLerp=MathRealLerp
MathRealLerp="MathRealLerp(",~a,", ",~b,", ",~t,")"
MathRealLerpHint="[UjAPI]  MathRealLerp takes real a, real b, real t returns real"


MathIntegerAbs=MathIntegerAbs
MathIntegerAbs="MathIntegerAbs(",~i,")"
MathIntegerAbsHint="[UjAPI]  MathIntegerAbs takes integer i returns integer"


MathIntegerLog=MathIntegerLog
MathIntegerLog="MathIntegerLog(",~i,")"
MathIntegerLogHint="[UjAPI]  MathIntegerLog takes integer i returns real"


MathIntegerLn=MathIntegerLn
MathIntegerLn="MathIntegerLn(",~i,")"
MathIntegerLnHint="[UjAPI]  MathIntegerLn takes integer i returns real"


MathIntegerModulo=MathIntegerModulo
MathIntegerModulo="MathIntegerModulo(",~dividend,", ",~divisor,")"
MathIntegerModuloHint="[UjAPI]  MathIntegerModulo takes integer dividend, integer divisor returns integer"


MathIntegerMin=MathIntegerMin
MathIntegerMin="MathIntegerMin(",~a,", ",~b,")"
MathIntegerMinHint="[UjAPI]  MathIntegerMin takes integer a, integer b returns integer"


MathIntegerMax=MathIntegerMax
MathIntegerMax="MathIntegerMax(",~a,", ",~b,")"
MathIntegerMaxHint="[UjAPI]  MathIntegerMax takes integer a, integer b returns integer"


MathIntegerSign=MathIntegerSign
MathIntegerSign="MathIntegerSign(",~i,")"
MathIntegerSignHint="[UjAPI]  MathIntegerSign takes integer i returns integer"


MathIntegerClamp=MathIntegerClamp
MathIntegerClamp="MathIntegerClamp(",~value,", ",~min,", ",~max,")"
MathIntegerClampHint="[UjAPI]  MathIntegerClamp takes integer value, integer min, integer max returns integer"


MathSinDeg=MathSinDeg
MathSinDeg="MathSinDeg(",~r,")"
MathSinDegHint="[UjAPI]  MathSinDeg takes real r returns real"


MathCosDeg=MathCosDeg
MathCosDeg="MathCosDeg(",~r,")"
MathCosDegHint="[UjAPI]  MathCosDeg takes real r returns real"


MathTanDeg=MathTanDeg
MathTanDeg="MathTanDeg(",~r,")"
MathTanDegHint="[UjAPI]  MathTanDeg takes real r returns real"


MathPointProjectionX=MathPointProjectionX
MathPointProjectionX="MathPointProjectionX(",~x,", ",~angle,", ",~distance,")"
MathPointProjectionXHint="[UjAPI]  MathPointProjectionX takes real x, real angle, real distance returns real"


MathPointProjectionY=MathPointProjectionY
MathPointProjectionY="MathPointProjectionY(",~y,", ",~angle,", ",~distance,")"
MathPointProjectionYHint="[UjAPI]  MathPointProjectionY takes real y, real angle, real distance returns real"


MathAngleBetweenPoints=MathAngleBetweenPoints
MathAngleBetweenPoints="MathAngleBetweenPoints(",~fromX,", ",~fromY,", ",~toX,", ",~toY,")"
MathAngleBetweenPointsHint="[UjAPI]  MathAngleBetweenPoints takes real fromX, real fromY, real toX, real toY returns real"


MathDistanceBetweenPoints=MathDistanceBetweenPoints
MathDistanceBetweenPoints="MathDistanceBetweenPoints(",~fromX,", ",~fromY,", ",~toX,", ",~toY,")"
MathDistanceBetweenPointsHint="[UjAPI]  MathDistanceBetweenPoints takes real fromX, real fromY, real toX, real toY returns real"


MathAngleBetweenLocations=MathAngleBetweenLocations
MathAngleBetweenLocations="MathAngleBetweenLocations(",~fromLoc,", ",~toLoc,")"
MathAngleBetweenLocationsHint="[UjAPI]  MathAngleBetweenLocations takes location fromLoc, location toLoc returns real"


MathDistanceBetweenLocations=MathDistanceBetweenLocations
MathDistanceBetweenLocations="MathDistanceBetweenLocations(",~fromLoc,", ",~toLoc,")"
MathDistanceBetweenLocationsHint="[UjAPI]  MathDistanceBetweenLocations takes location fromLoc, location toLoc returns real"


GetAxisZ=GetAxisZ
GetAxisZ="GetAxisZ(",~x,", ",~y,")"
GetAxisZHint="[UjAPI]  GetAxisZ takes real x, real y returns real"


StringContains=StringContains
StringContains="StringContains(",~s,", ",~whichString,", ",~caseSensitive,")"
StringContainsHint="[UjAPI]  StringContains takes string s, string whichString, boolean caseSensitive returns boolean"


StringFind=StringFind
StringFind="StringFind(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindHint="[UjAPI]  StringFind takes string s, string whichString, boolean caseSensitive returns integer"


StringFindFirstOf=StringFindFirstOf
StringFindFirstOf="StringFindFirstOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindFirstOfHint="[UjAPI]  StringFindFirstOf takes string s, string whichString, boolean caseSensitive returns integer"


StringFindFirstNotOf=StringFindFirstNotOf
StringFindFirstNotOf="StringFindFirstNotOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindFirstNotOfHint="[UjAPI]  StringFindFirstNotOf takes string s, string whichString, boolean caseSensitive returns integer"


StringFindLastOf=StringFindLastOf
StringFindLastOf="StringFindLastOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindLastOfHint="[UjAPI]  StringFindLastOf takes string s, string whichString, boolean caseSensitive returns integer"


StringFindLastNotOf=StringFindLastNotOf
StringFindLastNotOf="StringFindLastNotOf(",~s,", ",~whichString,", ",~caseSensitive,")"
StringFindLastNotOfHint="[UjAPI]  StringFindLastNotOf takes string s, string whichString, boolean caseSensitive returns integer"


StringCount=StringCount
StringCount="StringCount(",~s,", ",~whichString,", ",~caseSensitive,")"
StringCountHint="[UjAPI]  StringCount takes string s, string whichString, boolean caseSensitive returns integer"


StringTrimLeft=StringTrimLeft
StringTrimLeft="StringTrimLeft(",~s,", ",~caseSensitive,")"
StringTrimLeftHint="[UjAPI]  StringTrimLeft takes string s, boolean caseSensitive returns string"


StringTrimRight=StringTrimRight
StringTrimRight="StringTrimRight(",~s,", ",~caseSensitive,")"
StringTrimRightHint="[UjAPI]  StringTrimRight takes string s, boolean caseSensitive returns string"


StringTrim=StringTrim
StringTrim="StringTrim(",~s,", ",~caseSensitive,")"
StringTrimHint="[UjAPI]  StringTrim takes string s, boolean caseSensitive returns string"


StringReverse=StringReverse
StringReverse="StringReverse(",~s,", ",~caseSensitive,")"
StringReverseHint="[UjAPI]  StringReverse takes string s, boolean caseSensitive returns string"


StringReplace=StringReplace
StringReplace="StringReplace(",~s,", ",~whichString,", ",~replaceWith,", ",~caseSensitive,")"
StringReplaceHint="[UjAPI]  StringReplace takes string s, string whichString, string replaceWith, boolean caseSensitive returns string"


StringInsert=StringInsert
StringInsert="StringInsert(",~s,", ",~whichString,", ",~whichPosition,", ",~caseSensitive,")"
StringInsertHint="[UjAPI]  StringInsert takes string s, string whichString, integer whichPosition, boolean caseSensitive returns string"


TextFileOpen=TextFileOpen
TextFileOpen="TextFileOpen(",~filePath,")"
TextFileOpenHint="[UjAPI]  TextFileOpen takes string filePath returns textfilehandle"


TextFileExists=TextFileExists
TextFileExists="TextFileExists(",~filePath,")"
TextFileExistsHint="[UjAPI]  TextFileExists takes string filePath returns boolean"


TextFileGetSizeByPath=TextFileGetSizeByPath
TextFileGetSizeByPath="TextFileGetSizeByPath(",~filePath,")"
TextFileGetSizeByPathHint="[UjAPI]  TextFileGetSizeByPath takes string filePath returns integer"


TextFileGetSize=TextFileGetSize
TextFileGetSize="TextFileGetSize(",~whichTextFile,")"
TextFileGetSizeHint="[UjAPI]  TextFileGetSize takes textfilehandle whichTextFile returns integer"


TextFileGetPath=TextFileGetPath
TextFileGetPath="TextFileGetPath(",~whichTextFile,")"
TextFileGetPathHint="[UjAPI]  TextFileGetPath takes textfilehandle whichTextFile returns string"


TextFileCountLines=TextFileCountLines
TextFileCountLines="TextFileCountLines(",~whichTextFile,")"
TextFileCountLinesHint="[UjAPI]  TextFileCountLines takes textfilehandle whichTextFile returns integer"


TextFileReadLine=TextFileReadLine
TextFileReadLine="TextFileReadLine(",~whichTextFile,", ",~lineNumber,")"
TextFileReadLineHint="[UjAPI]  TextFileReadLine takes textfilehandle whichTextFile, integer lineNumber returns string"


TextFileReadAllLines=TextFileReadAllLines
TextFileReadAllLines="TextFileReadAllLines(",~whichTextFile,")"
TextFileReadAllLinesHint="[UjAPI]  TextFileReadAllLines takes textfilehandle whichTextFile returns string"


TextFileRead=TextFileRead
TextFileRead="TextFileRead(",~whichTextFile,")"
TextFileReadHint="[UjAPI]  TextFileRead takes textfilehandle whichTextFile returns string"


GetUjAPIVersion=GetUjAPIVersion
GetUjAPIVersion="GetUjAPIVersion(",")"
GetUjAPIVersionHint="[UjAPI]  GetUjAPIVersion takes nothing returns string"


GetGameVersion=GetGameVersion
GetGameVersion="GetGameVersion(",")"
GetGameVersionHint="[UjAPI]  GetGameVersion takes nothing returns string"


GetLocale=GetLocale
GetLocale="GetLocale(",")"
GetLocaleHint="[UjAPI]  GetLocale takes nothing returns string"


GetMiscDataString=GetMiscDataString
GetMiscDataString="GetMiscDataString(",~sectionName,", ",~optionName,", ",~index,")"
GetMiscDataStringHint="[UjAPI]  GetMiscDataString takes string sectionName, string optionName, integer index returns string"


SetMiscDataString=SetMiscDataString
SetMiscDataString="SetMiscDataString(",~sectionName,", ",~optionName,", ",~index,", ",~value,")"
SetMiscDataStringHint="[UjAPI]  SetMiscDataString takes string sectionName, string optionName, integer index, string value returns nothing"


GetSkinDataString=GetSkinDataString
GetSkinDataString="GetSkinDataString(",~raceName,", ",~sectionName,", ",~optionName,", ",~index,")"
GetSkinDataStringHint="[UjAPI]  GetSkinDataString takes string raceName, string sectionName, string optionName, integer index returns string"


SetSkinDataString=SetSkinDataString
SetSkinDataString="SetSkinDataString(",~raceName,", ",~sectionName,", ",~optionName,", ",~index,", ",~value,")"
SetSkinDataStringHint="[UjAPI]  SetSkinDataString takes string raceName, string sectionName, string optionName, integer index, string value returns nothing"


GetFDFDataString=GetFDFDataString
GetFDFDataString="GetFDFDataString(",~sectionName,")"
GetFDFDataStringHint="[UjAPI]  GetFDFDataString takes string sectionName returns string"


SetFDFDataString=SetFDFDataString
SetFDFDataString="SetFDFDataString(",~sectionName,", ",~value,")"
SetFDFDataStringHint="[UjAPI]  SetFDFDataString takes string sectionName, string value returns nothing"


GetWheelDelta=GetWheelDelta
GetWheelDelta="GetWheelDelta(",")"
GetWheelDeltaHint="[UjAPI]  GetWheelDelta takes nothing returns integer"


GetFPS=GetFPS
GetFPS="GetFPS(",")"
GetFPSHint="[UjAPI]  GetFPS takes nothing returns real"


GetVisionMax=GetVisionMax
GetVisionMax="GetVisionMax(",")"
GetVisionMaxHint="[UjAPI]  GetVisionMax takes nothing returns real"


GetAttackSpeedMinBonus=GetAttackSpeedMinBonus
GetAttackSpeedMinBonus="GetAttackSpeedMinBonus(",")"
GetAttackSpeedMinBonusHint="[UjAPI]  GetAttackSpeedMinBonus takes nothing returns real"


GetAttackSpeedMaxBonus=GetAttackSpeedMaxBonus
GetAttackSpeedMaxBonus="GetAttackSpeedMaxBonus(",")"
GetAttackSpeedMaxBonusHint="[UjAPI]  GetAttackSpeedMaxBonus takes nothing returns real"


GetMoveSpeedMinAllowed=GetMoveSpeedMinAllowed
GetMoveSpeedMinAllowed="GetMoveSpeedMinAllowed(",")"
GetMoveSpeedMinAllowedHint="[UjAPI]  GetMoveSpeedMinAllowed takes nothing returns real"


GetMoveSpeedMaxAllowed=GetMoveSpeedMaxAllowed
GetMoveSpeedMaxAllowed="GetMoveSpeedMaxAllowed(",")"
GetMoveSpeedMaxAllowedHint="[UjAPI]  GetMoveSpeedMaxAllowed takes nothing returns real"


GetMappedTypeName=GetMappedTypeName
GetMappedTypeName="GetMappedTypeName(",~whichField,", ",~whichMapType,")"
GetMappedTypeNameHint="[UjAPI]  GetMappedTypeName takes mappedfield whichField, mappedtype whichMapType returns string"


IsSelectionEnabled=IsSelectionEnabled
IsSelectionEnabled="IsSelectionEnabled(",")"
IsSelectionEnabledHint="[UjAPI]  IsSelectionEnabled takes nothing returns boolean"


IsSelectionCircleEnabled=IsSelectionCircleEnabled
IsSelectionCircleEnabled="IsSelectionCircleEnabled(",")"
IsSelectionCircleEnabledHint="[UjAPI]  IsSelectionCircleEnabled takes nothing returns boolean"


IsTargetIndicatorEnabled=IsTargetIndicatorEnabled
IsTargetIndicatorEnabled="IsTargetIndicatorEnabled(",")"
IsTargetIndicatorEnabledHint="[UjAPI]  IsTargetIndicatorEnabled takes nothing returns boolean"


IsRenderStage=IsRenderStage
IsRenderStage="IsRenderStage(",~renderStage,")"
IsRenderStageHint="[UjAPI]  IsRenderStage takes renderstage renderStage returns boolean"


IsStatbarEnabled=IsStatbarEnabled
IsStatbarEnabled="IsStatbarEnabled(",")"
IsStatbarEnabledHint="[UjAPI]  IsStatbarEnabled takes nothing returns boolean"


GetMapFogZ=GetMapFogZ
GetMapFogZ="GetMapFogZ(",")"
GetMapFogZHint="[UjAPI]  GetMapFogZ takes nothing returns real"


GetMapFogColour=GetMapFogColour
GetMapFogColour="GetMapFogColour(",")"
GetMapFogColourHint="[UjAPI]  GetMapFogColour takes nothing returns integer"


TriggerCountEvents=TriggerCountEvents
TriggerCountEvents="TriggerCountEvents(",~whichTrigger,")"
TriggerCountEventsHint="[UjAPI]  TriggerCountEvents takes trigger whichTrigger returns integer"


TriggerCountConditions=TriggerCountConditions
TriggerCountConditions="TriggerCountConditions(",~whichTrigger,")"
TriggerCountConditionsHint="[UjAPI]  TriggerCountConditions takes trigger whichTrigger returns integer"


TriggerCountActions=TriggerCountActions
TriggerCountActions="TriggerCountActions(",~whichTrigger,")"
TriggerCountActionsHint="[UjAPI]  TriggerCountActions takes trigger whichTrigger returns integer"


ReplaceSound=ReplaceSound
ReplaceSound="ReplaceSound(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~eaxSetting,")"
ReplaceSoundHint="[UjAPI]  ReplaceSound takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound"


ReplaceSoundWithLabel=ReplaceSoundWithLabel
ReplaceSoundWithLabel="ReplaceSoundWithLabel(",~whichSound,", ",~fileName,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,", ",~SLKEntryName,")"
ReplaceSoundWithLabelHint="[UjAPI]  ReplaceSoundWithLabel takes sound whichSound, string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound"


ReplaceSoundFromLabel=ReplaceSoundFromLabel
ReplaceSoundFromLabel="ReplaceSoundFromLabel(",~whichSound,", ",~soundLabel,", ",~looping,", ",~is3D,", ",~stopwhenoutofrange,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceSoundFromLabelHint="[UjAPI]  ReplaceSoundFromLabel takes sound whichSound, string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound"


ReplaceMIDISound=ReplaceMIDISound
ReplaceMIDISound="ReplaceMIDISound(",~whichSound,", ",~soundLabel,", ",~fadeInRate,", ",~fadeOutRate,")"
ReplaceMIDISoundHint="[UjAPI]  ReplaceMIDISound takes sound whichSound, string soundLabel, integer fadeInRate, integer fadeOutRate returns sound"


GetSystemTime=GetSystemTime
GetSystemTime="GetSystemTime(",~whichTimeType,")"
GetSystemTimeHint="[UjAPI]  GetSystemTime takes timetype whichTimeType returns integer"


GetLocalTime=GetLocalTime
GetLocalTime="GetLocalTime(",~whichTimeType,")"
GetLocalTimeHint="[UjAPI]  GetLocalTime takes timetype whichTimeType returns integer"


GetTimeStamp=GetTimeStamp
GetTimeStamp="GetTimeStamp(",~isLocalTime,", ",~isMiliseconds,")"
GetTimeStampHint="[UjAPI]  GetTimeStamp takes boolean isLocalTime, integer isMiliseconds returns string"


GetTickCount=GetTickCount
GetTickCount="GetTickCount(",")"
GetTickCountHint="[UjAPI]  GetTickCount takes nothing returns integer"


BenchmarkGetElapsed=BenchmarkGetElapsed
BenchmarkGetElapsed="BenchmarkGetElapsed(",~benchType,")"
BenchmarkGetElapsedHint="[UjAPI]  BenchmarkGetElapsed takes integer benchType returns string"


IsWindowActive=IsWindowActive
IsWindowActive="IsWindowActive(",")"
IsWindowActiveHint="[UjAPI]  IsWindowActive takes nothing returns boolean"


GetWindowWidth=GetWindowWidth
GetWindowWidth="GetWindowWidth(",")"
GetWindowWidthHint="[UjAPI]  GetWindowWidth takes nothing returns integer"


GetWindowHeight=GetWindowHeight
GetWindowHeight="GetWindowHeight(",")"
GetWindowHeightHint="[UjAPI]  GetWindowHeight takes nothing returns integer"


GetClientWidth=GetClientWidth
GetClientWidth="GetClientWidth(",")"
GetClientWidthHint="[UjAPI]  GetClientWidth takes nothing returns integer"


GetClientHeight=GetClientHeight
GetClientHeight="GetClientHeight(",")"
GetClientHeightHint="[UjAPI]  GetClientHeight takes nothing returns integer"


GetWindowX=GetWindowX
GetWindowX="GetWindowX(",")"
GetWindowXHint="[UjAPI]  GetWindowX takes nothing returns integer"


GetWindowY=GetWindowY
GetWindowY="GetWindowY(",")"
GetWindowYHint="[UjAPI]  GetWindowY takes nothing returns integer"


GetWindowCenterX=GetWindowCenterX
GetWindowCenterX="GetWindowCenterX(",")"
GetWindowCenterXHint="[UjAPI]  GetWindowCenterX takes nothing returns integer"


GetWindowCenterY=GetWindowCenterY
GetWindowCenterY="GetWindowCenterY(",")"
GetWindowCenterYHint="[UjAPI]  GetWindowCenterY takes nothing returns integer"


IsCursorEnabled=IsCursorEnabled
IsCursorEnabled="IsCursorEnabled(",")"
IsCursorEnabledHint="[UjAPI]  IsCursorEnabled takes nothing returns boolean"


IsCursorAnimationLocked=IsCursorAnimationLocked
IsCursorAnimationLocked="IsCursorAnimationLocked(",")"
IsCursorAnimationLockedHint="[UjAPI]  IsCursorAnimationLocked takes nothing returns boolean"


GetMouseScreenX=GetMouseScreenX
GetMouseScreenX="GetMouseScreenX(",")"
GetMouseScreenXHint="[UjAPI]  GetMouseScreenX takes nothing returns real"


GetMouseScreenY=GetMouseScreenY
GetMouseScreenY="GetMouseScreenY(",")"
GetMouseScreenYHint="[UjAPI]  GetMouseScreenY takes nothing returns real"


GetMouseScreenPixelX=GetMouseScreenPixelX
GetMouseScreenPixelX="GetMouseScreenPixelX(",")"
GetMouseScreenPixelXHint="[UjAPI]  GetMouseScreenPixelX takes nothing returns integer"


GetMouseScreenPixelY=GetMouseScreenPixelY
GetMouseScreenPixelY="GetMouseScreenPixelY(",")"
GetMouseScreenPixelYHint="[UjAPI]  GetMouseScreenPixelY takes nothing returns integer"


GetMouseWorldX=GetMouseWorldX
GetMouseWorldX="GetMouseWorldX(",")"
GetMouseWorldXHint="[UjAPI]  GetMouseWorldX takes nothing returns real"


GetMouseWorldY=GetMouseWorldY
GetMouseWorldY="GetMouseWorldY(",")"
GetMouseWorldYHint="[UjAPI]  GetMouseWorldY takes nothing returns real"


GetMouseWorldZ=GetMouseWorldZ
GetMouseWorldZ="GetMouseWorldZ(",")"
GetMouseWorldZHint="[UjAPI]  GetMouseWorldZ takes nothing returns real"


DisplayTopMessage=DisplayTopMessage
DisplayTopMessage="DisplayTopMessage(",~toPlayer,", ",~message,")"
DisplayTopMessageHint="[UjAPI]  DisplayTopMessage takes player toPlayer, string message returns nothing"


DisplayTimedTopMessage=DisplayTimedTopMessage
DisplayTimedTopMessage="DisplayTimedTopMessage(",~toPlayer,", ",~duration,", ",~message,")"
DisplayTimedTopMessageHint="[UjAPI]  DisplayTimedTopMessage takes player toPlayer, real duration, string message returns nothing"


IsHandleDestroyed=IsHandleDestroyed
IsHandleDestroyed="IsHandleDestroyed(",~whichHandle,")"
IsHandleDestroyedHint="[UjAPI]  IsHandleDestroyed takes handle whichHandle returns boolean"


GetHandleReferenceCount=GetHandleReferenceCount
GetHandleReferenceCount="GetHandleReferenceCount(",~whichHandle,")"
GetHandleReferenceCountHint="[UjAPI]  GetHandleReferenceCount takes handle whichHandle returns integer"


GetHandleBaseTypeId=GetHandleBaseTypeId
GetHandleBaseTypeId="GetHandleBaseTypeId(",~whichHandle,")"
GetHandleBaseTypeIdHint="[UjAPI]  GetHandleBaseTypeId takes handle whichHandle returns integer"


GetHandleBaseTypeName=GetHandleBaseTypeName
GetHandleBaseTypeName="GetHandleBaseTypeName(",~whichHandle,")"
GetHandleBaseTypeNameHint="[UjAPI]  GetHandleBaseTypeName takes handle whichHandle returns string"


GetFilterHandle=GetFilterHandle
GetFilterHandle="GetFilterHandle(",")"
GetFilterHandleHint="[UjAPI]  GetFilterHandle takes nothing returns handle"


GetEnumHandle=GetEnumHandle
GetEnumHandle="GetEnumHandle(",")"
GetEnumHandleHint="[UjAPI]  GetEnumHandle takes nothing returns handle"


GetTriggerHackId=GetTriggerHackId
GetTriggerHackId="GetTriggerHackId(",")"
GetTriggerHackIdHint="[UjAPI]  GetTriggerHackId takes nothing returns integer"


GetTriggerHackType=GetTriggerHackType
GetTriggerHackType="GetTriggerHackType(",")"
GetTriggerHackTypeHint="[UjAPI]  GetTriggerHackType takes nothing returns integer"


GetTriggerHackLine=GetTriggerHackLine
GetTriggerHackLine="GetTriggerHackLine(",")"
GetTriggerHackLineHint="[UjAPI]  GetTriggerHackLine takes nothing returns integer"


SaveHandle=SaveHandle
SaveHandle="SaveHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandle,")"
SaveHandleHint="[UjAPI]  SaveHandle takes hashtable whichHashtable, integer parentKey, integer childKey, handle whichHandle returns boolean"


SaveCode=SaveCode
SaveCode="SaveCode(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichCode,")"
SaveCodeHint="[UjAPI]  SaveCode takes hashtable whichHashtable, integer parentKey, integer childKey, code whichCode returns boolean"


SaveAttackTypeHandle=SaveAttackTypeHandle
SaveAttackTypeHandle="SaveAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichAttackType,")"
SaveAttackTypeHandleHint="[UjAPI]  SaveAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, attacktype whichAttackType returns boolean"


SaveDamageTypeHandle=SaveDamageTypeHandle
SaveDamageTypeHandle="SaveDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDamageType,")"
SaveDamageTypeHandleHint="[UjAPI]  SaveDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, damagetype whichDamageType returns boolean"


SaveWeaponTypeHandle=SaveWeaponTypeHandle
SaveWeaponTypeHandle="SaveWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWeaponType,")"
SaveWeaponTypeHandleHint="[UjAPI]  SaveWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey, weapontype whichWeaponType returns boolean"


SaveBuffHandle=SaveBuffHandle
SaveBuffHandle="SaveBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichBuff,")"
SaveBuffHandleHint="[UjAPI]  SaveBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey, buff whichBuff returns boolean"


SaveSpriteHandle=SaveSpriteHandle
SaveSpriteHandle="SaveSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichsprite,")"
SaveSpriteHandleHint="[UjAPI]  SaveSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey, sprite whichsprite returns boolean"


SaveWar3ImageHandle=SaveWar3ImageHandle
SaveWar3ImageHandle="SaveWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichWar3Image,")"
SaveWar3ImageHandleHint="[UjAPI]  SaveWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey, war3image whichWar3Image returns boolean"


SaveDoodadHandle=SaveDoodadHandle
SaveDoodadHandle="SaveDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichDoodad,")"
SaveDoodadHandleHint="[UjAPI]  SaveDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey, doodad whichDoodad returns boolean"


SaveTextFileHandle=SaveTextFileHandle
SaveTextFileHandle="SaveTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFile,")"
SaveTextFileHandleHint="[UjAPI]  SaveTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, textfilehandle whichFile returns boolean"


SaveProjectileHandle=SaveProjectileHandle
SaveProjectileHandle="SaveProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichProjectile,")"
SaveProjectileHandleHint="[UjAPI]  SaveProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey, projectile whichProjectile returns boolean"


SaveFrameHandle=SaveFrameHandle
SaveFrameHandle="SaveFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichFrame,")"
SaveFrameHandleHint="[UjAPI]  SaveFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey, framehandle whichFrame returns boolean"


SaveHandleList=SaveHandleList
SaveHandleList="SaveHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,", ",~whichHandleList,")"
SaveHandleListHint="[UjAPI]  SaveHandleList takes hashtable whichHashtable, integer parentKey, integer childKey, handlelist whichHandleList returns boolean"


LoadHandle=LoadHandle
LoadHandle="LoadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleHint="[UjAPI]  LoadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns handle"


LoadCode=LoadCode
LoadCode="LoadCode(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadCodeHint="[UjAPI]  LoadCode takes hashtable whichHashtable, integer parentKey, integer childKey returns code"


LoadAttackTypeHandle=LoadAttackTypeHandle
LoadAttackTypeHandle="LoadAttackTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadAttackTypeHandleHint="[UjAPI]  LoadAttackTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns attacktype"


LoadDamageTypeHandle=LoadDamageTypeHandle
LoadDamageTypeHandle="LoadDamageTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDamageTypeHandleHint="[UjAPI]  LoadDamageTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns damagetype"


LoadWeaponTypeHandle=LoadWeaponTypeHandle
LoadWeaponTypeHandle="LoadWeaponTypeHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWeaponTypeHandleHint="[UjAPI]  LoadWeaponTypeHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns weapontype"


LoadBuffHandle=LoadBuffHandle
LoadBuffHandle="LoadBuffHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadBuffHandleHint="[UjAPI]  LoadBuffHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns buff"


LoadSpriteHandle=LoadSpriteHandle
LoadSpriteHandle="LoadSpriteHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadSpriteHandleHint="[UjAPI]  LoadSpriteHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns sprite"


LoadWar3ImageHandle=LoadWar3ImageHandle
LoadWar3ImageHandle="LoadWar3ImageHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadWar3ImageHandleHint="[UjAPI]  LoadWar3ImageHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns war3image"


LoadDoodadHandle=LoadDoodadHandle
LoadDoodadHandle="LoadDoodadHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadDoodadHandleHint="[UjAPI]  LoadDoodadHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns doodad"


LoadTextFileHandle=LoadTextFileHandle
LoadTextFileHandle="LoadTextFileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadTextFileHandleHint="[UjAPI]  LoadTextFileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns textfilehandle"


LoadProjectileHandle=LoadProjectileHandle
LoadProjectileHandle="LoadProjectileHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadProjectileHandleHint="[UjAPI]  LoadProjectileHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns projectile"


LoadFrameHandle=LoadFrameHandle
LoadFrameHandle="LoadFrameHandle(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadFrameHandleHint="[UjAPI]  LoadFrameHandle takes hashtable whichHashtable, integer parentKey, integer childKey returns framehandle"


LoadHandleList=LoadHandleList
LoadHandleList="LoadHandleList(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
LoadHandleListHint="[UjAPI]  LoadHandleList takes hashtable whichHashtable, integer parentKey, integer childKey returns handlelist"


GetHostPlayer=GetHostPlayer
GetHostPlayer="GetHostPlayer(",")"
GetHostPlayerHint="[UjAPI]  GetHostPlayer takes nothing returns player"


ForceHasPlayer=ForceHasPlayer
ForceHasPlayer="ForceHasPlayer(",~whichForce,", ",~whichPlayer,")"
ForceHasPlayerHint="[UjAPI]  ForceHasPlayer takes force whichForce, player whichPlayer returns boolean"


ForceCountPlayers=ForceCountPlayers
ForceCountPlayers="ForceCountPlayers(",~whichForce,")"
ForceCountPlayersHint="[UjAPI]  ForceCountPlayers takes force whichForce returns integer"


GetConnectionType=GetConnectionType
GetConnectionType="GetConnectionType(",")"
GetConnectionTypeHint="[UjAPI]  GetConnectionType takes nothing returns connectiontype"


IsReplay=IsReplay
IsReplay="IsReplay(",")"
IsReplayHint="[UjAPI]  IsReplay takes nothing returns boolean"


GetFogModifierForPlayer=GetFogModifierForPlayer
GetFogModifierForPlayer="GetFogModifierForPlayer(",~whichFogModifier,")"
GetFogModifierForPlayerHint="[UjAPI]  GetFogModifierForPlayer takes fogmodifier whichFogModifier returns player"


IsFogModifierFogState=IsFogModifierFogState
IsFogModifierFogState="IsFogModifierFogState(",~whichFogModifier,", ",~whichState,")"
IsFogModifierFogStateHint="[UjAPI]  IsFogModifierFogState takes fogmodifier whichFogModifier, fogstate whichState returns boolean"


GetFogModifierX=GetFogModifierX
GetFogModifierX="GetFogModifierX(",~whichFogModifier,")"
GetFogModifierXHint="[UjAPI]  GetFogModifierX takes fogmodifier whichFogModifier returns real"


GetFogModifierY=GetFogModifierY
GetFogModifierY="GetFogModifierY(",~whichFogModifier,")"
GetFogModifierYHint="[UjAPI]  GetFogModifierY takes fogmodifier whichFogModifier returns real"


GetFogModifierZ=GetFogModifierZ
GetFogModifierZ="GetFogModifierZ(",~whichFogModifier,")"
GetFogModifierZHint="[UjAPI]  GetFogModifierZ takes fogmodifier whichFogModifier returns real"


GetFogModifierRadius=GetFogModifierRadius
GetFogModifierRadius="GetFogModifierRadius(",~whichFogModifier,")"
GetFogModifierRadiusHint="[UjAPI]  GetFogModifierRadius takes fogmodifier whichFogModifier returns real"


GetFogModifierRect=GetFogModifierRect
GetFogModifierRect="GetFogModifierRect(",~whichFogModifier,")"
GetFogModifierRectHint="[UjAPI]  GetFogModifierRect takes fogmodifier whichFogModifier returns rect"


GroupGetCount=GroupGetCount
GroupGetCount="GroupGetCount(",~whichGroup,")"
GroupGetCountHint="[UjAPI]  GroupGetCount takes group whichGroup returns integer"


GroupContainsUnit=GroupContainsUnit
GroupContainsUnit="GroupContainsUnit(",~whichGroup,", ",~whichUnit,")"
GroupContainsUnitHint="[UjAPI]  GroupContainsUnit takes group whichGroup, unit whichUnit returns boolean"


GroupGetUnitByIndex=GroupGetUnitByIndex
GroupGetUnitByIndex="GroupGetUnitByIndex(",~whichGroup,", ",~index,")"
GroupGetUnitByIndexHint="[UjAPI]  GroupGetUnitByIndex takes group whichGroup, integer index returns unit"


GroupForEachUnit=GroupForEachUnit
GroupForEachUnit="GroupForEachUnit(",~whichGroup,")"
GroupForEachUnitHint="[UjAPI]  GroupForEachUnit takes group whichGroup returns unit"


GroupAddGroupEx=GroupAddGroupEx
GroupAddGroupEx="GroupAddGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupAddGroupExHint="[UjAPI]  GroupAddGroupEx takes group destGroup, group sourceGroup returns integer"


GroupRemoveGroupEx=GroupRemoveGroupEx
GroupRemoveGroupEx="GroupRemoveGroupEx(",~destGroup,", ",~sourceGroup,")"
GroupRemoveGroupExHint="[UjAPI]  GroupRemoveGroupEx takes group destGroup, group sourceGroup returns integer"


GetTradeSource=GetTradeSource
GetTradeSource="GetTradeSource(",")"
GetTradeSourceHint="[UjAPI]  GetTradeSource takes nothing returns player"


GetTradeTarget=GetTradeTarget
GetTradeTarget="GetTradeTarget(",")"
GetTradeTargetHint="[UjAPI]  GetTradeTarget takes nothing returns player"


GetTradeGold=GetTradeGold
GetTradeGold="GetTradeGold(",")"
GetTradeGoldHint="[UjAPI]  GetTradeGold takes nothing returns integer"


GetTradeLumber=GetTradeLumber
GetTradeLumber="GetTradeLumber(",")"
GetTradeLumberHint="[UjAPI]  GetTradeLumber takes nothing returns integer"


IsTradeState=IsTradeState
IsTradeState="IsTradeState(",~whichTradeState,")"
IsTradeStateHint="[UjAPI]  IsTradeState takes tradestate whichTradeState returns boolean"


HandleListCreate=HandleListCreate
HandleListCreate="HandleListCreate(",")"
HandleListCreateHint="[UjAPI]  HandleListCreate takes nothing returns handlelist"


HandleListAddList=HandleListAddList
HandleListAddList="HandleListAddList(",~destHandleList,", ",~sourceHandleList,")"
HandleListAddListHint="[UjAPI]  HandleListAddList takes handlelist destHandleList, handlelist sourceHandleList returns integer"


HandleListRemoveList=HandleListRemoveList
HandleListRemoveList="HandleListRemoveList(",~destHandleList,", ",~sourceHandleList,")"
HandleListRemoveListHint="[UjAPI]  HandleListRemoveList takes handlelist destHandleList, handlelist sourceHandleList returns integer"


HandleListRemoveEmpty=HandleListRemoveEmpty
HandleListRemoveEmpty="HandleListRemoveEmpty(",~whichHandleList,")"
HandleListRemoveEmptyHint="[UjAPI]  HandleListRemoveEmpty takes handlelist whichHandleList returns integer"


HandleListContainsHandle=HandleListContainsHandle
HandleListContainsHandle="HandleListContainsHandle(",~whichHandleList,", ",~whichHandle,")"
HandleListContainsHandleHint="[UjAPI]  HandleListContainsHandle takes handlelist whichHandleList, handle whichHandle returns boolean"


HandleListContainsTypeId=HandleListContainsTypeId
HandleListContainsTypeId="HandleListContainsTypeId(",~whichHandleList,", ",~typeId,")"
HandleListContainsTypeIdHint="[UjAPI]  HandleListContainsTypeId takes handlelist whichHandleList, integer typeId returns boolean"


HandleListGetCount=HandleListGetCount
HandleListGetCount="HandleListGetCount(",~whichHandleList,")"
HandleListGetCountHint="[UjAPI]  HandleListGetCount takes handlelist whichHandleList returns integer"


HandleListGetCountEx=HandleListGetCountEx
HandleListGetCountEx="HandleListGetCountEx(",~whichHandleList,", ",~handleTypeId,")"
HandleListGetCountExHint="[UjAPI]  HandleListGetCountEx takes handlelist whichHandleList, integer handleTypeId returns integer"


HandleListGetAgentCount=HandleListGetAgentCount
HandleListGetAgentCount="HandleListGetAgentCount(",~whichHandleList,")"
HandleListGetAgentCountHint="[UjAPI]  HandleListGetAgentCount takes handlelist whichHandleList returns integer"


HandleListGetWidgetCount=HandleListGetWidgetCount
HandleListGetWidgetCount="HandleListGetWidgetCount(",~whichHandleList,")"
HandleListGetWidgetCountHint="[UjAPI]  HandleListGetWidgetCount takes handlelist whichHandleList returns integer"


HandleListGetUnitCount=HandleListGetUnitCount
HandleListGetUnitCount="HandleListGetUnitCount(",~whichHandleList,")"
HandleListGetUnitCountHint="[UjAPI]  HandleListGetUnitCount takes handlelist whichHandleList returns integer"


HandleListGetItemCount=HandleListGetItemCount
HandleListGetItemCount="HandleListGetItemCount(",~whichHandleList,")"
HandleListGetItemCountHint="[UjAPI]  HandleListGetItemCount takes handlelist whichHandleList returns integer"


HandleListGetDestructableCount=HandleListGetDestructableCount
HandleListGetDestructableCount="HandleListGetDestructableCount(",~whichHandleList,")"
HandleListGetDestructableCountHint="[UjAPI]  HandleListGetDestructableCount takes handlelist whichHandleList returns integer"


HandleListGetDoodadCount=HandleListGetDoodadCount
HandleListGetDoodadCount="HandleListGetDoodadCount(",~whichHandleList,")"
HandleListGetDoodadCountHint="[UjAPI]  HandleListGetDoodadCount takes handlelist whichHandleList returns integer"


HandleListGetAbilityCount=HandleListGetAbilityCount
HandleListGetAbilityCount="HandleListGetAbilityCount(",~whichHandleList,")"
HandleListGetAbilityCountHint="[UjAPI]  HandleListGetAbilityCount takes handlelist whichHandleList returns integer"


HandleListGetBuffCount=HandleListGetBuffCount
HandleListGetBuffCount="HandleListGetBuffCount(",~whichHandleList,")"
HandleListGetBuffCountHint="[UjAPI]  HandleListGetBuffCount takes handlelist whichHandleList returns integer"


HandleListGetSpriteCount=HandleListGetSpriteCount
HandleListGetSpriteCount="HandleListGetSpriteCount(",~whichHandleList,")"
HandleListGetSpriteCountHint="[UjAPI]  HandleListGetSpriteCount takes handlelist whichHandleList returns integer"


HandleListGetEffectCount=HandleListGetEffectCount
HandleListGetEffectCount="HandleListGetEffectCount(",~whichHandleList,")"
HandleListGetEffectCountHint="[UjAPI]  HandleListGetEffectCount takes handlelist whichHandleList returns integer"


HandleListGetProjectileCount=HandleListGetProjectileCount
HandleListGetProjectileCount="HandleListGetProjectileCount(",~whichHandleList,")"
HandleListGetProjectileCountHint="[UjAPI]  HandleListGetProjectileCount takes handlelist whichHandleList returns integer"


HandleListGetFrameCount=HandleListGetFrameCount
HandleListGetFrameCount="HandleListGetFrameCount(",~whichHandleList,")"
HandleListGetFrameCountHint="[UjAPI]  HandleListGetFrameCount takes handlelist whichHandleList returns integer"


HandleListGetOrderCount=HandleListGetOrderCount
HandleListGetOrderCount="HandleListGetOrderCount(",~whichHandleList,")"
HandleListGetOrderCountHint="[UjAPI]  HandleListGetOrderCount takes handlelist whichHandleList returns integer"


HandleListGetHandleByIndex=HandleListGetHandleByIndex
HandleListGetHandleByIndex="HandleListGetHandleByIndex(",~whichHandleList,", ",~index,")"
HandleListGetHandleByIndexHint="[UjAPI]  HandleListGetHandleByIndex takes handlelist whichHandleList, integer index returns handle"


HandleListGetHandleByIndexEx=HandleListGetHandleByIndexEx
HandleListGetHandleByIndexEx="HandleListGetHandleByIndexEx(",~whichHandleList,", ",~handleTypeId,", ",~index,")"
HandleListGetHandleByIndexExHint="[UjAPI]  HandleListGetHandleByIndexEx takes handlelist whichHandleList, integer handleTypeId, integer index returns handle"


HandleListGetHandleById=HandleListGetHandleById
HandleListGetHandleById="HandleListGetHandleById(",~whichHandleList,", ",~typeId,", ",~index,")"
HandleListGetHandleByIdHint="[UjAPI]  HandleListGetHandleById takes handlelist whichHandleList, integer typeId, integer index returns handle"


HandleListGetAgentByIndex=HandleListGetAgentByIndex
HandleListGetAgentByIndex="HandleListGetAgentByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAgentByIndexHint="[UjAPI]  HandleListGetAgentByIndex takes handlelist whichHandleList, integer index returns agent"


HandleListGetWidgetByIndex=HandleListGetWidgetByIndex
HandleListGetWidgetByIndex="HandleListGetWidgetByIndex(",~whichHandleList,", ",~index,")"
HandleListGetWidgetByIndexHint="[UjAPI]  HandleListGetWidgetByIndex takes handlelist whichHandleList, integer index returns widget"


HandleListGetUnitByIndex=HandleListGetUnitByIndex
HandleListGetUnitByIndex="HandleListGetUnitByIndex(",~whichHandleList,", ",~index,")"
HandleListGetUnitByIndexHint="[UjAPI]  HandleListGetUnitByIndex takes handlelist whichHandleList, integer index returns unit"


HandleListGetItemByIndex=HandleListGetItemByIndex
HandleListGetItemByIndex="HandleListGetItemByIndex(",~whichHandleList,", ",~index,")"
HandleListGetItemByIndexHint="[UjAPI]  HandleListGetItemByIndex takes handlelist whichHandleList, integer index returns item"


HandleListGetDestructableByIndex=HandleListGetDestructableByIndex
HandleListGetDestructableByIndex="HandleListGetDestructableByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDestructableByIndexHint="[UjAPI]  HandleListGetDestructableByIndex takes handlelist whichHandleList, integer index returns destructable"


HandleListGetDoodadByIndex=HandleListGetDoodadByIndex
HandleListGetDoodadByIndex="HandleListGetDoodadByIndex(",~whichHandleList,", ",~index,")"
HandleListGetDoodadByIndexHint="[UjAPI]  HandleListGetDoodadByIndex takes handlelist whichHandleList, integer index returns doodad"


HandleListGetAbilityByIndex=HandleListGetAbilityByIndex
HandleListGetAbilityByIndex="HandleListGetAbilityByIndex(",~whichHandleList,", ",~index,")"
HandleListGetAbilityByIndexHint="[UjAPI]  HandleListGetAbilityByIndex takes handlelist whichHandleList, integer index returns ability"


HandleListGetBuffByIndex=HandleListGetBuffByIndex
HandleListGetBuffByIndex="HandleListGetBuffByIndex(",~whichHandleList,", ",~index,")"
HandleListGetBuffByIndexHint="[UjAPI]  HandleListGetBuffByIndex takes handlelist whichHandleList, integer index returns buff"


HandleListGetSpriteByIndex=HandleListGetSpriteByIndex
HandleListGetSpriteByIndex="HandleListGetSpriteByIndex(",~whichHandleList,", ",~index,")"
HandleListGetSpriteByIndexHint="[UjAPI]  HandleListGetSpriteByIndex takes handlelist whichHandleList, integer index returns sprite"


HandleListGetEffectByIndex=HandleListGetEffectByIndex
HandleListGetEffectByIndex="HandleListGetEffectByIndex(",~whichHandleList,", ",~index,")"
HandleListGetEffectByIndexHint="[UjAPI]  HandleListGetEffectByIndex takes handlelist whichHandleList, integer index returns effect"


HandleListGetProjectileByIndex=HandleListGetProjectileByIndex
HandleListGetProjectileByIndex="HandleListGetProjectileByIndex(",~whichHandleList,", ",~index,")"
HandleListGetProjectileByIndexHint="[UjAPI]  HandleListGetProjectileByIndex takes handlelist whichHandleList, integer index returns projectile"


HandleListGetFrameByIndex=HandleListGetFrameByIndex
HandleListGetFrameByIndex="HandleListGetFrameByIndex(",~whichHandleList,", ",~index,")"
HandleListGetFrameByIndexHint="[UjAPI]  HandleListGetFrameByIndex takes handlelist whichHandleList, integer index returns framehandle"


HandleListGetOrderByIndex=HandleListGetOrderByIndex
HandleListGetOrderByIndex="HandleListGetOrderByIndex(",~whichHandleList,", ",~index,")"
HandleListGetOrderByIndexHint="[UjAPI]  HandleListGetOrderByIndex takes handlelist whichHandleList, integer index returns orderhandle"


HandleListGetFilterHandle=HandleListGetFilterHandle
HandleListGetFilterHandle="HandleListGetFilterHandle(",")"
HandleListGetFilterHandleHint="[UjAPI]  HandleListGetFilterHandle takes nothing returns handle"


HandleListGetFilterAgent=HandleListGetFilterAgent
HandleListGetFilterAgent="HandleListGetFilterAgent(",")"
HandleListGetFilterAgentHint="[UjAPI]  HandleListGetFilterAgent takes nothing returns agent"


HandleListGetFilterWidget=HandleListGetFilterWidget
HandleListGetFilterWidget="HandleListGetFilterWidget(",")"
HandleListGetFilterWidgetHint="[UjAPI]  HandleListGetFilterWidget takes nothing returns widget"


HandleListGetFilterUnit=HandleListGetFilterUnit
HandleListGetFilterUnit="HandleListGetFilterUnit(",")"
HandleListGetFilterUnitHint="[UjAPI]  HandleListGetFilterUnit takes nothing returns unit"


HandleListGetFilterItem=HandleListGetFilterItem
HandleListGetFilterItem="HandleListGetFilterItem(",")"
HandleListGetFilterItemHint="[UjAPI]  HandleListGetFilterItem takes nothing returns item"


HandleListGetFilterDestructable=HandleListGetFilterDestructable
HandleListGetFilterDestructable="HandleListGetFilterDestructable(",")"
HandleListGetFilterDestructableHint="[UjAPI]  HandleListGetFilterDestructable takes nothing returns destructable"


HandleListGetFilterDoodad=HandleListGetFilterDoodad
HandleListGetFilterDoodad="HandleListGetFilterDoodad(",")"
HandleListGetFilterDoodadHint="[UjAPI]  HandleListGetFilterDoodad takes nothing returns doodad"


HandleListGetFilterAbility=HandleListGetFilterAbility
HandleListGetFilterAbility="HandleListGetFilterAbility(",")"
HandleListGetFilterAbilityHint="[UjAPI]  HandleListGetFilterAbility takes nothing returns ability"


HandleListGetFilterBuff=HandleListGetFilterBuff
HandleListGetFilterBuff="HandleListGetFilterBuff(",")"
HandleListGetFilterBuffHint="[UjAPI]  HandleListGetFilterBuff takes nothing returns buff"


HandleListGetFilterSprite=HandleListGetFilterSprite
HandleListGetFilterSprite="HandleListGetFilterSprite(",")"
HandleListGetFilterSpriteHint="[UjAPI]  HandleListGetFilterSprite takes nothing returns sprite"


HandleListGetFilterEffect=HandleListGetFilterEffect
HandleListGetFilterEffect="HandleListGetFilterEffect(",")"
HandleListGetFilterEffectHint="[UjAPI]  HandleListGetFilterEffect takes nothing returns effect"


HandleListGetFilterProjectile=HandleListGetFilterProjectile
HandleListGetFilterProjectile="HandleListGetFilterProjectile(",")"
HandleListGetFilterProjectileHint="[UjAPI]  HandleListGetFilterProjectile takes nothing returns projectile"


HandleListGetFilterFrame=HandleListGetFilterFrame
HandleListGetFilterFrame="HandleListGetFilterFrame(",")"
HandleListGetFilterFrameHint="[UjAPI]  HandleListGetFilterFrame takes nothing returns framehandle"


HandleListGetFilterOrder=HandleListGetFilterOrder
HandleListGetFilterOrder="HandleListGetFilterOrder(",")"
HandleListGetFilterOrderHint="[UjAPI]  HandleListGetFilterOrder takes nothing returns orderhandle"


HandleListGetEnumHandle=HandleListGetEnumHandle
HandleListGetEnumHandle="HandleListGetEnumHandle(",")"
HandleListGetEnumHandleHint="[UjAPI]  HandleListGetEnumHandle takes nothing returns handle"


HandleListGetEnumAgent=HandleListGetEnumAgent
HandleListGetEnumAgent="HandleListGetEnumAgent(",")"
HandleListGetEnumAgentHint="[UjAPI]  HandleListGetEnumAgent takes nothing returns agent"


HandleListGetEnumWidget=HandleListGetEnumWidget
HandleListGetEnumWidget="HandleListGetEnumWidget(",")"
HandleListGetEnumWidgetHint="[UjAPI]  HandleListGetEnumWidget takes nothing returns widget"


HandleListGetEnumUnit=HandleListGetEnumUnit
HandleListGetEnumUnit="HandleListGetEnumUnit(",")"
HandleListGetEnumUnitHint="[UjAPI]  HandleListGetEnumUnit takes nothing returns unit"


HandleListGetEnumItem=HandleListGetEnumItem
HandleListGetEnumItem="HandleListGetEnumItem(",")"
HandleListGetEnumItemHint="[UjAPI]  HandleListGetEnumItem takes nothing returns item"


HandleListGetEnumDestructable=HandleListGetEnumDestructable
HandleListGetEnumDestructable="HandleListGetEnumDestructable(",")"
HandleListGetEnumDestructableHint="[UjAPI]  HandleListGetEnumDestructable takes nothing returns destructable"


HandleListGetEnumDoodad=HandleListGetEnumDoodad
HandleListGetEnumDoodad="HandleListGetEnumDoodad(",")"
HandleListGetEnumDoodadHint="[UjAPI]  HandleListGetEnumDoodad takes nothing returns doodad"


HandleListGetEnumAbility=HandleListGetEnumAbility
HandleListGetEnumAbility="HandleListGetEnumAbility(",")"
HandleListGetEnumAbilityHint="[UjAPI]  HandleListGetEnumAbility takes nothing returns ability"


HandleListGetEnumBuff=HandleListGetEnumBuff
HandleListGetEnumBuff="HandleListGetEnumBuff(",")"
HandleListGetEnumBuffHint="[UjAPI]  HandleListGetEnumBuff takes nothing returns buff"


HandleListGetEnumSprite=HandleListGetEnumSprite
HandleListGetEnumSprite="HandleListGetEnumSprite(",")"
HandleListGetEnumSpriteHint="[UjAPI]  HandleListGetEnumSprite takes nothing returns sprite"


HandleListGetEnumEffect=HandleListGetEnumEffect
HandleListGetEnumEffect="HandleListGetEnumEffect(",")"
HandleListGetEnumEffectHint="[UjAPI]  HandleListGetEnumEffect takes nothing returns effect"


HandleListGetEnumProjectile=HandleListGetEnumProjectile
HandleListGetEnumProjectile="HandleListGetEnumProjectile(",")"
HandleListGetEnumProjectileHint="[UjAPI]  HandleListGetEnumProjectile takes nothing returns projectile"


HandleListGetEnumFrame=HandleListGetEnumFrame
HandleListGetEnumFrame="HandleListGetEnumFrame(",")"
HandleListGetEnumFrameHint="[UjAPI]  HandleListGetEnumFrame takes nothing returns framehandle"


HandleListGetEnumOrder=HandleListGetEnumOrder
HandleListGetEnumOrder="HandleListGetEnumOrder(",")"
HandleListGetEnumOrderHint="[UjAPI]  HandleListGetEnumOrder takes nothing returns orderhandle"


IsTextTagVisible=IsTextTagVisible
IsTextTagVisible="IsTextTagVisible(",~whichTextTag,")"
IsTextTagVisibleHint="[UjAPI]  IsTextTagVisible takes texttag whichTextTag returns boolean"


IsTextTagSuspended=IsTextTagSuspended
IsTextTagSuspended="IsTextTagSuspended(",~whichTextTag,")"
IsTextTagSuspendedHint="[UjAPI]  IsTextTagSuspended takes texttag whichTextTag returns boolean"


IsTextTagPermanent=IsTextTagPermanent
IsTextTagPermanent="IsTextTagPermanent(",~whichTextTag,")"
IsTextTagPermanentHint="[UjAPI]  IsTextTagPermanent takes texttag whichTextTag returns real"


GetTextTagX=GetTextTagX
GetTextTagX="GetTextTagX(",~whichTextTag,")"
GetTextTagXHint="[UjAPI]  GetTextTagX takes texttag whichTextTag returns real"


GetTextTagY=GetTextTagY
GetTextTagY="GetTextTagY(",~whichTextTag,")"
GetTextTagYHint="[UjAPI]  GetTextTagY takes texttag whichTextTag returns real"


GetTextTagZ=GetTextTagZ
GetTextTagZ="GetTextTagZ(",~whichTextTag,")"
GetTextTagZHint="[UjAPI]  GetTextTagZ takes texttag whichTextTag returns real"


GetTextTagScreenX=GetTextTagScreenX
GetTextTagScreenX="GetTextTagScreenX(",~whichTextTag,")"
GetTextTagScreenXHint="[UjAPI]  GetTextTagScreenX takes texttag whichTextTag returns real"


GetTextTagScreenY=GetTextTagScreenY
GetTextTagScreenY="GetTextTagScreenY(",~whichTextTag,")"
GetTextTagScreenYHint="[UjAPI]  GetTextTagScreenY takes texttag whichTextTag returns real"


GetTextTagHeight=GetTextTagHeight
GetTextTagHeight="GetTextTagHeight(",~whichTextTag,")"
GetTextTagHeightHint="[UjAPI]  GetTextTagHeight takes texttag whichTextTag returns real"


GetTextTagPositionLoc=GetTextTagPositionLoc
GetTextTagPositionLoc="GetTextTagPositionLoc(",~whichTextTag,")"
GetTextTagPositionLocHint="[UjAPI]  GetTextTagPositionLoc takes texttag whichTextTag returns location"


GetTextTagColour=GetTextTagColour
GetTextTagColour="GetTextTagColour(",~whichTextTag,")"
GetTextTagColourHint="[UjAPI]  GetTextTagColour takes texttag whichTextTag returns integer"


GetTextTagAlpha=GetTextTagAlpha
GetTextTagAlpha="GetTextTagAlpha(",~whichTextTag,")"
GetTextTagAlphaHint="[UjAPI]  GetTextTagAlpha takes texttag whichTextTag returns integer"


GetTextTagVelocityX=GetTextTagVelocityX
GetTextTagVelocityX="GetTextTagVelocityX(",~whichTextTag,")"
GetTextTagVelocityXHint="[UjAPI]  GetTextTagVelocityX takes texttag whichTextTag returns real"


GetTextTagVelocityY=GetTextTagVelocityY
GetTextTagVelocityY="GetTextTagVelocityY(",~whichTextTag,")"
GetTextTagVelocityYHint="[UjAPI]  GetTextTagVelocityY takes texttag whichTextTag returns real"


GetTextTagVelocityZ=GetTextTagVelocityZ
GetTextTagVelocityZ="GetTextTagVelocityZ(",~whichTextTag,")"
GetTextTagVelocityZHint="[UjAPI]  GetTextTagVelocityZ takes texttag whichTextTag returns real"


GetTextTagAge=GetTextTagAge
GetTextTagAge="GetTextTagAge(",~whichTextTag,")"
GetTextTagAgeHint="[UjAPI]  GetTextTagAge takes texttag whichTextTag returns real"


GetTextTagLifespan=GetTextTagLifespan
GetTextTagLifespan="GetTextTagLifespan(",~whichTextTag,")"
GetTextTagLifespanHint="[UjAPI]  GetTextTagLifespan takes texttag whichTextTag returns real"


GetTextTagFadepoint=GetTextTagFadepoint
GetTextTagFadepoint="GetTextTagFadepoint(",~whichTextTag,")"
GetTextTagFadepointHint="[UjAPI]  GetTextTagFadepoint takes texttag whichTextTag returns real"


GetTextTagShadowColour=GetTextTagShadowColour
GetTextTagShadowColour="GetTextTagShadowColour(",~whichTextTag,")"
GetTextTagShadowColourHint="[UjAPI]  GetTextTagShadowColour takes texttag whichTextTag returns integer"


GetTextTagShadowAlpha=GetTextTagShadowAlpha
GetTextTagShadowAlpha="GetTextTagShadowAlpha(",~whichTextTag,")"
GetTextTagShadowAlphaHint="[UjAPI]  GetTextTagShadowAlpha takes texttag whichTextTag returns integer"


GetTextTagText=GetTextTagText
GetTextTagText="GetTextTagText(",~whichTextTag,")"
GetTextTagTextHint="[UjAPI]  GetTextTagText takes texttag whichTextTag returns string"


GetLightningSourceX=GetLightningSourceX
GetLightningSourceX="GetLightningSourceX(",~whichBolt,")"
GetLightningSourceXHint="[UjAPI]  GetLightningSourceX takes lightning whichBolt returns real"


GetLightningSourceY=GetLightningSourceY
GetLightningSourceY="GetLightningSourceY(",~whichBolt,")"
GetLightningSourceYHint="[UjAPI]  GetLightningSourceY takes lightning whichBolt returns real"


GetLightningSourceZ=GetLightningSourceZ
GetLightningSourceZ="GetLightningSourceZ(",~whichBolt,")"
GetLightningSourceZHint="[UjAPI]  GetLightningSourceZ takes lightning whichBolt returns real"


GetLightningSourcePositionLoc=GetLightningSourcePositionLoc
GetLightningSourcePositionLoc="GetLightningSourcePositionLoc(",~whichBolt,")"
GetLightningSourcePositionLocHint="[UjAPI]  GetLightningSourcePositionLoc takes lightning whichBolt returns location"


GetLightningTargetX=GetLightningTargetX
GetLightningTargetX="GetLightningTargetX(",~whichBolt,")"
GetLightningTargetXHint="[UjAPI]  GetLightningTargetX takes lightning whichBolt returns real"


GetLightningTargetY=GetLightningTargetY
GetLightningTargetY="GetLightningTargetY(",~whichBolt,")"
GetLightningTargetYHint="[UjAPI]  GetLightningTargetY takes lightning whichBolt returns real"


GetLightningTargetZ=GetLightningTargetZ
GetLightningTargetZ="GetLightningTargetZ(",~whichBolt,")"
GetLightningTargetZHint="[UjAPI]  GetLightningTargetZ takes lightning whichBolt returns real"


GetLightningTargetPositionLoc=GetLightningTargetPositionLoc
GetLightningTargetPositionLoc="GetLightningTargetPositionLoc(",~whichBolt,")"
GetLightningTargetPositionLocHint="[UjAPI]  GetLightningTargetPositionLoc takes lightning whichBolt returns location"


GetLightningScreenX=GetLightningScreenX
GetLightningScreenX="GetLightningScreenX(",~whichBolt,")"
GetLightningScreenXHint="[UjAPI]  GetLightningScreenX takes lightning whichBolt returns real"


GetLightningScreenY=GetLightningScreenY
GetLightningScreenY="GetLightningScreenY(",~whichBolt,")"
GetLightningScreenYHint="[UjAPI]  GetLightningScreenY takes lightning whichBolt returns real"


GetLightningColour=GetLightningColour
GetLightningColour="GetLightningColour(",~whichBolt,")"
GetLightningColourHint="[UjAPI]  GetLightningColour takes lightning whichBolt returns integer"


GetLightningColourA=GetLightningColourA
GetLightningColourA="GetLightningColourA(",~whichBolt,")"
GetLightningColourAHint="[UjAPI]  GetLightningColourA takes lightning whichBolt returns integer"


GetLightningColourR=GetLightningColourR
GetLightningColourR="GetLightningColourR(",~whichBolt,")"
GetLightningColourRHint="[UjAPI]  GetLightningColourR takes lightning whichBolt returns integer"


GetLightningColourG=GetLightningColourG
GetLightningColourG="GetLightningColourG(",~whichBolt,")"
GetLightningColourGHint="[UjAPI]  GetLightningColourG takes lightning whichBolt returns integer"


GetLightningColourB=GetLightningColourB
GetLightningColourB="GetLightningColourB(",~whichBolt,")"
GetLightningColourBHint="[UjAPI]  GetLightningColourB takes lightning whichBolt returns integer"


SetLightningColour=SetLightningColour
SetLightningColour="SetLightningColour(",~whichBolt,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetLightningColourHint="[UjAPI]  SetLightningColour takes lightning whichBolt, integer red, integer green, integer blue, integer alpha returns boolean"


GetLightningLength=GetLightningLength
GetLightningLength="GetLightningLength(",~whichBolt,")"
GetLightningLengthHint="[UjAPI]  GetLightningLength takes lightning whichBolt returns real"


GetLightningWidth=GetLightningWidth
GetLightningWidth="GetLightningWidth(",~whichBolt,")"
GetLightningWidthHint="[UjAPI]  GetLightningWidth takes lightning whichBolt returns real"


GetLightningNoiseScaling=GetLightningNoiseScaling
GetLightningNoiseScaling="GetLightningNoiseScaling(",~whichBolt,")"
GetLightningNoiseScalingHint="[UjAPI]  GetLightningNoiseScaling takes lightning whichBolt returns real"


GetLightningTextureCoordinates=GetLightningTextureCoordinates
GetLightningTextureCoordinates="GetLightningTextureCoordinates(",~whichBolt,")"
GetLightningTextureCoordinatesHint="[UjAPI]  GetLightningTextureCoordinates takes lightning whichBolt returns real"


GetLightningDuration=GetLightningDuration
GetLightningDuration="GetLightningDuration(",~whichBolt,")"
GetLightningDurationHint="[UjAPI]  GetLightningDuration takes lightning whichBolt returns real"


GetLightningTexture=GetLightningTexture
GetLightningTexture="GetLightningTexture(",~whichBolt,")"
GetLightningTextureHint="[UjAPI]  GetLightningTexture takes lightning whichBolt returns string"


CreateImageSimple=CreateImageSimple
CreateImageSimple="CreateImageSimple(",~file,", ",~sizeX,", ",~sizeY,", ",~posX,", ",~posY,", ",~posZ,", ",~imageType,")"
CreateImageSimpleHint="[UjAPI]  CreateImageSimple takes string file, real sizeX, real sizeY, real posX, real posY, real posZ, integer imageType returns image"


GetImageType=GetImageType
GetImageType="GetImageType(",~whichImage,")"
GetImageTypeHint="[UjAPI]  GetImageType takes image whichImage returns integer"


GetImageX=GetImageX
GetImageX="GetImageX(",~whichImage,")"
GetImageXHint="[UjAPI]  GetImageX takes image whichImage returns real"


GetImageY=GetImageY
GetImageY="GetImageY(",~whichImage,")"
GetImageYHint="[UjAPI]  GetImageY takes image whichImage returns real"


GetImageZ=GetImageZ
GetImageZ="GetImageZ(",~whichImage,")"
GetImageZHint="[UjAPI]  GetImageZ takes image whichImage returns real"


GetImagePositionLoc=GetImagePositionLoc
GetImagePositionLoc="GetImagePositionLoc(",~whichImage,")"
GetImagePositionLocHint="[UjAPI]  GetImagePositionLoc takes image whichImage returns location"


GetImageScreenX=GetImageScreenX
GetImageScreenX="GetImageScreenX(",~whichImage,")"
GetImageScreenXHint="[UjAPI]  GetImageScreenX takes image whichImage returns real"


GetImageScreenY=GetImageScreenY
GetImageScreenY="GetImageScreenY(",~whichImage,")"
GetImageScreenYHint="[UjAPI]  GetImageScreenY takes image whichImage returns real"


GetImageOriginX=GetImageOriginX
GetImageOriginX="GetImageOriginX(",~whichImage,")"
GetImageOriginXHint="[UjAPI]  GetImageOriginX takes image whichImage returns real"


GetImageOriginY=GetImageOriginY
GetImageOriginY="GetImageOriginY(",~whichImage,")"
GetImageOriginYHint="[UjAPI]  GetImageOriginY takes image whichImage returns real"


GetImageSizeX=GetImageSizeX
GetImageSizeX="GetImageSizeX(",~whichImage,")"
GetImageSizeXHint="[UjAPI]  GetImageSizeX takes image whichImage returns real"


GetImageSizeY=GetImageSizeY
GetImageSizeY="GetImageSizeY(",~whichImage,")"
GetImageSizeYHint="[UjAPI]  GetImageSizeY takes image whichImage returns real"


GetImageColour=GetImageColour
GetImageColour="GetImageColour(",~whichImage,")"
GetImageColourHint="[UjAPI]  GetImageColour takes image whichImage returns integer"


IsImageRendered=IsImageRendered
IsImageRendered="IsImageRendered(",~whichImage,")"
IsImageRenderedHint="[UjAPI]  IsImageRendered takes image whichImage returns boolean"


IsImageRenderAlways=IsImageRenderAlways
IsImageRenderAlways="IsImageRenderAlways(",~whichImage,")"
IsImageRenderAlwaysHint="[UjAPI]  IsImageRenderAlways takes image whichImage returns boolean"


IsImageRenderAboveWater=IsImageRenderAboveWater
IsImageRenderAboveWater="IsImageRenderAboveWater(",~whichImage,")"
IsImageRenderAboveWaterHint="[UjAPI]  IsImageRenderAboveWater takes image whichImage returns boolean"


IsImageVisible=IsImageVisible
IsImageVisible="IsImageVisible(",~whichImage,")"
IsImageVisibleHint="[UjAPI]  IsImageVisible takes image whichImage returns boolean"


GetImageConstantHeight=GetImageConstantHeight
GetImageConstantHeight="GetImageConstantHeight(",~whichImage,")"
GetImageConstantHeightHint="[UjAPI]  GetImageConstantHeight takes image whichImage returns real"


GetImageTexture=GetImageTexture
GetImageTexture="GetImageTexture(",~whichImage,")"
GetImageTextureHint="[UjAPI]  GetImageTexture takes image whichImage returns string"


TimerIsPaused=TimerIsPaused
TimerIsPaused="TimerIsPaused(",~whichTimer,")"
TimerIsPausedHint="[UjAPI]  TimerIsPaused takes timer whichTimer returns boolean"


TimerIsPeriodic=TimerIsPeriodic
TimerIsPeriodic="TimerIsPeriodic(",~whichTimer,")"
TimerIsPeriodicHint="[UjAPI]  TimerIsPeriodic takes timer whichTimer returns boolean"


TimerGetCallback=TimerGetCallback
TimerGetCallback="TimerGetCallback(",~whichTimer,")"
TimerGetCallbackHint="[UjAPI]  TimerGetCallback takes timer whichTimer returns code"


CreateDoodad=CreateDoodad
CreateDoodad="CreateDoodad(",~objectid,", ",~x,", ",~y,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadHint="[UjAPI]  CreateDoodad takes integer objectid, real x, real y, real facing, real scale, integer variation returns doodad"


CreateDoodadZ=CreateDoodadZ
CreateDoodadZ="CreateDoodadZ(",~objectid,", ",~x,", ",~y,", ",~z,", ",~facing,", ",~scale,", ",~variation,")"
CreateDoodadZHint="[UjAPI]  CreateDoodadZ takes integer objectid, real x, real y, real z, real facing, real scale, integer variation returns doodad"


GetDoodadCount=GetDoodadCount
GetDoodadCount="GetDoodadCount(",")"
GetDoodadCountHint="[UjAPI]  GetDoodadCount takes nothing returns integer"


GetDoodadByIndex=GetDoodadByIndex
GetDoodadByIndex="GetDoodadByIndex(",~index,")"
GetDoodadByIndexHint="[UjAPI]  GetDoodadByIndex takes integer index returns doodad"


GetDoodadIndex=GetDoodadIndex
GetDoodadIndex="GetDoodadIndex(",~whichDoodad,")"
GetDoodadIndexHint="[UjAPI]  GetDoodadIndex takes doodad whichDoodad returns integer"


GetDoodadColour=GetDoodadColour
GetDoodadColour="GetDoodadColour(",~whichDoodad,")"
GetDoodadColourHint="[UjAPI]  GetDoodadColour takes doodad whichDoodad returns integer"


GetDoodadScale=GetDoodadScale
GetDoodadScale="GetDoodadScale(",~whichDoodad,")"
GetDoodadScaleHint="[UjAPI]  GetDoodadScale takes doodad whichDoodad returns real"


GetDoodadTimeScale=GetDoodadTimeScale
GetDoodadTimeScale="GetDoodadTimeScale(",~whichDoodad,")"
GetDoodadTimeScaleHint="[UjAPI]  GetDoodadTimeScale takes doodad whichDoodad returns real"


GetDoodadX=GetDoodadX
GetDoodadX="GetDoodadX(",~whichDoodad,")"
GetDoodadXHint="[UjAPI]  GetDoodadX takes doodad whichDoodad returns real"


GetDoodadY=GetDoodadY
GetDoodadY="GetDoodadY(",~whichDoodad,")"
GetDoodadYHint="[UjAPI]  GetDoodadY takes doodad whichDoodad returns real"


GetDoodadZ=GetDoodadZ
GetDoodadZ="GetDoodadZ(",~whichDoodad,")"
GetDoodadZHint="[UjAPI]  GetDoodadZ takes doodad whichDoodad returns real"


GetDoodadPositionLoc=GetDoodadPositionLoc
GetDoodadPositionLoc="GetDoodadPositionLoc(",~whichDoodad,")"
GetDoodadPositionLocHint="[UjAPI]  GetDoodadPositionLoc takes doodad whichDoodad returns location"


GetDoodadScreenX=GetDoodadScreenX
GetDoodadScreenX="GetDoodadScreenX(",~whichDoodad,")"
GetDoodadScreenXHint="[UjAPI]  GetDoodadScreenX takes doodad whichDoodad returns real"


GetDoodadScreenY=GetDoodadScreenY
GetDoodadScreenY="GetDoodadScreenY(",~whichDoodad,")"
GetDoodadScreenYHint="[UjAPI]  GetDoodadScreenY takes doodad whichDoodad returns real"


GetDoodadYaw=GetDoodadYaw
GetDoodadYaw="GetDoodadYaw(",~whichDoodad,")"
GetDoodadYawHint="[UjAPI]  GetDoodadYaw takes doodad whichDoodad returns real"


GetDoodadFacing=GetDoodadFacing
GetDoodadFacing="GetDoodadFacing(",~whichDoodad,")"
GetDoodadFacingHint="[UjAPI]  GetDoodadFacing takes doodad whichDoodad returns real"


GetDoodadPitch=GetDoodadPitch
GetDoodadPitch="GetDoodadPitch(",~whichDoodad,")"
GetDoodadPitchHint="[UjAPI]  GetDoodadPitch takes doodad whichDoodad returns real"


GetDoodadRoll=GetDoodadRoll
GetDoodadRoll="GetDoodadRoll(",~whichDoodad,")"
GetDoodadRollHint="[UjAPI]  GetDoodadRoll takes doodad whichDoodad returns real"


GetDoodadPlayerColour=GetDoodadPlayerColour
GetDoodadPlayerColour="GetDoodadPlayerColour(",~whichDoodad,")"
GetDoodadPlayerColourHint="[UjAPI]  GetDoodadPlayerColour takes doodad whichDoodad returns playercolor"


GetDoodadModel=GetDoodadModel
GetDoodadModel="GetDoodadModel(",~whichDoodad,")"
GetDoodadModelHint="[UjAPI]  GetDoodadModel takes doodad whichDoodad returns string"


IsDoodadVisible=IsDoodadVisible
IsDoodadVisible="IsDoodadVisible(",~whichDoodad,")"
IsDoodadVisibleHint="[UjAPI]  IsDoodadVisible takes doodad whichDoodad returns boolean"


GetDoodadAnimationOffsetPercent=GetDoodadAnimationOffsetPercent
GetDoodadAnimationOffsetPercent="GetDoodadAnimationOffsetPercent(",~whichDoodad,")"
GetDoodadAnimationOffsetPercentHint="[UjAPI]  GetDoodadAnimationOffsetPercent takes doodad whichDoodad returns real"


GetFilterDoodad=GetFilterDoodad
GetFilterDoodad="GetFilterDoodad(",")"
GetFilterDoodadHint="[UjAPI]  GetFilterDoodad takes nothing returns doodad"


GetEnumDoodad=GetEnumDoodad
GetEnumDoodad="GetEnumDoodad(",")"
GetEnumDoodadHint="[UjAPI]  GetEnumDoodad takes nothing returns doodad"


GetAbilityBaseIntegerFieldById=GetAbilityBaseIntegerFieldById
GetAbilityBaseIntegerFieldById="GetAbilityBaseIntegerFieldById(",~aid,", ",~whichField,")"
GetAbilityBaseIntegerFieldByIdHint="[UjAPI]  GetAbilityBaseIntegerFieldById takes integer aid, abilityintegerfield whichField returns integer"


SetAbilityBaseIntegerFieldById=SetAbilityBaseIntegerFieldById
SetAbilityBaseIntegerFieldById="SetAbilityBaseIntegerFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseIntegerFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerFieldById takes integer aid, abilityintegerfield whichField, integer value returns boolean"


GetAbilityBaseBooleanFieldById=GetAbilityBaseBooleanFieldById
GetAbilityBaseBooleanFieldById="GetAbilityBaseBooleanFieldById(",~aid,", ",~whichField,")"
GetAbilityBaseBooleanFieldByIdHint="[UjAPI]  GetAbilityBaseBooleanFieldById takes integer aid, abilitybooleanfield whichField returns boolean"


SetAbilityBaseBooleanFieldById=SetAbilityBaseBooleanFieldById
SetAbilityBaseBooleanFieldById="SetAbilityBaseBooleanFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseBooleanFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanFieldById takes integer aid, abilitybooleanfield whichField, boolean value returns boolean"


GetAbilityBaseRealFieldById=GetAbilityBaseRealFieldById
GetAbilityBaseRealFieldById="GetAbilityBaseRealFieldById(",~aid,", ",~whichField,")"
GetAbilityBaseRealFieldByIdHint="[UjAPI]  GetAbilityBaseRealFieldById takes integer aid, abilityrealfield whichField returns real"


SetAbilityBaseRealFieldById=SetAbilityBaseRealFieldById
SetAbilityBaseRealFieldById="SetAbilityBaseRealFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseRealFieldByIdHint="[UjAPI]  SetAbilityBaseRealFieldById takes integer aid, abilityrealfield whichField, real value returns boolean"


GetAbilityBaseStringFieldById=GetAbilityBaseStringFieldById
GetAbilityBaseStringFieldById="GetAbilityBaseStringFieldById(",~aid,", ",~whichField,")"
GetAbilityBaseStringFieldByIdHint="[UjAPI]  GetAbilityBaseStringFieldById takes integer aid, abilitystringfield whichField returns string"


SetAbilityBaseStringFieldById=SetAbilityBaseStringFieldById
SetAbilityBaseStringFieldById="SetAbilityBaseStringFieldById(",~aid,", ",~whichField,", ",~value,")"
SetAbilityBaseStringFieldByIdHint="[UjAPI]  SetAbilityBaseStringFieldById takes integer aid, abilitystringfield whichField, string value returns boolean"


GetAbilityBaseIntegerLevelFieldById=GetAbilityBaseIntegerLevelFieldById
GetAbilityBaseIntegerLevelFieldById="GetAbilityBaseIntegerLevelFieldById(",~aid,", ",~whichField,", ",~level,")"
GetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  GetAbilityBaseIntegerLevelFieldById takes integer aid, abilityintegerlevelfield whichField, integer level returns integer"


SetAbilityBaseIntegerLevelFieldById=SetAbilityBaseIntegerLevelFieldById
SetAbilityBaseIntegerLevelFieldById="SetAbilityBaseIntegerLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseIntegerLevelFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerLevelFieldById takes integer aid, abilityintegerlevelfield whichField, integer level, integer value returns boolean"


GetAbilityBaseBooleanLevelFieldById=GetAbilityBaseBooleanLevelFieldById
GetAbilityBaseBooleanLevelFieldById="GetAbilityBaseBooleanLevelFieldById(",~aid,", ",~whichField,", ",~level,")"
GetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  GetAbilityBaseBooleanLevelFieldById takes integer aid, abilitybooleanlevelfield whichField, integer level returns boolean"


SetAbilityBaseBooleanLevelFieldById=SetAbilityBaseBooleanLevelFieldById
SetAbilityBaseBooleanLevelFieldById="SetAbilityBaseBooleanLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseBooleanLevelFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanLevelFieldById takes integer aid, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"


GetAbilityBaseRealLevelFieldById=GetAbilityBaseRealLevelFieldById
GetAbilityBaseRealLevelFieldById="GetAbilityBaseRealLevelFieldById(",~aid,", ",~whichField,", ",~level,")"
GetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  GetAbilityBaseRealLevelFieldById takes integer aid, abilityreallevelfield whichField, integer level returns real"


SetAbilityBaseRealLevelFieldById=SetAbilityBaseRealLevelFieldById
SetAbilityBaseRealLevelFieldById="SetAbilityBaseRealLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseRealLevelFieldByIdHint="[UjAPI]  SetAbilityBaseRealLevelFieldById takes integer aid, abilityreallevelfield whichField, integer level, real value returns boolean"


GetAbilityBaseStringLevelFieldById=GetAbilityBaseStringLevelFieldById
GetAbilityBaseStringLevelFieldById="GetAbilityBaseStringLevelFieldById(",~aid,", ",~whichField,", ",~level,")"
GetAbilityBaseStringLevelFieldByIdHint="[UjAPI]  GetAbilityBaseStringLevelFieldById takes integer aid, abilitystringlevelfield whichField, integer level returns string"


SetAbilityBaseStringLevelFieldById=SetAbilityBaseStringLevelFieldById
SetAbilityBaseStringLevelFieldById="SetAbilityBaseStringLevelFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBaseStringLevelFieldByIdHint="[UjAPI]  SetAbilityBaseStringLevelFieldById takes integer aid, abilitystringlevelfield whichField, integer level, string value returns boolean"


GetAbilityBaseIntegerLevelArrayFieldById=GetAbilityBaseIntegerLevelArrayFieldById
GetAbilityBaseIntegerLevelArrayFieldById="GetAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  GetAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index returns integer"


SetAbilityBaseIntegerLevelArrayFieldById=SetAbilityBaseIntegerLevelArrayFieldById
SetAbilityBaseIntegerLevelArrayFieldById="SetAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"


AddAbilityBaseIntegerLevelArrayFieldById=AddAbilityBaseIntegerLevelArrayFieldById
AddAbilityBaseIntegerLevelArrayFieldById="AddAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


RemoveAbilityBaseIntegerLevelArrayFieldById=RemoveAbilityBaseIntegerLevelArrayFieldById
RemoveAbilityBaseIntegerLevelArrayFieldById="RemoveAbilityBaseIntegerLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseIntegerLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseIntegerLevelArrayFieldById takes integer aid, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


GetAbilityBaseBooleanLevelArrayFieldById=GetAbilityBaseBooleanLevelArrayFieldById
GetAbilityBaseBooleanLevelArrayFieldById="GetAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  GetAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index returns boolean"


SetAbilityBaseBooleanLevelArrayFieldById=SetAbilityBaseBooleanLevelArrayFieldById
SetAbilityBaseBooleanLevelArrayFieldById="SetAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"


AddAbilityBaseBooleanLevelArrayFieldById=AddAbilityBaseBooleanLevelArrayFieldById
AddAbilityBaseBooleanLevelArrayFieldById="AddAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


RemoveAbilityBaseBooleanLevelArrayFieldById=RemoveAbilityBaseBooleanLevelArrayFieldById
RemoveAbilityBaseBooleanLevelArrayFieldById="RemoveAbilityBaseBooleanLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseBooleanLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseBooleanLevelArrayFieldById takes integer aid, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


GetAbilityBaseRealLevelArrayFieldById=GetAbilityBaseRealLevelArrayFieldById
GetAbilityBaseRealLevelArrayFieldById="GetAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  GetAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, integer index returns real"


SetAbilityBaseRealLevelArrayFieldById=SetAbilityBaseRealLevelArrayFieldById
SetAbilityBaseRealLevelArrayFieldById="SetAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"


AddAbilityBaseRealLevelArrayFieldById=AddAbilityBaseRealLevelArrayFieldById
AddAbilityBaseRealLevelArrayFieldById="AddAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


RemoveAbilityBaseRealLevelArrayFieldById=RemoveAbilityBaseRealLevelArrayFieldById
RemoveAbilityBaseRealLevelArrayFieldById="RemoveAbilityBaseRealLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseRealLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseRealLevelArrayFieldById takes integer aid, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


GetAbilityBaseStringLevelArrayFieldById=GetAbilityBaseStringLevelArrayFieldById
GetAbilityBaseStringLevelArrayFieldById="GetAbilityBaseStringLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  GetAbilityBaseStringLevelArrayFieldById takes integer aid, abilitystringlevelarrayfield whichField, integer level, integer index returns string"


SetAbilityBaseStringLevelArrayFieldById=SetAbilityBaseStringLevelArrayFieldById
SetAbilityBaseStringLevelArrayFieldById="SetAbilityBaseStringLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  SetAbilityBaseStringLevelArrayFieldById takes integer aid, abilitystringlevelarrayfield whichField, integer level, integer index, string value returns boolean"


AddAbilityBaseStringLevelArrayFieldById=AddAbilityBaseStringLevelArrayFieldById
AddAbilityBaseStringLevelArrayFieldById="AddAbilityBaseStringLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  AddAbilityBaseStringLevelArrayFieldById takes integer aid, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"


RemoveAbilityBaseStringLevelArrayFieldById=RemoveAbilityBaseStringLevelArrayFieldById
RemoveAbilityBaseStringLevelArrayFieldById="RemoveAbilityBaseStringLevelArrayFieldById(",~aid,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBaseStringLevelArrayFieldByIdHint="[UjAPI]  RemoveAbilityBaseStringLevelArrayFieldById takes integer aid, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"


GetAbilityIntegerField=GetAbilityIntegerField
GetAbilityIntegerField="GetAbilityIntegerField(",~whichAbility,", ",~whichField,")"
GetAbilityIntegerFieldHint="[UjAPI]  GetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField returns integer"


SetAbilityIntegerField=SetAbilityIntegerField
SetAbilityIntegerField="SetAbilityIntegerField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityIntegerFieldHint="[UjAPI]  SetAbilityIntegerField takes ability whichAbility, abilityintegerfield whichField, integer value returns boolean"


GetAbilityBooleanField=GetAbilityBooleanField
GetAbilityBooleanField="GetAbilityBooleanField(",~whichAbility,", ",~whichField,")"
GetAbilityBooleanFieldHint="[UjAPI]  GetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField returns boolean"


SetAbilityBooleanField=SetAbilityBooleanField
SetAbilityBooleanField="SetAbilityBooleanField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityBooleanFieldHint="[UjAPI]  SetAbilityBooleanField takes ability whichAbility, abilitybooleanfield whichField, boolean value returns boolean"


GetAbilityRealField=GetAbilityRealField
GetAbilityRealField="GetAbilityRealField(",~whichAbility,", ",~whichField,")"
GetAbilityRealFieldHint="[UjAPI]  GetAbilityRealField takes ability whichAbility, abilityrealfield whichField returns real"


SetAbilityRealField=SetAbilityRealField
SetAbilityRealField="SetAbilityRealField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityRealFieldHint="[UjAPI]  SetAbilityRealField takes ability whichAbility, abilityrealfield whichField, real value returns boolean"


GetAbilityStringField=GetAbilityStringField
GetAbilityStringField="GetAbilityStringField(",~whichAbility,", ",~whichField,")"
GetAbilityStringFieldHint="[UjAPI]  GetAbilityStringField takes ability whichAbility, abilitystringfield whichField returns string"


SetAbilityStringField=SetAbilityStringField
SetAbilityStringField="SetAbilityStringField(",~whichAbility,", ",~whichField,", ",~value,")"
SetAbilityStringFieldHint="[UjAPI]  SetAbilityStringField takes ability whichAbility, abilitystringfield whichField, string value returns boolean"


GetAbilityIntegerLevelField=GetAbilityIntegerLevelField
GetAbilityIntegerLevelField="GetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityIntegerLevelFieldHint="[UjAPI]  GetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level returns integer"


SetAbilityIntegerLevelField=SetAbilityIntegerLevelField
SetAbilityIntegerLevelField="SetAbilityIntegerLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityIntegerLevelFieldHint="[UjAPI]  SetAbilityIntegerLevelField takes ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value returns boolean"


GetAbilityBooleanLevelField=GetAbilityBooleanLevelField
GetAbilityBooleanLevelField="GetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityBooleanLevelFieldHint="[UjAPI]  GetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level returns boolean"


SetAbilityBooleanLevelField=SetAbilityBooleanLevelField
SetAbilityBooleanLevelField="SetAbilityBooleanLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityBooleanLevelFieldHint="[UjAPI]  SetAbilityBooleanLevelField takes ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value returns boolean"


GetAbilityRealLevelField=GetAbilityRealLevelField
GetAbilityRealLevelField="GetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityRealLevelFieldHint="[UjAPI]  GetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level returns real"


SetAbilityRealLevelField=SetAbilityRealLevelField
SetAbilityRealLevelField="SetAbilityRealLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityRealLevelFieldHint="[UjAPI]  SetAbilityRealLevelField takes ability whichAbility, abilityreallevelfield whichField, integer level, real value returns boolean"


GetAbilityStringLevelField=GetAbilityStringLevelField
GetAbilityStringLevelField="GetAbilityStringLevelField(",~whichAbility,", ",~whichField,", ",~level,")"
GetAbilityStringLevelFieldHint="[UjAPI]  GetAbilityStringLevelField takes ability whichAbility, abilitystringlevelfield whichField, integer level returns string"


SetAbilityStringLevelField=SetAbilityStringLevelField
SetAbilityStringLevelField="SetAbilityStringLevelField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
SetAbilityStringLevelFieldHint="[UjAPI]  SetAbilityStringLevelField takes ability whichAbility, abilitystringlevelfield whichField, integer level, string value returns boolean"


GetAbilityIntegerLevelArrayField=GetAbilityIntegerLevelArrayField
GetAbilityIntegerLevelArrayField="GetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityIntegerLevelArrayFieldHint="[UjAPI]  GetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index returns integer"


SetAbilityIntegerLevelArrayField=SetAbilityIntegerLevelArrayField
SetAbilityIntegerLevelArrayField="SetAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityIntegerLevelArrayFieldHint="[UjAPI]  SetAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value returns boolean"


AddAbilityIntegerLevelArrayField=AddAbilityIntegerLevelArrayField
AddAbilityIntegerLevelArrayField="AddAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityIntegerLevelArrayFieldHint="[UjAPI]  AddAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


RemoveAbilityIntegerLevelArrayField=RemoveAbilityIntegerLevelArrayField
RemoveAbilityIntegerLevelArrayField="RemoveAbilityIntegerLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityIntegerLevelArrayFieldHint="[UjAPI]  RemoveAbilityIntegerLevelArrayField takes ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value returns boolean"


GetAbilityBooleanLevelArrayField=GetAbilityBooleanLevelArrayField
GetAbilityBooleanLevelArrayField="GetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityBooleanLevelArrayFieldHint="[UjAPI]  GetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index returns boolean"


SetAbilityBooleanLevelArrayField=SetAbilityBooleanLevelArrayField
SetAbilityBooleanLevelArrayField="SetAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityBooleanLevelArrayFieldHint="[UjAPI]  SetAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value returns boolean"


AddAbilityBooleanLevelArrayField=AddAbilityBooleanLevelArrayField
AddAbilityBooleanLevelArrayField="AddAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityBooleanLevelArrayFieldHint="[UjAPI]  AddAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


RemoveAbilityBooleanLevelArrayField=RemoveAbilityBooleanLevelArrayField
RemoveAbilityBooleanLevelArrayField="RemoveAbilityBooleanLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityBooleanLevelArrayFieldHint="[UjAPI]  RemoveAbilityBooleanLevelArrayField takes ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value returns boolean"


GetAbilityRealLevelArrayField=GetAbilityRealLevelArrayField
GetAbilityRealLevelArrayField="GetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityRealLevelArrayFieldHint="[UjAPI]  GetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index returns real"


SetAbilityRealLevelArrayField=SetAbilityRealLevelArrayField
SetAbilityRealLevelArrayField="SetAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityRealLevelArrayFieldHint="[UjAPI]  SetAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value returns boolean"


AddAbilityRealLevelArrayField=AddAbilityRealLevelArrayField
AddAbilityRealLevelArrayField="AddAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityRealLevelArrayFieldHint="[UjAPI]  AddAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


RemoveAbilityRealLevelArrayField=RemoveAbilityRealLevelArrayField
RemoveAbilityRealLevelArrayField="RemoveAbilityRealLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityRealLevelArrayFieldHint="[UjAPI]  RemoveAbilityRealLevelArrayField takes ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value returns boolean"


GetAbilityStringLevelArrayField=GetAbilityStringLevelArrayField
GetAbilityStringLevelArrayField="GetAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,")"
GetAbilityStringLevelArrayFieldHint="[UjAPI]  GetAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index returns string"


SetAbilityStringLevelArrayField=SetAbilityStringLevelArrayField
SetAbilityStringLevelArrayField="SetAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~index,", ",~value,")"
SetAbilityStringLevelArrayFieldHint="[UjAPI]  SetAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index, string value returns boolean"


AddAbilityStringLevelArrayField=AddAbilityStringLevelArrayField
AddAbilityStringLevelArrayField="AddAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
AddAbilityStringLevelArrayFieldHint="[UjAPI]  AddAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"


RemoveAbilityStringLevelArrayField=RemoveAbilityStringLevelArrayField
RemoveAbilityStringLevelArrayField="RemoveAbilityStringLevelArrayField(",~whichAbility,", ",~whichField,", ",~level,", ",~value,")"
RemoveAbilityStringLevelArrayFieldHint="[UjAPI]  RemoveAbilityStringLevelArrayField takes ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value returns boolean"


ResetAbilityFieldData=ResetAbilityFieldData
ResetAbilityFieldData="ResetAbilityFieldData(",~whichAbility,")"
ResetAbilityFieldDataHint="[UjAPI]  ResetAbilityFieldData takes ability whichAbility returns boolean"


IsAbilityBaseTargetAllowed=IsAbilityBaseTargetAllowed
IsAbilityBaseTargetAllowed="IsAbilityBaseTargetAllowed(",~abilCode,", ",~source,", ",~target,")"
IsAbilityBaseTargetAllowedHint="[UjAPI]  IsAbilityBaseTargetAllowed takes integer abilCode, widget source, widget target returns boolean"


CreateAbility=CreateAbility
CreateAbility="CreateAbility(",~abilCode,")"
CreateAbilityHint="[UjAPI]  CreateAbility takes integer abilCode returns ability"


GetTriggerAbility=GetTriggerAbility
GetTriggerAbility="GetTriggerAbility(",")"
GetTriggerAbilityHint="[UjAPI]  GetTriggerAbility takes nothing returns ability"


IsAbilityType=IsAbilityType
IsAbilityType="IsAbilityType(",~whichAbility,", ",~whichAbilityType,")"
IsAbilityTypeHint="[UjAPI]  IsAbilityType takes ability whichAbility, abilitytype whichAbilityType returns boolean"


GetAbilityOwner=GetAbilityOwner
GetAbilityOwner="GetAbilityOwner(",~whichAbility,")"
GetAbilityOwnerHint="[UjAPI]  GetAbilityOwner takes ability whichAbility returns unit"


GetAbilityOwningAbility=GetAbilityOwningAbility
GetAbilityOwningAbility="GetAbilityOwningAbility(",~whichAbility,")"
GetAbilityOwningAbilityHint="[UjAPI]  GetAbilityOwningAbility takes ability whichAbility returns ability"


GetAbilityOwningItem=GetAbilityOwningItem
GetAbilityOwningItem="GetAbilityOwningItem(",~whichAbility,")"
GetAbilityOwningItemHint="[UjAPI]  GetAbilityOwningItem takes ability whichAbility returns item"


GetAbilityOrderId=GetAbilityOrderId
GetAbilityOrderId="GetAbilityOrderId(",~whichAbility,")"
GetAbilityOrderIdHint="[UjAPI]  GetAbilityOrderId takes ability whichAbility returns integer"


GetAbilityLevel=GetAbilityLevel
GetAbilityLevel="GetAbilityLevel(",~whichAbility,")"
GetAbilityLevelHint="[UjAPI]  GetAbilityLevel takes ability whichAbility returns integer"


SetAbilityLevel=SetAbilityLevel
SetAbilityLevel="SetAbilityLevel(",~whichAbility,", ",~level,")"
SetAbilityLevelHint="[UjAPI]  SetAbilityLevel takes ability whichAbility, integer level returns integer"


GetAbilityBaseTypeId=GetAbilityBaseTypeId
GetAbilityBaseTypeId="GetAbilityBaseTypeId(",~whichAbility,")"
GetAbilityBaseTypeIdHint="[UjAPI]  GetAbilityBaseTypeId takes ability whichAbility returns integer"


GetAbilityTypeId=GetAbilityTypeId
GetAbilityTypeId="GetAbilityTypeId(",~whichAbility,")"
GetAbilityTypeIdHint="[UjAPI]  GetAbilityTypeId takes ability whichAbility returns integer"


IsAbilityTargetAllowed=IsAbilityTargetAllowed
IsAbilityTargetAllowed="IsAbilityTargetAllowed(",~whichAbility,", ",~whichWidget,")"
IsAbilityTargetAllowedHint="[UjAPI]  IsAbilityTargetAllowed takes ability whichAbility, widget whichWidget returns boolean"


IsAbilityOnCooldown=IsAbilityOnCooldown
IsAbilityOnCooldown="IsAbilityOnCooldown(",~whichAbility,")"
IsAbilityOnCooldownHint="[UjAPI]  IsAbilityOnCooldown takes ability whichAbility returns boolean"


IsAbilityEnabled=IsAbilityEnabled
IsAbilityEnabled="IsAbilityEnabled(",~whichAbility,")"
IsAbilityEnabledHint="[UjAPI]  IsAbilityEnabled takes ability whichAbility returns boolean"


IsAbilityVisible=IsAbilityVisible
IsAbilityVisible="IsAbilityVisible(",~whichAbility,")"
IsAbilityVisibleHint="[UjAPI]  IsAbilityVisible takes ability whichAbility returns boolean"


IsAbilityEnabledEx=IsAbilityEnabledEx
IsAbilityEnabledEx="IsAbilityEnabledEx(",~whichAbility,")"
IsAbilityEnabledExHint="[UjAPI]  IsAbilityEnabledEx takes ability whichAbility returns boolean"


IsAbilityUsable=IsAbilityUsable
IsAbilityUsable="IsAbilityUsable(",~whichAbility,")"
IsAbilityUsableHint="[UjAPI]  IsAbilityUsable takes ability whichAbility returns boolean"


IsAbilityAutocastEnabled=IsAbilityAutocastEnabled
IsAbilityAutocastEnabled="IsAbilityAutocastEnabled(",~whichAbility,")"
IsAbilityAutocastEnabledHint="[UjAPI]  IsAbilityAutocastEnabled takes ability whichAbility returns boolean"


GetAbilityCastTime=GetAbilityCastTime
GetAbilityCastTime="GetAbilityCastTime(",~whichAbility,")"
GetAbilityCastTimeHint="[UjAPI]  GetAbilityCastTime takes ability whichAbility returns real"


GetAbilityCastPoint=GetAbilityCastPoint
GetAbilityCastPoint="GetAbilityCastPoint(",~whichAbility,")"
GetAbilityCastPointHint="[UjAPI]  GetAbilityCastPoint takes ability whichAbility returns real"


GetAbilityBackswing=GetAbilityBackswing
GetAbilityBackswing="GetAbilityBackswing(",~whichAbility,")"
GetAbilityBackswingHint="[UjAPI]  GetAbilityBackswing takes ability whichAbility returns real"


GetAbilityCooldown=GetAbilityCooldown
GetAbilityCooldown="GetAbilityCooldown(",~whichAbility,")"
GetAbilityCooldownHint="[UjAPI]  GetAbilityCooldown takes ability whichAbility returns real"


GetAbilityRemainingCooldown=GetAbilityRemainingCooldown
GetAbilityRemainingCooldown="GetAbilityRemainingCooldown(",~whichAbility,")"
GetAbilityRemainingCooldownHint="[UjAPI]  GetAbilityRemainingCooldown takes ability whichAbility returns real"


CastAbility=CastAbility
CastAbility="CastAbility(",~whichAbility,")"
CastAbilityHint="[UjAPI]  CastAbility takes ability whichAbility returns boolean"


CastAbilityGround=CastAbilityGround
CastAbilityGround="CastAbilityGround(",~whichAbility,", ",~targX,", ",~targY,")"
CastAbilityGroundHint="[UjAPI]  CastAbilityGround takes ability whichAbility, real targX, real targY returns boolean"


CastAbilityTarget=CastAbilityTarget
CastAbilityTarget="CastAbilityTarget(",~whichAbility,", ",~target,")"
CastAbilityTargetHint="[UjAPI]  CastAbilityTarget takes ability whichAbility, widget target returns boolean"


GetFilterAbility=GetFilterAbility
GetFilterAbility="GetFilterAbility(",")"
GetFilterAbilityHint="[UjAPI]  GetFilterAbility takes nothing returns ability"


GetEnumAbility=GetEnumAbility
GetEnumAbility="GetEnumAbility(",")"
GetEnumAbilityHint="[UjAPI]  GetEnumAbility takes nothing returns ability"


EnumUnitAbilities=EnumUnitAbilities
EnumUnitAbilities="EnumUnitAbilities(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitAbilitiesHint="[UjAPI]  EnumUnitAbilities takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"


GetBuffBaseIntegerFieldById=GetBuffBaseIntegerFieldById
GetBuffBaseIntegerFieldById="GetBuffBaseIntegerFieldById(",~bid,", ",~whichField,")"
GetBuffBaseIntegerFieldByIdHint="[UjAPI]  GetBuffBaseIntegerFieldById takes integer bid, abilityintegerfield whichField returns integer"


SetBuffBaseIntegerFieldById=SetBuffBaseIntegerFieldById
SetBuffBaseIntegerFieldById="SetBuffBaseIntegerFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseIntegerFieldByIdHint="[UjAPI]  SetBuffBaseIntegerFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


GetBuffBaseBooleanFieldById=GetBuffBaseBooleanFieldById
GetBuffBaseBooleanFieldById="GetBuffBaseBooleanFieldById(",~bid,", ",~whichField,")"
GetBuffBaseBooleanFieldByIdHint="[UjAPI]  GetBuffBaseBooleanFieldById takes integer bid, abilitybooleanfield whichField returns boolean"


SetBuffBaseBooleanFieldById=SetBuffBaseBooleanFieldById
SetBuffBaseBooleanFieldById="SetBuffBaseBooleanFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseBooleanFieldByIdHint="[UjAPI]  SetBuffBaseBooleanFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


GetBuffBaseRealFieldById=GetBuffBaseRealFieldById
GetBuffBaseRealFieldById="GetBuffBaseRealFieldById(",~bid,", ",~whichField,")"
GetBuffBaseRealFieldByIdHint="[UjAPI]  GetBuffBaseRealFieldById takes integer bid, abilityrealfield whichField returns real"


SetBuffBaseRealFieldById=SetBuffBaseRealFieldById
SetBuffBaseRealFieldById="SetBuffBaseRealFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseRealFieldByIdHint="[UjAPI]  SetBuffBaseRealFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


GetBuffBaseStringFieldById=GetBuffBaseStringFieldById
GetBuffBaseStringFieldById="GetBuffBaseStringFieldById(",~bid,", ",~whichField,")"
GetBuffBaseStringFieldByIdHint="[UjAPI]  GetBuffBaseStringFieldById takes integer bid, abilitystringfield whichField returns string"


SetBuffBaseStringFieldById=SetBuffBaseStringFieldById
SetBuffBaseStringFieldById="SetBuffBaseStringFieldById(",~bid,", ",~whichField,", ",~value,")"
SetBuffBaseStringFieldByIdHint="[UjAPI]  SetBuffBaseStringFieldById takes integer bid, abilitystringfield whichField, string value returns boolean"


GetBuffBaseIntegerArrayFieldById=GetBuffBaseIntegerArrayFieldById
GetBuffBaseIntegerArrayFieldById="GetBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~index,")"
GetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  GetBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer index returns integer"


SetBuffBaseIntegerArrayFieldById=SetBuffBaseIntegerArrayFieldById
SetBuffBaseIntegerArrayFieldById="SetBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  SetBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer index, integer value returns boolean"


AddBuffBaseIntegerArrayFieldById=AddBuffBaseIntegerArrayFieldById
AddBuffBaseIntegerArrayFieldById="AddBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  AddBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


RemoveBuffBaseIntegerArrayFieldById=RemoveBuffBaseIntegerArrayFieldById
RemoveBuffBaseIntegerArrayFieldById="RemoveBuffBaseIntegerArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseIntegerArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseIntegerArrayFieldById takes integer bid, abilityintegerfield whichField, integer value returns boolean"


GetBuffBaseBooleanArrayFieldById=GetBuffBaseBooleanArrayFieldById
GetBuffBaseBooleanArrayFieldById="GetBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~index,")"
GetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  GetBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, integer index returns boolean"


SetBuffBaseBooleanArrayFieldById=SetBuffBaseBooleanArrayFieldById
SetBuffBaseBooleanArrayFieldById="SetBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  SetBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, integer index, boolean value returns boolean"


AddBuffBaseBooleanArrayFieldById=AddBuffBaseBooleanArrayFieldById
AddBuffBaseBooleanArrayFieldById="AddBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  AddBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


RemoveBuffBaseBooleanArrayFieldById=RemoveBuffBaseBooleanArrayFieldById
RemoveBuffBaseBooleanArrayFieldById="RemoveBuffBaseBooleanArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseBooleanArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseBooleanArrayFieldById takes integer bid, abilitybooleanfield whichField, boolean value returns boolean"


GetBuffBaseRealArrayFieldById=GetBuffBaseRealArrayFieldById
GetBuffBaseRealArrayFieldById="GetBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~index,")"
GetBuffBaseRealArrayFieldByIdHint="[UjAPI]  GetBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, integer index returns real"


SetBuffBaseRealArrayFieldById=SetBuffBaseRealArrayFieldById
SetBuffBaseRealArrayFieldById="SetBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseRealArrayFieldByIdHint="[UjAPI]  SetBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, integer index, real value returns boolean"


AddBuffBaseRealArrayFieldById=AddBuffBaseRealArrayFieldById
AddBuffBaseRealArrayFieldById="AddBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseRealArrayFieldByIdHint="[UjAPI]  AddBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


RemoveBuffBaseRealArrayFieldById=RemoveBuffBaseRealArrayFieldById
RemoveBuffBaseRealArrayFieldById="RemoveBuffBaseRealArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseRealArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseRealArrayFieldById takes integer bid, abilityrealfield whichField, real value returns boolean"


GetBuffBaseStringArrayFieldById=GetBuffBaseStringArrayFieldById
GetBuffBaseStringArrayFieldById="GetBuffBaseStringArrayFieldById(",~bid,", ",~whichField,", ",~index,")"
GetBuffBaseStringArrayFieldByIdHint="[UjAPI]  GetBuffBaseStringArrayFieldById takes integer bid, abilitystringfield whichField, integer index returns string"


SetBuffBaseStringArrayFieldById=SetBuffBaseStringArrayFieldById
SetBuffBaseStringArrayFieldById="SetBuffBaseStringArrayFieldById(",~bid,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBaseStringArrayFieldByIdHint="[UjAPI]  SetBuffBaseStringArrayFieldById takes integer bid, abilitystringfield whichField, integer index, string value returns boolean"


AddBuffBaseStringArrayFieldById=AddBuffBaseStringArrayFieldById
AddBuffBaseStringArrayFieldById="AddBuffBaseStringArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
AddBuffBaseStringArrayFieldByIdHint="[UjAPI]  AddBuffBaseStringArrayFieldById takes integer bid, abilitystringfield whichField, string value returns boolean"


RemoveBuffBaseStringArrayFieldById=RemoveBuffBaseStringArrayFieldById
RemoveBuffBaseStringArrayFieldById="RemoveBuffBaseStringArrayFieldById(",~bid,", ",~whichField,", ",~value,")"
RemoveBuffBaseStringArrayFieldByIdHint="[UjAPI]  RemoveBuffBaseStringArrayFieldById takes integer bid, abilitystringfield whichField, string value returns boolean"


GetBuffIntegerField=GetBuffIntegerField
GetBuffIntegerField="GetBuffIntegerField(",~whichBuff,", ",~whichField,")"
GetBuffIntegerFieldHint="[UjAPI]  GetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField returns integer"


SetBuffIntegerField=SetBuffIntegerField
SetBuffIntegerField="SetBuffIntegerField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffIntegerFieldHint="[UjAPI]  SetBuffIntegerField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


GetBuffBooleanField=GetBuffBooleanField
GetBuffBooleanField="GetBuffBooleanField(",~whichBuff,", ",~whichField,")"
GetBuffBooleanFieldHint="[UjAPI]  GetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField returns boolean"


SetBuffBooleanField=SetBuffBooleanField
SetBuffBooleanField="SetBuffBooleanField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffBooleanFieldHint="[UjAPI]  SetBuffBooleanField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


GetBuffRealField=GetBuffRealField
GetBuffRealField="GetBuffRealField(",~whichBuff,", ",~whichField,")"
GetBuffRealFieldHint="[UjAPI]  GetBuffRealField takes buff whichBuff, abilityrealfield whichField returns real"


SetBuffRealField=SetBuffRealField
SetBuffRealField="SetBuffRealField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffRealFieldHint="[UjAPI]  SetBuffRealField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


GetBuffStringField=GetBuffStringField
GetBuffStringField="GetBuffStringField(",~whichBuff,", ",~whichField,")"
GetBuffStringFieldHint="[UjAPI]  GetBuffStringField takes buff whichBuff, abilitystringfield whichField returns string"


SetBuffStringField=SetBuffStringField
SetBuffStringField="SetBuffStringField(",~whichBuff,", ",~whichField,", ",~value,")"
SetBuffStringFieldHint="[UjAPI]  SetBuffStringField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"


GetBuffIntegerArrayField=GetBuffIntegerArrayField
GetBuffIntegerArrayField="GetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffIntegerArrayFieldHint="[UjAPI]  GetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index returns integer"


SetBuffIntegerArrayField=SetBuffIntegerArrayField
SetBuffIntegerArrayField="SetBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffIntegerArrayFieldHint="[UjAPI]  SetBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer index, integer value returns boolean"


AddBuffIntegerArrayField=AddBuffIntegerArrayField
AddBuffIntegerArrayField="AddBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffIntegerArrayFieldHint="[UjAPI]  AddBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


RemoveBuffIntegerArrayField=RemoveBuffIntegerArrayField
RemoveBuffIntegerArrayField="RemoveBuffIntegerArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffIntegerArrayFieldHint="[UjAPI]  RemoveBuffIntegerArrayField takes buff whichBuff, abilityintegerfield whichField, integer value returns boolean"


GetBuffBooleanArrayField=GetBuffBooleanArrayField
GetBuffBooleanArrayField="GetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffBooleanArrayFieldHint="[UjAPI]  GetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index returns boolean"


SetBuffBooleanArrayField=SetBuffBooleanArrayField
SetBuffBooleanArrayField="SetBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffBooleanArrayFieldHint="[UjAPI]  SetBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, integer index, boolean value returns boolean"


AddBuffBooleanArrayField=AddBuffBooleanArrayField
AddBuffBooleanArrayField="AddBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffBooleanArrayFieldHint="[UjAPI]  AddBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


RemoveBuffBooleanArrayField=RemoveBuffBooleanArrayField
RemoveBuffBooleanArrayField="RemoveBuffBooleanArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffBooleanArrayFieldHint="[UjAPI]  RemoveBuffBooleanArrayField takes buff whichBuff, abilitybooleanfield whichField, boolean value returns boolean"


GetBuffRealArrayField=GetBuffRealArrayField
GetBuffRealArrayField="GetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffRealArrayFieldHint="[UjAPI]  GetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index returns real"


SetBuffRealArrayField=SetBuffRealArrayField
SetBuffRealArrayField="SetBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffRealArrayFieldHint="[UjAPI]  SetBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, integer index, real value returns boolean"


AddBuffRealArrayField=AddBuffRealArrayField
AddBuffRealArrayField="AddBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffRealArrayFieldHint="[UjAPI]  AddBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


RemoveBuffRealArrayField=RemoveBuffRealArrayField
RemoveBuffRealArrayField="RemoveBuffRealArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffRealArrayFieldHint="[UjAPI]  RemoveBuffRealArrayField takes buff whichBuff, abilityrealfield whichField, real value returns boolean"


GetBuffStringArrayField=GetBuffStringArrayField
GetBuffStringArrayField="GetBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~index,")"
GetBuffStringArrayFieldHint="[UjAPI]  GetBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, integer index returns string"


SetBuffStringArrayField=SetBuffStringArrayField
SetBuffStringArrayField="SetBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~index,", ",~value,")"
SetBuffStringArrayFieldHint="[UjAPI]  SetBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, integer index, string value returns boolean"


AddBuffStringArrayField=AddBuffStringArrayField
AddBuffStringArrayField="AddBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
AddBuffStringArrayFieldHint="[UjAPI]  AddBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"


RemoveBuffStringArrayField=RemoveBuffStringArrayField
RemoveBuffStringArrayField="RemoveBuffStringArrayField(",~whichBuff,", ",~whichField,", ",~value,")"
RemoveBuffStringArrayFieldHint="[UjAPI]  RemoveBuffStringArrayField takes buff whichBuff, abilitystringfield whichField, string value returns boolean"


ResetBuffFieldData=ResetBuffFieldData
ResetBuffFieldData="ResetBuffFieldData(",~whichBuff,")"
ResetBuffFieldDataHint="[UjAPI]  ResetBuffFieldData takes buff whichBuff returns boolean"


CreateBuff=CreateBuff
CreateBuff="CreateBuff(",~buffId,")"
CreateBuffHint="[UjAPI]  CreateBuff takes integer buffId returns buff"


GetBuffTypeId=GetBuffTypeId
GetBuffTypeId="GetBuffTypeId(",~whichBuff,")"
GetBuffTypeIdHint="[UjAPI]  GetBuffTypeId takes buff whichBuff returns integer"


GetBuffBaseTypeId=GetBuffBaseTypeId
GetBuffBaseTypeId="GetBuffBaseTypeId(",~whichBuff,")"
GetBuffBaseTypeIdHint="[UjAPI]  GetBuffBaseTypeId takes buff whichBuff returns integer"


GetBuffOwner=GetBuffOwner
GetBuffOwner="GetBuffOwner(",~whichbuff,")"
GetBuffOwnerHint="[UjAPI]  GetBuffOwner takes buff whichbuff returns unit"


GetBuffOwningAbility=GetBuffOwningAbility
GetBuffOwningAbility="GetBuffOwningAbility(",~whichbuff,")"
GetBuffOwningAbilityHint="[UjAPI]  GetBuffOwningAbility takes buff whichbuff returns ability"


IsBuffDispellable=IsBuffDispellable
IsBuffDispellable="IsBuffDispellable(",~whichBuff,")"
IsBuffDispellableHint="[UjAPI]  IsBuffDispellable takes buff whichBuff returns boolean"


GetBuffLevel=GetBuffLevel
GetBuffLevel="GetBuffLevel(",~whichBuff,")"
GetBuffLevelHint="[UjAPI]  GetBuffLevel takes buff whichBuff returns integer"


GetBuffRemainingDuration=GetBuffRemainingDuration
GetBuffRemainingDuration="GetBuffRemainingDuration(",~whichBuff,")"
GetBuffRemainingDurationHint="[UjAPI]  GetBuffRemainingDuration takes buff whichBuff returns real"


GetFilterBuff=GetFilterBuff
GetFilterBuff="GetFilterBuff(",")"
GetFilterBuffHint="[UjAPI]  GetFilterBuff takes nothing returns buff"


GetEnumBuff=GetEnumBuff
GetEnumBuff="GetEnumBuff(",")"
GetEnumBuffHint="[UjAPI]  GetEnumBuff takes nothing returns buff"


EnumUnitBuffs=EnumUnitBuffs
EnumUnitBuffs="EnumUnitBuffs(",~whichUnit,", ",~whichBoolexpr,", ",~whichCode,")"
EnumUnitBuffsHint="[UjAPI]  EnumUnitBuffs takes unit whichUnit, boolexpr whichBoolexpr, code whichCode returns boolean"


GetTriggerBuff=GetTriggerBuff
GetTriggerBuff="GetTriggerBuff(",")"
GetTriggerBuffHint="[UjAPI]  GetTriggerBuff takes nothing returns buff"


GetTriggerBuffSourceAbility=GetTriggerBuffSourceAbility
GetTriggerBuffSourceAbility="GetTriggerBuffSourceAbility(",")"
GetTriggerBuffSourceAbilityHint="[UjAPI]  GetTriggerBuffSourceAbility takes nothing returns ability"


GetTriggerBuffSourceUnit=GetTriggerBuffSourceUnit
GetTriggerBuffSourceUnit="GetTriggerBuffSourceUnit(",")"
GetTriggerBuffSourceUnitHint="[UjAPI]  GetTriggerBuffSourceUnit takes nothing returns unit"


GetTriggerBuffTarget=GetTriggerBuffTarget
GetTriggerBuffTarget="GetTriggerBuffTarget(",")"
GetTriggerBuffTargetHint="[UjAPI]  GetTriggerBuffTarget takes nothing returns unit"


GetWar3ImageSprite=GetWar3ImageSprite
GetWar3ImageSprite="GetWar3ImageSprite(",~whichWar3Image,")"
GetWar3ImageSpriteHint="[UjAPI]  GetWar3ImageSprite takes war3image whichWar3Image returns sprite"


IsWar3ImageVisible=IsWar3ImageVisible
IsWar3ImageVisible="IsWar3ImageVisible(",~whichWar3Image,")"
IsWar3ImageVisibleHint="[UjAPI]  IsWar3ImageVisible takes war3image whichWar3Image returns boolean"


IsWar3ImageInvulnerable=IsWar3ImageInvulnerable
IsWar3ImageInvulnerable="IsWar3ImageInvulnerable(",~whichWar3Image,")"
IsWar3ImageInvulnerableHint="[UjAPI]  IsWar3ImageInvulnerable takes war3image whichWar3Image returns boolean"


GetWar3ImageX=GetWar3ImageX
GetWar3ImageX="GetWar3ImageX(",~whichWar3Image,")"
GetWar3ImageXHint="[UjAPI]  GetWar3ImageX takes war3image whichWar3Image returns real"


GetWar3ImageY=GetWar3ImageY
GetWar3ImageY="GetWar3ImageY(",~whichWar3Image,")"
GetWar3ImageYHint="[UjAPI]  GetWar3ImageY takes war3image whichWar3Image returns real"


GetWar3ImageZ=GetWar3ImageZ
GetWar3ImageZ="GetWar3ImageZ(",~whichWar3Image,")"
GetWar3ImageZHint="[UjAPI]  GetWar3ImageZ takes war3image whichWar3Image returns real"


GetWar3ImagePositionLoc=GetWar3ImagePositionLoc
GetWar3ImagePositionLoc="GetWar3ImagePositionLoc(",~whichWar3Image,")"
GetWar3ImagePositionLocHint="[UjAPI]  GetWar3ImagePositionLoc takes war3image whichWar3Image returns location"


GetWar3ImageHeight=GetWar3ImageHeight
GetWar3ImageHeight="GetWar3ImageHeight(",~whichWar3Image,")"
GetWar3ImageHeightHint="[UjAPI]  GetWar3ImageHeight takes war3image whichWar3Image returns real"


GetWar3ImageScreenX=GetWar3ImageScreenX
GetWar3ImageScreenX="GetWar3ImageScreenX(",~whichWar3Image,")"
GetWar3ImageScreenXHint="[UjAPI]  GetWar3ImageScreenX takes war3image whichWar3Image returns real"


GetWar3ImageScreenY=GetWar3ImageScreenY
GetWar3ImageScreenY="GetWar3ImageScreenY(",~whichWar3Image,")"
GetWar3ImageScreenYHint="[UjAPI]  GetWar3ImageScreenY takes war3image whichWar3Image returns real"


GetWar3ImagePlayerColour=GetWar3ImagePlayerColour
GetWar3ImagePlayerColour="GetWar3ImagePlayerColour(",~whichWar3Image,")"
GetWar3ImagePlayerColourHint="[UjAPI]  GetWar3ImagePlayerColour takes war3image whichWar3Image returns playercolor"


GetWar3ImageVertexColour=GetWar3ImageVertexColour
GetWar3ImageVertexColour="GetWar3ImageVertexColour(",~whichWar3Image,")"
GetWar3ImageVertexColourHint="[UjAPI]  GetWar3ImageVertexColour takes war3image whichWar3Image returns integer"


GetWar3ImageTimeScale=GetWar3ImageTimeScale
GetWar3ImageTimeScale="GetWar3ImageTimeScale(",~whichWar3Image,")"
GetWar3ImageTimeScaleHint="[UjAPI]  GetWar3ImageTimeScale takes war3image whichWar3Image returns real"


GetWar3ImageScale=GetWar3ImageScale
GetWar3ImageScale="GetWar3ImageScale(",~whichWar3Image,")"
GetWar3ImageScaleHint="[UjAPI]  GetWar3ImageScale takes war3image whichWar3Image returns real"


GetWar3ImageFacing=GetWar3ImageFacing
GetWar3ImageFacing="GetWar3ImageFacing(",~whichWar3Image,")"
GetWar3ImageFacingHint="[UjAPI]  GetWar3ImageFacing takes war3image whichWar3Image returns real"


GetWar3ImageYaw=GetWar3ImageYaw
GetWar3ImageYaw="GetWar3ImageYaw(",~whichWar3Image,")"
GetWar3ImageYawHint="[UjAPI]  GetWar3ImageYaw takes war3image whichWar3Image returns real"


GetWar3ImagePitch=GetWar3ImagePitch
GetWar3ImagePitch="GetWar3ImagePitch(",~whichWar3Image,")"
GetWar3ImagePitchHint="[UjAPI]  GetWar3ImagePitch takes war3image whichWar3Image returns real"


GetWar3ImageRoll=GetWar3ImageRoll
GetWar3ImageRoll="GetWar3ImageRoll(",~whichWar3Image,")"
GetWar3ImageRollHint="[UjAPI]  GetWar3ImageRoll takes war3image whichWar3Image returns real"


GetWar3ImageModel=GetWar3ImageModel
GetWar3ImageModel="GetWar3ImageModel(",~whichWar3Image,")"
GetWar3ImageModelHint="[UjAPI]  GetWar3ImageModel takes war3image whichWar3Image returns string"


GetWar3ImageModelObjectX=GetWar3ImageModelObjectX
GetWar3ImageModelObjectX="GetWar3ImageModelObjectX(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectXHint="[UjAPI]  GetWar3ImageModelObjectX takes war3image whichWar3Image, string whichObject returns real"


GetWar3ImageModelObjectY=GetWar3ImageModelObjectY
GetWar3ImageModelObjectY="GetWar3ImageModelObjectY(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectYHint="[UjAPI]  GetWar3ImageModelObjectY takes war3image whichWar3Image, string whichObject returns real"


GetWar3ImageModelObjectZ=GetWar3ImageModelObjectZ
GetWar3ImageModelObjectZ="GetWar3ImageModelObjectZ(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectZHint="[UjAPI]  GetWar3ImageModelObjectZ takes war3image whichWar3Image, string whichObject returns real"


GetWar3ImageModelObjectPositionLoc=GetWar3ImageModelObjectPositionLoc
GetWar3ImageModelObjectPositionLoc="GetWar3ImageModelObjectPositionLoc(",~whichWar3Image,", ",~whichObject,")"
GetWar3ImageModelObjectPositionLocHint="[UjAPI]  GetWar3ImageModelObjectPositionLoc takes war3image whichWar3Image, string whichObject returns location"


GetWar3ImageCurrentAnimationId=GetWar3ImageCurrentAnimationId
GetWar3ImageCurrentAnimationId="GetWar3ImageCurrentAnimationId(",~whichWar3Image,")"
GetWar3ImageCurrentAnimationIdHint="[UjAPI]  GetWar3ImageCurrentAnimationId takes war3image whichWar3Image returns integer"


GetWar3ImageCurrentAnimationName=GetWar3ImageCurrentAnimationName
GetWar3ImageCurrentAnimationName="GetWar3ImageCurrentAnimationName(",~whichWar3Image,")"
GetWar3ImageCurrentAnimationNameHint="[UjAPI]  GetWar3ImageCurrentAnimationName takes war3image whichWar3Image returns string"


GetWar3ImageAnimationOffsetPercent=GetWar3ImageAnimationOffsetPercent
GetWar3ImageAnimationOffsetPercent="GetWar3ImageAnimationOffsetPercent(",~whichWar3Image,")"
GetWar3ImageAnimationOffsetPercentHint="[UjAPI]  GetWar3ImageAnimationOffsetPercent takes war3image whichWar3Image returns real"


CreateSprite=CreateSprite
CreateSprite="CreateSprite(",~isUber,")"
CreateSpriteHint="[UjAPI]  CreateSprite takes boolean isUber returns sprite"


AttachSpriteToTarget=AttachSpriteToTarget
AttachSpriteToTarget="AttachSpriteToTarget(",~whichSprite,", ",~targetSprite,", ",~attachPointName,")"
AttachSpriteToTargetHint="[UjAPI]  AttachSpriteToTarget takes sprite whichSprite, sprite targetSprite, string attachPointName returns sprite"


AddSpriteToTarget=AddSpriteToTarget
AddSpriteToTarget="AddSpriteToTarget(",~modelName,", ",~targetSprite,", ",~attachPointName,")"
AddSpriteToTargetHint="[UjAPI]  AddSpriteToTarget takes string modelName, sprite targetSprite, string attachPointName returns sprite"


GetSpriteChildrenCount=GetSpriteChildrenCount
GetSpriteChildrenCount="GetSpriteChildrenCount(",~whichSprite,")"
GetSpriteChildrenCountHint="[UjAPI]  GetSpriteChildrenCount takes sprite whichSprite returns integer"


GetSpriteChildById=GetSpriteChildById
GetSpriteChildById="GetSpriteChildById(",~whichSprite,", ",~index,")"
GetSpriteChildByIdHint="[UjAPI]  GetSpriteChildById takes sprite whichSprite, integer index returns sprite"


IsSpriteUber=IsSpriteUber
IsSpriteUber="IsSpriteUber(",~whichSprite,")"
IsSpriteUberHint="[UjAPI]  IsSpriteUber takes sprite whichSprite returns boolean"


GetSpriteX=GetSpriteX
GetSpriteX="GetSpriteX(",~whichSprite,")"
GetSpriteXHint="[UjAPI]  GetSpriteX takes sprite whichSprite returns real"


GetSpriteY=GetSpriteY
GetSpriteY="GetSpriteY(",~whichSprite,")"
GetSpriteYHint="[UjAPI]  GetSpriteY takes sprite whichSprite returns real"


GetSpriteZ=GetSpriteZ
GetSpriteZ="GetSpriteZ(",~whichSprite,")"
GetSpriteZHint="[UjAPI]  GetSpriteZ takes sprite whichSprite returns real"


GetSpriteHeight=GetSpriteHeight
GetSpriteHeight="GetSpriteHeight(",~whichSprite,")"
GetSpriteHeightHint="[UjAPI]  GetSpriteHeight takes sprite whichSprite returns real"


GetSpritePositionLoc=GetSpritePositionLoc
GetSpritePositionLoc="GetSpritePositionLoc(",~whichSprite,")"
GetSpritePositionLocHint="[UjAPI]  GetSpritePositionLoc takes sprite whichSprite returns location"


GetSpriteScreenX=GetSpriteScreenX
GetSpriteScreenX="GetSpriteScreenX(",~whichSprite,")"
GetSpriteScreenXHint="[UjAPI]  GetSpriteScreenX takes sprite whichSprite returns real"


GetSpriteScreenY=GetSpriteScreenY
GetSpriteScreenY="GetSpriteScreenY(",~whichSprite,")"
GetSpriteScreenYHint="[UjAPI]  GetSpriteScreenY takes sprite whichSprite returns real"


GetSpriteScale=GetSpriteScale
GetSpriteScale="GetSpriteScale(",~whichSprite,")"
GetSpriteScaleHint="[UjAPI]  GetSpriteScale takes sprite whichSprite returns real"


GetSpriteTimeScale=GetSpriteTimeScale
GetSpriteTimeScale="GetSpriteTimeScale(",~whichSprite,")"
GetSpriteTimeScaleHint="[UjAPI]  GetSpriteTimeScale takes sprite whichSprite returns real"


GetSpritePlayerColour=GetSpritePlayerColour
GetSpritePlayerColour="GetSpritePlayerColour(",~whichSprite,")"
GetSpritePlayerColourHint="[UjAPI]  GetSpritePlayerColour takes sprite whichSprite returns playercolor"


GetSpriteColour=GetSpriteColour
GetSpriteColour="GetSpriteColour(",~whichSprite,")"
GetSpriteColourHint="[UjAPI]  GetSpriteColour takes sprite whichSprite returns integer"


GetSpriteYaw=GetSpriteYaw
GetSpriteYaw="GetSpriteYaw(",~whichSprite,")"
GetSpriteYawHint="[UjAPI]  GetSpriteYaw takes sprite whichSprite returns real"


GetSpriteFacing=GetSpriteFacing
GetSpriteFacing="GetSpriteFacing(",~whichSprite,")"
GetSpriteFacingHint="[UjAPI]  GetSpriteFacing takes sprite whichSprite returns real"


GetSpritePitch=GetSpritePitch
GetSpritePitch="GetSpritePitch(",~whichSprite,")"
GetSpritePitchHint="[UjAPI]  GetSpritePitch takes sprite whichSprite returns real"


GetSpriteRoll=GetSpriteRoll
GetSpriteRoll="GetSpriteRoll(",~whichSprite,")"
GetSpriteRollHint="[UjAPI]  GetSpriteRoll takes sprite whichSprite returns real"


GetSpriteModel=GetSpriteModel
GetSpriteModel="GetSpriteModel(",~whichSprite,")"
GetSpriteModelHint="[UjAPI]  GetSpriteModel takes sprite whichSprite returns string"


GetSpriteModelObjectX=GetSpriteModelObjectX
GetSpriteModelObjectX="GetSpriteModelObjectX(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectXHint="[UjAPI]  GetSpriteModelObjectX takes sprite whichSprite, string whichObject returns real"


GetSpriteModelObjectY=GetSpriteModelObjectY
GetSpriteModelObjectY="GetSpriteModelObjectY(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectYHint="[UjAPI]  GetSpriteModelObjectY takes sprite whichSprite, string whichObject returns real"


GetSpriteModelObjectZ=GetSpriteModelObjectZ
GetSpriteModelObjectZ="GetSpriteModelObjectZ(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectZHint="[UjAPI]  GetSpriteModelObjectZ takes sprite whichSprite, string whichObject returns real"


GetSpriteModelObjectPositionLoc=GetSpriteModelObjectPositionLoc
GetSpriteModelObjectPositionLoc="GetSpriteModelObjectPositionLoc(",~whichSprite,", ",~whichObject,")"
GetSpriteModelObjectPositionLocHint="[UjAPI]  GetSpriteModelObjectPositionLoc takes sprite whichSprite, string whichObject returns location"


GetSpriteCurrentAnimationId=GetSpriteCurrentAnimationId
GetSpriteCurrentAnimationId="GetSpriteCurrentAnimationId(",~whichSprite,")"
GetSpriteCurrentAnimationIdHint="[UjAPI]  GetSpriteCurrentAnimationId takes sprite whichSprite returns integer"


GetSpriteCurrentAnimationName=GetSpriteCurrentAnimationName
GetSpriteCurrentAnimationName="GetSpriteCurrentAnimationName(",~whichSprite,")"
GetSpriteCurrentAnimationNameHint="[UjAPI]  GetSpriteCurrentAnimationName takes sprite whichSprite returns string"


GetSpriteAnimationOffsetPercent=GetSpriteAnimationOffsetPercent
GetSpriteAnimationOffsetPercent="GetSpriteAnimationOffsetPercent(",~whichSprite,")"
GetSpriteAnimationOffsetPercentHint="[UjAPI]  GetSpriteAnimationOffsetPercent takes sprite whichSprite returns real"


GetSpecialEffectSprite=GetSpecialEffectSprite
GetSpecialEffectSprite="GetSpecialEffectSprite(",~whichEffect,")"
GetSpecialEffectSpriteHint="[UjAPI]  GetSpecialEffectSprite takes effect whichEffect returns sprite"


IsSpecialEffectVisible=IsSpecialEffectVisible
IsSpecialEffectVisible="IsSpecialEffectVisible(",~whichEffect,")"
IsSpecialEffectVisibleHint="[UjAPI]  IsSpecialEffectVisible takes effect whichEffect returns boolean"


GetSpecialEffectX=GetSpecialEffectX
GetSpecialEffectX="GetSpecialEffectX(",~whichEffect,")"
GetSpecialEffectXHint="[UjAPI]  GetSpecialEffectX takes effect whichEffect returns real"


GetSpecialEffectY=GetSpecialEffectY
GetSpecialEffectY="GetSpecialEffectY(",~whichEffect,")"
GetSpecialEffectYHint="[UjAPI]  GetSpecialEffectY takes effect whichEffect returns real"


GetSpecialEffectZ=GetSpecialEffectZ
GetSpecialEffectZ="GetSpecialEffectZ(",~whichEffect,")"
GetSpecialEffectZHint="[UjAPI]  GetSpecialEffectZ takes effect whichEffect returns real"


GetSpecialEffectHeight=GetSpecialEffectHeight
GetSpecialEffectHeight="GetSpecialEffectHeight(",~whichEffect,")"
GetSpecialEffectHeightHint="[UjAPI]  GetSpecialEffectHeight takes effect whichEffect returns real"


GetSpecialEffectPositionLoc=GetSpecialEffectPositionLoc
GetSpecialEffectPositionLoc="GetSpecialEffectPositionLoc(",~whichEffect,")"
GetSpecialEffectPositionLocHint="[UjAPI]  GetSpecialEffectPositionLoc takes effect whichEffect returns location"


GetSpecialEffectScreenX=GetSpecialEffectScreenX
GetSpecialEffectScreenX="GetSpecialEffectScreenX(",~whichEffect,")"
GetSpecialEffectScreenXHint="[UjAPI]  GetSpecialEffectScreenX takes effect whichEffect returns real"


GetSpecialEffectScreenY=GetSpecialEffectScreenY
GetSpecialEffectScreenY="GetSpecialEffectScreenY(",~whichEffect,")"
GetSpecialEffectScreenYHint="[UjAPI]  GetSpecialEffectScreenY takes effect whichEffect returns real"


GetSpecialEffectScale=GetSpecialEffectScale
GetSpecialEffectScale="GetSpecialEffectScale(",~whichEffect,")"
GetSpecialEffectScaleHint="[UjAPI]  GetSpecialEffectScale takes effect whichEffect returns real"


GetSpecialEffectTimeScale=GetSpecialEffectTimeScale
GetSpecialEffectTimeScale="GetSpecialEffectTimeScale(",~whichEffect,")"
GetSpecialEffectTimeScaleHint="[UjAPI]  GetSpecialEffectTimeScale takes effect whichEffect returns real"


GetSpecialEffectPlayerColour=GetSpecialEffectPlayerColour
GetSpecialEffectPlayerColour="GetSpecialEffectPlayerColour(",~whichEffect,")"
GetSpecialEffectPlayerColourHint="[UjAPI]  GetSpecialEffectPlayerColour takes effect whichEffect returns playercolor"


GetSpecialEffectColour=GetSpecialEffectColour
GetSpecialEffectColour="GetSpecialEffectColour(",~whichEffect,")"
GetSpecialEffectColourHint="[UjAPI]  GetSpecialEffectColour takes effect whichEffect returns integer"


GetSpecialEffectYaw=GetSpecialEffectYaw
GetSpecialEffectYaw="GetSpecialEffectYaw(",~whichEffect,")"
GetSpecialEffectYawHint="[UjAPI]  GetSpecialEffectYaw takes effect whichEffect returns real"


GetSpecialEffectFacing=GetSpecialEffectFacing
GetSpecialEffectFacing="GetSpecialEffectFacing(",~whichEffect,")"
GetSpecialEffectFacingHint="[UjAPI]  GetSpecialEffectFacing takes effect whichEffect returns real"


GetSpecialEffectPitch=GetSpecialEffectPitch
GetSpecialEffectPitch="GetSpecialEffectPitch(",~whichEffect,")"
GetSpecialEffectPitchHint="[UjAPI]  GetSpecialEffectPitch takes effect whichEffect returns real"


GetSpecialEffectRoll=GetSpecialEffectRoll
GetSpecialEffectRoll="GetSpecialEffectRoll(",~whichEffect,")"
GetSpecialEffectRollHint="[UjAPI]  GetSpecialEffectRoll takes effect whichEffect returns real"


GetSpecialEffectModel=GetSpecialEffectModel
GetSpecialEffectModel="GetSpecialEffectModel(",~whichEffect,")"
GetSpecialEffectModelHint="[UjAPI]  GetSpecialEffectModel takes effect whichEffect returns string"


GetSpecialEffectModelObjectX=GetSpecialEffectModelObjectX
GetSpecialEffectModelObjectX="GetSpecialEffectModelObjectX(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectXHint="[UjAPI]  GetSpecialEffectModelObjectX takes effect whichEffect, string whichObject returns real"


GetSpecialEffectModelObjectY=GetSpecialEffectModelObjectY
GetSpecialEffectModelObjectY="GetSpecialEffectModelObjectY(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectYHint="[UjAPI]  GetSpecialEffectModelObjectY takes effect whichEffect, string whichObject returns real"


GetSpecialEffectModelObjectZ=GetSpecialEffectModelObjectZ
GetSpecialEffectModelObjectZ="GetSpecialEffectModelObjectZ(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectZHint="[UjAPI]  GetSpecialEffectModelObjectZ takes effect whichEffect, string whichObject returns real"


GetSpecialEffectModelObjectPositionLoc=GetSpecialEffectModelObjectPositionLoc
GetSpecialEffectModelObjectPositionLoc="GetSpecialEffectModelObjectPositionLoc(",~whichEffect,", ",~whichObject,")"
GetSpecialEffectModelObjectPositionLocHint="[UjAPI]  GetSpecialEffectModelObjectPositionLoc takes effect whichEffect, string whichObject returns location"


GetSpecialEffectCurrentAnimationId=GetSpecialEffectCurrentAnimationId
GetSpecialEffectCurrentAnimationId="GetSpecialEffectCurrentAnimationId(",~whichEffect,")"
GetSpecialEffectCurrentAnimationIdHint="[UjAPI]  GetSpecialEffectCurrentAnimationId takes effect whichEffect returns integer"


GetSpecialEffectCurrentAnimationName=GetSpecialEffectCurrentAnimationName
GetSpecialEffectCurrentAnimationName="GetSpecialEffectCurrentAnimationName(",~whichEffect,")"
GetSpecialEffectCurrentAnimationNameHint="[UjAPI]  GetSpecialEffectCurrentAnimationName takes effect whichEffect returns string"


GetSpecialEffectAnimationOffsetPercent=GetSpecialEffectAnimationOffsetPercent
GetSpecialEffectAnimationOffsetPercent="GetSpecialEffectAnimationOffsetPercent(",~whichEffect,")"
GetSpecialEffectAnimationOffsetPercentHint="[UjAPI]  GetSpecialEffectAnimationOffsetPercent takes effect whichEffect returns real"


GetTriggerSpecialEffect=GetTriggerSpecialEffect
GetTriggerSpecialEffect="GetTriggerSpecialEffect(",")"
GetTriggerSpecialEffectHint="[UjAPI]  GetTriggerSpecialEffect takes nothing returns effect"


GetFilterSpecialEffect=GetFilterSpecialEffect
GetFilterSpecialEffect="GetFilterSpecialEffect(",")"
GetFilterSpecialEffectHint="[UjAPI]  GetFilterSpecialEffect takes nothing returns effect"


GetEnumSpecialEffect=GetEnumSpecialEffect
GetEnumSpecialEffect="GetEnumSpecialEffect(",")"
GetEnumSpecialEffectHint="[UjAPI]  GetEnumSpecialEffect takes nothing returns effect"


GetTrackableSprite=GetTrackableSprite
GetTrackableSprite="GetTrackableSprite(",~whichTrackable,")"
GetTrackableSpriteHint="[UjAPI]  GetTrackableSprite takes trackable whichTrackable returns sprite"


IsTrackableVisible=IsTrackableVisible
IsTrackableVisible="IsTrackableVisible(",~whichTrackable,")"
IsTrackableVisibleHint="[UjAPI]  IsTrackableVisible takes trackable whichTrackable returns boolean"


GetTrackableX=GetTrackableX
GetTrackableX="GetTrackableX(",~whichTrackable,")"
GetTrackableXHint="[UjAPI]  GetTrackableX takes trackable whichTrackable returns real"


GetTrackableY=GetTrackableY
GetTrackableY="GetTrackableY(",~whichTrackable,")"
GetTrackableYHint="[UjAPI]  GetTrackableY takes trackable whichTrackable returns real"


GetTrackableZ=GetTrackableZ
GetTrackableZ="GetTrackableZ(",~whichTrackable,")"
GetTrackableZHint="[UjAPI]  GetTrackableZ takes trackable whichTrackable returns real"


GetTrackableHeight=GetTrackableHeight
GetTrackableHeight="GetTrackableHeight(",~whichTrackable,")"
GetTrackableHeightHint="[UjAPI]  GetTrackableHeight takes trackable whichTrackable returns real"


GetTrackablePositionLoc=GetTrackablePositionLoc
GetTrackablePositionLoc="GetTrackablePositionLoc(",~whichTrackable,")"
GetTrackablePositionLocHint="[UjAPI]  GetTrackablePositionLoc takes trackable whichTrackable returns location"


GetTrackableScreenX=GetTrackableScreenX
GetTrackableScreenX="GetTrackableScreenX(",~whichTrackable,")"
GetTrackableScreenXHint="[UjAPI]  GetTrackableScreenX takes trackable whichTrackable returns real"


GetTrackableScreenY=GetTrackableScreenY
GetTrackableScreenY="GetTrackableScreenY(",~whichTrackable,")"
GetTrackableScreenYHint="[UjAPI]  GetTrackableScreenY takes trackable whichTrackable returns real"


GetTrackableScale=GetTrackableScale
GetTrackableScale="GetTrackableScale(",~whichTrackable,")"
GetTrackableScaleHint="[UjAPI]  GetTrackableScale takes trackable whichTrackable returns real"


GetTrackableTimeScale=GetTrackableTimeScale
GetTrackableTimeScale="GetTrackableTimeScale(",~whichTrackable,")"
GetTrackableTimeScaleHint="[UjAPI]  GetTrackableTimeScale takes trackable whichTrackable returns real"


GetTrackablePlayerColour=GetTrackablePlayerColour
GetTrackablePlayerColour="GetTrackablePlayerColour(",~whichTrackable,")"
GetTrackablePlayerColourHint="[UjAPI]  GetTrackablePlayerColour takes trackable whichTrackable returns playercolor"


GetTrackableColour=GetTrackableColour
GetTrackableColour="GetTrackableColour(",~whichTrackable,")"
GetTrackableColourHint="[UjAPI]  GetTrackableColour takes trackable whichTrackable returns integer"


GetTrackableYaw=GetTrackableYaw
GetTrackableYaw="GetTrackableYaw(",~whichTrackable,")"
GetTrackableYawHint="[UjAPI]  GetTrackableYaw takes trackable whichTrackable returns real"


GetTrackableFacing=GetTrackableFacing
GetTrackableFacing="GetTrackableFacing(",~whichTrackable,")"
GetTrackableFacingHint="[UjAPI]  GetTrackableFacing takes trackable whichTrackable returns real"


GetTrackablePitch=GetTrackablePitch
GetTrackablePitch="GetTrackablePitch(",~whichTrackable,")"
GetTrackablePitchHint="[UjAPI]  GetTrackablePitch takes trackable whichTrackable returns real"


GetTrackableRoll=GetTrackableRoll
GetTrackableRoll="GetTrackableRoll(",~whichTrackable,")"
GetTrackableRollHint="[UjAPI]  GetTrackableRoll takes trackable whichTrackable returns real"


GetTrackableModel=GetTrackableModel
GetTrackableModel="GetTrackableModel(",~whichTrackable,")"
GetTrackableModelHint="[UjAPI]  GetTrackableModel takes trackable whichTrackable returns string"


GetTrackableModelObjectX=GetTrackableModelObjectX
GetTrackableModelObjectX="GetTrackableModelObjectX(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectXHint="[UjAPI]  GetTrackableModelObjectX takes trackable whichTrackable, string whichObject returns real"


GetTrackableModelObjectY=GetTrackableModelObjectY
GetTrackableModelObjectY="GetTrackableModelObjectY(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectYHint="[UjAPI]  GetTrackableModelObjectY takes trackable whichTrackable, string whichObject returns real"


GetTrackableModelObjectZ=GetTrackableModelObjectZ
GetTrackableModelObjectZ="GetTrackableModelObjectZ(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectZHint="[UjAPI]  GetTrackableModelObjectZ takes trackable whichTrackable, string whichObject returns real"


GetTrackableModelObjectPositionLoc=GetTrackableModelObjectPositionLoc
GetTrackableModelObjectPositionLoc="GetTrackableModelObjectPositionLoc(",~whichTrackable,", ",~whichObject,")"
GetTrackableModelObjectPositionLocHint="[UjAPI]  GetTrackableModelObjectPositionLoc takes trackable whichTrackable, string whichObject returns location"


GetTrackableCurrentAnimationId=GetTrackableCurrentAnimationId
GetTrackableCurrentAnimationId="GetTrackableCurrentAnimationId(",~whichTrackable,")"
GetTrackableCurrentAnimationIdHint="[UjAPI]  GetTrackableCurrentAnimationId takes trackable whichTrackable returns integer"


GetTrackableCurrentAnimationName=GetTrackableCurrentAnimationName
GetTrackableCurrentAnimationName="GetTrackableCurrentAnimationName(",~whichTrackable,")"
GetTrackableCurrentAnimationNameHint="[UjAPI]  GetTrackableCurrentAnimationName takes trackable whichTrackable returns string"


GetTrackableAnimationOffsetPercent=GetTrackableAnimationOffsetPercent
GetTrackableAnimationOffsetPercent="GetTrackableAnimationOffsetPercent(",~whichTrackable,")"
GetTrackableAnimationOffsetPercentHint="[UjAPI]  GetTrackableAnimationOffsetPercent takes trackable whichTrackable returns real"


GetTriggerTrackable=GetTriggerTrackable
GetTriggerTrackable="GetTriggerTrackable(",")"
GetTriggerTrackableHint="[UjAPI]  GetTriggerTrackable takes nothing returns trackable"


GetFilterTrackable=GetFilterTrackable
GetFilterTrackable="GetFilterTrackable(",")"
GetFilterTrackableHint="[UjAPI]  GetFilterTrackable takes nothing returns trackable"


GetEnumTrackable=GetEnumTrackable
GetEnumTrackable="GetEnumTrackable(",")"
GetEnumTrackableHint="[UjAPI]  GetEnumTrackable takes nothing returns trackable"


GetWidgetUnderCursor=GetWidgetUnderCursor
GetWidgetUnderCursor="GetWidgetUnderCursor(",")"
GetWidgetUnderCursorHint="[UjAPI]  GetWidgetUnderCursor takes nothing returns widget"


GetWidgetSprite=GetWidgetSprite
GetWidgetSprite="GetWidgetSprite(",~whichWidget,")"
GetWidgetSpriteHint="[UjAPI]  GetWidgetSprite takes widget whichWidget returns sprite"


GetWidgetTypeId=GetWidgetTypeId
GetWidgetTypeId="GetWidgetTypeId(",~whichWidget,")"
GetWidgetTypeIdHint="[UjAPI]  GetWidgetTypeId takes widget whichWidget returns integer"


GetWidgetName=GetWidgetName
GetWidgetName="GetWidgetName(",~whichWidget,")"
GetWidgetNameHint="[UjAPI]  GetWidgetName takes widget whichWidget returns string"


IsWidgetTipEnabled=IsWidgetTipEnabled
IsWidgetTipEnabled="IsWidgetTipEnabled(",")"
IsWidgetTipEnabledHint="[UjAPI]  IsWidgetTipEnabled takes nothing returns boolean"


IsWidgetVisible=IsWidgetVisible
IsWidgetVisible="IsWidgetVisible(",~whichWidget,")"
IsWidgetVisibleHint="[UjAPI]  IsWidgetVisible takes widget whichWidget returns boolean"


IsWidgetInvulnerable=IsWidgetInvulnerable
IsWidgetInvulnerable="IsWidgetInvulnerable(",~whichWidget,")"
IsWidgetInvulnerableHint="[UjAPI]  IsWidgetInvulnerable takes widget whichWidget returns boolean"


IsWidgetTargetAllowed=IsWidgetTargetAllowed
IsWidgetTargetAllowed="IsWidgetTargetAllowed(",~whichWidget,", ",~target,", ",~whichFlags,")"
IsWidgetTargetAllowedHint="[UjAPI]  IsWidgetTargetAllowed takes widget whichWidget, widget target, targetflag whichFlags returns boolean"


GetWidgetZ=GetWidgetZ
GetWidgetZ="GetWidgetZ(",~whichWidget,")"
GetWidgetZHint="[UjAPI]  GetWidgetZ takes widget whichWidget returns real"


GetWidgetPositionLoc=GetWidgetPositionLoc
GetWidgetPositionLoc="GetWidgetPositionLoc(",~whichWidget,")"
GetWidgetPositionLocHint="[UjAPI]  GetWidgetPositionLoc takes widget whichWidget returns location"


GetWidgetHeight=GetWidgetHeight
GetWidgetHeight="GetWidgetHeight(",~whichWidget,")"
GetWidgetHeightHint="[UjAPI]  GetWidgetHeight takes widget whichWidget returns real"


GetWidgetScreenX=GetWidgetScreenX
GetWidgetScreenX="GetWidgetScreenX(",~whichWidget,")"
GetWidgetScreenXHint="[UjAPI]  GetWidgetScreenX takes widget whichWidget returns real"


GetWidgetScreenY=GetWidgetScreenY
GetWidgetScreenY="GetWidgetScreenY(",~whichWidget,")"
GetWidgetScreenYHint="[UjAPI]  GetWidgetScreenY takes widget whichWidget returns real"


GetWidgetPlayerColour=GetWidgetPlayerColour
GetWidgetPlayerColour="GetWidgetPlayerColour(",~whichWidget,")"
GetWidgetPlayerColourHint="[UjAPI]  GetWidgetPlayerColour takes widget whichWidget returns playercolor"


GetWidgetVertexColour=GetWidgetVertexColour
GetWidgetVertexColour="GetWidgetVertexColour(",~whichWidget,")"
GetWidgetVertexColourHint="[UjAPI]  GetWidgetVertexColour takes widget whichWidget returns integer"


GetWidgetTimeScale=GetWidgetTimeScale
GetWidgetTimeScale="GetWidgetTimeScale(",~whichWidget,")"
GetWidgetTimeScaleHint="[UjAPI]  GetWidgetTimeScale takes widget whichWidget returns real"


GetWidgetScale=GetWidgetScale
GetWidgetScale="GetWidgetScale(",~whichWidget,")"
GetWidgetScaleHint="[UjAPI]  GetWidgetScale takes widget whichWidget returns real"


GetWidgetFacing=GetWidgetFacing
GetWidgetFacing="GetWidgetFacing(",~whichWidget,")"
GetWidgetFacingHint="[UjAPI]  GetWidgetFacing takes widget whichWidget returns real"


GetWidgetYaw=GetWidgetYaw
GetWidgetYaw="GetWidgetYaw(",~whichWidget,")"
GetWidgetYawHint="[UjAPI]  GetWidgetYaw takes widget whichWidget returns real"


GetWidgetPitch=GetWidgetPitch
GetWidgetPitch="GetWidgetPitch(",~whichWidget,")"
GetWidgetPitchHint="[UjAPI]  GetWidgetPitch takes widget whichWidget returns real"


GetWidgetRoll=GetWidgetRoll
GetWidgetRoll="GetWidgetRoll(",~whichWidget,")"
GetWidgetRollHint="[UjAPI]  GetWidgetRoll takes widget whichWidget returns real"


GetWidgetModel=GetWidgetModel
GetWidgetModel="GetWidgetModel(",~whichWidget,")"
GetWidgetModelHint="[UjAPI]  GetWidgetModel takes widget whichWidget returns string"


GetWidgetModelObjectX=GetWidgetModelObjectX
GetWidgetModelObjectX="GetWidgetModelObjectX(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectXHint="[UjAPI]  GetWidgetModelObjectX takes widget whichWidget, string whichObject returns real"


GetWidgetModelObjectY=GetWidgetModelObjectY
GetWidgetModelObjectY="GetWidgetModelObjectY(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectYHint="[UjAPI]  GetWidgetModelObjectY takes widget whichWidget, string whichObject returns real"


GetWidgetModelObjectZ=GetWidgetModelObjectZ
GetWidgetModelObjectZ="GetWidgetModelObjectZ(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectZHint="[UjAPI]  GetWidgetModelObjectZ takes widget whichWidget, string whichObject returns real"


GetWidgetModelObjectPositionLoc=GetWidgetModelObjectPositionLoc
GetWidgetModelObjectPositionLoc="GetWidgetModelObjectPositionLoc(",~whichWidget,", ",~whichObject,")"
GetWidgetModelObjectPositionLocHint="[UjAPI]  GetWidgetModelObjectPositionLoc takes widget whichWidget, string whichObject returns location"


GetWidgetCurrentAnimationId=GetWidgetCurrentAnimationId
GetWidgetCurrentAnimationId="GetWidgetCurrentAnimationId(",~whichWidget,")"
GetWidgetCurrentAnimationIdHint="[UjAPI]  GetWidgetCurrentAnimationId takes widget whichWidget returns integer"


GetWidgetCurrentAnimationName=GetWidgetCurrentAnimationName
GetWidgetCurrentAnimationName="GetWidgetCurrentAnimationName(",~whichWidget,")"
GetWidgetCurrentAnimationNameHint="[UjAPI]  GetWidgetCurrentAnimationName takes widget whichWidget returns string"


GetWidgetAnimationOffsetPercent=GetWidgetAnimationOffsetPercent
GetWidgetAnimationOffsetPercent="GetWidgetAnimationOffsetPercent(",~whichWidget,")"
GetWidgetAnimationOffsetPercentHint="[UjAPI]  GetWidgetAnimationOffsetPercent takes widget whichWidget returns real"


TriggerRegisterWidgetEvent=TriggerRegisterWidgetEvent
TriggerRegisterWidgetEvent="TriggerRegisterWidgetEvent(",~whichTrigger,", ",~whichWidget,", ",~whichWidgetEvent,")"
TriggerRegisterWidgetEventHint="[UjAPI]  TriggerRegisterWidgetEvent takes trigger whichTrigger, widget whichWidget, widgetevent whichWidgetEvent returns event"


GetDestructableUnderCursor=GetDestructableUnderCursor
GetDestructableUnderCursor="GetDestructableUnderCursor(",")"
GetDestructableUnderCursorHint="[UjAPI]  GetDestructableUnderCursor takes nothing returns destructable"


GetDestructableStringField=GetDestructableStringField
GetDestructableStringField="GetDestructableStringField(",~whichDestructable,", ",~whichField,")"
GetDestructableStringFieldHint="[UjAPI]  GetDestructableStringField takes destructable whichDestructable, destructablestringfield whichField returns string"


SetDestructableStringField=SetDestructableStringField
SetDestructableStringField="SetDestructableStringField(",~whichDestructable,", ",~whichField,", ",~value,")"
SetDestructableStringFieldHint="[UjAPI]  SetDestructableStringField takes destructable whichDestructable, destructablestringfield whichField, string value returns boolean"


GetDestructableVariation=GetDestructableVariation
GetDestructableVariation="GetDestructableVariation(",~whichDestructable,")"
GetDestructableVariationHint="[UjAPI]  GetDestructableVariation takes destructable whichDestructable returns integer"


IsDestructableBlighted=IsDestructableBlighted
IsDestructableBlighted="IsDestructableBlighted(",~whichDestructable,")"
IsDestructableBlightedHint="[UjAPI]  IsDestructableBlighted takes destructable whichDestructable returns boolean"


GetDestructableSprite=GetDestructableSprite
GetDestructableSprite="GetDestructableSprite(",~whichDestructable,")"
GetDestructableSpriteHint="[UjAPI]  GetDestructableSprite takes destructable whichDestructable returns sprite"


GetDestructableZ=GetDestructableZ
GetDestructableZ="GetDestructableZ(",~whichDestructable,")"
GetDestructableZHint="[UjAPI]  GetDestructableZ takes destructable whichDestructable returns real"


GetDestructableHeight=GetDestructableHeight
GetDestructableHeight="GetDestructableHeight(",~whichDestructable,")"
GetDestructableHeightHint="[UjAPI]  GetDestructableHeight takes destructable whichDestructable returns real"


GetDestructablePositionLoc=GetDestructablePositionLoc
GetDestructablePositionLoc="GetDestructablePositionLoc(",~whichDestructable,")"
GetDestructablePositionLocHint="[UjAPI]  GetDestructablePositionLoc takes destructable whichDestructable returns location"


GetDestructableScreenX=GetDestructableScreenX
GetDestructableScreenX="GetDestructableScreenX(",~whichDestructable,")"
GetDestructableScreenXHint="[UjAPI]  GetDestructableScreenX takes destructable whichDestructable returns real"


GetDestructableScreenY=GetDestructableScreenY
GetDestructableScreenY="GetDestructableScreenY(",~whichDestructable,")"
GetDestructableScreenYHint="[UjAPI]  GetDestructableScreenY takes destructable whichDestructable returns real"


GetDestructablePlayerColour=GetDestructablePlayerColour
GetDestructablePlayerColour="GetDestructablePlayerColour(",~whichDestructable,")"
GetDestructablePlayerColourHint="[UjAPI]  GetDestructablePlayerColour takes destructable whichDestructable returns playercolor"


GetDestructableVertexColour=GetDestructableVertexColour
GetDestructableVertexColour="GetDestructableVertexColour(",~whichDestructable,")"
GetDestructableVertexColourHint="[UjAPI]  GetDestructableVertexColour takes destructable whichDestructable returns integer"


GetDestructableTimeScale=GetDestructableTimeScale
GetDestructableTimeScale="GetDestructableTimeScale(",~whichDestructable,")"
GetDestructableTimeScaleHint="[UjAPI]  GetDestructableTimeScale takes destructable whichDestructable returns real"


GetDestructableScale=GetDestructableScale
GetDestructableScale="GetDestructableScale(",~whichDestructable,")"
GetDestructableScaleHint="[UjAPI]  GetDestructableScale takes destructable whichDestructable returns real"


GetDestructableFacing=GetDestructableFacing
GetDestructableFacing="GetDestructableFacing(",~whichDestructable,")"
GetDestructableFacingHint="[UjAPI]  GetDestructableFacing takes destructable whichDestructable returns real"


GetDestructableYaw=GetDestructableYaw
GetDestructableYaw="GetDestructableYaw(",~whichDestructable,")"
GetDestructableYawHint="[UjAPI]  GetDestructableYaw takes destructable whichDestructable returns real"


GetDestructablePitch=GetDestructablePitch
GetDestructablePitch="GetDestructablePitch(",~whichDestructable,")"
GetDestructablePitchHint="[UjAPI]  GetDestructablePitch takes destructable whichDestructable returns real"


GetDestructableRoll=GetDestructableRoll
GetDestructableRoll="GetDestructableRoll(",~whichDestructable,")"
GetDestructableRollHint="[UjAPI]  GetDestructableRoll takes destructable whichDestructable returns real"


GetDestructableModel=GetDestructableModel
GetDestructableModel="GetDestructableModel(",~whichDestructable,")"
GetDestructableModelHint="[UjAPI]  GetDestructableModel takes destructable whichDestructable returns string"


GetDestructableModelObjectX=GetDestructableModelObjectX
GetDestructableModelObjectX="GetDestructableModelObjectX(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectXHint="[UjAPI]  GetDestructableModelObjectX takes destructable whichDestructable, string whichObject returns real"


GetDestructableModelObjectY=GetDestructableModelObjectY
GetDestructableModelObjectY="GetDestructableModelObjectY(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectYHint="[UjAPI]  GetDestructableModelObjectY takes destructable whichDestructable, string whichObject returns real"


GetDestructableModelObjectZ=GetDestructableModelObjectZ
GetDestructableModelObjectZ="GetDestructableModelObjectZ(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectZHint="[UjAPI]  GetDestructableModelObjectZ takes destructable whichDestructable, string whichObject returns real"


GetDestructableModelObjectPositionLoc=GetDestructableModelObjectPositionLoc
GetDestructableModelObjectPositionLoc="GetDestructableModelObjectPositionLoc(",~whichDestructable,", ",~whichObject,")"
GetDestructableModelObjectPositionLocHint="[UjAPI]  GetDestructableModelObjectPositionLoc takes destructable whichDestructable, string whichObject returns location"


GetDestructableCurrentAnimationId=GetDestructableCurrentAnimationId
GetDestructableCurrentAnimationId="GetDestructableCurrentAnimationId(",~whichDestructable,")"
GetDestructableCurrentAnimationIdHint="[UjAPI]  GetDestructableCurrentAnimationId takes destructable whichDestructable returns integer"


GetDestructableCurrentAnimationName=GetDestructableCurrentAnimationName
GetDestructableCurrentAnimationName="GetDestructableCurrentAnimationName(",~whichDestructable,")"
GetDestructableCurrentAnimationNameHint="[UjAPI]  GetDestructableCurrentAnimationName takes destructable whichDestructable returns string"


GetDestructableAnimationOffsetPercent=GetDestructableAnimationOffsetPercent
GetDestructableAnimationOffsetPercent="GetDestructableAnimationOffsetPercent(",~whichDestructable,")"
GetDestructableAnimationOffsetPercentHint="[UjAPI]  GetDestructableAnimationOffsetPercent takes destructable whichDestructable returns real"


GetBaseItemIntegerFieldById=GetBaseItemIntegerFieldById
GetBaseItemIntegerFieldById="GetBaseItemIntegerFieldById(",~itemId,", ",~whichField,")"
GetBaseItemIntegerFieldByIdHint="[UjAPI]  GetBaseItemIntegerFieldById takes integer itemId, itemintegerfield whichField returns integer"


SetBaseItemIntegerFieldById=SetBaseItemIntegerFieldById
SetBaseItemIntegerFieldById="SetBaseItemIntegerFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemIntegerFieldByIdHint="[UjAPI]  SetBaseItemIntegerFieldById takes integer itemId, itemintegerfield whichField, integer value returns boolean"


GetBaseItemBooleanFieldById=GetBaseItemBooleanFieldById
GetBaseItemBooleanFieldById="GetBaseItemBooleanFieldById(",~itemId,", ",~whichField,")"
GetBaseItemBooleanFieldByIdHint="[UjAPI]  GetBaseItemBooleanFieldById takes integer itemId, itembooleanfield whichField returns boolean"


SetBaseItemBooleanFieldById=SetBaseItemBooleanFieldById
SetBaseItemBooleanFieldById="SetBaseItemBooleanFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemBooleanFieldByIdHint="[UjAPI]  SetBaseItemBooleanFieldById takes integer itemId, itembooleanfield whichField, boolean value returns boolean"


GetBaseItemRealFieldById=GetBaseItemRealFieldById
GetBaseItemRealFieldById="GetBaseItemRealFieldById(",~itemId,", ",~whichField,")"
GetBaseItemRealFieldByIdHint="[UjAPI]  GetBaseItemRealFieldById takes integer itemId, itemrealfield whichField returns real"


SetBaseItemRealFieldById=SetBaseItemRealFieldById
SetBaseItemRealFieldById="SetBaseItemRealFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemRealFieldByIdHint="[UjAPI]  SetBaseItemRealFieldById takes integer itemId, itemrealfield whichField, real value returns boolean"


GetBaseItemStringFieldById=GetBaseItemStringFieldById
GetBaseItemStringFieldById="GetBaseItemStringFieldById(",~itemId,", ",~whichField,")"
GetBaseItemStringFieldByIdHint="[UjAPI]  GetBaseItemStringFieldById takes integer itemId, itemstringfield whichField returns string"


SetBaseItemStringFieldById=SetBaseItemStringFieldById
SetBaseItemStringFieldById="SetBaseItemStringFieldById(",~itemId,", ",~whichField,", ",~value,")"
SetBaseItemStringFieldByIdHint="[UjAPI]  SetBaseItemStringFieldById takes integer itemId, itemstringfield whichField, string value returns boolean"


GetItemIntegerField=GetItemIntegerField
GetItemIntegerField="GetItemIntegerField(",~whichItem,", ",~whichField,")"
GetItemIntegerFieldHint="[UjAPI]  GetItemIntegerField takes item whichItem, itemintegerfield whichField returns integer"


SetItemIntegerField=SetItemIntegerField
SetItemIntegerField="SetItemIntegerField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemIntegerFieldHint="[UjAPI]  SetItemIntegerField takes item whichItem, itemintegerfield whichField, integer value returns boolean"


GetItemBooleanField=GetItemBooleanField
GetItemBooleanField="GetItemBooleanField(",~whichItem,", ",~whichField,")"
GetItemBooleanFieldHint="[UjAPI]  GetItemBooleanField takes item whichItem, itembooleanfield whichField returns boolean"


SetItemBooleanField=SetItemBooleanField
SetItemBooleanField="SetItemBooleanField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemBooleanFieldHint="[UjAPI]  SetItemBooleanField takes item whichItem, itembooleanfield whichField, boolean value returns boolean"


GetItemRealField=GetItemRealField
GetItemRealField="GetItemRealField(",~whichItem,", ",~whichField,")"
GetItemRealFieldHint="[UjAPI]  GetItemRealField takes item whichItem, itemrealfield whichField returns real"


SetItemRealField=SetItemRealField
SetItemRealField="SetItemRealField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemRealFieldHint="[UjAPI]  SetItemRealField takes item whichItem, itemrealfield whichField, real value returns boolean"


GetItemStringField=GetItemStringField
GetItemStringField="GetItemStringField(",~whichItem,", ",~whichField,")"
GetItemStringFieldHint="[UjAPI]  GetItemStringField takes item whichItem, itemstringfield whichField returns string"


SetItemStringField=SetItemStringField
SetItemStringField="SetItemStringField(",~whichItem,", ",~whichField,", ",~value,")"
SetItemStringFieldHint="[UjAPI]  SetItemStringField takes item whichItem, itemstringfield whichField, string value returns boolean"


GetTriggerItem=GetTriggerItem
GetTriggerItem="GetTriggerItem(",")"
GetTriggerItemHint="[UjAPI]  GetTriggerItem takes nothing returns item"


GetItemUnderCursor=GetItemUnderCursor
GetItemUnderCursor="GetItemUnderCursor(",")"
GetItemUnderCursorHint="[UjAPI]  GetItemUnderCursor takes nothing returns item"


GetItemOwner=GetItemOwner
GetItemOwner="GetItemOwner(",~whichItem,")"
GetItemOwnerHint="[UjAPI]  GetItemOwner takes item whichItem returns unit"


IsItemDroppable=IsItemDroppable
IsItemDroppable="IsItemDroppable(",~whichItem,")"
IsItemDroppableHint="[UjAPI]  IsItemDroppable takes item whichItem returns boolean"


GetItemSprite=GetItemSprite
GetItemSprite="GetItemSprite(",~whichItem,")"
GetItemSpriteHint="[UjAPI]  GetItemSprite takes item whichItem returns sprite"


GetItemZ=GetItemZ
GetItemZ="GetItemZ(",~whichItem,")"
GetItemZHint="[UjAPI]  GetItemZ takes item whichItem returns real"


GetItemHeight=GetItemHeight
GetItemHeight="GetItemHeight(",~whichItem,")"
GetItemHeightHint="[UjAPI]  GetItemHeight takes item whichItem returns real"


GetItemScreenX=GetItemScreenX
GetItemScreenX="GetItemScreenX(",~whichItem,")"
GetItemScreenXHint="[UjAPI]  GetItemScreenX takes item whichItem returns real"


GetItemScreenY=GetItemScreenY
GetItemScreenY="GetItemScreenY(",~whichItem,")"
GetItemScreenYHint="[UjAPI]  GetItemScreenY takes item whichItem returns real"


GetItemLife=GetItemLife
GetItemLife="GetItemLife(",~whichItem,")"
GetItemLifeHint="[UjAPI]  GetItemLife takes item whichItem returns real"


GetItemMaxLife=GetItemMaxLife
GetItemMaxLife="GetItemMaxLife(",~whichItem,")"
GetItemMaxLifeHint="[UjAPI]  GetItemMaxLife takes item whichItem returns real"


GetItemAbilityById=GetItemAbilityById
GetItemAbilityById="GetItemAbilityById(",~whichItem,", ",~abilCode,")"
GetItemAbilityByIdHint="[UjAPI]  GetItemAbilityById takes item whichItem, integer abilCode returns ability"


GetItemAbilityByIndex=GetItemAbilityByIndex
GetItemAbilityByIndex="GetItemAbilityByIndex(",~whichItem,", ",~index,")"
GetItemAbilityByIndexHint="[UjAPI]  GetItemAbilityByIndex takes item whichItem, integer index returns ability"


ItemAddAbility=ItemAddAbility
ItemAddAbility="ItemAddAbility(",~whichItem,", ",~whichAbility,")"
ItemAddAbilityHint="[UjAPI]  ItemAddAbility takes item whichItem, ability whichAbility returns boolean"


ItemRemoveAbility=ItemRemoveAbility
ItemRemoveAbility="ItemRemoveAbility(",~whichItem,", ",~whichAbility,")"
ItemRemoveAbilityHint="[UjAPI]  ItemRemoveAbility takes item whichItem, ability whichAbility returns boolean"


ItemAddAbilityById=ItemAddAbilityById
ItemAddAbilityById="ItemAddAbilityById(",~whichItem,", ",~abilCode,")"
ItemAddAbilityByIdHint="[UjAPI]  ItemAddAbilityById takes item whichItem, integer abilCode returns boolean"


ItemRemoveAbilityById=ItemRemoveAbilityById
ItemRemoveAbilityById="ItemRemoveAbilityById(",~whichItem,", ",~abilCode,")"
ItemRemoveAbilityByIdHint="[UjAPI]  ItemRemoveAbilityById takes item whichItem, integer abilCode returns boolean"


GetItemCooldown=GetItemCooldown
GetItemCooldown="GetItemCooldown(",~whichItem,")"
GetItemCooldownHint="[UjAPI]  GetItemCooldown takes item whichItem returns real"


GetItemRemainingCooldown=GetItemRemainingCooldown
GetItemRemainingCooldown="GetItemRemainingCooldown(",~whichItem,")"
GetItemRemainingCooldownHint="[UjAPI]  GetItemRemainingCooldown takes item whichItem returns real"


GetItemPlayerColour=GetItemPlayerColour
GetItemPlayerColour="GetItemPlayerColour(",~whichItem,")"
GetItemPlayerColourHint="[UjAPI]  GetItemPlayerColour takes item whichItem returns playercolor"


GetItemVertexColour=GetItemVertexColour
GetItemVertexColour="GetItemVertexColour(",~whichItem,")"
GetItemVertexColourHint="[UjAPI]  GetItemVertexColour takes item whichItem returns integer"


GetItemTimeScale=GetItemTimeScale
GetItemTimeScale="GetItemTimeScale(",~whichItem,")"
GetItemTimeScaleHint="[UjAPI]  GetItemTimeScale takes item whichItem returns real"


GetItemScale=GetItemScale
GetItemScale="GetItemScale(",~whichItem,")"
GetItemScaleHint="[UjAPI]  GetItemScale takes item whichItem returns real"


GetItemFacing=GetItemFacing
GetItemFacing="GetItemFacing(",~whichItem,")"
GetItemFacingHint="[UjAPI]  GetItemFacing takes item whichItem returns real"


GetItemYaw=GetItemYaw
GetItemYaw="GetItemYaw(",~whichItem,")"
GetItemYawHint="[UjAPI]  GetItemYaw takes item whichItem returns real"


GetItemPitch=GetItemPitch
GetItemPitch="GetItemPitch(",~whichItem,")"
GetItemPitchHint="[UjAPI]  GetItemPitch takes item whichItem returns real"


GetItemRoll=GetItemRoll
GetItemRoll="GetItemRoll(",~whichItem,")"
GetItemRollHint="[UjAPI]  GetItemRoll takes item whichItem returns real"


GetItemModel=GetItemModel
GetItemModel="GetItemModel(",~whichItem,")"
GetItemModelHint="[UjAPI]  GetItemModel takes item whichItem returns string"


GetItemModelObjectX=GetItemModelObjectX
GetItemModelObjectX="GetItemModelObjectX(",~whichItem,", ",~whichObject,")"
GetItemModelObjectXHint="[UjAPI]  GetItemModelObjectX takes item whichItem, string whichObject returns real"


GetItemModelObjectY=GetItemModelObjectY
GetItemModelObjectY="GetItemModelObjectY(",~whichItem,", ",~whichObject,")"
GetItemModelObjectYHint="[UjAPI]  GetItemModelObjectY takes item whichItem, string whichObject returns real"


GetItemModelObjectZ=GetItemModelObjectZ
GetItemModelObjectZ="GetItemModelObjectZ(",~whichItem,", ",~whichObject,")"
GetItemModelObjectZHint="[UjAPI]  GetItemModelObjectZ takes item whichItem, string whichObject returns real"


GetItemModelObjectPositionLoc=GetItemModelObjectPositionLoc
GetItemModelObjectPositionLoc="GetItemModelObjectPositionLoc(",~whichItem,", ",~whichObject,")"
GetItemModelObjectPositionLocHint="[UjAPI]  GetItemModelObjectPositionLoc takes item whichItem, string whichObject returns location"


GetItemCurrentAnimationId=GetItemCurrentAnimationId
GetItemCurrentAnimationId="GetItemCurrentAnimationId(",~whichItem,")"
GetItemCurrentAnimationIdHint="[UjAPI]  GetItemCurrentAnimationId takes item whichItem returns integer"


GetItemCurrentAnimationName=GetItemCurrentAnimationName
GetItemCurrentAnimationName="GetItemCurrentAnimationName(",~whichItem,")"
GetItemCurrentAnimationNameHint="[UjAPI]  GetItemCurrentAnimationName takes item whichItem returns string"


GetItemAnimationOffsetPercent=GetItemAnimationOffsetPercent
GetItemAnimationOffsetPercent="GetItemAnimationOffsetPercent(",~whichItem,")"
GetItemAnimationOffsetPercentHint="[UjAPI]  GetItemAnimationOffsetPercent takes item whichItem returns real"


GetUnitBaseIntegerFieldById=GetUnitBaseIntegerFieldById
GetUnitBaseIntegerFieldById="GetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseIntegerFieldByIdHint="[UjAPI]  GetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField returns integer"


SetUnitBaseIntegerFieldById=SetUnitBaseIntegerFieldById
SetUnitBaseIntegerFieldById="SetUnitBaseIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseIntegerFieldByIdHint="[UjAPI]  SetUnitBaseIntegerFieldById takes integer unitTypeId, unitintegerfield whichField, integer value returns boolean"


GetUnitBaseBooleanFieldById=GetUnitBaseBooleanFieldById
GetUnitBaseBooleanFieldById="GetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseBooleanFieldByIdHint="[UjAPI]  GetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField returns boolean"


SetUnitBaseBooleanFieldById=SetUnitBaseBooleanFieldById
SetUnitBaseBooleanFieldById="SetUnitBaseBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseBooleanFieldByIdHint="[UjAPI]  SetUnitBaseBooleanFieldById takes integer unitTypeId, unitbooleanfield whichField, boolean value returns boolean"


GetUnitBaseRealFieldById=GetUnitBaseRealFieldById
GetUnitBaseRealFieldById="GetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseRealFieldByIdHint="[UjAPI]  GetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField returns real"


SetUnitBaseRealFieldById=SetUnitBaseRealFieldById
SetUnitBaseRealFieldById="SetUnitBaseRealFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseRealFieldByIdHint="[UjAPI]  SetUnitBaseRealFieldById takes integer unitTypeId, unitrealfield whichField, real value returns boolean"


GetUnitBaseStringFieldById=GetUnitBaseStringFieldById
GetUnitBaseStringFieldById="GetUnitBaseStringFieldById(",~unitTypeId,", ",~whichField,")"
GetUnitBaseStringFieldByIdHint="[UjAPI]  GetUnitBaseStringFieldById takes integer unitTypeId, unitstringfield whichField returns string"


SetUnitBaseStringFieldById=SetUnitBaseStringFieldById
SetUnitBaseStringFieldById="SetUnitBaseStringFieldById(",~unitTypeId,", ",~whichField,", ",~value,")"
SetUnitBaseStringFieldByIdHint="[UjAPI]  SetUnitBaseStringFieldById takes integer unitTypeId, unitstringfield whichField, string value returns boolean"


GetUnitBaseWeaponIntegerFieldById=GetUnitBaseWeaponIntegerFieldById
GetUnitBaseWeaponIntegerFieldById="GetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  GetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index returns integer"


SetUnitBaseWeaponIntegerFieldById=SetUnitBaseWeaponIntegerFieldById
SetUnitBaseWeaponIntegerFieldById="SetUnitBaseWeaponIntegerFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponIntegerFieldByIdHint="[UjAPI]  SetUnitBaseWeaponIntegerFieldById takes integer unitTypeId, unitweaponintegerfield whichField, integer index, integer value returns boolean"


GetUnitBaseWeaponBooleanFieldById=GetUnitBaseWeaponBooleanFieldById
GetUnitBaseWeaponBooleanFieldById="GetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  GetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index returns boolean"


SetUnitBaseWeaponBooleanFieldById=SetUnitBaseWeaponBooleanFieldById
SetUnitBaseWeaponBooleanFieldById="SetUnitBaseWeaponBooleanFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponBooleanFieldByIdHint="[UjAPI]  SetUnitBaseWeaponBooleanFieldById takes integer unitTypeId, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"


GetUnitBaseWeaponRealFieldById=GetUnitBaseWeaponRealFieldById
GetUnitBaseWeaponRealFieldById="GetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  GetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index returns real"


SetUnitBaseWeaponRealFieldById=SetUnitBaseWeaponRealFieldById
SetUnitBaseWeaponRealFieldById="SetUnitBaseWeaponRealFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponRealFieldByIdHint="[UjAPI]  SetUnitBaseWeaponRealFieldById takes integer unitTypeId, unitweaponrealfield whichField, integer index, real value returns boolean"


GetUnitBaseWeaponStringFieldById=GetUnitBaseWeaponStringFieldById
GetUnitBaseWeaponStringFieldById="GetUnitBaseWeaponStringFieldById(",~unitTypeId,", ",~whichField,", ",~index,")"
GetUnitBaseWeaponStringFieldByIdHint="[UjAPI]  GetUnitBaseWeaponStringFieldById takes integer unitTypeId, unitweaponstringfield whichField, integer index returns string"


SetUnitBaseWeaponStringFieldById=SetUnitBaseWeaponStringFieldById
SetUnitBaseWeaponStringFieldById="SetUnitBaseWeaponStringFieldById(",~unitTypeId,", ",~whichField,", ",~index,", ",~value,")"
SetUnitBaseWeaponStringFieldByIdHint="[UjAPI]  SetUnitBaseWeaponStringFieldById takes integer unitTypeId, unitweaponstringfield whichField, integer index, string value returns boolean"


GetUnitIntegerField=GetUnitIntegerField
GetUnitIntegerField="GetUnitIntegerField(",~whichUnit,", ",~whichField,")"
GetUnitIntegerFieldHint="[UjAPI]  GetUnitIntegerField takes unit whichUnit, unitintegerfield whichField returns integer"


SetUnitIntegerField=SetUnitIntegerField
SetUnitIntegerField="SetUnitIntegerField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitIntegerFieldHint="[UjAPI]  SetUnitIntegerField takes unit whichUnit, unitintegerfield whichField, integer value returns boolean"


GetUnitBooleanField=GetUnitBooleanField
GetUnitBooleanField="GetUnitBooleanField(",~whichUnit,", ",~whichField,")"
GetUnitBooleanFieldHint="[UjAPI]  GetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField returns boolean"


SetUnitBooleanField=SetUnitBooleanField
SetUnitBooleanField="SetUnitBooleanField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitBooleanFieldHint="[UjAPI]  SetUnitBooleanField takes unit whichUnit, unitbooleanfield whichField, boolean value returns boolean"


GetUnitRealField=GetUnitRealField
GetUnitRealField="GetUnitRealField(",~whichUnit,", ",~whichField,")"
GetUnitRealFieldHint="[UjAPI]  GetUnitRealField takes unit whichUnit, unitrealfield whichField returns real"


SetUnitRealField=SetUnitRealField
SetUnitRealField="SetUnitRealField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitRealFieldHint="[UjAPI]  SetUnitRealField takes unit whichUnit, unitrealfield whichField, real value returns boolean"


GetUnitStringField=GetUnitStringField
GetUnitStringField="GetUnitStringField(",~whichUnit,", ",~whichField,")"
GetUnitStringFieldHint="[UjAPI]  GetUnitStringField takes unit whichUnit, unitstringfield whichField returns string"


SetUnitStringField=SetUnitStringField
SetUnitStringField="SetUnitStringField(",~whichUnit,", ",~whichField,", ",~value,")"
SetUnitStringFieldHint="[UjAPI]  SetUnitStringField takes unit whichUnit, unitstringfield whichField, string value returns boolean"


GetUnitWeaponIntegerField=GetUnitWeaponIntegerField
GetUnitWeaponIntegerField="GetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponIntegerFieldHint="[UjAPI]  GetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index returns integer"


SetUnitWeaponIntegerField=SetUnitWeaponIntegerField
SetUnitWeaponIntegerField="SetUnitWeaponIntegerField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponIntegerFieldHint="[UjAPI]  SetUnitWeaponIntegerField takes unit whichUnit, unitweaponintegerfield whichField, integer index, integer value returns boolean"


GetUnitWeaponBooleanField=GetUnitWeaponBooleanField
GetUnitWeaponBooleanField="GetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponBooleanFieldHint="[UjAPI]  GetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index returns boolean"


SetUnitWeaponBooleanField=SetUnitWeaponBooleanField
SetUnitWeaponBooleanField="SetUnitWeaponBooleanField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponBooleanFieldHint="[UjAPI]  SetUnitWeaponBooleanField takes unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value returns boolean"


GetUnitWeaponRealField=GetUnitWeaponRealField
GetUnitWeaponRealField="GetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponRealFieldHint="[UjAPI]  GetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index returns real"


SetUnitWeaponRealField=SetUnitWeaponRealField
SetUnitWeaponRealField="SetUnitWeaponRealField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponRealFieldHint="[UjAPI]  SetUnitWeaponRealField takes unit whichUnit, unitweaponrealfield whichField, integer index, real value returns boolean"


GetUnitWeaponStringField=GetUnitWeaponStringField
GetUnitWeaponStringField="GetUnitWeaponStringField(",~whichUnit,", ",~whichField,", ",~index,")"
GetUnitWeaponStringFieldHint="[UjAPI]  GetUnitWeaponStringField takes unit whichUnit, unitweaponstringfield whichField, integer index returns string"


SetUnitWeaponStringField=SetUnitWeaponStringField
SetUnitWeaponStringField="SetUnitWeaponStringField(",~whichUnit,", ",~whichField,", ",~index,", ",~value,")"
SetUnitWeaponStringFieldHint="[UjAPI]  SetUnitWeaponStringField takes unit whichUnit, unitweaponstringfield whichField, integer index, string value returns boolean"


GetUnitUnderCursor=GetUnitUnderCursor
GetUnitUnderCursor="GetUnitUnderCursor(",")"
GetUnitUnderCursorHint="[UjAPI]  GetUnitUnderCursor takes nothing returns unit"


GetUnitSprite=GetUnitSprite
GetUnitSprite="GetUnitSprite(",~whichUnit,")"
GetUnitSpriteHint="[UjAPI]  GetUnitSprite takes unit whichUnit returns sprite"


GetUnitHeight=GetUnitHeight
GetUnitHeight="GetUnitHeight(",~whichUnit,")"
GetUnitHeightHint="[UjAPI]  GetUnitHeight takes unit whichUnit returns real"


GetUnitScreenX=GetUnitScreenX
GetUnitScreenX="GetUnitScreenX(",~whichUnit,")"
GetUnitScreenXHint="[UjAPI]  GetUnitScreenX takes unit whichUnit returns real"


GetUnitScreenY=GetUnitScreenY
GetUnitScreenY="GetUnitScreenY(",~whichUnit,")"
GetUnitScreenYHint="[UjAPI]  GetUnitScreenY takes unit whichUnit returns real"


GetUnitSelectedCountByPlayer=GetUnitSelectedCountByPlayer
GetUnitSelectedCountByPlayer="GetUnitSelectedCountByPlayer(",~whichPlayer,")"
GetUnitSelectedCountByPlayerHint="[UjAPI]  GetUnitSelectedCountByPlayer takes player whichPlayer returns integer"


GetUnitSelected=GetUnitSelected
GetUnitSelected="GetUnitSelected(",~whichPlayer,")"
GetUnitSelectedHint="[UjAPI]  GetUnitSelected takes player whichPlayer returns unit"


GetUnitInSelectionByIndex=GetUnitInSelectionByIndex
GetUnitInSelectionByIndex="GetUnitInSelectionByIndex(",~whichPlayer,", ",~index,")"
GetUnitInSelectionByIndexHint="[UjAPI]  GetUnitInSelectionByIndex takes player whichPlayer, integer index returns unit"


GetFirstUnitInSelection=GetFirstUnitInSelection
GetFirstUnitInSelection="GetFirstUnitInSelection(",~whichPlayer,")"
GetFirstUnitInSelectionHint="[UjAPI]  GetFirstUnitInSelection takes player whichPlayer returns unit"


GetLastUnitInSelection=GetLastUnitInSelection
GetLastUnitInSelection="GetLastUnitInSelection(",~whichPlayer,")"
GetLastUnitInSelectionHint="[UjAPI]  GetLastUnitInSelection takes player whichPlayer returns unit"


IsUnitAlive=IsUnitAlive
IsUnitAlive="IsUnitAlive(",~whichUnit,")"
IsUnitAliveHint="[UjAPI]  IsUnitAlive takes unit whichUnit returns boolean"


IsUnitDead=IsUnitDead
IsUnitDead="IsUnitDead(",~whichUnit,")"
IsUnitDeadHint="[UjAPI]  IsUnitDead takes unit whichUnit returns boolean"


IsUnitMoving=IsUnitMoving
IsUnitMoving="IsUnitMoving(",~whichUnit,")"
IsUnitMovingHint="[UjAPI]  IsUnitMoving takes unit whichUnit returns boolean"


IsUnitStunned=IsUnitStunned
IsUnitStunned="IsUnitStunned(",~whichUnit,")"
IsUnitStunnedHint="[UjAPI]  IsUnitStunned takes unit whichUnit returns boolean"


IsUnitInvulnerable=IsUnitInvulnerable
IsUnitInvulnerable="IsUnitInvulnerable(",~whichUnit,")"
IsUnitInvulnerableHint="[UjAPI]  IsUnitInvulnerable takes unit whichUnit returns boolean"


IsUnitHero=IsUnitHero
IsUnitHero="IsUnitHero(",~whichUnit,")"
IsUnitHeroHint="[UjAPI]  IsUnitHero takes unit whichUnit returns boolean"


IsUnitTower=IsUnitTower
IsUnitTower="IsUnitTower(",~whichUnit,")"
IsUnitTowerHint="[UjAPI]  IsUnitTower takes unit whichUnit returns boolean"


IsUnitShop=IsUnitShop
IsUnitShop="IsUnitShop(",~whichUnit,")"
IsUnitShopHint="[UjAPI]  IsUnitShop takes unit whichUnit returns boolean"


IsUnitInventoryEnabled=IsUnitInventoryEnabled
IsUnitInventoryEnabled="IsUnitInventoryEnabled(",~whichUnit,")"
IsUnitInventoryEnabledHint="[UjAPI]  IsUnitInventoryEnabled takes unit whichUnit returns boolean"


IsUnitMovementEnabled=IsUnitMovementEnabled
IsUnitMovementEnabled="IsUnitMovementEnabled(",~whichUnit,")"
IsUnitMovementEnabledHint="[UjAPI]  IsUnitMovementEnabled takes unit whichUnit returns boolean"


IsUnitAttackEnabled=IsUnitAttackEnabled
IsUnitAttackEnabled="IsUnitAttackEnabled(",~whichUnit,")"
IsUnitAttackEnabledHint="[UjAPI]  IsUnitAttackEnabled takes unit whichUnit returns boolean"


IsUnitStateNormal=IsUnitStateNormal
IsUnitStateNormal="IsUnitStateNormal(",~whichUnit,", ",~additionalCheck,")"
IsUnitStateNormalHint="[UjAPI]  IsUnitStateNormal takes unit whichUnit, boolean additionalCheck returns boolean"


UnitAddAbilityEx=UnitAddAbilityEx
UnitAddAbilityEx="UnitAddAbilityEx(",~whichUnit,", ",~abilCode,", ",~checkForDuplicates,")"
UnitAddAbilityExHint="[UjAPI]  UnitAddAbilityEx takes unit whichUnit, integer abilCode, boolean checkForDuplicates returns boolean"


UnitRemoveAbilityEx=UnitRemoveAbilityEx
UnitRemoveAbilityEx="UnitRemoveAbilityEx(",~whichUnit,", ",~abilCode,", ",~removeDuplicates,")"
UnitRemoveAbilityExHint="[UjAPI]  UnitRemoveAbilityEx takes unit whichUnit, integer abilCode, boolean removeDuplicates returns boolean"


CountUnitAbilities=CountUnitAbilities
CountUnitAbilities="CountUnitAbilities(",~whichUnit,", ",~alsoCountBuffs,")"
CountUnitAbilitiesHint="[UjAPI]  CountUnitAbilities takes unit whichUnit, boolean alsoCountBuffs returns integer"


GetUnitAbility=GetUnitAbility
GetUnitAbility="GetUnitAbility(",~whichUnit,", ",~aid,")"
GetUnitAbilityHint="[UjAPI]  GetUnitAbility takes unit whichUnit, integer aid returns ability"


GetUnitAbilityEx=GetUnitAbilityEx
GetUnitAbilityEx="GetUnitAbilityEx(",~whichUnit,", ",~aid,", ",~id,")"
GetUnitAbilityExHint="[UjAPI]  GetUnitAbilityEx takes unit whichUnit, integer aid, integer id returns ability"


GetUnitAbilityByIndex=GetUnitAbilityByIndex
GetUnitAbilityByIndex="GetUnitAbilityByIndex(",~whichUnit,", ",~index,")"
GetUnitAbilityByIndexHint="[UjAPI]  GetUnitAbilityByIndex takes unit whichUnit, integer index returns ability"


IsUnitAbilityVisible=IsUnitAbilityVisible
IsUnitAbilityVisible="IsUnitAbilityVisible(",~whichUnit,", ",~abilCode,")"
IsUnitAbilityVisibleHint="[UjAPI]  IsUnitAbilityVisible takes unit whichUnit, integer abilCode returns boolean"


UnitAddBuff=UnitAddBuff
UnitAddBuff="UnitAddBuff(",~whichUnit,", ",~whichBuff,")"
UnitAddBuffHint="[UjAPI]  UnitAddBuff takes unit whichUnit, buff whichBuff returns boolean"


UnitAddBuffEx=UnitAddBuffEx
UnitAddBuffEx="UnitAddBuffEx(",~whichUnit,", ",~whichBuff,", ",~checkForDuplicates,")"
UnitAddBuffExHint="[UjAPI]  UnitAddBuffEx takes unit whichUnit, buff whichBuff, boolean checkForDuplicates returns boolean"


UnitAddBuffById=UnitAddBuffById
UnitAddBuffById="UnitAddBuffById(",~whichUnit,", ",~buffId,")"
UnitAddBuffByIdHint="[UjAPI]  UnitAddBuffById takes unit whichUnit, integer buffId returns boolean"


UnitAddBuffByIdEx=UnitAddBuffByIdEx
UnitAddBuffByIdEx="UnitAddBuffByIdEx(",~whichUnit,", ",~buffId,", ",~checkForDuplicates,")"
UnitAddBuffByIdExHint="[UjAPI]  UnitAddBuffByIdEx takes unit whichUnit, integer buffId, boolean checkForDuplicates returns boolean"


CountUnitBuffs=CountUnitBuffs
CountUnitBuffs="CountUnitBuffs(",~whichUnit,")"
CountUnitBuffsHint="[UjAPI]  CountUnitBuffs takes unit whichUnit returns integer"


GetUnitBuff=GetUnitBuff
GetUnitBuff="GetUnitBuff(",~whichUnit,", ",~buffId,")"
GetUnitBuffHint="[UjAPI]  GetUnitBuff takes unit whichUnit, integer buffId returns buff"


GetUnitBuffEx=GetUnitBuffEx
GetUnitBuffEx="GetUnitBuffEx(",~whichUnit,", ",~buffId,", ",~id,")"
GetUnitBuffExHint="[UjAPI]  GetUnitBuffEx takes unit whichUnit, integer buffId, integer id returns buff"


GetUnitBuffByIndex=GetUnitBuffByIndex
GetUnitBuffByIndex="GetUnitBuffByIndex(",~whichUnit,", ",~index,")"
GetUnitBuffByIndexHint="[UjAPI]  GetUnitBuffByIndex takes unit whichUnit, integer index returns buff"


GetUnitBuffLevel=GetUnitBuffLevel
GetUnitBuffLevel="GetUnitBuffLevel(",~whichUnit,", ",~buffId,")"
GetUnitBuffLevelHint="[UjAPI]  GetUnitBuffLevel takes unit whichUnit, integer buffId returns integer"


GetUnitRemainingTimedLife=GetUnitRemainingTimedLife
GetUnitRemainingTimedLife="GetUnitRemainingTimedLife(",~whichUnit,")"
GetUnitRemainingTimedLifeHint="[UjAPI]  GetUnitRemainingTimedLife takes unit whichUnit returns real"


IsUnitGhosted=IsUnitGhosted
IsUnitGhosted="IsUnitGhosted(",~whichUnit,")"
IsUnitGhostedHint="[UjAPI]  IsUnitGhosted takes unit whichUnit returns boolean"


IsUnitSelectable=IsUnitSelectable
IsUnitSelectable="IsUnitSelectable(",~whichUnit,")"
IsUnitSelectableHint="[UjAPI]  IsUnitSelectable takes unit whichUnit returns boolean"


IsUnitTargetable=IsUnitTargetable
IsUnitTargetable="IsUnitTargetable(",~whichUnit,")"
IsUnitTargetableHint="[UjAPI]  IsUnitTargetable takes unit whichUnit returns boolean"


IsUnitTruesightImmune=IsUnitTruesightImmune
IsUnitTruesightImmune="IsUnitTruesightImmune(",~whichUnit,")"
IsUnitTruesightImmuneHint="[UjAPI]  IsUnitTruesightImmune takes unit whichUnit returns boolean"


GetUnitZ=GetUnitZ
GetUnitZ="GetUnitZ(",~whichUnit,")"
GetUnitZHint="[UjAPI]  GetUnitZ takes unit whichUnit returns real"


GetUnitDamageReduction=GetUnitDamageReduction
GetUnitDamageReduction="GetUnitDamageReduction(",~whichUnit,")"
GetUnitDamageReductionHint="[UjAPI]  GetUnitDamageReduction takes unit whichUnit returns real"


GetUnitMagicResistByType=GetUnitMagicResistByType
GetUnitMagicResistByType="GetUnitMagicResistByType(",~whichUnit,", ",~resistType,")"
GetUnitMagicResistByTypeHint="[UjAPI]  GetUnitMagicResistByType takes unit whichUnit, integer resistType returns real"


GetUnitEluneMagicResist=GetUnitEluneMagicResist
GetUnitEluneMagicResist="GetUnitEluneMagicResist(",~whichUnit,")"
GetUnitEluneMagicResistHint="[UjAPI]  GetUnitEluneMagicResist takes unit whichUnit returns real"


GetUnitRunicMagicResist=GetUnitRunicMagicResist
GetUnitRunicMagicResist="GetUnitRunicMagicResist(",~whichUnit,")"
GetUnitRunicMagicResistHint="[UjAPI]  GetUnitRunicMagicResist takes unit whichUnit returns real"


GetUnitTotalMagicResist=GetUnitTotalMagicResist
GetUnitTotalMagicResist="GetUnitTotalMagicResist(",~whichUnit,")"
GetUnitTotalMagicResistHint="[UjAPI]  GetUnitTotalMagicResist takes unit whichUnit returns real"


IsUnitFlyHeightEnabled=IsUnitFlyHeightEnabled
IsUnitFlyHeightEnabled="IsUnitFlyHeightEnabled(",~whichUnit,")"
IsUnitFlyHeightEnabledHint="[UjAPI]  IsUnitFlyHeightEnabled takes unit whichUnit returns boolean"


IsUnitGatherer=IsUnitGatherer
IsUnitGatherer="IsUnitGatherer(",~whichUnit,")"
IsUnitGathererHint="[UjAPI]  IsUnitGatherer takes unit whichUnit returns boolean"


GetUnitResourceCurrent=GetUnitResourceCurrent
GetUnitResourceCurrent="GetUnitResourceCurrent(",~whichUnit,")"
GetUnitResourceCurrentHint="[UjAPI]  GetUnitResourceCurrent takes unit whichUnit returns integer"


GetUnitResourceCapacity=GetUnitResourceCapacity
GetUnitResourceCapacity="GetUnitResourceCapacity(",~whichUnit,", ",~resourceType,")"
GetUnitResourceCapacityHint="[UjAPI]  GetUnitResourceCapacity takes unit whichUnit, integer resourceType returns integer"


GetUnitResourcePerGather=GetUnitResourcePerGather
GetUnitResourcePerGather="GetUnitResourcePerGather(",~whichUnit,", ",~resourceType,")"
GetUnitResourcePerGatherHint="[UjAPI]  GetUnitResourcePerGather takes unit whichUnit, integer resourceType returns integer"


GetUnitResourceGatherInterval=GetUnitResourceGatherInterval
GetUnitResourceGatherInterval="GetUnitResourceGatherInterval(",~whichUnit,")"
GetUnitResourceGatherIntervalHint="[UjAPI]  GetUnitResourceGatherInterval takes unit whichUnit returns real"


GetUnitCurrentSight=GetUnitCurrentSight
GetUnitCurrentSight="GetUnitCurrentSight(",~whichUnit,")"
GetUnitCurrentSightHint="[UjAPI]  GetUnitCurrentSight takes unit whichUnit returns real"


GetUnitAttackRemainingCooldown=GetUnitAttackRemainingCooldown
GetUnitAttackRemainingCooldown="GetUnitAttackRemainingCooldown(",~whichUnit,")"
GetUnitAttackRemainingCooldownHint="[UjAPI]  GetUnitAttackRemainingCooldown takes unit whichUnit returns real"


GetUnitAttackRemainingDamagePoint=GetUnitAttackRemainingDamagePoint
GetUnitAttackRemainingDamagePoint="GetUnitAttackRemainingDamagePoint(",~whichUnit,")"
GetUnitAttackRemainingDamagePointHint="[UjAPI]  GetUnitAttackRemainingDamagePoint takes unit whichUnit returns real"


GetUnitAttackRemainingBackswing=GetUnitAttackRemainingBackswing
GetUnitAttackRemainingBackswing="GetUnitAttackRemainingBackswing(",~whichUnit,")"
GetUnitAttackRemainingBackswingHint="[UjAPI]  GetUnitAttackRemainingBackswing takes unit whichUnit returns real"


UnitAttackCancel=UnitAttackCancel
UnitAttackCancel="UnitAttackCancel(",~whichUnit,")"
UnitAttackCancelHint="[UjAPI]  UnitAttackCancel takes unit whichUnit returns boolean"


UnitAttackRestart=UnitAttackRestart
UnitAttackRestart="UnitAttackRestart(",~whichUnit,")"
UnitAttackRestartHint="[UjAPI]  UnitAttackRestart takes unit whichUnit returns boolean"


UnitAttackFinish=UnitAttackFinish
UnitAttackFinish="UnitAttackFinish(",~whichUnit,")"
UnitAttackFinishHint="[UjAPI]  UnitAttackFinish takes unit whichUnit returns boolean"


GetUnitAttackTypeByIndex=GetUnitAttackTypeByIndex
GetUnitAttackTypeByIndex="GetUnitAttackTypeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackTypeByIndexHint="[UjAPI]  GetUnitAttackTypeByIndex takes unit whichUnit, integer attackIndex returns attacktype"


GetUnitWeaponTypeByIndex=GetUnitWeaponTypeByIndex
GetUnitWeaponTypeByIndex="GetUnitWeaponTypeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitWeaponTypeByIndexHint="[UjAPI]  GetUnitWeaponTypeByIndex takes unit whichUnit, integer attackIndex returns weapontype"


GetUnitWeaponSoundByIndex=GetUnitWeaponSoundByIndex
GetUnitWeaponSoundByIndex="GetUnitWeaponSoundByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitWeaponSoundByIndexHint="[UjAPI]  GetUnitWeaponSoundByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitBaseDamageByIndex=GetUnitBaseDamageByIndex
GetUnitBaseDamageByIndex="GetUnitBaseDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBaseDamageByIndexHint="[UjAPI]  GetUnitBaseDamageByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitBonusDamageByIndex=GetUnitBonusDamageByIndex
GetUnitBonusDamageByIndex="GetUnitBonusDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBonusDamageByIndexHint="[UjAPI]  GetUnitBonusDamageByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitDamageDicesSideByIndex=GetUnitDamageDicesSideByIndex
GetUnitDamageDicesSideByIndex="GetUnitDamageDicesSideByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamageDicesSideByIndexHint="[UjAPI]  GetUnitDamageDicesSideByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitDamageDicesByIndex=GetUnitDamageDicesByIndex
GetUnitDamageDicesByIndex="GetUnitDamageDicesByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamageDicesByIndexHint="[UjAPI]  GetUnitDamageDicesByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitMinimumDamageByIndex=GetUnitMinimumDamageByIndex
GetUnitMinimumDamageByIndex="GetUnitMinimumDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitMinimumDamageByIndexHint="[UjAPI]  GetUnitMinimumDamageByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitMaximumDamageByIndex=GetUnitMaximumDamageByIndex
GetUnitMaximumDamageByIndex="GetUnitMaximumDamageByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitMaximumDamageByIndexHint="[UjAPI]  GetUnitMaximumDamageByIndex takes unit whichUnit, integer attackIndex returns integer"


GetUnitAttackRangeByIndex=GetUnitAttackRangeByIndex
GetUnitAttackRangeByIndex="GetUnitAttackRangeByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackRangeByIndexHint="[UjAPI]  GetUnitAttackRangeByIndex takes unit whichUnit, integer attackIndex returns real"


GetUnitAttackSpeed=GetUnitAttackSpeed
GetUnitAttackSpeed="GetUnitAttackSpeed(",~whichUnit,")"
GetUnitAttackSpeedHint="[UjAPI]  GetUnitAttackSpeed takes unit whichUnit returns real"


GetUnitAttackCooldownByIndex=GetUnitAttackCooldownByIndex
GetUnitAttackCooldownByIndex="GetUnitAttackCooldownByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitAttackCooldownByIndexHint="[UjAPI]  GetUnitAttackCooldownByIndex takes unit whichUnit, integer attackIndex returns real"


GetUnitBackswingPointByIndex=GetUnitBackswingPointByIndex
GetUnitBackswingPointByIndex="GetUnitBackswingPointByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitBackswingPointByIndexHint="[UjAPI]  GetUnitBackswingPointByIndex takes unit whichUnit, integer attackIndex returns real"


GetUnitDamagePointByIndex=GetUnitDamagePointByIndex
GetUnitDamagePointByIndex="GetUnitDamagePointByIndex(",~whichUnit,", ",~attackIndex,")"
GetUnitDamagePointByIndexHint="[UjAPI]  GetUnitDamagePointByIndex takes unit whichUnit, integer attackIndex returns real"


GetUnitAttacksEnabledIndex=GetUnitAttacksEnabledIndex
GetUnitAttacksEnabledIndex="GetUnitAttacksEnabledIndex(",~whichUnit,")"
GetUnitAttacksEnabledIndexHint="[UjAPI]  GetUnitAttacksEnabledIndex takes unit whichUnit returns integer"


GetUnitArmourType=GetUnitArmourType
GetUnitArmourType="GetUnitArmourType(",~whichUnit,")"
GetUnitArmourTypeHint="[UjAPI]  GetUnitArmourType takes unit whichUnit returns defensetype"


GetUnitArmour=GetUnitArmour
GetUnitArmour="GetUnitArmour(",~whichUnit,")"
GetUnitArmourHint="[UjAPI]  GetUnitArmour takes unit whichUnit returns real"


GetUnitTimeScale=GetUnitTimeScale
GetUnitTimeScale="GetUnitTimeScale(",~whichUnit,")"
GetUnitTimeScaleHint="[UjAPI]  GetUnitTimeScale takes unit whichUnit returns real"


GetUnitTotalMoveSpeed=GetUnitTotalMoveSpeed
GetUnitTotalMoveSpeed="GetUnitTotalMoveSpeed(",~whichUnit,")"
GetUnitTotalMoveSpeedHint="[UjAPI]  GetUnitTotalMoveSpeed takes unit whichUnit returns real"


GetUnitBaseMoveSpeed=GetUnitBaseMoveSpeed
GetUnitBaseMoveSpeed="GetUnitBaseMoveSpeed(",~whichUnit,")"
GetUnitBaseMoveSpeedHint="[UjAPI]  GetUnitBaseMoveSpeed takes unit whichUnit returns real"


GetUnitBonusMoveSpeedPercent=GetUnitBonusMoveSpeedPercent
GetUnitBonusMoveSpeedPercent="GetUnitBonusMoveSpeedPercent(",~whichUnit,")"
GetUnitBonusMoveSpeedPercentHint="[UjAPI]  GetUnitBonusMoveSpeedPercent takes unit whichUnit returns real"


GetUnitPlayerColour=GetUnitPlayerColour
GetUnitPlayerColour="GetUnitPlayerColour(",~whichUnit,")"
GetUnitPlayerColourHint="[UjAPI]  GetUnitPlayerColour takes unit whichUnit returns playercolor"


GetUnitVertexColour=GetUnitVertexColour
GetUnitVertexColour="GetUnitVertexColour(",~whichUnit,")"
GetUnitVertexColourHint="[UjAPI]  GetUnitVertexColour takes unit whichUnit returns integer"


UnitAddItemToSlot=UnitAddItemToSlot
UnitAddItemToSlot="UnitAddItemToSlot(",~whichUnit,", ",~whichItem,", ",~itemSlot,")"
UnitAddItemToSlotHint="[UjAPI]  UnitAddItemToSlot takes unit whichUnit, item whichItem, integer itemSlot returns boolean"


ReviveUnit=ReviveUnit
ReviveUnit="ReviveUnit(",~whichUnit,", ",~x,", ",~y,")"
ReviveUnitHint="[UjAPI]  ReviveUnit takes unit whichUnit, real x, real y returns boolean"


ReviveUnitLoc=ReviveUnitLoc
ReviveUnitLoc="ReviveUnitLoc(",~whichUnit,", ",~loc,")"
ReviveUnitLocHint="[UjAPI]  ReviveUnitLoc takes unit whichUnit, location loc returns boolean"


GetUnitCurrentLife=GetUnitCurrentLife
GetUnitCurrentLife="GetUnitCurrentLife(",~whichUnit,")"
GetUnitCurrentLifeHint="[UjAPI]  GetUnitCurrentLife takes unit whichUnit returns real"


GetUnitMaxLife=GetUnitMaxLife
GetUnitMaxLife="GetUnitMaxLife(",~whichUnit,")"
GetUnitMaxLifeHint="[UjAPI]  GetUnitMaxLife takes unit whichUnit returns real"


GetUnitLifeRegen=GetUnitLifeRegen
GetUnitLifeRegen="GetUnitLifeRegen(",~whichUnit,")"
GetUnitLifeRegenHint="[UjAPI]  GetUnitLifeRegen takes unit whichUnit returns real"


GetUnitCurrentMana=GetUnitCurrentMana
GetUnitCurrentMana="GetUnitCurrentMana(",~whichUnit,")"
GetUnitCurrentManaHint="[UjAPI]  GetUnitCurrentMana takes unit whichUnit returns real"


GetUnitMaxMana=GetUnitMaxMana
GetUnitMaxMana="GetUnitMaxMana(",~whichUnit,")"
GetUnitMaxManaHint="[UjAPI]  GetUnitMaxMana takes unit whichUnit returns real"


GetUnitManaRegen=GetUnitManaRegen
GetUnitManaRegen="GetUnitManaRegen(",~whichUnit,")"
GetUnitManaRegenHint="[UjAPI]  GetUnitManaRegen takes unit whichUnit returns real"


GetHeroPrimaryAttribute=GetHeroPrimaryAttribute
GetHeroPrimaryAttribute="GetHeroPrimaryAttribute(",~whichUnit,")"
GetHeroPrimaryAttributeHint="[UjAPI]  GetHeroPrimaryAttribute takes unit whichUnit returns heroattribute"


GetUnitModel=GetUnitModel
GetUnitModel="GetUnitModel(",~whichUnit,")"
GetUnitModelHint="[UjAPI]  GetUnitModel takes unit whichUnit returns string"


GetUnitCollisionType=GetUnitCollisionType
GetUnitCollisionType="GetUnitCollisionType(",~whichUnit,")"
GetUnitCollisionTypeHint="[UjAPI]  GetUnitCollisionType takes unit whichUnit returns collisiontype"


GetUnitPathingAIType=GetUnitPathingAIType
GetUnitPathingAIType="GetUnitPathingAIType(",~whichUnit,")"
GetUnitPathingAITypeHint="[UjAPI]  GetUnitPathingAIType takes unit whichUnit returns pathingaitype"


GetUnitPathingType=GetUnitPathingType
GetUnitPathingType="GetUnitPathingType(",~whichUnit,")"
GetUnitPathingTypeHint="[UjAPI]  GetUnitPathingType takes unit whichUnit returns pathingtype"


GetUnitItemSlots=GetUnitItemSlots
GetUnitItemSlots="GetUnitItemSlots(",~whichUnit,")"
GetUnitItemSlotsHint="[UjAPI]  GetUnitItemSlots takes unit whichUnit returns integer"


GetUnitMinimapX=GetUnitMinimapX
GetUnitMinimapX="GetUnitMinimapX(",~whichUnit,")"
GetUnitMinimapXHint="[UjAPI]  GetUnitMinimapX takes unit whichUnit returns real"


GetUnitMinimapY=GetUnitMinimapY
GetUnitMinimapY="GetUnitMinimapY(",~whichUnit,")"
GetUnitMinimapYHint="[UjAPI]  GetUnitMinimapY takes unit whichUnit returns real"


GetUnitRallyPointX=GetUnitRallyPointX
GetUnitRallyPointX="GetUnitRallyPointX(",~whichUnit,")"
GetUnitRallyPointXHint="[UjAPI]  GetUnitRallyPointX takes unit whichUnit returns real"


GetUnitRallyPointY=GetUnitRallyPointY
GetUnitRallyPointY="GetUnitRallyPointY(",~whichUnit,")"
GetUnitRallyPointYHint="[UjAPI]  GetUnitRallyPointY takes unit whichUnit returns real"


GetHeroMaxLevelExperienceNeeded=GetHeroMaxLevelExperienceNeeded
GetHeroMaxLevelExperienceNeeded="GetHeroMaxLevelExperienceNeeded(",~whichUnit,")"
GetHeroMaxLevelExperienceNeededHint="[UjAPI]  GetHeroMaxLevelExperienceNeeded takes unit whichUnit returns integer"


GetHeroExperienceNeeded=GetHeroExperienceNeeded
GetHeroExperienceNeeded="GetHeroExperienceNeeded(",~whichUnit,", ",~forLevel,")"
GetHeroExperienceNeededHint="[UjAPI]  GetHeroExperienceNeeded takes unit whichUnit, integer forLevel returns integer"


GetUnitStunCounter=GetUnitStunCounter
GetUnitStunCounter="GetUnitStunCounter(",~whichUnit,")"
GetUnitStunCounterHint="[UjAPI]  GetUnitStunCounter takes unit whichUnit returns integer"


GetUnitTarget=GetUnitTarget
GetUnitTarget="GetUnitTarget(",~whichUnit,")"
GetUnitTargetHint="[UjAPI]  GetUnitTarget takes unit whichUnit returns widget"


GetUnitTargetUnit=GetUnitTargetUnit
GetUnitTargetUnit="GetUnitTargetUnit(",~whichUnit,")"
GetUnitTargetUnitHint="[UjAPI]  GetUnitTargetUnit takes unit whichUnit returns unit"


GetUnitTargetItem=GetUnitTargetItem
GetUnitTargetItem="GetUnitTargetItem(",~whichUnit,")"
GetUnitTargetItemHint="[UjAPI]  GetUnitTargetItem takes unit whichUnit returns item"


GetUnitTargetDestructable=GetUnitTargetDestructable
GetUnitTargetDestructable="GetUnitTargetDestructable(",~whichUnit,")"
GetUnitTargetDestructableHint="[UjAPI]  GetUnitTargetDestructable takes unit whichUnit returns destructable"


MorphUnitToTypeIdEx=MorphUnitToTypeIdEx
MorphUnitToTypeIdEx="MorphUnitToTypeIdEx(",~whichUnit,", ",~uid,", ",~unitFlags,", ",~updateHealthState,", ",~updateManaState,", ",~healthStateId,", ",~manaStateId,", ",~updateScale,", ",~replaceAbilities,", ",~whichAbility,", ",~resetBuildingAnimation,")"
MorphUnitToTypeIdExHint="[UjAPI]  MorphUnitToTypeIdEx takes unit whichUnit, integer uid, integer unitFlags, boolean updateHealthState, boolean updateManaState, integer healthStateId, integer manaStateId, boolean updateScale, boolean replaceAbilities, ability whichAbility, boolean resetBuildingAnimation returns nothing"


MorphUnitToTypeId=MorphUnitToTypeId
MorphUnitToTypeId="MorphUnitToTypeId(",~whichUnit,", ",~uid,")"
MorphUnitToTypeIdHint="[UjAPI]  MorphUnitToTypeId takes unit whichUnit, integer uid returns nothing"


GetUnitModelObjectX=GetUnitModelObjectX
GetUnitModelObjectX="GetUnitModelObjectX(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectXHint="[UjAPI]  GetUnitModelObjectX takes unit whichUnit, string whichObject returns real"


GetUnitModelObjectY=GetUnitModelObjectY
GetUnitModelObjectY="GetUnitModelObjectY(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectYHint="[UjAPI]  GetUnitModelObjectY takes unit whichUnit, string whichObject returns real"


GetUnitModelObjectZ=GetUnitModelObjectZ
GetUnitModelObjectZ="GetUnitModelObjectZ(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectZHint="[UjAPI]  GetUnitModelObjectZ takes unit whichUnit, string whichObject returns real"


GetUnitModelObjectPositionLoc=GetUnitModelObjectPositionLoc
GetUnitModelObjectPositionLoc="GetUnitModelObjectPositionLoc(",~whichUnit,", ",~whichObject,")"
GetUnitModelObjectPositionLocHint="[UjAPI]  GetUnitModelObjectPositionLoc takes unit whichUnit, string whichObject returns location"


GetUnitCurrentAnimationId=GetUnitCurrentAnimationId
GetUnitCurrentAnimationId="GetUnitCurrentAnimationId(",~whichUnit,")"
GetUnitCurrentAnimationIdHint="[UjAPI]  GetUnitCurrentAnimationId takes unit whichUnit returns integer"


GetUnitCurrentAnimationName=GetUnitCurrentAnimationName
GetUnitCurrentAnimationName="GetUnitCurrentAnimationName(",~whichUnit,")"
GetUnitCurrentAnimationNameHint="[UjAPI]  GetUnitCurrentAnimationName takes unit whichUnit returns string"


GetUnitAnimationOffsetPercent=GetUnitAnimationOffsetPercent
GetUnitAnimationOffsetPercent="GetUnitAnimationOffsetPercent(",~whichUnit,")"
GetUnitAnimationOffsetPercentHint="[UjAPI]  GetUnitAnimationOffsetPercent takes unit whichUnit returns real"


IsUnitAutoOrientationEnabled=IsUnitAutoOrientationEnabled
IsUnitAutoOrientationEnabled="IsUnitAutoOrientationEnabled(",~whichUnit,")"
IsUnitAutoOrientationEnabledHint="[UjAPI]  IsUnitAutoOrientationEnabled takes unit whichUnit returns boolean"


GetUnitYaw=GetUnitYaw
GetUnitYaw="GetUnitYaw(",~whichUnit,")"
GetUnitYawHint="[UjAPI]  GetUnitYaw takes unit whichUnit returns real"


GetUnitPitch=GetUnitPitch
GetUnitPitch="GetUnitPitch(",~whichUnit,")"
GetUnitPitchHint="[UjAPI]  GetUnitPitch takes unit whichUnit returns real"


GetUnitRoll=GetUnitRoll
GetUnitRoll="GetUnitRoll(",~whichUnit,")"
GetUnitRollHint="[UjAPI]  GetUnitRoll takes unit whichUnit returns real"


CreateBuilding=CreateBuilding
CreateBuilding="CreateBuilding(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateBuildingHint="[UjAPI]  CreateBuilding takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"


CreateBuildingEx=CreateBuildingEx
CreateBuildingEx="CreateBuildingEx(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,", ",~isAutoBuild,", ",~workersCanAssist,")"
CreateBuildingExHint="[UjAPI]  CreateBuildingEx takes player whichPlayer, integer unitTypeId, real x, real y, real facing, boolean isAutoBuild, boolean workersCanAssist returns unit"


UnitGetConstructionProgress=UnitGetConstructionProgress
UnitGetConstructionProgress="UnitGetConstructionProgress(",~whichUnit,")"
UnitGetConstructionProgressHint="[UjAPI]  UnitGetConstructionProgress takes unit whichUnit returns real"


UnitGetConstructionRemainingTime=UnitGetConstructionRemainingTime
UnitGetConstructionRemainingTime="UnitGetConstructionRemainingTime(",~whichUnit,")"
UnitGetConstructionRemainingTimeHint="[UjAPI]  UnitGetConstructionRemainingTime takes unit whichUnit returns real"


UnitGetUpgradeProgress=UnitGetUpgradeProgress
UnitGetUpgradeProgress="UnitGetUpgradeProgress(",~whichUnit,")"
UnitGetUpgradeProgressHint="[UjAPI]  UnitGetUpgradeProgress takes unit whichUnit returns real"


UnitGetUpgradeRemainingTime=UnitGetUpgradeRemainingTime
UnitGetUpgradeRemainingTime="UnitGetUpgradeRemainingTime(",~whichUnit,")"
UnitGetUpgradeRemainingTimeHint="[UjAPI]  UnitGetUpgradeRemainingTime takes unit whichUnit returns real"


UnitGetTrainingProgress=UnitGetTrainingProgress
UnitGetTrainingProgress="UnitGetTrainingProgress(",~whichUnit,")"
UnitGetTrainingProgressHint="[UjAPI]  UnitGetTrainingProgress takes unit whichUnit returns real"


UnitGetTrainingRemainingTime=UnitGetTrainingRemainingTime
UnitGetTrainingRemainingTime="UnitGetTrainingRemainingTime(",~whichUnit,")"
UnitGetTrainingRemainingTimeHint="[UjAPI]  UnitGetTrainingRemainingTime takes unit whichUnit returns real"


UnitGetTrainingTypeIdAt=UnitGetTrainingTypeIdAt
UnitGetTrainingTypeIdAt="UnitGetTrainingTypeIdAt(",~whichUnit,", ",~index,")"
UnitGetTrainingTypeIdAtHint="[UjAPI]  UnitGetTrainingTypeIdAt takes unit whichUnit, integer index returns integer"


UnitGetResearchProgress=UnitGetResearchProgress
UnitGetResearchProgress="UnitGetResearchProgress(",~whichUnit,")"
UnitGetResearchProgressHint="[UjAPI]  UnitGetResearchProgress takes unit whichUnit returns real"


UnitGetResearchRemainingTime=UnitGetResearchRemainingTime
UnitGetResearchRemainingTime="UnitGetResearchRemainingTime(",~whichUnit,")"
UnitGetResearchRemainingTimeHint="[UjAPI]  UnitGetResearchRemainingTime takes unit whichUnit returns real"


UnitGetResearchTypeIdAt=UnitGetResearchTypeIdAt
UnitGetResearchTypeIdAt="UnitGetResearchTypeIdAt(",~whichUnit,", ",~index,")"
UnitGetResearchTypeIdAtHint="[UjAPI]  UnitGetResearchTypeIdAt takes unit whichUnit, integer index returns integer"


CreateIllusion=CreateIllusion
CreateIllusion="CreateIllusion(",~whichPlayer,", ",~unitTypeId,", ",~x,", ",~y,", ",~facing,")"
CreateIllusionHint="[UjAPI]  CreateIllusion takes player whichPlayer, integer unitTypeId, real x, real y, real facing returns unit"


CreateIllusionAtLoc=CreateIllusionAtLoc
CreateIllusionAtLoc="CreateIllusionAtLoc(",~whichPlayer,", ",~unitTypeId,", ",~whichLocation,", ",~facing,")"
CreateIllusionAtLocHint="[UjAPI]  CreateIllusionAtLoc takes player whichPlayer, integer unitTypeId, location whichLocation, real facing returns unit"


CreateIllusionFromUnit=CreateIllusionFromUnit
CreateIllusionFromUnit="CreateIllusionFromUnit(",~whichUnit,")"
CreateIllusionFromUnitHint="[UjAPI]  CreateIllusionFromUnit takes unit whichUnit returns unit"


CreateIllusionFromUnitEx=CreateIllusionFromUnitEx
CreateIllusionFromUnitEx="CreateIllusionFromUnitEx(",~whichUnit,", ",~copyPassives,")"
CreateIllusionFromUnitExHint="[UjAPI]  CreateIllusionFromUnitEx takes unit whichUnit, boolean copyPassives returns unit"


GetIllusionDamageDealt=GetIllusionDamageDealt
GetIllusionDamageDealt="GetIllusionDamageDealt(",~whichUnit,")"
GetIllusionDamageDealtHint="[UjAPI]  GetIllusionDamageDealt takes unit whichUnit returns real"


GetIllusionDamageReceived=GetIllusionDamageReceived
GetIllusionDamageReceived="GetIllusionDamageReceived(",~whichUnit,")"
GetIllusionDamageReceivedHint="[UjAPI]  GetIllusionDamageReceived takes unit whichUnit returns real"


QueueImmediateOrderById=QueueImmediateOrderById
QueueImmediateOrderById="QueueImmediateOrderById(",~whichUnit,", ",~order,")"
QueueImmediateOrderByIdHint="[UjAPI]  QueueImmediateOrderById takes unit whichUnit, integer order returns boolean"


QueuePointOrderById=QueuePointOrderById
QueuePointOrderById="QueuePointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,")"
QueuePointOrderByIdHint="[UjAPI]  QueuePointOrderById takes unit whichUnit, integer order, real x, real y returns boolean"


QueueTargetOrderById=QueueTargetOrderById
QueueTargetOrderById="QueueTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,")"
QueueTargetOrderByIdHint="[UjAPI]  QueueTargetOrderById takes unit whichUnit, integer order, widget targetWidget returns boolean"


QueueInstantPointOrderById=QueueInstantPointOrderById
QueueInstantPointOrderById="QueueInstantPointOrderById(",~whichUnit,", ",~order,", ",~x,", ",~y,", ",~instantTargetWidget,")"
QueueInstantPointOrderByIdHint="[UjAPI]  QueueInstantPointOrderById takes unit whichUnit, integer order, real x, real y, widget instantTargetWidget returns boolean"


QueueInstantTargetOrderById=QueueInstantTargetOrderById
QueueInstantTargetOrderById="QueueInstantTargetOrderById(",~whichUnit,", ",~order,", ",~targetWidget,", ",~instantTargetWidget,")"
QueueInstantTargetOrderByIdHint="[UjAPI]  QueueInstantTargetOrderById takes unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget returns boolean"


QueueBuildOrderById=QueueBuildOrderById
QueueBuildOrderById="QueueBuildOrderById(",~whichPeon,", ",~unitId,", ",~x,", ",~y,")"
QueueBuildOrderByIdHint="[UjAPI]  QueueBuildOrderById takes unit whichPeon, integer unitId, real x, real y returns boolean"


QueueNeutralImmediateOrderById=QueueNeutralImmediateOrderById
QueueNeutralImmediateOrderById="QueueNeutralImmediateOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,")"
QueueNeutralImmediateOrderByIdHint="[UjAPI]  QueueNeutralImmediateOrderById takes player whichPlayer, unit neutralStructure, integer unitId returns boolean"


QueueNeutralPointOrderById=QueueNeutralPointOrderById
QueueNeutralPointOrderById="QueueNeutralPointOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~x,", ",~y,")"
QueueNeutralPointOrderByIdHint="[UjAPI]  QueueNeutralPointOrderById takes player whichPlayer, unit neutralStructure, integer unitId, real x, real y returns boolean"


QueueNeutralTargetOrderById=QueueNeutralTargetOrderById
QueueNeutralTargetOrderById="QueueNeutralTargetOrderById(",~whichPlayer,", ",~neutralStructure,", ",~unitId,", ",~target,")"
QueueNeutralTargetOrderByIdHint="[UjAPI]  QueueNeutralTargetOrderById takes player whichPlayer, unit neutralStructure, integer unitId, widget target returns boolean"


GetUnitOrderCount=GetUnitOrderCount
GetUnitOrderCount="GetUnitOrderCount(",~whichUnit,")"
GetUnitOrderCountHint="[UjAPI]  GetUnitOrderCount takes unit whichUnit returns integer"


GetUnitOrderByIndex=GetUnitOrderByIndex
GetUnitOrderByIndex="GetUnitOrderByIndex(",~whichUnit,", ",~index,")"
GetUnitOrderByIndexHint="[UjAPI]  GetUnitOrderByIndex takes unit whichUnit, integer index returns orderhandle"


GetUnitOrderByOrderId=GetUnitOrderByOrderId
GetUnitOrderByOrderId="GetUnitOrderByOrderId(",~whichUnit,", ",~orderId,", ",~index,")"
GetUnitOrderByOrderIdHint="[UjAPI]  GetUnitOrderByOrderId takes unit whichUnit, integer orderId, integer index returns orderhandle"


GetUnitOrderIdByIndex=GetUnitOrderIdByIndex
GetUnitOrderIdByIndex="GetUnitOrderIdByIndex(",~whichUnit,", ",~index,")"
GetUnitOrderIdByIndexHint="[UjAPI]  GetUnitOrderIdByIndex takes unit whichUnit, integer index returns integer"


UnitRemoveOrderByIndex=UnitRemoveOrderByIndex
UnitRemoveOrderByIndex="UnitRemoveOrderByIndex(",~whichUnit,", ",~index,")"
UnitRemoveOrderByIndexHint="[UjAPI]  UnitRemoveOrderByIndex takes unit whichUnit, integer index returns boolean"


UnitRemoveOrderByOrderId=UnitRemoveOrderByOrderId
UnitRemoveOrderByOrderId="UnitRemoveOrderByOrderId(",~whichUnit,", ",~orderId,", ",~eraseAllSimilar,")"
UnitRemoveOrderByOrderIdHint="[UjAPI]  UnitRemoveOrderByOrderId takes unit whichUnit, integer orderId, boolean eraseAllSimilar returns boolean"


GetTriggerOrder=GetTriggerOrder
GetTriggerOrder="GetTriggerOrder(",")"
GetTriggerOrderHint="[UjAPI]  GetTriggerOrder takes nothing returns orderhandle"


OrderGetNext=OrderGetNext
OrderGetNext="OrderGetNext(",~whichOrder,")"
OrderGetNextHint="[UjAPI]  OrderGetNext takes orderhandle whichOrder returns orderhandle"


OrderGetId=OrderGetId
OrderGetId="OrderGetId(",~whichOrder,")"
OrderGetIdHint="[UjAPI]  OrderGetId takes orderhandle whichOrder returns integer"


OrderGetTargetX=OrderGetTargetX
OrderGetTargetX="OrderGetTargetX(",~whichOrder,")"
OrderGetTargetXHint="[UjAPI]  OrderGetTargetX takes orderhandle whichOrder returns real"


OrderGetTargetY=OrderGetTargetY
OrderGetTargetY="OrderGetTargetY(",~whichOrder,")"
OrderGetTargetYHint="[UjAPI]  OrderGetTargetY takes orderhandle whichOrder returns real"


OrderGetTargetLoc=OrderGetTargetLoc
OrderGetTargetLoc="OrderGetTargetLoc(",~whichOrder,")"
OrderGetTargetLocHint="[UjAPI]  OrderGetTargetLoc takes orderhandle whichOrder returns location"


OrderGetSourceX=OrderGetSourceX
OrderGetSourceX="OrderGetSourceX(",~whichOrder,")"
OrderGetSourceXHint="[UjAPI]  OrderGetSourceX takes orderhandle whichOrder returns real"


OrderGetSourceY=OrderGetSourceY
OrderGetSourceY="OrderGetSourceY(",~whichOrder,")"
OrderGetSourceYHint="[UjAPI]  OrderGetSourceY takes orderhandle whichOrder returns real"


OrderGetSourceLoc=OrderGetSourceLoc
OrderGetSourceLoc="OrderGetSourceLoc(",~whichOrder,")"
OrderGetSourceLocHint="[UjAPI]  OrderGetSourceLoc takes orderhandle whichOrder returns location"


OrderGetTarget=OrderGetTarget
OrderGetTarget="OrderGetTarget(",~whichOrder,")"
OrderGetTargetHint="[UjAPI]  OrderGetTarget takes orderhandle whichOrder returns widget"


OrderGetTargetDestructable=OrderGetTargetDestructable
OrderGetTargetDestructable="OrderGetTargetDestructable(",~whichOrder,")"
OrderGetTargetDestructableHint="[UjAPI]  OrderGetTargetDestructable takes orderhandle whichOrder returns destructable"


OrderGetTargetItem=OrderGetTargetItem
OrderGetTargetItem="OrderGetTargetItem(",~whichOrder,")"
OrderGetTargetItemHint="[UjAPI]  OrderGetTargetItem takes orderhandle whichOrder returns item"


OrderGetTargetUnit=OrderGetTargetUnit
OrderGetTargetUnit="OrderGetTargetUnit(",~whichOrder,")"
OrderGetTargetUnitHint="[UjAPI]  OrderGetTargetUnit takes orderhandle whichOrder returns unit"


CreateProjectile=CreateProjectile
CreateProjectile="CreateProjectile(",~projectileTypeId,")"
CreateProjectileHint="[UjAPI]  CreateProjectile takes integer projectileTypeId returns projectile"


CreateProjectileEx=CreateProjectileEx
CreateProjectileEx="CreateProjectileEx(",~owner,", ",~projectileTypeId,", ",~attackIndex,")"
CreateProjectileExHint="[UjAPI]  CreateProjectileEx takes unit owner, integer projectileTypeId, integer attackIndex returns projectile"


GetProjectileSprite=GetProjectileSprite
GetProjectileSprite="GetProjectileSprite(",~whichProjectile,")"
GetProjectileSpriteHint="[UjAPI]  GetProjectileSprite takes projectile whichProjectile returns sprite"


IsProjectileType=IsProjectileType
IsProjectileType="IsProjectileType(",~whichProjectile,", ",~whichType,")"
IsProjectileTypeHint="[UjAPI]  IsProjectileType takes projectile whichProjectile, projectiletype whichType returns boolean"


IsProjectileAlive=IsProjectileAlive
IsProjectileAlive="IsProjectileAlive(",~whichProjectile,")"
IsProjectileAliveHint="[UjAPI]  IsProjectileAlive takes projectile whichProjectile returns boolean"


IsProjectileVisible=IsProjectileVisible
IsProjectileVisible="IsProjectileVisible(",~whichProjectile,")"
IsProjectileVisibleHint="[UjAPI]  IsProjectileVisible takes projectile whichProjectile returns boolean"


GetProjectileX=GetProjectileX
GetProjectileX="GetProjectileX(",~whichProjectile,")"
GetProjectileXHint="[UjAPI]  GetProjectileX takes projectile whichProjectile returns real"


GetProjectileY=GetProjectileY
GetProjectileY="GetProjectileY(",~whichProjectile,")"
GetProjectileYHint="[UjAPI]  GetProjectileY takes projectile whichProjectile returns real"


GetProjectileZ=GetProjectileZ
GetProjectileZ="GetProjectileZ(",~whichProjectile,")"
GetProjectileZHint="[UjAPI]  GetProjectileZ takes projectile whichProjectile returns real"


GetProjectileScreenX=GetProjectileScreenX
GetProjectileScreenX="GetProjectileScreenX(",~whichProjectile,")"
GetProjectileScreenXHint="[UjAPI]  GetProjectileScreenX takes projectile whichProjectile returns real"


GetProjectileScreenY=GetProjectileScreenY
GetProjectileScreenY="GetProjectileScreenY(",~whichProjectile,")"
GetProjectileScreenYHint="[UjAPI]  GetProjectileScreenY takes projectile whichProjectile returns real"


GetProjectileHeight=GetProjectileHeight
GetProjectileHeight="GetProjectileHeight(",~whichProjectile,")"
GetProjectileHeightHint="[UjAPI]  GetProjectileHeight takes projectile whichProjectile returns real"


GetProjectilePositionLoc=GetProjectilePositionLoc
GetProjectilePositionLoc="GetProjectilePositionLoc(",~whichProjectile,")"
GetProjectilePositionLocHint="[UjAPI]  GetProjectilePositionLoc takes projectile whichProjectile returns location"


GetProjectileScale=GetProjectileScale
GetProjectileScale="GetProjectileScale(",~whichProjectile,")"
GetProjectileScaleHint="[UjAPI]  GetProjectileScale takes projectile whichProjectile returns real"


GetProjectileTimeScale=GetProjectileTimeScale
GetProjectileTimeScale="GetProjectileTimeScale(",~whichProjectile,")"
GetProjectileTimeScaleHint="[UjAPI]  GetProjectileTimeScale takes projectile whichProjectile returns real"


GetProjectilePlayerColour=GetProjectilePlayerColour
GetProjectilePlayerColour="GetProjectilePlayerColour(",~whichProjectile,")"
GetProjectilePlayerColourHint="[UjAPI]  GetProjectilePlayerColour takes projectile whichProjectile returns playercolor"


GetProjectileColour=GetProjectileColour
GetProjectileColour="GetProjectileColour(",~whichProjectile,")"
GetProjectileColourHint="[UjAPI]  GetProjectileColour takes projectile whichProjectile returns integer"


GetProjectileYaw=GetProjectileYaw
GetProjectileYaw="GetProjectileYaw(",~whichProjectile,")"
GetProjectileYawHint="[UjAPI]  GetProjectileYaw takes projectile whichProjectile returns real"


GetProjectileFacing=GetProjectileFacing
GetProjectileFacing="GetProjectileFacing(",~whichProjectile,")"
GetProjectileFacingHint="[UjAPI]  GetProjectileFacing takes projectile whichProjectile returns real"


GetProjectilePitch=GetProjectilePitch
GetProjectilePitch="GetProjectilePitch(",~whichProjectile,")"
GetProjectilePitchHint="[UjAPI]  GetProjectilePitch takes projectile whichProjectile returns real"


GetProjectileRoll=GetProjectileRoll
GetProjectileRoll="GetProjectileRoll(",~whichProjectile,")"
GetProjectileRollHint="[UjAPI]  GetProjectileRoll takes projectile whichProjectile returns real"


GetProjectileModel=GetProjectileModel
GetProjectileModel="GetProjectileModel(",~whichProjectile,")"
GetProjectileModelHint="[UjAPI]  GetProjectileModel takes projectile whichProjectile returns string"


GetProjectileModelObjectX=GetProjectileModelObjectX
GetProjectileModelObjectX="GetProjectileModelObjectX(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectXHint="[UjAPI]  GetProjectileModelObjectX takes projectile whichProjectile, string whichObject returns real"


GetProjectileModelObjectY=GetProjectileModelObjectY
GetProjectileModelObjectY="GetProjectileModelObjectY(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectYHint="[UjAPI]  GetProjectileModelObjectY takes projectile whichProjectile, string whichObject returns real"


GetProjectileModelObjectZ=GetProjectileModelObjectZ
GetProjectileModelObjectZ="GetProjectileModelObjectZ(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectZHint="[UjAPI]  GetProjectileModelObjectZ takes projectile whichProjectile, string whichObject returns real"


GetProjectileModelObjectPositionLoc=GetProjectileModelObjectPositionLoc
GetProjectileModelObjectPositionLoc="GetProjectileModelObjectPositionLoc(",~whichProjectile,", ",~whichObject,")"
GetProjectileModelObjectPositionLocHint="[UjAPI]  GetProjectileModelObjectPositionLoc takes projectile whichProjectile, string whichObject returns location"


GetProjectileCurrentAnimationId=GetProjectileCurrentAnimationId
GetProjectileCurrentAnimationId="GetProjectileCurrentAnimationId(",~whichProjectile,")"
GetProjectileCurrentAnimationIdHint="[UjAPI]  GetProjectileCurrentAnimationId takes projectile whichProjectile returns integer"


GetProjectileCurrentAnimationName=GetProjectileCurrentAnimationName
GetProjectileCurrentAnimationName="GetProjectileCurrentAnimationName(",~whichProjectile,")"
GetProjectileCurrentAnimationNameHint="[UjAPI]  GetProjectileCurrentAnimationName takes projectile whichProjectile returns string"


GetProjectileAnimationOffsetPercent=GetProjectileAnimationOffsetPercent
GetProjectileAnimationOffsetPercent="GetProjectileAnimationOffsetPercent(",~whichProjectile,")"
GetProjectileAnimationOffsetPercentHint="[UjAPI]  GetProjectileAnimationOffsetPercent takes projectile whichProjectile returns real"


GetProjectileSource=GetProjectileSource
GetProjectileSource="GetProjectileSource(",~whichProjectile,")"
GetProjectileSourceHint="[UjAPI]  GetProjectileSource takes projectile whichProjectile returns unit"


GetProjectileSourceAbility=GetProjectileSourceAbility
GetProjectileSourceAbility="GetProjectileSourceAbility(",~whichProjectile,")"
GetProjectileSourceAbilityHint="[UjAPI]  GetProjectileSourceAbility takes projectile whichProjectile returns ability"


GetProjectileTargetX=GetProjectileTargetX
GetProjectileTargetX="GetProjectileTargetX(",~whichProjectile,")"
GetProjectileTargetXHint="[UjAPI]  GetProjectileTargetX takes projectile whichProjectile returns real"


GetProjectileTargetY=GetProjectileTargetY
GetProjectileTargetY="GetProjectileTargetY(",~whichProjectile,")"
GetProjectileTargetYHint="[UjAPI]  GetProjectileTargetY takes projectile whichProjectile returns real"


GetProjectileTargetZ=GetProjectileTargetZ
GetProjectileTargetZ="GetProjectileTargetZ(",~whichProjectile,")"
GetProjectileTargetZHint="[UjAPI]  GetProjectileTargetZ takes projectile whichProjectile returns real"


GetProjectileTargetPositionLoc=GetProjectileTargetPositionLoc
GetProjectileTargetPositionLoc="GetProjectileTargetPositionLoc(",~whichProjectile,")"
GetProjectileTargetPositionLocHint="[UjAPI]  GetProjectileTargetPositionLoc takes projectile whichProjectile returns location"


GetProjectileTarget=GetProjectileTarget
GetProjectileTarget="GetProjectileTarget(",~whichProjectile,")"
GetProjectileTargetHint="[UjAPI]  GetProjectileTarget takes projectile whichProjectile returns widget"


GetProjectileTargetUnit=GetProjectileTargetUnit
GetProjectileTargetUnit="GetProjectileTargetUnit(",~whichProjectile,")"
GetProjectileTargetUnitHint="[UjAPI]  GetProjectileTargetUnit takes projectile whichProjectile returns unit"


GetProjectileTargetItem=GetProjectileTargetItem
GetProjectileTargetItem="GetProjectileTargetItem(",~whichProjectile,")"
GetProjectileTargetItemHint="[UjAPI]  GetProjectileTargetItem takes projectile whichProjectile returns item"


GetProjectileTargetDestructable=GetProjectileTargetDestructable
GetProjectileTargetDestructable="GetProjectileTargetDestructable(",~whichProjectile,")"
GetProjectileTargetDestructableHint="[UjAPI]  GetProjectileTargetDestructable takes projectile whichProjectile returns destructable"


GetProjectileAttackType=GetProjectileAttackType
GetProjectileAttackType="GetProjectileAttackType(",~whichProjectile,")"
GetProjectileAttackTypeHint="[UjAPI]  GetProjectileAttackType takes projectile whichProjectile returns attacktype"


GetProjectileDamage=GetProjectileDamage
GetProjectileDamage="GetProjectileDamage(",~whichProjectile,")"
GetProjectileDamageHint="[UjAPI]  GetProjectileDamage takes projectile whichProjectile returns real"


GetProjectileAreaOfEffectFullDamage=GetProjectileAreaOfEffectFullDamage
GetProjectileAreaOfEffectFullDamage="GetProjectileAreaOfEffectFullDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectFullDamageHint="[UjAPI]  GetProjectileAreaOfEffectFullDamage takes projectile whichProjectile returns real"


GetProjectileAreaOfEffectMediumDamage=GetProjectileAreaOfEffectMediumDamage
GetProjectileAreaOfEffectMediumDamage="GetProjectileAreaOfEffectMediumDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageHint="[UjAPI]  GetProjectileAreaOfEffectMediumDamage takes projectile whichProjectile returns real"


GetProjectileAreaOfEffectSmallDamage=GetProjectileAreaOfEffectSmallDamage
GetProjectileAreaOfEffectSmallDamage="GetProjectileAreaOfEffectSmallDamage(",~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageHint="[UjAPI]  GetProjectileAreaOfEffectSmallDamage takes projectile whichProjectile returns real"


GetProjectileAreaOfEffectMediumDamageFactor=GetProjectileAreaOfEffectMediumDamageFactor
GetProjectileAreaOfEffectMediumDamageFactor="GetProjectileAreaOfEffectMediumDamageFactor(",~whichProjectile,")"
GetProjectileAreaOfEffectMediumDamageFactorHint="[UjAPI]  GetProjectileAreaOfEffectMediumDamageFactor takes projectile whichProjectile returns real"


GetProjectileAreaOfEffectSmallDamageFactor=GetProjectileAreaOfEffectSmallDamageFactor
GetProjectileAreaOfEffectSmallDamageFactor="GetProjectileAreaOfEffectSmallDamageFactor(",~whichProjectile,")"
GetProjectileAreaOfEffectSmallDamageFactorHint="[UjAPI]  GetProjectileAreaOfEffectSmallDamageFactor takes projectile whichProjectile returns real"


GetProjectileSpeed=GetProjectileSpeed
GetProjectileSpeed="GetProjectileSpeed(",~whichProjectile,")"
GetProjectileSpeedHint="[UjAPI]  GetProjectileSpeed takes projectile whichProjectile returns real"


GetProjectileArc=GetProjectileArc
GetProjectileArc="GetProjectileArc(",~whichProjectile,")"
GetProjectileArcHint="[UjAPI]  GetProjectileArc takes projectile whichProjectile returns real"


GetProjectileWeaponType=GetProjectileWeaponType
GetProjectileWeaponType="GetProjectileWeaponType(",~whichProjectile,")"
GetProjectileWeaponTypeHint="[UjAPI]  GetProjectileWeaponType takes projectile whichProjectile returns weapontype"


GetProjectileDamageType=GetProjectileDamageType
GetProjectileDamageType="GetProjectileDamageType(",~whichProjectile,")"
GetProjectileDamageTypeHint="[UjAPI]  GetProjectileDamageType takes projectile whichProjectile returns damagetype"


GetProjectileDamageFlags=GetProjectileDamageFlags
GetProjectileDamageFlags="GetProjectileDamageFlags(",~whichProjectile,")"
GetProjectileDamageFlagsHint="[UjAPI]  GetProjectileDamageFlags takes projectile whichProjectile returns integer"


GetTriggerProjectile=GetTriggerProjectile
GetTriggerProjectile="GetTriggerProjectile(",")"
GetTriggerProjectileHint="[UjAPI]  GetTriggerProjectile takes nothing returns projectile"


GetFilterProjectile=GetFilterProjectile
GetFilterProjectile="GetFilterProjectile(",")"
GetFilterProjectileHint="[UjAPI]  GetFilterProjectile takes nothing returns projectile"


GetEnumProjectile=GetEnumProjectile
GetEnumProjectile="GetEnumProjectile(",")"
GetEnumProjectileHint="[UjAPI]  GetEnumProjectile takes nothing returns projectile"


GetTriggerProjectileSource=GetTriggerProjectileSource
GetTriggerProjectileSource="GetTriggerProjectileSource(",")"
GetTriggerProjectileSourceHint="[UjAPI]  GetTriggerProjectileSource takes nothing returns unit"


GetTriggerProjectileTarget=GetTriggerProjectileTarget
GetTriggerProjectileTarget="GetTriggerProjectileTarget(",")"
GetTriggerProjectileTargetHint="[UjAPI]  GetTriggerProjectileTarget takes nothing returns widget"


GetTriggerProjectileTargetUnit=GetTriggerProjectileTargetUnit
GetTriggerProjectileTargetUnit="GetTriggerProjectileTargetUnit(",")"
GetTriggerProjectileTargetUnitHint="[UjAPI]  GetTriggerProjectileTargetUnit takes nothing returns unit"


GetTriggerProjectileTargetItem=GetTriggerProjectileTargetItem
GetTriggerProjectileTargetItem="GetTriggerProjectileTargetItem(",")"
GetTriggerProjectileTargetItemHint="[UjAPI]  GetTriggerProjectileTargetItem takes nothing returns item"


GetTriggerProjectileTargetDestructable=GetTriggerProjectileTargetDestructable
GetTriggerProjectileTargetDestructable="GetTriggerProjectileTargetDestructable(",")"
GetTriggerProjectileTargetDestructableHint="[UjAPI]  GetTriggerProjectileTargetDestructable takes nothing returns destructable"


GetOriginFrame=GetOriginFrame
GetOriginFrame="GetOriginFrame(",~whichType,", ",~index,")"
GetOriginFrameHint="[UjAPI]  GetOriginFrame takes originframetype whichType, integer index returns framehandle"


LoadTOCFile=LoadTOCFile
LoadTOCFile="LoadTOCFile(",~TOCFile,")"
LoadTOCFileHint="[UjAPI]  LoadTOCFile takes string TOCFile returns boolean"


CreateFrame=CreateFrame
CreateFrame="CreateFrame(",~templateName,", ",~whichParent,", ",~priority,", ",~createContext,")"
CreateFrameHint="[UjAPI]  CreateFrame takes string templateName, framehandle whichParent, integer priority, integer createContext returns framehandle"


CreateSimpleFrame=CreateSimpleFrame
CreateSimpleFrame="CreateSimpleFrame(",~templateName,", ",~whichParent,", ",~createContext,")"
CreateSimpleFrameHint="[UjAPI]  CreateSimpleFrame takes string templateName, framehandle whichParent, integer createContext returns framehandle"


CreateSimpleGlueFrame=CreateSimpleGlueFrame
CreateSimpleGlueFrame="CreateSimpleGlueFrame(",~whichSimpleParent,", ",~whichSpriteFrame,")"
CreateSimpleGlueFrameHint="[UjAPI]  CreateSimpleGlueFrame takes framehandle whichSimpleParent, framehandle whichSpriteFrame returns framehandle"


CreateFrameByType=CreateFrameByType
CreateFrameByType="CreateFrameByType(",~frameType,", ",~contextName,", ",~whichParent,", ",~templateName,", ",~createContext,")"
CreateFrameByTypeHint="[UjAPI]  CreateFrameByType takes string frameType, string contextName, framehandle whichParent, string templateName, integer createContext returns framehandle"


IsFrameRegion=IsFrameRegion
IsFrameRegion="IsFrameRegion(",~whichFrame,")"
IsFrameRegionHint="[UjAPI]  IsFrameRegion takes framehandle whichFrame returns boolean"


IsFrameSimple=IsFrameSimple
IsFrameSimple="IsFrameSimple(",~whichFrame,")"
IsFrameSimpleHint="[UjAPI]  IsFrameSimple takes framehandle whichFrame returns boolean"


IsFrameComplex=IsFrameComplex
IsFrameComplex="IsFrameComplex(",~whichFrame,")"
IsFrameComplexHint="[UjAPI]  IsFrameComplex takes framehandle whichFrame returns boolean"


GetFrameScreenX=GetFrameScreenX
GetFrameScreenX="GetFrameScreenX(",~whichFrame,")"
GetFrameScreenXHint="[UjAPI]  GetFrameScreenX takes framehandle whichFrame returns real"


GetFrameScreenY=GetFrameScreenY
GetFrameScreenY="GetFrameScreenY(",~whichFrame,")"
GetFrameScreenYHint="[UjAPI]  GetFrameScreenY takes framehandle whichFrame returns real"


GetFrameRelativePointParent=GetFrameRelativePointParent
GetFrameRelativePointParent="GetFrameRelativePointParent(",~whichFrame,", ",~point,")"
GetFrameRelativePointParentHint="[UjAPI]  GetFrameRelativePointParent takes framehandle whichFrame, framepointtype point returns framehandle"


GetFrameRelativePointType=GetFrameRelativePointType
GetFrameRelativePointType="GetFrameRelativePointType(",~whichFrame,", ",~point,")"
GetFrameRelativePointTypeHint="[UjAPI]  GetFrameRelativePointType takes framehandle whichFrame, framepointtype point returns framepointtype"


GetFrameRelativePointX=GetFrameRelativePointX
GetFrameRelativePointX="GetFrameRelativePointX(",~whichFrame,", ",~point,")"
GetFrameRelativePointXHint="[UjAPI]  GetFrameRelativePointX takes framehandle whichFrame, framepointtype point returns real"


GetFrameRelativePointY=GetFrameRelativePointY
GetFrameRelativePointY="GetFrameRelativePointY(",~whichFrame,", ",~point,")"
GetFrameRelativePointYHint="[UjAPI]  GetFrameRelativePointY takes framehandle whichFrame, framepointtype point returns real"


GetFrameAbsolutePointX=GetFrameAbsolutePointX
GetFrameAbsolutePointX="GetFrameAbsolutePointX(",~whichFrame,", ",~point,")"
GetFrameAbsolutePointXHint="[UjAPI]  GetFrameAbsolutePointX takes framehandle whichFrame, framepointtype point returns real"


GetFrameAbsolutePointY=GetFrameAbsolutePointY
GetFrameAbsolutePointY="GetFrameAbsolutePointY(",~whichFrame,", ",~point,")"
GetFrameAbsolutePointYHint="[UjAPI]  GetFrameAbsolutePointY takes framehandle whichFrame, framepointtype point returns real"


SetFrameAllPoints=SetFrameAllPoints
SetFrameAllPoints="SetFrameAllPoints(",~whichFrame,", ",~relativeFrame,")"
SetFrameAllPointsHint="[UjAPI]  SetFrameAllPoints takes framehandle whichFrame, framehandle relativeFrame returns boolean"


IsFrameVisible=IsFrameVisible
IsFrameVisible="IsFrameVisible(",~whichFrame,")"
IsFrameVisibleHint="[UjAPI]  IsFrameVisible takes framehandle whichFrame returns boolean"


GetFrameByName=GetFrameByName
GetFrameByName="GetFrameByName(",~frameName,", ",~createContext,")"
GetFrameByNameHint="[UjAPI]  GetFrameByName takes string frameName, integer createContext returns framehandle"


GetCFrameByName=GetCFrameByName
GetCFrameByName="GetCFrameByName(",~frameName,", ",~createContext,")"
GetCFrameByNameHint="[UjAPI]  GetCFrameByName takes string frameName, integer createContext returns framehandle"


GetCSimpleFontStringByName=GetCSimpleFontStringByName
GetCSimpleFontStringByName="GetCSimpleFontStringByName(",~frameName,", ",~createContext,")"
GetCSimpleFontStringByNameHint="[UjAPI]  GetCSimpleFontStringByName takes string frameName, integer createContext returns framehandle"


GetCSimpleTextureByName=GetCSimpleTextureByName
GetCSimpleTextureByName="GetCSimpleTextureByName(",~frameName,", ",~createContext,")"
GetCSimpleTextureByNameHint="[UjAPI]  GetCSimpleTextureByName takes string frameName, integer createContext returns framehandle"


GetCSimpleFrameByName=GetCSimpleFrameByName
GetCSimpleFrameByName="GetCSimpleFrameByName(",~frameName,", ",~createContext,")"
GetCSimpleFrameByNameHint="[UjAPI]  GetCSimpleFrameByName takes string frameName, integer createContext returns framehandle"


GetFrameUnderCursor=GetFrameUnderCursor
GetFrameUnderCursor="GetFrameUnderCursor(",")"
GetFrameUnderCursorHint="[UjAPI]  GetFrameUnderCursor takes nothing returns framehandle"


GetFrameChildrenCountEx=GetFrameChildrenCountEx
GetFrameChildrenCountEx="GetFrameChildrenCountEx(",~whichFrame,", ",~listId,")"
GetFrameChildrenCountExHint="[UjAPI]  GetFrameChildrenCountEx takes framehandle whichFrame, integer listId returns integer"


GetFrameChildrenCount=GetFrameChildrenCount
GetFrameChildrenCount="GetFrameChildrenCount(",~whichFrame,")"
GetFrameChildrenCountHint="[UjAPI]  GetFrameChildrenCount takes framehandle whichFrame returns integer"


GetFrameChildEx=GetFrameChildEx
GetFrameChildEx="GetFrameChildEx(",~whichFrame,", ",~listId,", ",~index,")"
GetFrameChildExHint="[UjAPI]  GetFrameChildEx takes framehandle whichFrame, integer listId, integer index returns framehandle"


GetFrameChild=GetFrameChild
GetFrameChild="GetFrameChild(",~whichFrame,", ",~index,")"
GetFrameChildHint="[UjAPI]  GetFrameChild takes framehandle whichFrame, integer index returns framehandle"


GetFrameTypeName=GetFrameTypeName
GetFrameTypeName="GetFrameTypeName(",~whichFrame,")"
GetFrameTypeNameHint="[UjAPI]  GetFrameTypeName takes framehandle whichFrame returns string"


GetFrameName=GetFrameName
GetFrameName="GetFrameName(",~whichFrame,")"
GetFrameNameHint="[UjAPI]  GetFrameName takes framehandle whichFrame returns string"


GetFrameContext=GetFrameContext
GetFrameContext="GetFrameContext(",~whichFrame,")"
GetFrameContextHint="[UjAPI]  GetFrameContext takes framehandle whichFrame returns integer"


GetFrameText=GetFrameText
GetFrameText="GetFrameText(",~whichFrame,")"
GetFrameTextHint="[UjAPI]  GetFrameText takes framehandle whichFrame returns string"


GetFrameTextSizeLimit=GetFrameTextSizeLimit
GetFrameTextSizeLimit="GetFrameTextSizeLimit(",~whichFrame,")"
GetFrameTextSizeLimitHint="[UjAPI]  GetFrameTextSizeLimit takes framehandle whichFrame returns integer"


GetFrameTextColourEx=GetFrameTextColourEx
GetFrameTextColourEx="GetFrameTextColourEx(",~whichFrame,", ",~stateId,")"
GetFrameTextColourExHint="[UjAPI]  GetFrameTextColourEx takes framehandle whichFrame, integer stateId returns integer"


GetFrameTextColour=GetFrameTextColour
GetFrameTextColour="GetFrameTextColour(",~whichFrame,")"
GetFrameTextColourHint="[UjAPI]  GetFrameTextColour takes framehandle whichFrame returns integer"


IsFrameFocused=IsFrameFocused
IsFrameFocused="IsFrameFocused(",~whichFrame,")"
IsFrameFocusedHint="[UjAPI]  IsFrameFocused takes framehandle whichFrame returns boolean"


SetFrameFocus=SetFrameFocus
SetFrameFocus="SetFrameFocus(",~whichFrame,", ",~isFocus,")"
SetFrameFocusHint="[UjAPI]  SetFrameFocus takes framehandle whichFrame, boolean isFocus returns boolean"


GetFrameModel=GetFrameModel
GetFrameModel="GetFrameModel(",~whichFrame,")"
GetFrameModelHint="[UjAPI]  GetFrameModel takes framehandle whichFrame returns string"


GetFrameState=GetFrameState
GetFrameState="GetFrameState(",~whichFrame,")"
GetFrameStateHint="[UjAPI]  GetFrameState takes framehandle whichFrame returns framestate"


IsFrameEnabled=IsFrameEnabled
IsFrameEnabled="IsFrameEnabled(",~whichFrame,")"
IsFrameEnabledHint="[UjAPI]  IsFrameEnabled takes framehandle whichFrame returns boolean"


IsFrameLayoutFlag=IsFrameLayoutFlag
IsFrameLayoutFlag="IsFrameLayoutFlag(",~whichFrame,", ",~whichLayoutStyle,")"
IsFrameLayoutFlagHint="[UjAPI]  IsFrameLayoutFlag takes framehandle whichFrame, layoutstyleflag whichLayoutStyle returns boolean"


IsFrameGridFlag=IsFrameGridFlag
IsFrameGridFlag="IsFrameGridFlag(",~whichFrame,", ",~whichGridStyle,")"
IsFrameGridFlagHint="[UjAPI]  IsFrameGridFlag takes framehandle whichFrame, gridstyleflag whichGridStyle returns boolean"


IsFrameLayerFlag=IsFrameLayerFlag
IsFrameLayerFlag="IsFrameLayerFlag(",~whichFrame,", ",~whichLayerStyle,")"
IsFrameLayerFlagHint="[UjAPI]  IsFrameLayerFlag takes framehandle whichFrame, layerstyleflag whichLayerStyle returns boolean"


IsFrameControlFlag=IsFrameControlFlag
IsFrameControlFlag="IsFrameControlFlag(",~whichFrame,", ",~whichControlStyle,")"
IsFrameControlFlagHint="[UjAPI]  IsFrameControlFlag takes framehandle whichFrame, controlstyleflag whichControlStyle returns boolean"


GetFrameColourEx=GetFrameColourEx
GetFrameColourEx="GetFrameColourEx(",~whichFrame,", ",~textureId,")"
GetFrameColourExHint="[UjAPI]  GetFrameColourEx takes framehandle whichFrame, integer textureId returns integer"


GetFrameColour=GetFrameColour
GetFrameColour="GetFrameColour(",~whichFrame,")"
GetFrameColourHint="[UjAPI]  GetFrameColour takes framehandle whichFrame returns integer"


GetFrameAlphaEx=GetFrameAlphaEx
GetFrameAlphaEx="GetFrameAlphaEx(",~whichFrame,", ",~textureId,")"
GetFrameAlphaExHint="[UjAPI]  GetFrameAlphaEx takes framehandle whichFrame, integer textureId returns integer"


GetFrameAlpha=GetFrameAlpha
GetFrameAlpha="GetFrameAlpha(",~whichFrame,")"
GetFrameAlphaHint="[UjAPI]  GetFrameAlpha takes framehandle whichFrame returns integer"


GetFrameTexture=GetFrameTexture
GetFrameTexture="GetFrameTexture(",~whichFrame,", ",~textureId,")"
GetFrameTextureHint="[UjAPI]  GetFrameTexture takes framehandle whichFrame, integer textureId returns string"


GetFrameBlendMode=GetFrameBlendMode
GetFrameBlendMode="GetFrameBlendMode(",~whichFrame,", ",~textureId,")"
GetFrameBlendModeHint="[UjAPI]  GetFrameBlendMode takes framehandle whichFrame, integer textureId returns blendmode"


SetFrameTooltip=SetFrameTooltip
SetFrameTooltip="SetFrameTooltip(",~whichFrame,", ",~tooltipFrame,")"
SetFrameTooltipHint="[UjAPI]  SetFrameTooltip takes framehandle whichFrame, framehandle tooltipFrame returns nothing"


GetFrameValue=GetFrameValue
GetFrameValue="GetFrameValue(",~whichFrame,")"
GetFrameValueHint="[UjAPI]  GetFrameValue takes framehandle whichFrame returns real"


GetFrameMinMaxValues=GetFrameMinMaxValues
GetFrameMinMaxValues="GetFrameMinMaxValues(",~whichFrame,", ",~valueId,")"
GetFrameMinMaxValuesHint="[UjAPI]  GetFrameMinMaxValues takes framehandle whichFrame, integer valueId returns real"


GetFrameStepSize=GetFrameStepSize
GetFrameStepSize="GetFrameStepSize(",~whichFrame,")"
GetFrameStepSizeHint="[UjAPI]  GetFrameStepSize takes framehandle whichFrame returns real"


GetFrameWidth=GetFrameWidth
GetFrameWidth="GetFrameWidth(",~whichFrame,")"
GetFrameWidthHint="[UjAPI]  GetFrameWidth takes framehandle whichFrame returns real"


GetFrameHeight=GetFrameHeight
GetFrameHeight="GetFrameHeight(",~whichFrame,")"
GetFrameHeightHint="[UjAPI]  GetFrameHeight takes framehandle whichFrame returns real"


GetFramePriority=GetFramePriority
GetFramePriority="GetFramePriority(",~whichFrame,")"
GetFramePriorityHint="[UjAPI]  GetFramePriority takes framehandle whichFrame returns integer"


GetFrameParent=GetFrameParent
GetFrameParent="GetFrameParent(",~whichFrame,")"
GetFrameParentHint="[UjAPI]  GetFrameParent takes framehandle whichFrame returns framehandle"


GetFrameTextAlignmentValue=GetFrameTextAlignmentValue
GetFrameTextAlignmentValue="GetFrameTextAlignmentValue(",~whichFrame,", ",~id,")"
GetFrameTextAlignmentValueHint="[UjAPI]  GetFrameTextAlignmentValue takes framehandle whichFrame, integer id returns real"


GetFrameCheckState=GetFrameCheckState
GetFrameCheckState="GetFrameCheckState(",~whichFrame,")"
GetFrameCheckStateHint="[UjAPI]  GetFrameCheckState takes framehandle whichFrame returns boolean"


SetMiniMapTexture=SetMiniMapTexture
SetMiniMapTexture="SetMiniMapTexture(",~texturePath,")"
SetMiniMapTextureHint="[UjAPI]  SetMiniMapTexture takes string texturePath returns boolean"


GetFrameSlider=GetFrameSlider
GetFrameSlider="GetFrameSlider(",~whichFrame,")"
GetFrameSliderHint="[UjAPI]  GetFrameSlider takes framehandle whichFrame returns framehandle"


AddFrameSlider=AddFrameSlider
AddFrameSlider="AddFrameSlider(",~whichFrame,")"
AddFrameSliderHint="[UjAPI]  AddFrameSlider takes framehandle whichFrame returns framehandle"


GetFrameItemsBorder=GetFrameItemsBorder
GetFrameItemsBorder="GetFrameItemsBorder(",~whichFrame,")"
GetFrameItemsBorderHint="[UjAPI]  GetFrameItemsBorder takes framehandle whichFrame returns real"


GetFrameItemsHeight=GetFrameItemsHeight
GetFrameItemsHeight="GetFrameItemsHeight(",~whichFrame,")"
GetFrameItemsHeightHint="[UjAPI]  GetFrameItemsHeight takes framehandle whichFrame returns real"


AddFrameListItem=AddFrameListItem
AddFrameListItem="AddFrameListItem(",~whichFrame,", ",~text,", ",~frameToAdd,")"
AddFrameListItemHint="[UjAPI]  AddFrameListItem takes framehandle whichFrame, string text, framehandle frameToAdd returns framehandle"


GetFrameListItemCount=GetFrameListItemCount
GetFrameListItemCount="GetFrameListItemCount(",~whichFrame,")"
GetFrameListItemCountHint="[UjAPI]  GetFrameListItemCount takes framehandle whichFrame returns integer"


GetFrameListItemById=GetFrameListItemById
GetFrameListItemById="GetFrameListItemById(",~whichFrame,", ",~id,")"
GetFrameListItemByIdHint="[UjAPI]  GetFrameListItemById takes framehandle whichFrame, integer id returns framehandle"


GetFrameListItemByFrame=GetFrameListItemByFrame
GetFrameListItemByFrame="GetFrameListItemByFrame(",~whichFrame,", ",~frameToFind,")"
GetFrameListItemByFrameHint="[UjAPI]  GetFrameListItemByFrame takes framehandle whichFrame, framehandle frameToFind returns framehandle"


GetFrameItemOwner=GetFrameItemOwner
GetFrameItemOwner="GetFrameItemOwner(",~listBoxItem,")"
GetFrameItemOwnerHint="[UjAPI]  GetFrameItemOwner takes framehandle listBoxItem returns framehandle"


GetFrameHighlight=GetFrameHighlight
GetFrameHighlight="GetFrameHighlight(",~whichFrame,", ",~highlightId,")"
GetFrameHighlightHint="[UjAPI]  GetFrameHighlight takes framehandle whichFrame, integer highlightId returns framehandle"


GetFrameHighlightTexture=GetFrameHighlightTexture
GetFrameHighlightTexture="GetFrameHighlightTexture(",~whichFrame,", ",~highlightId,")"
GetFrameHighlightTextureHint="[UjAPI]  GetFrameHighlightTexture takes framehandle whichFrame, integer highlightId returns string"


GetFrameBackdrop=GetFrameBackdrop
GetFrameBackdrop="GetFrameBackdrop(",~whichFrame,", ",~backdropId,")"
GetFrameBackdropHint="[UjAPI]  GetFrameBackdrop takes framehandle whichFrame, integer backdropId returns framehandle"


IsFrameBorderEnabled=IsFrameBorderEnabled
IsFrameBorderEnabled="IsFrameBorderEnabled(",~whichFrame,", ",~backdropId,")"
IsFrameBorderEnabledHint="[UjAPI]  IsFrameBorderEnabled takes framehandle whichFrame, integer backdropId returns boolean"


GetFrameBorderFlags=GetFrameBorderFlags
GetFrameBorderFlags="GetFrameBorderFlags(",~whichFrame,", ",~backdropId,")"
GetFrameBorderFlagsHint="[UjAPI]  GetFrameBorderFlags takes framehandle whichFrame, integer backdropId returns integer"


GetFrameBorderSize=GetFrameBorderSize
GetFrameBorderSize="GetFrameBorderSize(",~whichFrame,", ",~backdropId,")"
GetFrameBorderSizeHint="[UjAPI]  GetFrameBorderSize takes framehandle whichFrame, integer backdropId returns real"


GetFrameBackgroundSize=GetFrameBackgroundSize
GetFrameBackgroundSize="GetFrameBackgroundSize(",~whichFrame,", ",~backdropId,")"
GetFrameBackgroundSizeHint="[UjAPI]  GetFrameBackgroundSize takes framehandle whichFrame, integer backdropId returns real"


GetFrameBackgroundInsetById=GetFrameBackgroundInsetById
GetFrameBackgroundInsetById="GetFrameBackgroundInsetById(",~whichFrame,", ",~backdropId,", ",~insetId,")"
GetFrameBackgroundInsetByIdHint="[UjAPI]  GetFrameBackgroundInsetById takes framehandle whichFrame, integer backdropId, integer insetId returns real"


GetFrameGridRows=GetFrameGridRows
GetFrameGridRows="GetFrameGridRows(",~grid,")"
GetFrameGridRowsHint="[UjAPI]  GetFrameGridRows takes framehandle grid returns integer"


GetFrameGridColumns=GetFrameGridColumns
GetFrameGridColumns="GetFrameGridColumns(",~grid,")"
GetFrameGridColumnsHint="[UjAPI]  GetFrameGridColumns takes framehandle grid returns integer"


GetFrameGridFrame=GetFrameGridFrame
GetFrameGridFrame="GetFrameGridFrame(",~grid,", ",~row,", ",~column,")"
GetFrameGridFrameHint="[UjAPI]  GetFrameGridFrame takes framehandle grid, integer row, integer column returns framehandle"


GetFrameGridFrameById=GetFrameGridFrameById
GetFrameGridFrameById="GetFrameGridFrameById(",~grid,", ",~id,")"
GetFrameGridFrameByIdHint="[UjAPI]  GetFrameGridFrameById takes framehandle grid, integer id returns framehandle"


IsBuffBarRenderDuplicates=IsBuffBarRenderDuplicates
IsBuffBarRenderDuplicates="IsBuffBarRenderDuplicates(",")"
IsBuffBarRenderDuplicatesHint="[UjAPI]  IsBuffBarRenderDuplicates takes nothing returns boolean"


GetTriggerFrame=GetTriggerFrame
GetTriggerFrame="GetTriggerFrame(",")"
GetTriggerFrameHint="[UjAPI]  GetTriggerFrame takes nothing returns framehandle"


GetTriggerFrameEvent=GetTriggerFrameEvent
GetTriggerFrameEvent="GetTriggerFrameEvent(",")"
GetTriggerFrameEventHint="[UjAPI]  GetTriggerFrameEvent takes nothing returns frameeventtype"


GetTriggerFrameVariableType=GetTriggerFrameVariableType
GetTriggerFrameVariableType="GetTriggerFrameVariableType(",")"
GetTriggerFrameVariableTypeHint="[UjAPI]  GetTriggerFrameVariableType takes nothing returns variabletype"


GetTriggerFrameInteger=GetTriggerFrameInteger
GetTriggerFrameInteger="GetTriggerFrameInteger(",")"
GetTriggerFrameIntegerHint="[UjAPI]  GetTriggerFrameInteger takes nothing returns integer"


GetTriggerFrameReal=GetTriggerFrameReal
GetTriggerFrameReal="GetTriggerFrameReal(",")"
GetTriggerFrameRealHint="[UjAPI]  GetTriggerFrameReal takes nothing returns real"


GetTriggerFrameBoolean=GetTriggerFrameBoolean
GetTriggerFrameBoolean="GetTriggerFrameBoolean(",")"
GetTriggerFrameBooleanHint="[UjAPI]  GetTriggerFrameBoolean takes nothing returns boolean"


GetTriggerFrameString=GetTriggerFrameString
GetTriggerFrameString="GetTriggerFrameString(",")"
GetTriggerFrameStringHint="[UjAPI]  GetTriggerFrameString takes nothing returns string"


GetTriggerFrameMouseButton=GetTriggerFrameMouseButton
GetTriggerFrameMouseButton="GetTriggerFrameMouseButton(",")"
GetTriggerFrameMouseButtonHint="[UjAPI]  GetTriggerFrameMouseButton takes nothing returns mousebuttontype"


GetTriggerFrameTargetFrame=GetTriggerFrameTargetFrame
GetTriggerFrameTargetFrame="GetTriggerFrameTargetFrame(",")"
GetTriggerFrameTargetFrameHint="[UjAPI]  GetTriggerFrameTargetFrame takes nothing returns framehandle"


TriggerRegisterFrameEvent=TriggerRegisterFrameEvent
TriggerRegisterFrameEvent="TriggerRegisterFrameEvent(",~whichTrigger,", ",~whichFrame,", ",~frameEvent,")"
TriggerRegisterFrameEventHint="[UjAPI]  TriggerRegisterFrameEvent takes trigger whichTrigger, framehandle whichFrame, frameeventtype frameEvent returns event"


GetFrameSprite=GetFrameSprite
GetFrameSprite="GetFrameSprite(",~whichFrame,")"
GetFrameSpriteHint="[UjAPI]  GetFrameSprite takes framehandle whichFrame returns sprite"


GetFrameSpriteScale=GetFrameSpriteScale
GetFrameSpriteScale="GetFrameSpriteScale(",~whichFrame,")"
GetFrameSpriteScaleHint="[UjAPI]  GetFrameSpriteScale takes framehandle whichFrame returns real"


GetFrameSpriteTimeScale=GetFrameSpriteTimeScale
GetFrameSpriteTimeScale="GetFrameSpriteTimeScale(",~whichFrame,")"
GetFrameSpriteTimeScaleHint="[UjAPI]  GetFrameSpriteTimeScale takes framehandle whichFrame returns real"


GetFrameSpritePlayerColour=GetFrameSpritePlayerColour
GetFrameSpritePlayerColour="GetFrameSpritePlayerColour(",~whichFrame,")"
GetFrameSpritePlayerColourHint="[UjAPI]  GetFrameSpritePlayerColour takes framehandle whichFrame returns playercolor"


GetFrameSpriteAlpha=GetFrameSpriteAlpha
GetFrameSpriteAlpha="GetFrameSpriteAlpha(",~whichFrame,")"
GetFrameSpriteAlphaHint="[UjAPI]  GetFrameSpriteAlpha takes framehandle whichFrame returns integer"


SetFrameSpriteAlpha=SetFrameSpriteAlpha
SetFrameSpriteAlpha="SetFrameSpriteAlpha(",~whichFrame,", ",~alpha,")"
SetFrameSpriteAlphaHint="[UjAPI]  SetFrameSpriteAlpha takes framehandle whichFrame, integer alpha returns boolean"


GetFrameSpriteColour=GetFrameSpriteColour
GetFrameSpriteColour="GetFrameSpriteColour(",~whichFrame,")"
GetFrameSpriteColourHint="[UjAPI]  GetFrameSpriteColour takes framehandle whichFrame returns integer"


SetFrameSpriteColour=SetFrameSpriteColour
SetFrameSpriteColour="SetFrameSpriteColour(",~whichFrame,", ",~colour,")"
SetFrameSpriteColourHint="[UjAPI]  SetFrameSpriteColour takes framehandle whichFrame, integer colour returns boolean"


SetFrameSpriteVertexColour=SetFrameSpriteVertexColour
SetFrameSpriteVertexColour="SetFrameSpriteVertexColour(",~whichFrame,", ",~red,", ",~green,", ",~blue,", ",~alpha,")"
SetFrameSpriteVertexColourHint="[UjAPI]  SetFrameSpriteVertexColour takes framehandle whichFrame, integer red, integer green, integer blue, integer alpha returns boolean"


SetFrameSpriteOrientationEx=SetFrameSpriteOrientationEx
SetFrameSpriteOrientationEx="SetFrameSpriteOrientationEx(",~whichFrame,", ",~yaw,", ",~pitch,", ",~roll,", ",~eulerOrder,")"
SetFrameSpriteOrientationExHint="[UjAPI]  SetFrameSpriteOrientationEx takes framehandle whichFrame, real yaw, real pitch, real roll, integer eulerOrder returns boolean"


GetFrameSpriteYaw=GetFrameSpriteYaw
GetFrameSpriteYaw="GetFrameSpriteYaw(",~whichFrame,")"
GetFrameSpriteYawHint="[UjAPI]  GetFrameSpriteYaw takes framehandle whichFrame returns real"


SetFrameSpriteYaw=SetFrameSpriteYaw
SetFrameSpriteYaw="SetFrameSpriteYaw(",~whichFrame,", ",~yaw,")"
SetFrameSpriteYawHint="[UjAPI]  SetFrameSpriteYaw takes framehandle whichFrame, real yaw returns boolean"


GetFrameSpriteFacing=GetFrameSpriteFacing
GetFrameSpriteFacing="GetFrameSpriteFacing(",~whichFrame,")"
GetFrameSpriteFacingHint="[UjAPI]  GetFrameSpriteFacing takes framehandle whichFrame returns real"


SetFrameSpriteFacing=SetFrameSpriteFacing
SetFrameSpriteFacing="SetFrameSpriteFacing(",~whichFrame,", ",~facing,")"
SetFrameSpriteFacingHint="[UjAPI]  SetFrameSpriteFacing takes framehandle whichFrame, real facing returns boolean"


GetFrameSpritePitch=GetFrameSpritePitch
GetFrameSpritePitch="GetFrameSpritePitch(",~whichFrame,")"
GetFrameSpritePitchHint="[UjAPI]  GetFrameSpritePitch takes framehandle whichFrame returns real"


SetFrameSpritePitch=SetFrameSpritePitch
SetFrameSpritePitch="SetFrameSpritePitch(",~whichFrame,", ",~pitch,")"
SetFrameSpritePitchHint="[UjAPI]  SetFrameSpritePitch takes framehandle whichFrame, real pitch returns boolean"


GetFrameSpriteRoll=GetFrameSpriteRoll
GetFrameSpriteRoll="GetFrameSpriteRoll(",~whichFrame,")"
GetFrameSpriteRollHint="[UjAPI]  GetFrameSpriteRoll takes framehandle whichFrame returns real"


SetFrameSpriteRoll=SetFrameSpriteRoll
SetFrameSpriteRoll="SetFrameSpriteRoll(",~whichFrame,", ",~roll,")"
SetFrameSpriteRollHint="[UjAPI]  SetFrameSpriteRoll takes framehandle whichFrame, real roll returns boolean"


GetFrameSpriteModel=GetFrameSpriteModel
GetFrameSpriteModel="GetFrameSpriteModel(",~whichFrame,")"
GetFrameSpriteModelHint="[UjAPI]  GetFrameSpriteModel takes framehandle whichFrame returns string"


GetFrameSpriteCurrentAnimationId=GetFrameSpriteCurrentAnimationId
GetFrameSpriteCurrentAnimationId="GetFrameSpriteCurrentAnimationId(",~whichFrame,")"
GetFrameSpriteCurrentAnimationIdHint="[UjAPI]  GetFrameSpriteCurrentAnimationId takes framehandle whichFrame returns integer"


GetFrameSpriteCurrentAnimationName=GetFrameSpriteCurrentAnimationName
GetFrameSpriteCurrentAnimationName="GetFrameSpriteCurrentAnimationName(",~whichFrame,")"
GetFrameSpriteCurrentAnimationNameHint="[UjAPI]  GetFrameSpriteCurrentAnimationName takes framehandle whichFrame returns string"


GetFrameSpriteAnimationOffsetPercent=GetFrameSpriteAnimationOffsetPercent
GetFrameSpriteAnimationOffsetPercent="GetFrameSpriteAnimationOffsetPercent(",~whichFrame,")"
GetFrameSpriteAnimationOffsetPercentHint="[UjAPI]  GetFrameSpriteAnimationOffsetPercent takes framehandle whichFrame returns real"


GetTriggerSyncPlayer=GetTriggerSyncPlayer
GetTriggerSyncPlayer="GetTriggerSyncPlayer(",")"
GetTriggerSyncPlayerHint="[UjAPI]  GetTriggerSyncPlayer takes nothing returns player"


GetSyncedVariableType=GetSyncedVariableType
GetSyncedVariableType="GetSyncedVariableType(",")"
GetSyncedVariableTypeHint="[UjAPI]  GetSyncedVariableType takes nothing returns variabletype"


GetSyncedVariableName=GetSyncedVariableName
GetSyncedVariableName="GetSyncedVariableName(",")"
GetSyncedVariableNameHint="[UjAPI]  GetSyncedVariableName takes nothing returns string"


GetSyncedInteger=GetSyncedInteger
GetSyncedInteger="GetSyncedInteger(",")"
GetSyncedIntegerHint="[UjAPI]  GetSyncedInteger takes nothing returns integer"


GetSyncedReal=GetSyncedReal
GetSyncedReal="GetSyncedReal(",")"
GetSyncedRealHint="[UjAPI]  GetSyncedReal takes nothing returns real"


GetSyncedString=GetSyncedString
GetSyncedString="GetSyncedString(",")"
GetSyncedStringHint="[UjAPI]  GetSyncedString takes nothing returns string"


GetSyncedHandle=GetSyncedHandle
GetSyncedHandle="GetSyncedHandle(",")"
GetSyncedHandleHint="[UjAPI]  GetSyncedHandle takes nothing returns handle"


GetSyncedBoolean=GetSyncedBoolean
GetSyncedBoolean="GetSyncedBoolean(",")"
GetSyncedBooleanHint="[UjAPI]  GetSyncedBoolean takes nothing returns boolean"


SyncString=SyncString
SyncString="SyncString(",~variableName,")"
SyncStringHint="[UjAPI]  SyncString takes string variableName returns nothing"


TriggerRegisterPlayerVariableSyncEvent=TriggerRegisterPlayerVariableSyncEvent
TriggerRegisterPlayerVariableSyncEvent="TriggerRegisterPlayerVariableSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~variableName,")"
TriggerRegisterPlayerVariableSyncEventHint="[UjAPI]  TriggerRegisterPlayerVariableSyncEvent takes trigger whichTrigger, player whichPlayer, string variableName returns event"


GetSyncSavedVariableType=GetSyncSavedVariableType
GetSyncSavedVariableType="GetSyncSavedVariableType(",")"
GetSyncSavedVariableTypeHint="[UjAPI]  GetSyncSavedVariableType takes nothing returns variabletype"


GetSyncSavedHashtable=GetSyncSavedHashtable
GetSyncSavedHashtable="GetSyncSavedHashtable(",")"
GetSyncSavedHashtableHint="[UjAPI]  GetSyncSavedHashtable takes nothing returns hashtable"


GetSyncSavedParentKey=GetSyncSavedParentKey
GetSyncSavedParentKey="GetSyncSavedParentKey(",")"
GetSyncSavedParentKeyHint="[UjAPI]  GetSyncSavedParentKey takes nothing returns integer"


GetSyncSavedChildKey=GetSyncSavedChildKey
GetSyncSavedChildKey="GetSyncSavedChildKey(",")"
GetSyncSavedChildKeyHint="[UjAPI]  GetSyncSavedChildKey takes nothing returns integer"


SyncSavedString=SyncSavedString
SyncSavedString="SyncSavedString(",~whichHashtable,", ",~parentKey,", ",~childKey,")"
SyncSavedStringHint="[UjAPI]  SyncSavedString takes hashtable whichHashtable, integer parentKey, integer childKey returns nothing"


TriggerRegisterPlayerHashtableDataSyncEvent=TriggerRegisterPlayerHashtableDataSyncEvent
TriggerRegisterPlayerHashtableDataSyncEvent="TriggerRegisterPlayerHashtableDataSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichHashtable,")"
TriggerRegisterPlayerHashtableDataSyncEventHint="[UjAPI]  TriggerRegisterPlayerHashtableDataSyncEvent takes trigger whichTrigger, player whichPlayer, hashtable whichHashtable returns event"


GetTriggerSyncPrefix=GetTriggerSyncPrefix
GetTriggerSyncPrefix="GetTriggerSyncPrefix(",")"
GetTriggerSyncPrefixHint="[UjAPI]  GetTriggerSyncPrefix takes nothing returns string"


GetTriggerSyncData=GetTriggerSyncData
GetTriggerSyncData="GetTriggerSyncData(",")"
GetTriggerSyncDataHint="[UjAPI]  GetTriggerSyncData takes nothing returns string"


SendSyncData=SendSyncData
SendSyncData="SendSyncData(",~prefix,", ",~data,")"
SendSyncDataHint="[UjAPI]  SendSyncData takes string prefix, string data returns boolean"


TriggerRegisterPlayerSyncEvent=TriggerRegisterPlayerSyncEvent
TriggerRegisterPlayerSyncEvent="TriggerRegisterPlayerSyncEvent(",~whichTrigger,", ",~whichPlayer,", ",~prefix,", ",~fromServer,")"
TriggerRegisterPlayerSyncEventHint="[UjAPI]  TriggerRegisterPlayerSyncEvent takes trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer returns event"


IsKeyPressed=IsKeyPressed
IsKeyPressed="IsKeyPressed(",~key,")"
IsKeyPressedHint="[UjAPI]  IsKeyPressed takes oskeytype key returns boolean"


IsMouseKeyPressed=IsMouseKeyPressed
IsMouseKeyPressed="IsMouseKeyPressed(",~mouseKey,")"
IsMouseKeyPressedHint="[UjAPI]  IsMouseKeyPressed takes mousebuttontype mouseKey returns boolean"


GetTriggerPlayerIsKeyDown=GetTriggerPlayerIsKeyDown
GetTriggerPlayerIsKeyDown="GetTriggerPlayerIsKeyDown(",")"
GetTriggerPlayerIsKeyDownHint="[UjAPI]  GetTriggerPlayerIsKeyDown takes nothing returns boolean"


GetTriggerPlayerKey=GetTriggerPlayerKey
GetTriggerPlayerKey="GetTriggerPlayerKey(",")"
GetTriggerPlayerKeyHint="[UjAPI]  GetTriggerPlayerKey takes nothing returns oskeytype"


GetTriggerPlayerMouseButton=GetTriggerPlayerMouseButton
GetTriggerPlayerMouseButton="GetTriggerPlayerMouseButton(",")"
GetTriggerPlayerMouseButtonHint="[UjAPI]  GetTriggerPlayerMouseButton takes nothing returns mousebuttontype"


GetTriggerPlayerMetaKey=GetTriggerPlayerMetaKey
GetTriggerPlayerMetaKey="GetTriggerPlayerMetaKey(",")"
GetTriggerPlayerMetaKeyHint="[UjAPI]  GetTriggerPlayerMetaKey takes nothing returns integer"


TriggerRegisterPlayerKeyEvent=TriggerRegisterPlayerKeyEvent
TriggerRegisterPlayerKeyEvent="TriggerRegisterPlayerKeyEvent(",~whichTrigger,", ",~whichPlayer,", ",~whichKey,", ",~whichMetaKey,", ",~isKeyDown,")"
TriggerRegisterPlayerKeyEventHint="[UjAPI]  TriggerRegisterPlayerKeyEvent takes trigger whichTrigger, player whichPlayer, oskeytype whichKey, integer whichMetaKey, boolean isKeyDown returns event"


GetMouseMoveEventScreenAxisEnabled=GetMouseMoveEventScreenAxisEnabled
GetMouseMoveEventScreenAxisEnabled="GetMouseMoveEventScreenAxisEnabled(",")"
GetMouseMoveEventScreenAxisEnabledHint="[UjAPI]  GetMouseMoveEventScreenAxisEnabled takes nothing returns boolean"


GetMouseMoveEventWorldAxisEnabled=GetMouseMoveEventWorldAxisEnabled
GetMouseMoveEventWorldAxisEnabled="GetMouseMoveEventWorldAxisEnabled(",")"
GetMouseMoveEventWorldAxisEnabledHint="[UjAPI]  GetMouseMoveEventWorldAxisEnabled takes nothing returns boolean"


GetMouseMoveEventDelay=GetMouseMoveEventDelay
GetMouseMoveEventDelay="GetMouseMoveEventDelay(",")"
GetMouseMoveEventDelayHint="[UjAPI]  GetMouseMoveEventDelay takes nothing returns integer"


GetTriggerPlayerMouseWorldX=GetTriggerPlayerMouseWorldX
GetTriggerPlayerMouseWorldX="GetTriggerPlayerMouseWorldX(",")"
GetTriggerPlayerMouseWorldXHint="[UjAPI]  GetTriggerPlayerMouseWorldX takes nothing returns real"


GetTriggerPlayerMouseWorldY=GetTriggerPlayerMouseWorldY
GetTriggerPlayerMouseWorldY="GetTriggerPlayerMouseWorldY(",")"
GetTriggerPlayerMouseWorldYHint="[UjAPI]  GetTriggerPlayerMouseWorldY takes nothing returns real"


GetTriggerPlayerMouseWorldZ=GetTriggerPlayerMouseWorldZ
GetTriggerPlayerMouseWorldZ="GetTriggerPlayerMouseWorldZ(",")"
GetTriggerPlayerMouseWorldZHint="[UjAPI]  GetTriggerPlayerMouseWorldZ takes nothing returns real"


GetTriggerPlayerMouseScreenX=GetTriggerPlayerMouseScreenX
GetTriggerPlayerMouseScreenX="GetTriggerPlayerMouseScreenX(",")"
GetTriggerPlayerMouseScreenXHint="[UjAPI]  GetTriggerPlayerMouseScreenX takes nothing returns real"


GetTriggerPlayerMouseScreenY=GetTriggerPlayerMouseScreenY
GetTriggerPlayerMouseScreenY="GetTriggerPlayerMouseScreenY(",")"
GetTriggerPlayerMouseScreenYHint="[UjAPI]  GetTriggerPlayerMouseScreenY takes nothing returns real"


GetEventDamageFlags=GetEventDamageFlags
GetEventDamageFlags="GetEventDamageFlags(",")"
GetEventDamageFlagsHint="[UjAPI]  GetEventDamageFlags takes nothing returns integer"


GetEventDamageIsFlag=GetEventDamageIsFlag
GetEventDamageIsFlag="GetEventDamageIsFlag(",~flag,")"
GetEventDamageIsFlagHint="[UjAPI]  GetEventDamageIsFlag takes integer flag returns boolean"


SetEventDamageFlag=SetEventDamageFlag
SetEventDamageFlag="SetEventDamageFlag(",~flag,", ",~isSet,")"
SetEventDamageFlagHint="[UjAPI]  SetEventDamageFlag takes integer flag, boolean isSet returns boolean"


GetEventDamageExtraFlags=GetEventDamageExtraFlags
GetEventDamageExtraFlags="GetEventDamageExtraFlags(",")"
GetEventDamageExtraFlagsHint="[UjAPI]  GetEventDamageExtraFlags takes nothing returns integer"


GetEventDamageIsExtraFlag=GetEventDamageIsExtraFlag
GetEventDamageIsExtraFlag="GetEventDamageIsExtraFlag(",~flag,")"
GetEventDamageIsExtraFlagHint="[UjAPI]  GetEventDamageIsExtraFlag takes integer flag returns boolean"


SetEventDamageExtraFlag=SetEventDamageExtraFlag
SetEventDamageExtraFlag="SetEventDamageExtraFlag(",~flag,", ",~isSet,")"
SetEventDamageExtraFlagHint="[UjAPI]  SetEventDamageExtraFlag takes integer flag, boolean isSet returns boolean"


GetEventDamageTarget=GetEventDamageTarget
GetEventDamageTarget="GetEventDamageTarget(",")"
GetEventDamageTargetHint="[UjAPI]  GetEventDamageTarget takes nothing returns unit"


GetEventAttackType=GetEventAttackType
GetEventAttackType="GetEventAttackType(",")"
GetEventAttackTypeHint="[UjAPI]  GetEventAttackType takes nothing returns attacktype"


SetEventAttackType=SetEventAttackType
SetEventAttackType="SetEventAttackType(",~attackType,")"
SetEventAttackTypeHint="[UjAPI]  SetEventAttackType takes attacktype attackType returns boolean"


GetEventDamageType=GetEventDamageType
GetEventDamageType="GetEventDamageType(",")"
GetEventDamageTypeHint="[UjAPI]  GetEventDamageType takes nothing returns damagetype"


SetEventDamageType=SetEventDamageType
SetEventDamageType="SetEventDamageType(",~damageType,")"
SetEventDamageTypeHint="[UjAPI]  SetEventDamageType takes damagetype damageType returns boolean"


GetEventDamageTypeFlags=GetEventDamageTypeFlags
GetEventDamageTypeFlags="GetEventDamageTypeFlags(",")"
GetEventDamageTypeFlagsHint="[UjAPI]  GetEventDamageTypeFlags takes nothing returns integer"


SetEventDamageTypeFlags=SetEventDamageTypeFlags
SetEventDamageTypeFlags="SetEventDamageTypeFlags(",~damageFlags,")"
SetEventDamageTypeFlagsHint="[UjAPI]  SetEventDamageTypeFlags takes integer damageFlags returns boolean"


GetEventWeaponType=GetEventWeaponType
GetEventWeaponType="GetEventWeaponType(",")"
GetEventWeaponTypeHint="[UjAPI]  GetEventWeaponType takes nothing returns weapontype"


SetEventWeaponType=SetEventWeaponType
SetEventWeaponType="SetEventWeaponType(",~weaponType,")"
SetEventWeaponTypeHint="[UjAPI]  SetEventWeaponType takes weapontype weaponType returns boolean"


GetEventIsAttack=GetEventIsAttack
GetEventIsAttack="GetEventIsAttack(",")"
GetEventIsAttackHint="[UjAPI]  GetEventIsAttack takes nothing returns boolean"


GetEventIsRanged=GetEventIsRanged
GetEventIsRanged="GetEventIsRanged(",")"
GetEventIsRangedHint="[UjAPI]  GetEventIsRanged takes nothing returns boolean"


GetEventIsCritical=GetEventIsCritical
GetEventIsCritical="GetEventIsCritical(",")"
GetEventIsCriticalHint="[UjAPI]  GetEventIsCritical takes nothing returns boolean"


GetEventPreDamage=GetEventPreDamage
GetEventPreDamage="GetEventPreDamage(",")"
GetEventPreDamageHint="[UjAPI]  GetEventPreDamage takes nothing returns real"


ParseTags=ParseTags
ParseTags="ParseTags(",~taggedString,")"
ParseTagsHint="[UjAPI]  ParseTags takes string taggedString returns string"


TriggerRegisterCommandEvent=TriggerRegisterCommandEvent
TriggerRegisterCommandEvent="TriggerRegisterCommandEvent(",~whichTrigger,", ",~whichAbility,", ",~order,")"
TriggerRegisterCommandEventHint="[UjAPI]  TriggerRegisterCommandEvent takes trigger whichTrigger, integer whichAbility, string order returns event"


TriggerRegisterUpgradeCommandEvent=TriggerRegisterUpgradeCommandEvent
TriggerRegisterUpgradeCommandEvent="TriggerRegisterUpgradeCommandEvent(",~whichTrigger,", ",~whichUpgrade,")"
TriggerRegisterUpgradeCommandEventHint="[UjAPI]  TriggerRegisterUpgradeCommandEvent takes trigger whichTrigger, integer whichUpgrade returns event"


GetPlayerHandicapReviveTime=GetPlayerHandicapReviveTime
GetPlayerHandicapReviveTime="GetPlayerHandicapReviveTime(",~whichPlayer,")"
GetPlayerHandicapReviveTimeHint="[UjAPI]  GetPlayerHandicapReviveTime takes player whichPlayer returns real"


GetPlayerHandicapDamage=GetPlayerHandicapDamage
GetPlayerHandicapDamage="GetPlayerHandicapDamage(",~whichPlayer,")"
GetPlayerHandicapDamageHint="[UjAPI]  GetPlayerHandicapDamage takes player whichPlayer returns real"


CreateMinimapIconOnUnit=CreateMinimapIconOnUnit
CreateMinimapIconOnUnit="CreateMinimapIconOnUnit(",~whichUnit,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconOnUnitHint="[UjAPI]  CreateMinimapIconOnUnit takes unit whichUnit, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


CreateMinimapIconAtLoc=CreateMinimapIconAtLoc
CreateMinimapIconAtLoc="CreateMinimapIconAtLoc(",~where,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconAtLocHint="[UjAPI]  CreateMinimapIconAtLoc takes location where, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


CreateMinimapIcon=CreateMinimapIcon
CreateMinimapIcon="CreateMinimapIcon(",~x,", ",~y,", ",~red,", ",~green,", ",~blue,", ",~pingPath,", ",~fogVisibility,")"
CreateMinimapIconHint="[UjAPI]  CreateMinimapIcon takes real x, real y, integer red, integer green, integer blue, string pingPath, fogstate fogVisibility returns minimapicon"


SkinManagerGetLocalPath=SkinManagerGetLocalPath
SkinManagerGetLocalPath="SkinManagerGetLocalPath(",~key,")"
SkinManagerGetLocalPathHint="[UjAPI]  SkinManagerGetLocalPath takes string key returns string"


SetSoundFacialAnimationLabel=SetSoundFacialAnimationLabel
SetSoundFacialAnimationLabel="SetSoundFacialAnimationLabel(",~soundHandle,", ",~animationLabel,")"
SetSoundFacialAnimationLabelHint="[UjAPI]  SetSoundFacialAnimationLabel takes sound soundHandle, string animationLabel returns boolean"


SetSoundFacialAnimationGroupLabel=SetSoundFacialAnimationGroupLabel
SetSoundFacialAnimationGroupLabel="SetSoundFacialAnimationGroupLabel(",~soundHandle,", ",~groupLabel,")"
SetSoundFacialAnimationGroupLabelHint="[UjAPI]  SetSoundFacialAnimationGroupLabel takes sound soundHandle, string groupLabel returns boolean"


SetSoundFacialAnimationSetFilepath=SetSoundFacialAnimationSetFilepath
SetSoundFacialAnimationSetFilepath="SetSoundFacialAnimationSetFilepath(",~soundHandle,", ",~animationSetFilepath,")"
SetSoundFacialAnimationSetFilepathHint="[UjAPI]  SetSoundFacialAnimationSetFilepath takes sound soundHandle, string animationSetFilepath returns boolean"


SetDialogueSpeakerNameKey=SetDialogueSpeakerNameKey
SetDialogueSpeakerNameKey="SetDialogueSpeakerNameKey(",~soundHandle,", ",~speakerName,")"
SetDialogueSpeakerNameKeyHint="[UjAPI]  SetDialogueSpeakerNameKey takes sound soundHandle, string speakerName returns boolean"


GetDialogueSpeakerNameKey=GetDialogueSpeakerNameKey
GetDialogueSpeakerNameKey="GetDialogueSpeakerNameKey(",~soundHandle,")"
GetDialogueSpeakerNameKeyHint="[UjAPI]  GetDialogueSpeakerNameKey takes sound soundHandle returns string"


SetDialogueTextKey=SetDialogueTextKey
SetDialogueTextKey="SetDialogueTextKey(",~soundHandle,", ",~dialogueText,")"
SetDialogueTextKeyHint="[UjAPI]  SetDialogueTextKey takes sound soundHandle, string dialogueText returns boolean"


GetDialogueTextKey=GetDialogueTextKey
GetDialogueTextKey="GetDialogueTextKey(",~soundHandle,")"
GetDialogueTextKeyHint="[UjAPI]  GetDialogueTextKey takes sound soundHandle returns string"


CreateCommandButtonEffect=CreateCommandButtonEffect
CreateCommandButtonEffect="CreateCommandButtonEffect(",~abilCode,", ",~order,")"
CreateCommandButtonEffectHint="[UjAPI]  CreateCommandButtonEffect takes integer abilCode, string order returns commandbuttoneffect"


CreateUpgradeCommandButtonEffect=CreateUpgradeCommandButtonEffect
CreateUpgradeCommandButtonEffect="CreateUpgradeCommandButtonEffect(",~whichUprgade,")"
CreateUpgradeCommandButtonEffectHint="[UjAPI]  CreateUpgradeCommandButtonEffect takes integer whichUprgade returns commandbuttoneffect"


CreateLearnCommandButtonEffect=CreateLearnCommandButtonEffect
CreateLearnCommandButtonEffect="CreateLearnCommandButtonEffect(",~abilCode,")"
CreateLearnCommandButtonEffectHint="[UjAPI]  CreateLearnCommandButtonEffect takes integer abilCode returns commandbuttoneffect"

GetSpellAbilityId=Ability Being Cast
GetSpellAbilityId="Ability being cast"
GetSpellAbilityIdHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast.

     =JASS Code
     =~Script Code"
     Hint=Enter JASS code that returns an ability (integer). Example: 'Aloc' [UMSWE]

IsDestructableAliveBJ=Destructible Is Alive
IsDestructableAliveBJ=~Destructible," is alive"

IsDestructableDeadBJ=Destructible Is Dead
IsDestructableDeadBJ=~Destructible," is dead"

IsDestructableInvulnerableBJ=Destructible Is Invulnerable
IsDestructableInvulnerableBJ=~Destructible," is invulnerable"

IsPointBlightedBJ=Point Is Blighted
IsPointBlightedBJ=~Point," is blighted"

IsTerrainPathableBJ=Terrain Pathing Is Off
IsTerrainPathableBJ="Terrain pathing at ",~Location," of type ",~Pathing Type," is off"
IsTerrainPathableBJHint=Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing.

IsMapFlagSet=Map Flag Set
IsMapFlagSet=~Map Flag," is set"

IsCustomCampaignButtonVisibile=Custom Campaign Button Is Visible
IsCustomCampaignButtonVisibile="Custom campaign button ",~Number," is visible"

GetCreepCampFilterState=Creep Camp Display Is On
GetCreepCampFilterState="Creep camp minimap display is turned on"

SaveGameExists=Saved-Game Exists
SaveGameExists="The ",~Filename," saved-game exists"

GetStoredBooleanBJ=Load Boolean Value
GetStoredBooleanBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredBooleanBJHint=If the label is not found, this function returns False.

LoadBooleanBJ=Load Boolean Value (hashtable)
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint=If the label is not found, this function returns False.

HaveStoredValue=Cache Value Exists
HaveStoredValue=~Label," is stored as a ",~Type," of ",~Category," in ",~Game Cache

HaveSavedValue=Hashtable Value Exists
HaveSavedValue=~Value," is stored as a ",~Type," of ",~Value," in ",~Hashtable

UnitHasItem=Hero Has Item
UnitHasItem=~Hero," has ",~Item

UnitHasItemOfTypeBJ=Hero Has Item Of Type
UnitHasItemOfTypeBJ=~Hero," has an item of type ",~Item-Type

IsSuspendedXP=Experience Is Disabled For Hero
IsSuspendedXP="Experience is disabled for ",~Hero
IsSuspendedXPHint=Use the 'Hero - Enable/Disable Experience' action to disable a Hero's experience.

CheckItemStatus=Item Status Check
CheckItemStatus=~Item," is ",~Status

CheckItemcodeStatus=Item-Type Status Check
CheckItemcodeStatus=~Item-Type," is ",~Status

IsItemHiddenBJ=Item Is Hidden
IsItemHiddenBJ=~Item," is hidden"
IsItemHiddenBJHint=Items held by units are considered hidden.

IsItemOwned=Item Is Owned
IsItemOwned=~Item," is owned"
IsItemOwnedHint=Any item in a unit's inventory is considered owned, even if the owner is dead.

RectContainsItem=Item In Rect
RectContainsItem=~Item," is in ",~Rect
RectContainsItemHint=An owned item is not considered to be in any rects.

IsItemInvulnerable=Item Is Invulnerable
IsItemInvulnerable=~Item," is invulnerable"

LeaderboardHasPlayerItemBJ=Leaderboard Contains Player
LeaderboardHasPlayerItemBJ=~Leaderboard," contains ",~Player

IsMultiboardDisplayed=Multiboard Is Showing
IsMultiboardDisplayed=~Multiboard," is showing"

IsMultiboardMinimized=Multiboard Is Minimized
IsMultiboardMinimized=~Multiboard," is minimized"

WaygateIsActiveBJ=Way Gate Is Enabled
WaygateIsActiveBJ=~Way Gate," is enabled"

IsPlayerFlagSetBJ=Player Flag Is On
IsPlayerFlagSetBJ=~Player Flag," is on for ",~Player

IsPlayerAlly=Player Is An Ally Of Player
IsPlayerAlly=~Player," is an ally of ",~Player

IsPlayerEnemy=Player Is An Enemy Of Player
IsPlayerEnemy=~Player," is an enemy of ",~Player

GetPlayerAlliance=Player Alliance Towards Player
GetPlayerAlliance=~Player," is giving ",~Player," ",~Alliance Type

IsPlayerInForce=Player In Player Group
IsPlayerInForce=~Player," is in ",~Player Group

IsQuestItemCompleted=Quest Requirement Is Completed
IsQuestItemCompleted=~Quest Requirement," is completed"

IsQuestEnabled=Quest Is Enabled
IsQuestEnabled=~Quest," is enabled"

IsQuestCompleted=Quest Is Completed
IsQuestCompleted=~Quest," is completed"

IsQuestFailed=Quest Is Failed
IsQuestFailed=~Quest," is failed"

IsQuestDiscovered=Quest Is Discovered
IsQuestDiscovered=~Quest," is discovered"

IsQuestRequired=Quest Is Required
IsQuestRequired=~Quest," is required"

RectContainsLoc=Region Contains Point
RectContainsLoc=~Region," contains ",~Point

IsTriggerEnabled=Trigger Is On
IsTriggerEnabled=~Trigger," is on"

TriggerEvaluate=Evaluate Trigger Conditions
TriggerEvaluate="Evaluate ",~Trigger," conditions"

IsTriggerQueuedBJ=Trigger Is Queued
IsTriggerQueuedBJ=~Trigger," is queued"
IsTriggerQueuedBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsTriggerQueueEmptyBJ=Trigger Queue Is Empty
IsTriggerQueueEmptyBJ="The trigger queue is empty"
IsTriggerQueueEmptyBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IsUnitType=Unit Classification Check
IsUnitType=~Unit," is ",~Type

IsUnitIdType=Unit-Type Classification Check
IsUnitIdType=~Unit-Type," is ",~Type

IsUnitInGroup=Unit In Unit Group
IsUnitInGroup=~Unit," is in ",~Unit Group

RectContainsUnit=Unit In Rect
RectContainsUnit=~Rect," contains ",~Unit

IsUnitAliveBJ=Unit Is Alive
IsUnitAliveBJ=~Unit," is alive"

IsUnitDeadBJ=Unit Is Dead
IsUnitDeadBJ=~Unit," is dead"

IsUnitPausedBJ=Unit Is Paused
IsUnitPausedBJ=~Unit," is paused"

IsUnitHiddenBJ=Unit Is Hidden
IsUnitHiddenBJ=~Unit," is hidden"
IsUnitHiddenBJHint=A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc.

IsUnitIllusionBJ=Unit Is An Illusion
IsUnitIllusionBJ=~Unit," is an illusion"

UnitCanSleepPerm=Unit Sleeps
UnitCanSleepPerm=~Unit," sleeps when unprovoked"
UnitCanSleepPermHint=Units owned by players 1 through 12 never sleep.

UnitCanSleepBJ=Unit Sleeps At Night
UnitCanSleepBJ=~Unit," sleeps when unprovoked at night"
UnitCanSleepBJHint=Units owned by players 1 through 12 never sleep.

UnitIsSleepingBJ=Unit Is Sleeping
UnitIsSleepingBJ=~Unit," is sleeping"
UnitIsSleepingBJHint=Units owned by players 1 through 12 never sleep.

DoesUnitGenerateAlarms=Unit Generates Alarms
DoesUnitGenerateAlarms=~Unit," generates alarms"

IsUnitLoadedBJ=Unit Is Being Transported
IsUnitLoadedBJ=~Unit," is being transported"

IsUnitInTransportBJ=Unit Is In Transport
IsUnitInTransportBJ=~Unit," is loaded into ",~Transport

IsUnitSelected=Unit Selected By Player
IsUnitSelected=~Unit," is selected by ",~Player

IsUnitAlly=Unit Belongs To An Ally Of Player
IsUnitAlly=~Unit," belongs to an ally of ",~Player

IsUnitEnemy=Unit Belongs To An Enemy Of Player
IsUnitEnemy=~Unit," belongs to an enemy of ",~Player

UnitHasBuffBJ=Unit Has Specific Buff
UnitHasBuffBJ=~Unit," has buff ",~Buff

IsUnitGroupEmptyBJ=Unit Group Is Empty
IsUnitGroupEmptyBJ=~Unit Group," is empty"
IsUnitGroupEmptyBJHint=This is true if the unit group contains no units.

IsUnitGroupInRectBJ=Units Of Unit Group Are In Rect
IsUnitGroupInRectBJ="All units of ",~Unit Group," are in ",~Rect
IsUnitGroupInRectBJHint=This is true if every unit in the unit group is in the given rect.

IsUnitGroupDeadBJ=Units Of Unit Group Are Dead
IsUnitGroupDeadBJ="All units of ",~Unit Group," are dead"
IsUnitGroupDeadBJHint=This is true if every unit in the unit group is dead.

IsFogEnabled=Fog Of War Enabled
IsFogEnabled="Fog of war is enabled"

IsFogMaskEnabled=Black Mask Enabled
IsFogMaskEnabled="Black mask is enabled"

IsUnitVisible=Unit Is Visible To Player
IsUnitVisible=~Unit," is visible to ",~Player

IsUnitInvisible=Unit Is Invisible To Player
IsUnitInvisible=~Unit," is invisible to ",~Player

IsUnitFogged=Unit Fogged To Player
IsUnitFogged=~Unit," is fogged to ",~Player

IsUnitMasked=Unit Is Masked To Player
IsUnitMasked=~Unit," is masked to ",~Player

IsLocationVisibleToPlayer=Point Visible To Player
IsLocationVisibleToPlayer=~Point," is visible to ",~Player

IsLocationFoggedToPlayer=Point Fogged To Player
IsLocationFoggedToPlayer=~Point," is fogged for ",~Player

IsLocationMaskedToPlayer=Point Masked To Player
IsLocationMaskedToPlayer=~Point," is masked for ",~Player

IsTimerDialogDisplayed=Timer Dialog Is Displayed
IsTimerDialogDisplayed=~Timer Window," is displayed"
IsTimerDialogDisplayedHint=A timer window is showing [UMSWE]

IsLeaderboardDisplayed=Leaderboard Is Displayed
IsLeaderboardDisplayed=~Leaderboard," is displayed"
IsLeaderboardDisplayedHint=[UMSWE]

IsLocationInRegion=Is Point In Region
IsLocationInRegion="Does ",~Region," contain point ",~Location
IsLocationInRegionHint=[UMSWE]

IsUnitInRegion=Is Unit In Region
IsUnitInRegion="Does ",~Region," contain unit ",~Unit
IsUnitInRegionHint=[UMSWE]

IsPointInRegion=Region Contains Coordinates
IsPointInRegion=~Region," contains offset (",~Real,", ",~Real,")"
IsPointInRegionHint=[UMSWE]

IsUnitInForce=Unit In Player Group
IsUnitInForce=~Unit," is in ",~Player Group
IsUnitInForceHint=[UMSWE]

IsUnitOwnedByPlayer=Unit Is Owned by Player
IsUnitOwnedByPlayer=~Unit," is owned by ",~Player
IsUnitOwnedByPlayerHint=[UMSWE]

IsUnitInRange=Is Unit in Range of Unit
IsUnitInRange="Is ",~Unit," near ",~Unit," and withing a range of ",~Range
IsUnitInRangeHint=[UMSWE]

IsUnitInRangeLoc=Is Unit in Range of Point
IsUnitInRangeLoc="Is ",~Unit," near ",~Point," and within a range of ",~Range
IsUnitInRangeLocHint=[UMSWE]

IsUnitRace=Unit Race Check
IsUnitRace=~Unit," is a ",~Race
IsUnitRaceHint=Checks what race a unit is [UMSWE]

CompareRectsBJ=Rect Matches Rect
CompareRectsBJ=~Rect," matches ",~Rect
CompareRectsBJHint=Use this to compare rects [UMSWE]

CompareLocationsBJ=Location Matches Location
CompareLocationsBJ=~Point," matches ",~Point
CompareLocationsBJHint=Use this to compare locations [UMSWE]

RectContainsCoords=Rect Contains Coordinates
RectContainsCoords=~Rect," contains (",~Real,", ",~Real,")"
RectContainsCoordsHint=A rect contains the point (x,y) [UMSWE]

UnitIgnoreAlarmToggled=Does Unit Ignore Alarm
UnitIgnoreAlarmToggled="Does unit ",~Unit," ignore alarm"
UnitIgnoreAlarmToggledHint=[UMSWE]

HaveStoredInteger=Is Integer Stored
HaveStoredInteger="Is Integer in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredIntegerHint=[UMSWE]

HaveStoredBoolean=Is Boolean Stored
HaveStoredBoolean="Is Boolean in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredBooleanHint=[UMSWE]

HaveStoredReal=Is Real Stored
HaveStoredReal="Is Real in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredRealHint=[UMSWE]

HaveStoredUnit=Is Unit Stored
HaveStoredUnit="Is Unit in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredUnitHint=[UMSWE]

HaveStoredString=Is String Stored
HaveStoredString="Is String in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredStringHint=[UMSWE]

      =JASS Code
      =~Script Code"
      Hint=Enter JASS code that returns a boolean value. Example: MyBoolean() [UMSWE]

QueuedTriggerRemoveByIndex=Remove Trigger From Trigger Queue by Index
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint=Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]

ReviveHeroLoc=Revive Hero (Instantly)
ReviveHeroLoc="Successful: Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint=This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive. [UMSWE]

UnitMakeAbilityPermanent=Unit Make Ability Permanent
UnitMakeAbilityPermanent="Successful: For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentHint=[UMSWE]

UnitAddAbilityBJ=Unit Add Ability
UnitAddAbilityBJ="Successful: Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint=[UMSWE]

UnitRemoveAbilityBJ=Unit Remove Ability
UnitRemoveAbilityBJ="Successful: Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint=In most cases, removing an ability in this manner is permanent. [UMSWE]

UnitRemoveBuffBJ=Unit Remove Specific Buff
UnitRemoveBuffBJ="Successful: Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint=[UMSWE]

UnitAddItemSwapped=Give Item To Hero
UnitAddItemSwapped="Successful: Give ",~Item," to ",~Hero
UnitAddItemSwappedHint=[UMSWE]

UnitAddItemByIdSwapped=Unit Create Item For Hero
UnitAddItemByIdSwapped="Successful: Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint=[UMSWE]

UnitAddItemToSlotById=Create Item In Hero Inventory Slot
UnitAddItemToSlotById="Successful: Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint=Creates an item in a specific item slot [UMSWE]

UnitUseItem=Unit Use Item
UnitUseItem="Successful: Order ",~Hero," to use ",~Item
UnitUseItemHint=[UMSWE]

UnitUseItemTarget=Unit Use Item On A Unit
UnitUseItemTarget="Successful: Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint=[UMSWE]

UnitUseItemPointLoc=Unit Use Item On A Point
UnitUseItemPointLoc="Successful: Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint=[UMSWE]

UnitUseItemDestructable=Unit Use Item On A Destructible
UnitUseItemDestructable="Successful: Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint=[UMSWE]

IssueInstantTargetOrder=Give Item from Hero to Hero
IssueInstantTargetOrder="Successful: Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint=The ordered hero will walk to the target hero to hand the item over. [UMSWE]

IssueImmediateOrder=Unit Issue Order With No Target
IssueImmediateOrder="Successful: Order ",~Unit," to ",~Order
IssueImmediateOrderHint=[UMSWE]

IssuePointOrderLoc=Unit Issue Order Targeting A Point
IssuePointOrderLoc="Successful: Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint=[UMSWE]

IssueTargetOrder=Unit Issue Order Targeting A Unit
IssueTargetOrder="Successful: Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint=[UMSWE]

IssueTargetDestructableOrder=Unit Issue Order Targeting A Destructible
IssueTargetDestructableOrder="Successful: Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=[UMSWE]

IssueTargetOrderBJ=Unit Issue Order Targeting An Item
IssueTargetOrderBJ="Successful: Order ",~Unit," to ",~Order," ",~Item
IssueTargetOrderBJHint=[UMSWE]

IssueBuildOrderByIdLocBJ=Unit Issue Build Order
IssueBuildOrderByIdLocBJ="Successful: Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint=[UMSWE]

IssueTrainOrderByIdBJ=Unit Issue Train/Upgrade Order
IssueTrainOrderByIdBJ="Successful: Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint=This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep. [UMSWE]

IssueUpgradeOrderByIdBJ=Unit Issue Research Order
IssueUpgradeOrderByIdBJ="Successful: Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint=Weapons and armor upgrades can be researched multiple times via this trigger action. [UMSWE]

IssueNeutralImmediateOrderById=Player Buy Unit from Store
IssueNeutralImmediateOrderById="Successful: For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint=[UMSWE]

GroupTargetOrder=Group Issue Order Targeting A Unit
GroupTargetOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupTargetDestructableOrder=Group Issue Order Targeting A Destructible
GroupTargetDestructableOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTargetOrderBJ=Group Issue Order Targeting An Item
GroupTargetOrderBJ="Successful: Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetOrderBJHint=This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]

GroupPointOrderLoc=Group Issue Order Targeting A Point
GroupPointOrderLoc="Successful: Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupImmediateOrder=Group Issue Order With No Target
GroupImmediateOrder="Successful: Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint=This will issue an order to at most 12 units from the specified unit group. [UMSWE]

GroupTrainOrderByIdBJ=Group Issue Train Order
GroupTrainOrderByIdBJ="Successful: Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint=This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group. [UMSWE]

IsUnitInRangeXY=Unit Is In Range Of Coordinate Offset
IsUnitInRangeXY="The distance between ",~Unit," and offset(",~X,", ",~Y,") matches ",~Range
IsUnitInRangeXYHint=Just here for COMPATIBILITY reasons. [UMSWE]

GetCurrentCameraSetup=Current Camera
GetCurrentCameraSetup="Current camera"

LoadDestructableHandleBJ=Load Destructable Handle
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDestructable=Last Created Destructible
GetLastCreatedDestructable="Last created destructible"
GetLastCreatedDestructableHint=This is the last destructible created via a 'Destructible - Create' trigger action.

RandomDestructableInRectSimpleBJ=Random Destructible In Region
RandomDestructableInRectSimpleBJ="Random destructible in ",~Region

RandomDestructableInRectBJ=Random Destructible In Region Matching Condition
RandomDestructableInRectBJ="Random destructible in ",~Region," matching ",~Condition
RandomDestructableInRectBJHint=Use 'Matching Destructible' to refer to the destructible being considered.

GetEnumDestructable=Picked Destructible
GetEnumDestructable="Picked destructible"
GetEnumDestructableHint=When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked.

GetFilterDestructable=Matching Destructible
GetFilterDestructable="Matching destructible"
GetFilterDestructableHint=Use this to refer to the destructible being considered for the 'Random Destructible' functions.

GetDyingDestructable=Dying Destructible
GetDyingDestructable="Dying destructible"
GetDyingDestructableHint=When responding to a 'Destructible Dies' event, this refers to the destructible that is dying.

GetOrderTargetDestructable=Target Destructible Of Issued Order
GetOrderTargetDestructable="Target destructible of issued order"
GetOrderTargetDestructableHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a destructible target, this refers to the target of the order.

GetSpellTargetDestructable=Target Destructible Of Ability Being Cast
GetSpellTargetDestructable="Target destructible of ability being cast"
GetSpellTargetDestructableHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast.

GetUnitRallyDestructable=Rally-Point As Destructible
GetUnitRallyDestructable="Rally-Point of ",~Unit," as a destructible"
GetUnitRallyDestructableHint=If the unit does not have a rally-point set to a destructible, this will return 'No destructible'.

CreateDestructableZ=Create with Z offset
CreateDestructableZ="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

CreateDeadDestructableZ=Create with Z offset (dead)
CreateDeadDestructableZ="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZHint=The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]

       =JASS Code
       =~Script Code"
       Hint=Enter JASS code that returns a destructible (~=handle). Example: MyDestructable() [UMSWE]

GetDestructableTypeId=Destructible-Type of Destructible
GetDestructableTypeId="Destructible-type of ",~Destructible

        =JASS Code
        =~Script Code"
        Hint=Enter JASS code that returns a destructible type (integer). Example: 'LTlt' [UMSWE]

LoadDefeatConditionHandleBJ=Load Defeatcondition Handle
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedDefeatConditionBJ=Last Created Defeat Condition
GetLastCreatedDefeatConditionBJ="Last created defeat condition"
GetLastCreatedDefeatConditionBJHint=This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action.

LoadDialogHandleBJ=Load Dialog Handle
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint=If the label is not found, this function returns NULL.

GetClickedDialogBJ=Clicked Dialog
GetClickedDialogBJ="Clicked dialog"
GetClickedDialogBJHint=When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button.

DialogCreate=New Dialog
DialogCreate="New Dialog"
DialogCreateHint=Used to initialize a dialog array or clear a dialog variable [UMSWE]

         =JASS Code
         =~Script Code"
         Hint=Enter JASS code that returns a dialog. Example: MyDialog() [UMSWE]

LoadButtonHandleBJ=Load Button Handle
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedButtonBJ=Last Created Dialog Button
GetLastCreatedButtonBJ="Last created dialog Button"
GetLastCreatedButtonBJHint=This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action.

GetClickedButtonBJ=Clicked Dialog Button
GetClickedButtonBJ="Clicked dialog button"
GetClickedButtonBJHint=When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked.

DialogAddButton=Create Dialog Button With Hotkey
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey ",~Keycode
DialogAddButtonHint=Creates a dialog button with a hotkey based on ASCII value. [UMSWE]

          =JASS Code
          =~Script Code"
          Hint=Enter JASS code that returns a dialog button. Example: MyButton() [UMSWE]

LoadTextTagHandleBJ=Load Texttag Handle
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable

GetLastCreatedTextTag=Last Created Floating Text
GetLastCreatedTextTag="Last created floating text"
GetLastCreatedTextTagHint=This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action.

            =JASS Code
            =~Script Code"
            Hint=Enter JASS code that returns a Floating Text. Example: MyTexttag() [UMSWE]

GetLastCreatedGameCacheBJ=Last Created Game Cache
GetLastCreatedGameCacheBJ="Last created game cache"
GetLastCreatedGameCacheBJHint=This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action.

InitGameCache=Create
InitGameCache="Create a game cache from ",~FileName
InitGameCacheHint=A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created. [UMSWE]

GetGameSpeed=Current Game Speed
GetGameSpeed="Current game speed"

GetLastCreatedHashtableBJ=Last Created Hashtable
GetLastCreatedHashtableBJ="Last created hashtable"
GetLastCreatedHashtableBJHint=This is the last hashtable created via a 'Hashtable - Create Hashtable' trigger action.

LoadImageHandleBJ=Load Image Handle
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedImage=Last Created Image
GetLastCreatedImage="Last created image"

  =JASS Code
  =~Script Code"
  Hint=Enter JASS code that returns an image. Example: MyImage() [UMSWE]

GetHandleIdBJ=Get Handle ID
GetHandleIdBJ="Key ",~Handle
GetHandleIdBJHint=Creates a key from a handle for use in the hashtable.

StringHashBJ=Get String ID
StringHashBJ="Key ",~String
StringHashBJHint=Creates a key from a string for use in the hashtable.

LoadIntegerBJ=Load Integer Value (hashtable)
LoadIntegerBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadIntegerBJHint=If the label is not found, this function returns 0.

OperatorInt=Arithmetic
OperatorInt=~Value," ",~Operator," ",~Value

GetForLoopIndexA=For Loop Integer A
GetForLoopIndexA="Integer A"

GetForLoopIndexB=For Loop Integer B
GetForLoopIndexB="Integer B"

StringLength=String Length
StringLength="Length of ",~String

R2I=Convert Real To Integer
R2I="Integer(",~Real,")"

S2I=Convert String To Integer
S2I="Integer(",~String,")"

GetElevatorHeight=Elevator Height
GetElevatorHeight="Height of ",~Elevator
GetElevatorHeightHint=An elevator's height can be changed using the 'Destructible - Set Elevator Height' action.

GetTerrainCliffLevelBJ=Terrain Cliff Level
GetTerrainCliffLevelBJ="Terrain cliff level at ",~Location
GetTerrainCliffLevelBJHint=Cliff level values start at zero.

GetTerrainVarianceBJ=Terrain Variance
GetTerrainVarianceBJ="Terrain variance at ",~Location

GetLearnedSkillLevel=Learned Skill Level
GetLearnedSkillLevel="Learned skill level"

GetPlayers=Number Of Players
GetPlayers="Number of players"

GetTeams=Number Of Teams
GetTeams="Number of teams"

GetAllyColorFilterState=Ally Color Filter Setting
GetAllyColorFilterState="Ally color filter setting"
GetAllyColorFilterStateHint=A value of 0 indicates that filtering is disabled.  A value of 1 indicates that filtering is only enabled for the minimap.  A value of 2 indicates that filtering is enabled for the minimap and the game view.

GetTournamentFinishNowRule=Tournament Finish Rule
GetTournamentFinishNowRule="Tournament finish rule"
GetTournamentFinishNowRuleHint=A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw.

GetTournamentScore=Tournament Melee Score
GetTournamentScore="Tournament melee score for ",~Player
GetTournamentScoreHint=This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long.

GetStoredIntegerBJ=Load Integer Value
GetStoredIntegerBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredIntegerBJHint=If the label is not found, this function returns 0.

GetHeroLevel=Hero Level
GetHeroLevel="Hero level of ",~Hero

GetHeroXP=Hero Experience
GetHeroXP="Hero experience of ",~Hero

GetHeroStatBJ=Hero Attribute
GetHeroStatBJ=~Attribute," of ",~Hero," (",~Include/Exclude," bonuses)"

GetHeroSkillPoints=Unspent Skill Points
GetHeroSkillPoints="Unspent skill points of ",~Hero

GetItemLevel=Item Level
GetItemLevel="Item level of ",~Item

GetItemCharges=Item Charges Remaining
GetItemCharges="Charges remaining in ",~Item
GetItemChargesHint=Items with unlimited charges will return zero.

GetItemUserData=Custom Value Of Item
GetItemUserData="Custom value of ",~Item
GetItemUserDataHint=Use 'Item - Set Custom Value' to set the custom value of an item.

LeaderboardGetPlayerIndexBJ=Leaderboard Position
LeaderboardGetPlayerIndexBJ="Position of ",~Player," in ",~Leaderboard

GetRandomInt=Random Number
GetRandomInt="Random integer number between ",~Minimum," and ",~Maximum

IMinBJ=Min
IMinBJ="Min(",~Value 1,", ",~Value 2,")"

IMaxBJ=Max
IMaxBJ="Max(",~Value 1,", ",~Value 2,")"

IAbsBJ=Abs
IAbsBJ="Abs(",~Value,")"
IAbsBJHint=Calculates the absolute value of a number.

ISignBJ=Sign
ISignBJ="Sign(",~Value,")"
ISignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloInteger=Modulo
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint=Calculates the remainder of a division.  Example: 12 mod 5 = 2.

MultiboardGetRowCount=Row Count
MultiboardGetRowCount="Number of rows in ",~Multiboard

MultiboardGetColumnCount=Column Count
MultiboardGetColumnCount="Number of columns in ",~Multiboard

GetResourceAmount=Gold Remaining
GetResourceAmount="Resource quantity contained in ",~Gold Mine
GetResourceAmountHint=This is for use with Gold Mines.

GetPlayerState=Player Property
GetPlayerState=~Player," ",~Property

GetPlayerTaxRateBJ=Player Tax Rate
GetPlayerTaxRateBJ="Tax rate of ",~Resource," from ",~Player," to ",~Player
GetPlayerTaxRateBJHint=The tax rate value is a percentage of total income (0-100).

GetPlayerScore=Player Score
GetPlayerScore=~Player," ",~Score

GetConvertedPlayerId=Player Number
GetConvertedPlayerId="Player number of ",~Player
GetConvertedPlayerIdHint=Player numbers range from 1 to 16.

GetPlayerStructureCount=Count Structures
GetPlayerStructureCount="Count structures controlled by ",~Player," (",~Include/Exclude," incomplete structures)"

GetPlayerUnitCount=Count Non-Structure Units
GetPlayerUnitCount="Count non-structure units controlled by ",~Player," (",~Include/Exclude," incomplete units)"

GetPlayerTechCountSimple=Current Research Level
GetPlayerTechCountSimple="Current research level of ",~Tech," for ",~Player
GetPlayerTechCountSimpleHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTechMaxAllowedSwap=Max Research Level
GetPlayerTechMaxAllowedSwap="Max research level of ",~Tech," for ",~Player
GetPlayerTechMaxAllowedSwapHint=Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades.

GetPlayerTeam=Player Team
GetPlayerTeam="Team number of ",~Player

CountPlayersInForceBJ=Count Players In Player Group
CountPlayersInForceBJ="Number of players in ",~Player Group

CountUnitsInGroup=Count Units In Unit Group
CountUnitsInGroup="Number of units in ",~Unit Group

CountLivingPlayerUnitsOfTypeId=Count Living Units Owned By Player
CountLivingPlayerUnitsOfTypeId="Number of living ",~Unit-Type," units owned by ",~Player

GetUnitFoodUsed=Supply Used By Unit
GetUnitFoodUsed="Supply used by ",~Unit

GetUnitFoodMade=Supply Provided By Unit
GetUnitFoodMade="Supply provided by ",~Unit

GetFoodUsed=Supply Used By Unit-Type
GetFoodUsed="Supply used by ",~Unit-Type

GetFoodMade=Supply Provided By Unit-Type
GetFoodMade="Supply provided by ",~Unit-Type

GetUnitPointValue=Point-Value Of Unit
GetUnitPointValue="Point-value of ",~Unit

GetUnitPointValueByType=Point-Value Of Unit-Type
GetUnitPointValueByType="Point-value of ",~Unit-Type

GetUnitUserData=Custom Value Of Unit
GetUnitUserData="Custom value of ",~Unit
GetUnitUserDataHint=Use 'Unit - Set Custom Value' to set the custom value of a unit.

GetUnitLevel=Level Of Unit
GetUnitLevel="Level of ",~Unit
GetUnitLevelHint=This may be used for heroes and regular units.

GetUnitAbilityLevelSwapped=Level Of Ability For Unit
GetUnitAbilityLevelSwapped="Level of ",~Ability," for ",~Unit
GetUnitAbilityLevelSwappedHint=If the unit does not have the ability, the result will be zero.

UnitInventoryCount=Count Items Carried
UnitInventoryCount="Number of items carried by ",~Unit

UnitInventorySizeBJ=Size of Inventory
UnitInventorySizeBJ="Size of inventory for ",~Unit

UnitCountBuffsExBJ=Count Buffs By Type
UnitCountBuffsExBJ="Number of ",~Buff Type," buffs considered ",~Buff Resist," on ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"

GetTriggerEvalCount=Trigger Evaluation Count
GetTriggerEvalCount="Evaluation count of ",~Trigger

GetTriggerExecCount=Trigger Execution Count
GetTriggerExecCount="Execution count of ",~Trigger

QueuedTriggerCountBJ=Count Triggers In Trigger Queue
QueuedTriggerCountBJ="Number of triggers in the trigger queue"
QueuedTriggerCountBJHint=Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue.

IntegerTertiaryOp=Tertiary Integer Option
IntegerTertiaryOp="If ",~Condition," is equal to true then use ",~Nr," else use ",~Nr
IntegerTertiaryOpHint=[UMSWE]

GetIntegerGameState=Game State
GetIntegerGameState=~Gamestate"
GetIntegerGameStateHint=[UMSWE]

LeaderboardGetItemCount=Leaderboard Player Count
LeaderboardGetItemCount="Player count of ",~Leaderboard
LeaderboardGetItemCountHint=[UMSWE]

QueuedTriggerGetIndex=Index Of Queued Trigger
QueuedTriggerGetIndex="Index of ",~Trigger," in the trigger queue"
QueuedTriggerGetIndexHint=Searches the queue for a given trigger, returning the index of the trigger within the queue if it is found, or -1 if it is not found [UMSWE]

GetPlayerTypedUnitCount=Count Units of Player of Type
GetPlayerTypedUnitCount="Count units of player ",~Player," of type ",~unitname," and include incomplete units ",~Include," and include currently upgrading buildings ",~Include
GetPlayerTypedUnitCountHint=Use the names of the 6th column of UnitUI.slk as unitnames [UMSWE]

             =JASS Code
             =~Script Code"
             Hint=Enter JASS code that returns an integer value. Example: 0xFF

GetUnitAbilityLevel=Level Of Buff For Unit
GetUnitAbilityLevel="For ",~Unit," the level of ",~Buff
GetUnitAbilityLevelHint=ust here for COMPATIBILITY reasons. Would return 1 if the unit has the buff [UMSWE]

LoadItemHandleBJ=Load Item Handle
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedItem=Last Created Item
GetLastCreatedItem="Last created item"
GetLastCreatedItemHint=This is the last item created via an 'Item - Create' or 'Hero - Create Item For Hero' trigger action.

GetLastRemovedItem=Last Dropped Item
GetLastRemovedItem="Last dropped item"
GetLastRemovedItemHint=This is the last item dropped via a 'Hero - Drop Item' trigger action.

RandomItemInRectSimpleBJ=Random Item In Region
RandomItemInRectSimpleBJ="Random item in ",~Region

RandomItemInRectBJ=Random Item In Region Matching Condition
RandomItemInRectBJ="Random item in ",~Region," matching ",~Condition
RandomItemInRectBJHint=Use 'Matching Item' to refer to the item being considered.

GetEnumItem=Picked Item
GetEnumItem="Picked item"
GetEnumItemHint=When using the 'Pick Every Item...' action, this refers to each item as it is picked.

GetFilterItem=Matching Item
GetFilterItem="Matching item"
GetFilterItemHint=Use this to refer to the item being considered for the 'Random Item' functions.

UnitItemInSlotBJ=Item Carried By Hero
UnitItemInSlotBJ="Item carried by ",~Hero," in slot ",~Index

GetItemOfTypeFromUnitBJ=Item Carried By Hero Of Type
GetItemOfTypeFromUnitBJ="Item carried by ",~Hero," of type ",~Item-Type

GetManipulatedItem=Item Being Manipulated
GetManipulatedItem="Item being manipulated"
GetManipulatedItemHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated.

GetSoldItem=Sold Item
GetSoldItem="Sold Item"
GetSoldItemHint=When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold.

GetOrderTargetItem=Target Item Of Issued Order
GetOrderTargetItem="Target item of issued order"
GetOrderTargetItemHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order.

GetSpellTargetItem=Target Item Of Ability Being Cast
GetSpellTargetItem="Target item of ability being cast"
GetSpellTargetItemHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast.

CreateItemLoc=Create Item At Location
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint=[UMSWE]

              =JASS Code
              =~Script Code"
              Hint=Enter JASS code that returns an item (~=handle). Example: MyItem() [UMSWE]

GetItemType=Item-Class Of Item
GetItemType="Item-class of ",~Item

GetItemTypeId=Item-Type Of Item
GetItemTypeId="Item-type of ",~Item

ChooseRandomItemBJ=Random Item-Type
ChooseRandomItemBJ="Random level ",~Level," item-type"
ChooseRandomItemBJHint=This function corresponds to the original unclassified item system with levels 0-10.  Use -1 for any level.

ChooseRandomItemExBJ=Random Item-Type Of Class
ChooseRandomItemExBJ="Random level ",~Level," ",~Class," item-type"
ChooseRandomItemExBJHint=This function corresponds to the newer item classification system with levels 0-8.  Use -1 for any level.

RandomDistChoose=Get Random Item From Pool
RandomDistChoose="Get a random item from your own item pool"
RandomDistChooseHint=Use 'Add Random Item to Pool' to create your own item pool [UMSWE]

               =JASS Code
               =~Script Code"
               Hint=Enter JASS code that returns an item type (integer). Example: 'phea' [UMSWE]

LoadLeaderboardHandleBJ=Load Leaderboard Handle
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLeaderboard=Last Created Leaderboard
GetLastCreatedLeaderboard="Last created leaderboard"
GetLastCreatedLeaderboardHint=This is the last leaderboard created via a 'Leaderboard - Create Leaderboard' trigger action.

PlayerGetLeaderboardBJ=Leaderboard Of Player
PlayerGetLeaderboardBJ="Leaderboard of ",~Player
PlayerGetLeaderboardBJHint=Each player can have at most one leaderboard.

                =JASS Code
                =~Script Code"
                Hint=Enter JASS code that returns a leaderboard. Example: MyLeaderboard() [UMSWE]

LoadLightningHandleBJ=Load Lightning Handle
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedLightningBJ=Last Created Lightning Effect
GetLastCreatedLightningBJ="Last created lightning effect"

   =JASS Code
   =~Script Code"
   Hint=Enter JASS code that returns a lightning. Example: MyLightning() [UMSWE]

LoadMultiboardHandleBJ=Load Multiboard Handle
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedMultiboard=Last Created Multiboard
GetLastCreatedMultiboard="Last created multiboard"
GetLastCreatedMultiboardHint=This is the last multiboard created via a 'Multiboard - Create Multiboard' trigger action.

                 =JASS Code
                 =~Script Code"
                 Hint=Enter JASS code that returns a multiboard value. Example: MyMultiboard() [UMSWE]

CreateMultiboard=Create Multiboard
CreateMultiboard="Create new multiboard"
CreateMultiboardHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

String2OrderIdBJ=Convert String To Order
String2OrderIdBJ="Order(",~String,")"
String2OrderIdBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2OrderIdBJ=Convert Unit-Type To Order
UnitId2OrderIdBJ="Order(",~Unit-Type,")"

GetIssuedOrderIdBJ=Issued Order
GetIssuedOrderIdBJ="Issued order"
GetIssuedOrderIdBJHint=When responding to 'Is Issued An Order' unit events, this refers to the order being issued.

GetUnitCurrentOrder=Current Order Of Unit
GetUnitCurrentOrder="Current order of ",~Unit

                   =JASS Code
                   =~Script Code"
                   Hint=Enter JASS code that returns an orderid value (integer). Example: 852000 [UMSWE]

LoadPlayerHandleBJ=Load Player Handle
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint=If the label is not found, this function returns NULL.

GetEnumPlayer=Picked Player
GetEnumPlayer="Picked player"
GetEnumPlayerHint=When using the 'Pick Every Player...' action, this refers to each player as he/she is picked.

GetFilterPlayer=Matching Player
GetFilterPlayer="Matching player"
GetFilterPlayerHint=Use this to refer to the player being considered for the 'All Players Matching Condition' function.

GetOwningPlayer=Owner Of Unit
GetOwningPlayer="Owner of ",~Unit

GetItemPlayer=Owner Of Item
GetItemPlayer="Owner of ",~Item

ForcePickRandomPlayer=Random Player From Player Group
ForcePickRandomPlayer="Random player from ",~Player Group

ConvertedPlayer=Convert Player Index To Player
ConvertedPlayer="Player(",~Player Index,")"
ConvertedPlayerHint=Player indexes range from 1 to 16.

GetChangingUnitPrevOwner=Previous Owner
GetChangingUnitPrevOwner="Previous owner"
GetChangingUnitPrevOwnerHint=When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit.

GetTriggerPlayer=Triggering Player
GetTriggerPlayer="Triggering player"

LeaderboardGetIndexedPlayerBJ=Player In Position
LeaderboardGetIndexedPlayerBJ="Player in position ",~Position," of ",~Leaderboard

GetEventDetectingPlayer=Detecting Player
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayerHint=When responding to a 'Unit Is detected' unit event, this refers to the player, who detects the unit [UMSWE]

GetWinningPlayer=Winning Player
GetWinningPlayer="Get winning player"
GetWinningPlayerHint=For victory event [UMSWE]

GetLocalPlayer=Local Player
GetLocalPlayer="Local player"
GetLocalPlayerHint=Use a player comparison with local player to do certain actions just for certain players on bnet. [UMSWE]

                    =JASS Code
                    =~Script Code"
                    Hint=Enter JASS code that returns a Player. Example: MyPlayer() [UMSWE]

GetPlayerColor=Color Of Player
GetPlayerColor="Color of ",~Player

LoadForceHandleBJ=Load Force Handle
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint=If the label is not found, this function returns NULL.

GetPlayersAll=All Players
GetPlayersAll="All players"
GetPlayersAllHint=Includes unused and neutral players.

GetPlayersByMapControl=All Players Of Control
GetPlayersByMapControl="All players controlled by a ",~Control Type," player"

GetPlayersMatching=All Players Matching Condition
GetPlayersMatching="All players matching ",~Condition
GetPlayersMatchingHint=Use 'Matching Player' to refer to the player on whom the comparison is being performed.  This includes unused and neutral players.

GetPlayersAllies=Allies Of Player
GetPlayersAllies="All allies of ",~Player
GetPlayersAlliesHint=All allies of the specified player, including him/herself.

GetPlayersEnemies=Enemies Of Player
GetPlayersEnemies="All enemies of ",~Player
GetPlayersEnemiesHint=All enemies of the specified player.

GetForceOfPlayer=Convert Player To Player Group
GetForceOfPlayer="Player group(",~Player,")"

CreateForce=Create Force
CreateForce="Create new force"
CreateForceHint=Used to initialize force arrays [UMSWE]

                     =JASS Code
                     =~Script Code"
                     Hint=Enter JASS code that returns a Player Group. Example: MyForce() [UMSWE]

LoadLocationHandleBJ=Load Location Handle
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint=If the label is not found, this function returns NULL.

GetRectCenter=Center Of Rect
GetRectCenter="Center of ",~Rect
GetRectCenterHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetRandomLocInRect=Random Point In Rect
GetRandomLocInRect="Random point in ",~Rect
GetRandomLocInRectHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

OffsetLocation=Point With Offset
OffsetLocation=~Point," offset by (",~X,", ",~Y,")"
OffsetLocationHint=The offset values are (X, Y). The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

PolarProjectionBJ=Point With Polar Offset
PolarProjectionBJ=~Point," offset by ",~Distance," towards ",~Angle," degrees"
PolarProjectionBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

CameraSetupGetDestPositionLoc=Target Of Camera Object
CameraSetupGetDestPositionLoc="Target of ",~Camera Object
CameraSetupGetDestPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraTargetPositionLoc=Target Of Current Camera
GetCameraTargetPositionLoc="Target of current camera view"
GetCameraTargetPositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetCameraEyePositionLoc=Source Of Current Camera
GetCameraEyePositionLoc="Source of current camera view"
GetCameraEyePositionLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

Location=Convert Coordinates To Point
Location="Point(",~X,", ",~Y,")"
LocationHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetDestructableLoc=Position Of Destructible
GetDestructableLoc="Position of ",~Destructible
GetDestructableLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetOrderPointLoc=Target Point Of Issued Order
GetOrderPointLoc="Target point of issued order"
GetOrderPointLocHint=When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order. Save it to a variable and later remove it

GetSpellTargetLoc=Target Point Of Ability Being Cast
GetSpellTargetLoc="Target point of ability being cast"
GetSpellTargetLocHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast. Save it to a variable and later remove it

GetItemLoc=Position Of Item
GetItemLoc="Position of ",~Item
GetItemLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

WaygateGetDestinationLocBJ=Way Gate Destination
WaygateGetDestinationLocBJ="Destination of ",~Way Gate
WaygateGetDestinationLocBJHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetPlayerStartLocationLoc=Player Start Location
GetPlayerStartLocationLoc=~Player," start location"
GetPlayerStartLocationLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitLoc=Position Of Unit
GetUnitLoc="Position of ",~Unit
GetUnitLocHint=The point has to be saved in a variable in order to use it and then removed to prevent memory leaks

GetUnitRallyPoint=Rally-Point As Point
GetUnitRallyPoint="Rally-Point of ",~Unit," as a point"
GetUnitRallyPointHint=If the unit has no rally-point set, the result will be (0,0) Save it to a variable and later remove it

                      =JASS Code
                      =~Script Code"
                      Hint=Enter JASS code that returns a Point value. Example: MyLocation() [UMSWE]

LoadQuestHandleBJ=Load Quest Handle
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestBJ=Last Created Quest
GetLastCreatedQuestBJ="Last created quest"
GetLastCreatedQuestBJHint=This is the last quest created via a 'Quest - Create Quest' trigger action.

LoadQuestItemHandleBJ=Load Questitem Handle
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedQuestItemBJ=Last Created Quest Requirement
GetLastCreatedQuestItemBJ="Last created quest requirement"
GetLastCreatedQuestItemBJHint=This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action.

GetPlayerRace=Race Of Player
GetPlayerRace="Race of ",~Player

GetUnitRace=Race Of Unit
GetUnitRace="Race of ",~Unit

LoadRealBJ=Load Real Value (hashtable)
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint=If the label is not found, this function returns 0.

OperatorReal=Arithmetic
OperatorReal=~Value," ",~Operator," ",~Value

GetLocationX=X Of Point
GetLocationX="X of ",~Point

GetLocationY=Y Of Point
GetLocationY="Y of ",~Point

CameraSetupGetFieldSwap=Camera Field Of Camera Object
CameraSetupGetFieldSwap=~Camera Field," of ",~Camera Object

GetCameraField=Camera Field Of Current Camera
GetCameraField=~Camera Field," of the current camera view"

GetCameraTargetPositionX=Target X Of Current Camera
GetCameraTargetPositionX="Target X of current camera view"

GetCameraTargetPositionY=Target Y Of Current Camera
GetCameraTargetPositionY="Target Y of current camera view"

GetCameraTargetPositionZ=Target Z Of Current Camera
GetCameraTargetPositionZ="Target Z of current camera view"

GetCameraEyePositionX=Source X Of Current Camera
GetCameraEyePositionX="Source X of current camera view"

GetCameraEyePositionY=Source Y Of Current Camera
GetCameraEyePositionY="Source Y of current camera view"

GetCameraEyePositionZ=Source Z Of Current Camera
GetCameraEyePositionZ="Source Z of current camera view"

GetLastTransmissionDurationBJ=Last Transmission Length
GetLastTransmissionDurationBJ="Length of last transmission"
GetLastTransmissionDurationBJHint=This is the length, in seconds, of the last used 'Cinematic - Transmission' action.

I2R=Convert Integer To Real
I2R="Real(",~Integer,")"

S2R=Convert String To Real
S2R="Real(",~String,")"

Deg2Rad=Convert Degrees To Radians
Deg2Rad="Radians(",~Degrees,")"

Rad2Deg=Convert Radians To Degrees
Rad2Deg="Degrees(",~Radians,")"

TimerGetElapsed=Elapsed Time
TimerGetElapsed="Elapsed time for ",~Timer

TimerGetRemaining=Remaining Time
TimerGetRemaining="Remaining time for ",~Timer

TimerGetTimeout=Initial Time
TimerGetTimeout="Initial time for ",~Timer

GetDestructableLife=Life
GetDestructableLife="Current life of ",~Destructible
GetDestructableLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableMaxLife=Max Life
GetDestructableMaxLife="Max life of ",~Destructible
GetDestructableMaxLifeHint=Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0.

GetDestructableOccluderHeight=Occlusion Height
GetDestructableOccluderHeight="Occlusion height of ",~Destructible

GetEventDamage=Damage Taken
GetEventDamage="Damage taken"
GetEventDamageHint=When responding to a 'Takes Damage' unit event, this refers to the amount of damage being taken.

GetTournamentFinishSoonTimeRemaining=Tournament Time Remaining
GetTournamentFinishSoonTimeRemaining="Tournament time remaining"
GetTournamentFinishSoonTimeRemainingHint=When responding to a 'Game must end soon' tournament event, this returns the amount of time remaining, in real-time seconds.

GetTimeOfDay=Time Of Day
GetTimeOfDay="In-game time of day"
GetTimeOfDayHint=This is in game time, not real time.

GetTimeOfDayScalePercentBJ=Time Of Day Speed
GetTimeOfDayScalePercentBJ="Current time of day speed"
GetTimeOfDayScalePercentBJHint=This returns the time of day speed as a percentage of the default time of day speed.

GetStoredRealBJ=Load Real Value
GetStoredRealBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredRealBJHint=If the label is not found, this function returns 0.

GetItemLifeBJ=Item Life
GetItemLifeBJ="Current life of ",~Item

GetLightningColorRBJ=Red Color of Lightning
GetLightningColorRBJ="Red color of ",~Lightning
GetLightningColorRBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorGBJ=Green Color of Lightning
GetLightningColorGBJ="Green color of ",~Lightning
GetLightningColorGBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorBBJ=Blue Color of Lightning
GetLightningColorBBJ="Blue color of ",~Lightning
GetLightningColorBBJHint=This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect.

GetLightningColorABJ=Alpha Value of Lightning
GetLightningColorABJ="Alpha value of ",~Lightning
GetLightningColorABJHint=This returns a value between 0 and 1.  A value of 0 corresponds to a completely invisible lightning effect.  Use 'Lightning - Set Lightning Effect Color' to change the alpha value of a Lightning Effect.

GetRandomReal=Random Number
GetRandomReal="Random real number between ",~Minimum," and ",~Maximum

GetRandomDirectionDeg=Random Angle
GetRandomDirectionDeg="Random angle"
GetRandomDirectionDegHint=This is a random real number in the range of 0 to 360, for use as an angle or a unit facing.

GetRandomPercentageBJ=Random Percentage
GetRandomPercentageBJ="Random percentage"
GetRandomPercentageBJHint=This is a random real number in the range of 0 to 100, for use as a percentage.

DistanceBetweenPoints=Distance Between Points
DistanceBetweenPoints="Distance between ",~Point," and ",~Point
DistanceBetweenPointsHint=Returns the Euclidean distance between two points, ignoring height.

AngleBetweenPoints=Angle Between Points
AngleBetweenPoints="Angle from ",~Point," to ",~Point
AngleBetweenPointsHint=Returns the angle of a line from one point to another.

RMinBJ=Min
RMinBJ="Min(",~Value 1,", ",~Value 2,")"

RMaxBJ=Max
RMaxBJ="Max(",~Value 1,", ",~Value 2,")"

RAbsBJ=Abs
RAbsBJ="Abs(",~Value,")"
RAbsBJHint=Calculates the absolute value of a number.

RSignBJ=Sign
RSignBJ="Sign(",~Value,")"
RSignBJHint=Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1.

ModuloReal=Modulo
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint=Calculates the remainder of a division.  Example: 9.0 mod 2.5 = 1.5.

Pow=Power
Pow="Power(",~Value,", ",~Power,")"

SquareRoot=Square Root
SquareRoot="Square root(",~Value,")"

SinBJ=Sine
SinBJ="Sin(",~Angle,")"
SinBJHint=The angle specified is expected to be in degrees.

CosBJ=Cosine
CosBJ="Cos(",~Angle,")"
CosBJHint=The angle specified is expected to be in degrees.

TanBJ=Tangent
TanBJ="Tan(",~Angle,")"
TanBJHint=The angle specified is expected to be in degrees.

AsinBJ=Arcsine
AsinBJ="Asin(",~Value,")"
AsinBJHint=The angle returned is in degrees.

AcosBJ=Arccosine
AcosBJ="Acos(",~Value,")"
AcosBJHint=The angle returned is in degrees.

AtanBJ=Arctangent (From Angle)
AtanBJ="Atan(",~Value,")"
AtanBJHint=The angle returned is in degrees.

Atan2BJ=Arctangent (From Deltas)
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint=The angle returned is in degrees.

GetPlayerHandicapXPBJ=Experience Rate
GetPlayerHandicapXPBJ=~Player," experience rate"
GetPlayerHandicapXPBJHint=Experience rates are specified as percentages, with 100% being normal.

GetPlayerHandicapBJ=Handicap
GetPlayerHandicapBJ=~Player," handicap"
GetPlayerHandicapBJHint=Handicap values are specified as percentages, with 100% being normal.

GetRectCenterX=Center X Of Rect
GetRectCenterX="Center X of ",~Rect

GetRectCenterY=Center Y Of Rect
GetRectCenterY="Center Y of ",~Rect

GetRectMinX=Min X Of Rect
GetRectMinX="Min X of ",~Rect

GetRectMinY=Min Y Of Rect
GetRectMinY="Min Y of ",~Rect

GetRectMaxX=Max X Of Rect
GetRectMaxX="Max X of ",~Rect

GetRectMaxY=Max Y Of Rect
GetRectMaxY="Max Y of ",~Rect

GetRectWidthBJ=Width Of Rect
GetRectWidthBJ="Width of ",~Rect

GetRectHeightBJ=Height Of Rect
GetRectHeightBJ="Height of ",~Rect

GetSoundDurationBJ=Sound Length
GetSoundDurationBJ="Length of ",~Sound
GetSoundDurationBJHint=This returns the duration of a sound, in seconds.

GetSoundFileDurationBJ=Music Length
GetSoundFileDurationBJ="Length of ",~Music
GetSoundFileDurationBJHint=This returns the duration of a music score, in seconds.

GetUnitStateSwap=Property
GetUnitStateSwap=~Property," of ",~Unit

GetUnitLifePercent=Percentage Life
GetUnitLifePercent="Percentage life of ",~Unit

GetUnitManaPercent=Percentage Mana
GetUnitManaPercent="Percentage mana of ",~Unit

GetUnitFacing=Facing Angle
GetUnitFacing="Facing of ",~Unit
GetUnitFacingHint=The angle returned is in degrees, with 0 facing east.

GetUnitMoveSpeed=Movement Speed (Current)
GetUnitMoveSpeed="Current movement speed of ",~Unit
GetUnitMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitDefaultMoveSpeed=Movement Speed (Default)
GetUnitDefaultMoveSpeed="Default movement speed of ",~Unit
GetUnitDefaultMoveSpeedHint=Movement speeds commonly range from 150 to 300.

GetUnitAcquireRange=Acquisition Range (Current)
GetUnitAcquireRange="Current acquisition range of ",~Unit

GetUnitDefaultAcquireRange=Acquisition Range (Default)
GetUnitDefaultAcquireRange="Default acquisition range of ",~Unit

GetUnitTurnSpeed=Turn Speed (Current)
GetUnitTurnSpeed="Current turn speed of ",~Unit
GetUnitTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitDefaultTurnSpeed=Turn Speed (Default)
GetUnitDefaultTurnSpeed="Default turn speed of ",~Unit
GetUnitDefaultTurnSpeedHint=A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates.

GetUnitPropWindowBJ=Prop Window Angle (Current)
GetUnitPropWindowBJ="Current prop window angle of ",~Unit

GetUnitDefaultPropWindowBJ=Prop Window Angle (Default)
GetUnitDefaultPropWindowBJ="Default prop window angle of ",~Unit

GetUnitFlyHeight=Flying Height (Current)
GetUnitFlyHeight="Current flying height of ",~Unit
GetUnitFlyHeightHint=Only flying units use flying heights.

GetUnitDefaultFlyHeight=Flying Height (Default)
GetUnitDefaultFlyHeight="Default flying height of ",~Unit

GetUnitX=X Of Unit
GetUnitX="X of ",~Unit
GetUnitXHint=[UMSWE]

GetUnitY=Y Of Unit
GetUnitY="Y of ",~Unit
GetUnitYHint=[UMSWE]

                       =JASS Code
                       =~Script Code"
                       Hint=Enter JASS code that returns a Real value. Example: MyReal() [UMSWE]

LoadRectHandleBJ=Load Rect Handle
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint=If the label is not found, this function returns NULL.

GetCurrentCameraBoundsMapRectBJ=Current Camera Bounds
GetCurrentCameraBoundsMapRectBJ="Current camera bounds"
GetCurrentCameraBoundsMapRectBJHint=This is the area to which the camera target is currently restricted.

GetCameraBoundsMapRect=Initial Camera Bounds
GetCameraBoundsMapRect="Initial camera bounds"
GetCameraBoundsMapRectHint=This is the area to which the camera target is restricted at map initialization.

GetPlayableMapRect=Playable Map Area
GetPlayableMapRect="Playable map area"
GetPlayableMapRectHint=This is the area to which units are restricted.  This area typically extends just beyond the camera bounds.

GetEntireMapRect=Entire Map
GetEntireMapRect="Entire map"
GetEntireMapRectHint=This is the entire map, including areas which cannot normally be reached by units.

OffsetRectBJ=Region With Offset
OffsetRectBJ=~Region," offset by (",~X,", ",~Y,")"
OffsetRectBJHint=The offset values are (X, Y).

RectFromCenterSizeBJ=Convert Point With Size To Region
RectFromCenterSizeBJ="Region centered at ",~Point," with size (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint=The size values are (Width, Height).

Rect=Convert Coordinates To Region
Rect="Region(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint=Choose four coordinates (min X, min Y, max X, max Y) to define a rectangular region on the map.

RectFromLoc=Convert Points To Region
RectFromLoc="Region(",~Point 1,", ",~Point 2,")"
RectFromLocHint=Choose two points to define a rectangular region on the map.

                        =JASS Code
                        =~Script Code"
                        Hint=Enter JASS code that returns a rect value. Example: MyRect() [UMSWE]

LoadSoundHandleBJ=Load Sound Handle
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint=If the label is not found, this function returns NULL.

GetLastPlayedSound=Last Played Sound
GetLastPlayedSound="Last played sound"
GetLastPlayedSoundHint=This is the last sound played via a 'Sound - Play Sound' or 'Cinematic - Transmission' trigger action.

LoadEffectHandleBJ=Load Effect Handle
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedEffectBJ=Last Created Special Effect
GetLastCreatedEffectBJ="Last created special effect"

AddSpecialEffectLoc=Create Special Effect at Point
AddSpecialEffectLoc="Create a special effect using ",~Model File," at ",~Point
AddSpecialEffectLocHint=[UMSWE]

AddSpecialEffect=Create Special Effect at Off-set
AddSpecialEffect="Crate a special effect using ",~Model File," at ",~X," , ",~Y
AddSpecialEffectHint=[UMSWE]

AddSpecialEffectTarget=Create Special Effect at target unit
AddSpecialEffectTarget="Create a special effect using ",~Model File," On ",~Unit," 's ",~Attachment Point
AddSpecialEffectTargetHint=[UMSWE]

                          =JASS Code
                          =~Script Code"
                          Hint=Enter JASS code that returns a special effect. Example: MyEffect() [UMSWE]

AddSpellEffectByIdLoc=Create Spell Effect At Point
AddSpellEffectByIdLoc="Create a special effect using ",~Ability," 's ",~art," at ",~Point
AddSpellEffectByIdLocHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectById=Create Spell Effect At off-set
AddSpellEffectById="Create a special effect using ",~Ability," 's ",~art," at ",~X," , ",~Y
AddSpellEffectByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

AddSpellEffectTargetById=Create Spell Effect On Unit
AddSpellEffectTargetById="Create a special effect using ",~Ability," 's ",~art," on ",~Unit," 's ",~Attachment Point
AddSpellEffectTargetByIdHint=Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]

LoadStringBJ=Load String Value (hashtable)
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint=If the label is not found, this function returns an empty string.

OperatorString=Concatenate Strings
OperatorString=~String 1," + ",~String 2

SubStringBJ=Substring
SubStringBJ="Substring(",~String,", ",~Start,", ",~End,")"
SubStringBJHint=Example:  Substring(''Grunts stink'', 2, 4) = ''run''.

I2S=Convert Integer To String
I2S="String(",~Integer,")"

R2S=Convert Real To String
R2S="String(",~Real,")"

R2SW=Convert Real To Formatted String
R2SW="String(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint=Examples:  String(1.234, 7, 2) = ''   1.23''.  String(1.234, 2, 5) = ''1.23400''.

OrderId2StringBJ=Convert Order To String
OrderId2StringBJ="String(",~Order,")"
OrderId2StringBJHint=Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''.

UnitId2StringBJ=Convert Unit-Type To String
UnitId2StringBJ="String(",~Unit-Type,")"

StringIdentity=Convert Externalized String
StringIdentity="Externalized string(",~String,")"
StringIdentityHint=Use this to make sure the given string will be externalized in the map string file (war3map.wts).

StringCase=Convert String Case
StringCase="String(",~String,") as ",~Lower/Upper Case
StringCaseHint=All letters in the string will be changed to the selected case.

GetDestructableName=Destructible Name
GetDestructableName="Name of ",~Destructible

GetEventPlayerChatString=Entered Chat String
GetEventPlayerChatString="Entered chat string"

GetEventPlayerChatStringMatched=Matched Chat String
GetEventPlayerChatStringMatched="Matched chat string"

GetSaveBasicFilename=Saved-Game Filename
GetSaveBasicFilename="Saved-game filename"
GetSaveBasicFilenameHint=When responding to a 'Game - Game Save' event, this refers to the name of the file being saved.

GetAbilityName=Ability Name
GetAbilityName="Name of ",~Ability

GetAbilityEffectBJ=Ability Effect Art Path
GetAbilityEffectBJ="Art path of ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint=This returns the model file path of an ability's effect art.

GetAbilitySoundBJ=Ability Effect Sound Name
GetAbilitySoundBJ="Name of ",~Ability," ",~SoundType

GetStoredStringBJ=Load String Value
GetStoredStringBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredStringBJHint=If the label is not found, this function returns an empty string.

GetHeroProperName=Hero Proper Name
GetHeroProperName="Proper name of ",~Hero
GetHeroProperNameHint=Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin).

GetItemName=Item Name
GetItemName="Name of ",~Item

MultiboardGetTitleText=Multiboard Title
MultiboardGetTitleText="Title of ",~Multiboard

GetPlayerName=Player Name
GetPlayerName="Name of ",~Player

GetTriggerName=Trigger Name
GetTriggerName="Name of the current trigger"
GetTriggerNameHint=Returns the name, as entered in the editor, of the trigger which contains this function.

GetUnitName=Unit Name
GetUnitName="Name of ",~Unit
GetUnitNameHint=This returns the internal name of a unit, not the proper name of units or Heroes.

GetAbilityEffectById=Buff Effect Art By Id
GetAbilityEffectById=~Buff," effect ",~EffectType," ",~Index
GetAbilityEffectByIdHint=[UMSWE]

GetAbilitySoundById=Ability Effect Sound By Id
GetAbilitySoundById=~Ability," sound ",~SoundType
GetAbilitySoundByIdHint=[UMSWE]

LeaderboardGetLabelText=Title
LeaderboardGetLabelText="Title of ",~Leaderboard
LeaderboardGetLabelTextHint=[UMSWE]

                           =JASS Code
                           =~Script Code"
                           Hint=Enter JASS code that returns a String. Example: MyString() [UMSWE]

GetResearched=Researched Tech-Type
GetResearched="Researched tech-type"
GetResearchedHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched.

GetLastCreatedTerrainDeformation=Last Created Terrain Deformation
GetLastCreatedTerrainDeformation="Last created terrain deformation"
GetLastCreatedTerrainDeformationHint=This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions.

                            =JASS Code
                            =~Script Code"
                            Hint=Enter JASS code that returns terrain deformation. Example: MyTerrainDeformation() [UMSWE]

GetTerrainTypeBJ=Terrain Type
GetTerrainTypeBJ="Terrain type at ",~Location

LoadTimerHandleBJ=Load Timer Handle
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerBJ=Last Started Timer
GetLastCreatedTimerBJ="Last started timer"
GetLastCreatedTimerBJHint=This is the last timer started via a 'Countdown Timer - Start Timer' trigger action.

GetExpiredTimer=Expiring Timer
GetExpiredTimer="Expiring timer"
GetExpiredTimerHint=When responding to a 'Time - Timer Expires' event, this refers to the timer that is expiring.

CreateTimer=Create Timer
CreateTimer="Create Timer"
CreateTimerHint=Use this to initialize timer array items [UMSWE]

CreateTimerBJ=Create Timer
CreateTimerBJ="Create a periodic ",~Choose," timer lasting ",~time
CreateTimerBJHint=[UMSWE]

                             =JASS Code
                             =~Script Code"
                             Hint=Enter JASS code that returns a Timer. Example: MyTimer() [UMSWE]

LoadTimerDialogHandleBJ=Load Timerdialog Handle
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedTimerDialogBJ=Last Created Timer Window
GetLastCreatedTimerDialogBJ="Last created timer window"
GetLastCreatedTimerDialogBJHint=This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action.

                              =JASS Code
                              =~Script Code"
                              Hint=Enter JASS code that returns a Timer Window value. Example: MyTimerDialog() [UMSWE]

LoadTriggerHandleBJ=Load Trigger Handle
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint=If the label is not found, this function returns NULL.

GetTriggeringTrigger=This Trigger
GetTriggeringTrigger="This trigger"

CreateTrigger=Create Trigger
CreateTrigger="Create Trigger"
CreateTriggerHint=Use this to initialize trigger arrays [UMSWE]

                               =JASS Code
                               =~Script Code"
                               Hint=Enter JASS code that returns a Trigger. Example: MyTrigger() [UMSWE]

LoadUbersplatHandleBJ=Load Ubersplat Handle
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUbersplat=Last Created Ubersplat
GetLastCreatedUbersplat="Last created ubersplat"

 =JASS Code
 =~Script Code"
 Hint=Enter JASS code that returns an ubersplat. Example: MyUbersplat() [UMSWE]

LoadUnitHandleBJ=Load Unit Handle
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedUnit=Last Created Unit
GetLastCreatedUnit="Last created unit"
GetLastCreatedUnitHint=This is the last unit created via a 'Unit - Create' trigger action.

GetLastRestoredUnitBJ=Last Restored Unit
GetLastRestoredUnitBJ="Last restored unit"
GetLastRestoredUnitBJHint=This is the last unit restored via a 'Game Cache - Restore Unit' trigger action.

GetLastReplacedUnitBJ=Last Replaced Unit
GetLastReplacedUnitBJ="Last replaced unit"
GetLastReplacedUnitBJHint=This is the last unit created via a 'Unit - Replace' trigger action.

GetLastHauntedGoldMine=Last Haunted Gold Mine
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMineHint=This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action.

GetEnumUnit=Picked Unit
GetEnumUnit="Picked unit"
GetEnumUnitHint=When using the 'Pick Every Unit...' action, this refers to each unit as it is picked.

GetFilterUnit=Matching Unit
GetFilterUnit="Matching unit"
GetFilterUnitHint=Use this to refer to the unit being considered for 'Units Matching Condition' functions.

GroupPickRandomUnit=Random Unit From Unit Group
GroupPickRandomUnit="Random unit from ",~Unit Group

GetAttackedUnitBJ=Attacked Unit
GetAttackedUnitBJ="Attacked unit"
GetAttackedUnitBJHint=When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked.

GetAttacker=Attacking Unit
GetAttacker="Attacking unit"
GetAttackerHint=When responding to an 'Is Attacked' unit event, this refers to the attacking unit.

GetBuyingUnit=Buying Unit
GetBuyingUnit="Buying unit"
GetBuyingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying.

GetCancelledStructure=Cancelled Structure
GetCancelledStructure="Cancelled structure"
GetCancelledStructureHint=When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled.

GetSpellAbilityUnit=Casting Unit
GetSpellAbilityUnit="Casting unit"
GetSpellAbilityUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability.

GetConstructingStructure=Constructing Structure
GetConstructingStructure="Constructing structure"
GetConstructingStructureHint=When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun.

GetConstructedStructure=Constructed Structure
GetConstructedStructure="Constructed structure"
GetConstructedStructureHint=When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished.

GetEventDamageSource=Damage Source
GetEventDamageSource="Damage source"
GetEventDamageSourceHint=When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt.

GetDecayingUnit=Decaying Unit
GetDecayingUnit="Decaying unit"
GetDecayingUnitHint=When responding to a 'Decays' unit event, this refers to the unit that is decaying.

GetDyingUnit=Dying Unit
GetDyingUnit="Dying unit"
GetDyingUnitHint=When responding to a 'Dies' unit event, this refers to the unit that is dying.

GetEnteringUnit=Entering Unit
GetEnteringUnit="Entering unit"
GetEnteringUnitHint=When responding to a 'Unit Enters Region' unit event, this refers to the unit entering the region.

GetManipulatingUnit=Hero Manipulating Item
GetManipulatingUnit="Hero manipulating item"
GetManipulatingUnitHint=When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item.

GetKillingUnitBJ=Killing Unit
GetKillingUnitBJ="Killing unit"
GetKillingUnitBJHint=When responding to a 'Dies' unit event, this refers to the killer of the dying unit.  In cases where a unit dies from a source other than a killing unit, this returns 'No unit'.

GetLearningUnit=Learning Hero
GetLearningUnit="Learning Hero"
GetLearningUnitHint=When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill.

GetLeavingUnit=Leaving Unit
GetLeavingUnit="Leaving unit"
GetLeavingUnitHint=When responding to a 'Unit Leaves Region' event, this refers to the unit leaving the region.

GetLevelingUnit=Leveling Hero
GetLevelingUnit="Leveling Hero"
GetLevelingUnitHint=When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level.

GetLoadedUnitBJ=Loading Unit
GetLoadedUnitBJ="Loading unit"
GetLoadedUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded.

GetOrderedUnit=Ordered Unit
GetOrderedUnit="Ordered unit"
GetOrderedUnitHint=When responding to an 'Is Issued An Order' unit event, this refers to the unit receiving the order.

GetChangingUnit=Ownership-Changed Unit
GetChangingUnit="Ownership-changed unit"
GetChangingUnitHint=When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed.

GetResearchingUnit=Researching Unit
GetResearchingUnit="Researching unit"
GetResearchingUnitHint=When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the unit doing the research.

GetRevivableUnit=Revivable Hero
GetRevivableUnit="Revivable Hero"
GetRevivableUnitHint=When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival.

GetRevivingUnit=Reviving Hero
GetRevivingUnit="Reviving Hero"
GetRevivingUnitHint=When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived.

GetSellingUnit=Selling Unit
GetSellingUnit="Selling unit"
GetSellingUnitHint=When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the selling.

GetSoldUnit=Sold Unit
GetSoldUnit="Sold unit"
GetSoldUnitHint=When responding to a 'Sells A Unit' unit event, this refers to the unit being sold.

GetSummonedUnit=Summoned Unit
GetSummonedUnit="Summoned unit"
GetSummonedUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit being summoned.

GetSummoningUnit=Summoning Unit
GetSummoningUnit="Summoning unit"
GetSummoningUnitHint=When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit spawning the summoned unit.

GetOrderTargetUnit=Target Unit Of Issued Order
GetOrderTargetUnit="Target unit of issued order"
GetOrderTargetUnitHint=When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order.

GetSpellTargetUnit=Target Unit Of Ability Being Cast
GetSpellTargetUnit="Target unit of ability being cast"
GetSpellTargetUnitHint=When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast.

GetEventTargetUnit=Targeted Unit
GetEventTargetUnit="Targeted unit"
GetEventTargetUnitHint=When responding to an 'Acquires A Target' unit event, this refers to the target being acquired.

GetTrainedUnit=Trained Unit
GetTrainedUnit="Trained unit"
GetTrainedUnitHint=When responding to a 'Finishes Training A Unit' unit event, this refers to the unit that was trained.

GetTransportUnitBJ=Transporting Unit
GetTransportUnitBJ="Transporting unit"
GetTransportUnitBJHint=When responding to an 'Is Loaded Into A Transport' unit event, this refers to the transport that loaded the unit.

GetTriggerUnit=Triggering Unit
GetTriggerUnit="Triggering unit"

GetUnitRallyUnit=Rally-Point As Unit
GetUnitRallyUnit="Rally-Point of ",~Unit," as a unit"
GetUnitRallyUnitHint=If the unit does not have a rally-point set to a unit, this will return 'No unit'.

CreateUnit=Create Unit At Offset
CreateUnit="For ",~Player," create a unit of type ",~Type," at offset (",~X,", ",~Y,") facing ",~Direction," degrees"
CreateUnitHint=[UMSWE]

CreateUnitAtLoc=Create Unit At Location
CreateUnitAtLoc="For ",~Player," create a unit of type ",~Type," at location ",~Location," facing ",~Direction," degrees"
CreateUnitAtLocHint=[UMSWE]

GetDetectedUnit=Get Detected Unit
GetDetectedUnit="Get detected unit"
GetDetectedUnitHint=Event response for the unit detected event [UMSWE]

GetRescuer=Rescuing Unit
GetRescuer="Get rescuing unit"
GetRescuerHint=For unis is rescued event [UMSWE]

FirstOfGroup=First Unit of Group
FirstOfGroup="First unit of group ",~Group
FirstOfGroupHint=[UMSWE]

                                  =JASS Code
                                  =~Script Code"
                                  Hint=Enter JASS code that returns an unit (~=handle). Example: MyUnit() [UMSWE]

LoadGroupHandleBJ=Load Group Handle
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedGroup=Last Created Unit Group
GetLastCreatedGroup="Last created unit group"
GetLastCreatedGroupHint=This is the last set of units created via a 'Unit - Create' trigger action.

GetRandomSubGroup=Random N Units From Unit Group
GetRandomSubGroup="Random ",~Count," units from ",~Unit Group

GetUnitsInRectAll=Units In Region
GetUnitsInRectAll="Units in ",~Region

GetUnitsInRectOfPlayer=Units In Region Owned By Player
GetUnitsInRectOfPlayer="Units in ",~Region," owned by ",~Player

GetUnitsInRectMatching=Units In Region Matching Condition
GetUnitsInRectMatching="Units in ",~Region," matching ",~Condition
GetUnitsInRectMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsInRangeOfLocAll=Units In Range
GetUnitsInRangeOfLocAll="Units within ",~Radius," of ",~Point

GetUnitsInRangeOfLocMatching=Units In Range Matching Condition
GetUnitsInRangeOfLocMatching="Units within ",~Radius," of ",~Point," matching ",~Condition
GetUnitsInRangeOfLocMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfPlayerAll=Units Owned By Player
GetUnitsOfPlayerAll="Units owned by ",~Player

GetUnitsOfPlayerAndTypeId=Units Owned By Player Of Type
GetUnitsOfPlayerAndTypeId="Units owned by ",~Player," of type ",~Unit-Type

GetUnitsOfPlayerMatching=Units Owned By Player Matching Condition
GetUnitsOfPlayerMatching="Units owned by ",~Player," matching ",~Condition
GetUnitsOfPlayerMatchingHint=Use 'Matching Unit' to refer to the unit on whom the comparison is being performed.

GetUnitsOfTypeIdAll=Units Of Type
GetUnitsOfTypeIdAll="Units of type ",~Unit-Type

GetUnitsSelectedAll=Units Selected
GetUnitsSelectedAll="Units currently selected by ",~Player
GetUnitsSelectedAllHint=This should not be used in trigger conditions.

CreateGroup=Create Unit Group
CreateGroup="Create Unit Group"
CreateGroupHint=Use this to initialize unit group arrays [UMSWE]

                                   =JASS Code
                                   =~Script Code"
                                   Hint=Enter JASS code that returns an Unit Group. Example: MyGroup() [UMSWE]

GetUnitTypeId=Unit-Type Of Unit
GetUnitTypeId="Unit-type of ",~Unit

ChooseRandomCreepBJ=Random Creep Unit-Type
ChooseRandomCreepBJ="Random level ",~Level," creep unit-type"
ChooseRandomCreepBJHint=Use -1 for any level.

ChooseRandomNPBuildingBJ=Random Neutral Building Unit-Type
ChooseRandomNPBuildingBJ="Random neutral building unit-type"

String2UnitIdBJ=Convert String To Unit-Type
String2UnitIdBJ="Unit-type(",~String,")"

GetTrainedUnitType=Trained Unit-Type
GetTrainedUnitType="Trained unit-type"
GetTrainedUnitTypeHint=When responding to 'Begins/Cancels/Finishes Training A Unit' unit events, this refers to the unit-type of the unit that is being trained.

                                    =JASS Code
                                    =~Script Code"
                                    Hint=Enter JASS code that returns an Unit Type (integer). Example: 'hpea' [UMSWE]

LoadFogModifierHandleBJ=Load Fogmodifier Handle
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint=If the label is not found, this function returns NULL.

GetLastCreatedFogModifier=Last Created Visibility Modifier
GetLastCreatedFogModifier="Last created visibility modifier"
GetLastCreatedFogModifierHint=This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action.

GetLastCreatedWeatherEffect=Last Created Weather Effect
GetLastCreatedWeatherEffect="Last created weather effect"
GetLastCreatedWeatherEffectHint=This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action.

TriggerRegisterVariableEvent=Add Variable Event
TriggerRegisterVariableEvent="Add the following variable event to ",~Trigger,": ",~Variable," ",~Operator," ",~Value
TriggerRegisterVariableEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterTimerExpireEvent=Add Timer Expires Event
TriggerRegisterTimerExpireEvent="Add the following timer expires event to ",~Trigger,": ",~Timer," expires"
TriggerRegisterTimerExpireEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogEvent=Add Dialog Event
TriggerRegisterDialogEvent="Add the following dialog event to ",~Trigger,": A button in ",~Dialog," was clicked"
TriggerRegisterDialogEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDialogButtonEvent=Add Dialog Button Clicked Event
TriggerRegisterDialogButtonEvent="Add the following dialog event to ",~Trigger,": ",~Button," was clicked"
TriggerRegisterDialogButtonEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterGameEvent=Add Game Event
TriggerRegisterGameEvent="Add the following game event to ",~Trigger,": Game Event: ",~GameEventOption
TriggerRegisterGameEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterEnterRegion=Add Unit Enters Rect (Conditional) Event
TriggerRegisterEnterRegion="Add the following unit enters rect (conditional) event to ",~Trigger,": A unit enters ",~Rect," Matching: ",~Condition
TriggerRegisterEnterRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterLeaveRegion=Add Unit Leaves Rect (Conditional) Event
TriggerRegisterLeaveRegion="Add the following unit leaves rect (conditional) event to ",~Trigger,": A unit leaves ",~Rect," Matching: ",~Condition
TriggerRegisterLeaveRegionHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerEvent=Add Player Event
TriggerRegisterPlayerEvent="Add the following player event to ",~Trigger,": ",~Player," ",~PlayerEventOption
TriggerRegisterPlayerEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEventSimple=Add Player-Owned Unit Event
TriggerRegisterPlayerUnitEventSimple="Add the following player-owned unit event to ",~Trigger,": A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerUnitEvent=Add Player-Owned Unit Event (Conditional)
TriggerRegisterPlayerUnitEvent="Add the following player-owned unit (conditional) event to ",~Trigger,": A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerStateEvent=Add Player Property Event
TriggerRegisterPlayerStateEvent="Add the following player property event to ",~Trigger,": ",~Player," ",~PlayerState," ",~Operator," ",~Integer
TriggerRegisterPlayerStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterPlayerChatEvent=Add Chat Message Event
TriggerRegisterPlayerChatEvent="Add the following chat message event to ",~Trigger,": ",~Player," sends a mesage containing ",~String," as ",~Match Type
TriggerRegisterPlayerChatEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterDeathEvent=Add Destructible Doodad Dies Event
TriggerRegisterDeathEvent="Add the following destructible doodad event to ",~Trigger,": ",~Destructible Doodad," dies"
TriggerRegisterDeathEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitStateEvent=Add Unit State Event
TriggerRegisterUnitStateEvent="Add the following unit state event to ",~Trigger,": ",~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitEvent=Add Specific Unit Event
TriggerRegisterUnitEvent="Add the following specific unit event event to ",~Trigger,": ",~Unit," ",~UnitEvent
TriggerRegisterUnitEventHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

TriggerRegisterUnitInRangeSimple=Add Unit In Range Event
TriggerRegisterUnitInRangeSimple="Add the following unit in range event to ",~Trigger,": A unit comes within ",~Real," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint=Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]

LoadTriggerConditionHandleBJ=Load Triggercondition Handle
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint=If the label is not found, this function returns NULL.

                                 =JASS Code
                                 =~Script Code"
                                 Hint=Enter JASS code that returns a Trigger Condition. Example: MyTriggerCondition() [UMSWE]

TriggerAddCondition=Add Condtion
TriggerAddCondition="Take ",~Trigger," and add the condition ",~Condition
TriggerAddConditionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Condition'. [UMSWE]

LoadTriggerActionHandleBJ=Load Triggeraction Handle
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint=If the label is not found, this function returns NULL.

                                =JASS Code
                                =~Script Code"
                                Hint=Enter JASS code that returns a Trigger Action. Example: MyTriggerAction() [UMSWE]

TriggerAddAction=Add Action
TriggerAddAction="Take ",~Trigger," and add the action ",~Action
TriggerAddActionHint=Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Action'. [UMSWE]

LoadBooleanExprHandleBJ=Load Boolexpr Handle
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint=If the label is not found, this function returns NULL.

GetEventPlayerState=Get Triggering Player State
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerStateHint=To see, which playerstate event fired the trigger [UMSWE]

GetEventUnitState=Get Triggering Unit State
GetEventUnitState="Get triggering unit state"
GetEventUnitStateHint=To see, which unitstate event fired the trigger [UMSWE]

GetGameDifficulty=Difficulty Level
GetGameDifficulty="Difficulty level"

GetAIDifficulty=Melee AI Of Player
GetAIDifficulty="Melee AI of ",~Player

GetPlayerController=Player Controller
GetPlayerController=~Player," controller"

GetPlayerSlotState=Player Slot Status
GetPlayerSlotState=~Player," slot status"

LoadFogStateHandleBJ=Load Fogstate Handle
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint=If the label is not found, this function returns NULL.

GetLearnedSkillBJ=Learned Hero Skill
GetLearnedSkillBJ="Learned Hero Skill"

                                      =JASS Code
                                      =~Script Code"
                                      Hint=Enter JASS code that returns a Hero Skill (integer). Example: 'AHbz' [UMSWE]

exitwhen=exitwhen
exitwhen="exitwhen ",~Condition
exitwhenHint=Used between loop and endloop, specifies when to exit the loop (only works with the Custom Script action) [UMSWE]

GetLastPlayedMusic=Last Played Music
GetLastPlayedMusic="Last played music"
GetLastPlayedMusicHint=This is the last music played via a 'Sound - Play Music' trigger action.

                                     =JASS Code
                                     =~Script Code"
                                     Hint=Enter JASS code that returns a Music file path (string). Use ; to separate paths if you are reffering to a music list. Example: MyMusic() [UMSWE]

GetTriggerEventId=Event ID
GetTriggerEventId="Last Fired Event"
GetTriggerEventIdHint=Returns the last fired event [UMSWE]

           =JASS Code
           =~Script Code"
           Hint=Enter JASS code that returns an eventid value. Example: MyEventid() [UMSWE]

                  =JASS Code
                  =~Script Code"
                  Hint=Enter JASS code that returns a Multiboard Item. Example: MyMultiboardItem() [UMSWE]

MultiboardGetItem=Create Multiboard Item
MultiboardGetItem="Create a new multiboard item for multiboard ",~board," in row ",~Row," and column ",~Column
MultiboardGetItemHint=Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]

CreateRegion=Create Region
CreateRegion="Create a empty region"
CreateRegionHint=Used to create empty regions to which you can add cells [UMSWE]

GetTriggeringRegion=Get Triggering Region
GetTriggeringRegion="Get triggering region"
GetTriggeringRegionHint=Event response for unit enters/leaves region events [UMSWE]

                         =JASS Code
                         =~Script Code"
                         Hint=Enter JASS code that returns a region value. Example: MyRegion() [UMSWE]

CreateTrackable=Create Trackable Object
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint=You can register mouseover and mouseclick events on the object but can't remove it anymore. [UMSWE]

GetTriggeringTrackable=Triggering Trackable
GetTriggeringTrackable="Triggering trackable"
GetTriggeringTrackableHint=[UMSWE]

    =JASS Code
    =~Script Code"
    Hint=Enter JASS code that returns a trackable object. Example: MyTrackable() [UMSWE]

GetEventGameState=Get Triggering Game State
GetEventGameState="Triggering Game State"
GetEventGameStateHint=To see, which gamestate event fired the trigger [UMSWE]


[AIFunctionStrings]
TownThreatened="Town Is Under Attack"
TownThreatened="Town is under attack"
TownThreatenedHint=""
TownHasMine="Town Has Mine"
TownHasMine="Town #",~Town," has an active gold mine"
TownHasHall="Town Has Hall"
TownHasHall="Town #",~Town," has a town hall building"
CaptainIsHome="Attack Captain Is At Home"
CaptainIsHome="Attack captain is at home"
CaptainIsFull="Attack Group Is Complete"
CaptainIsFull="Attack group is complete"
CaptainIsEmpty="Attack Group Is Empty"
CaptainIsEmpty="Attack group is empty"
CaptainRetreating="Attack Captain Is Retreating"
CaptainRetreating="Attack captain is retreating"
CaptainAtGoal="Attack Captain Is At Goal"
CaptainAtGoal="Attack captain is at goal"
CaptainInCombat="Captain Is In Combat"
CaptainInCombat=~Captain Type," captain is in combat"
CreepsOnMap="Creeps Exist Anywhere"
CreepsOnMap="Creeps exist anywhere on the map"
ExpansionNeeded="Expansion Spot Needed"
ExpansionNeeded="Expansion spot needed"
ExpansionNeededHint="Returns true if the AI needs to build an expansion but there are currently no open spots."
GetUnitCount="Total Units of Type"
GetUnitCount="Total number of ",~Unit Type," units"
GetUnitCountHint="This count includes units currently being trained or constructed."
GetUnitCountDone="Total Units of Type - Completed Only"
GetUnitCountDone="Total number of ",~Unit Type," units completed"
GetUnitCountDoneHint="This count does NOT include units currently being trained or constructed."
GetTownUnitCount="Total Units of Type - By Town"
GetTownUnitCount="Total number of ",~Unit Type," units in town #",~Town," (completed only: ",~Option,")"
GetTownUnitCountHint=""
GetMinesOwned="Number of Mines Owned"
GetMinesOwned="Number of mines owned"
GetMinesOwnedHint="The total number of mines currently in use by the AI player."
GetGoldOwned="Total Unmined Gold Owned"
GetGoldOwned="Total unmined gold owned"
GetGoldOwnedHint="The total amount of gold remaining in all mines currently in use."
TownWithMine="Town With Mine"
TownWithMine="Town with a gold mine"
TownWithMineHint="Returns the ID of the first town with an active gold mine"
GetGold="Current Gold Amount"
GetGold="Current gold amount"
GetGoldHint="The amount of gold currently owned by the AI player"
GetWood="Current Lumber Amount"
GetWood="Current lumber amount"
GetWoodHint="The amount of lumber currently owned by the AI player"
GetUnitGoldCost="Gold Cost of Unit"
GetUnitGoldCost="Gold cost of ",~Unit Type
GetUnitWoodCost="Lumber Cost of Unit"
GetUnitWoodCost="Lumber cost of ",~Unit Type
GetUnitBuildTime="Build Time of Unit"
GetUnitBuildTime="Build time of ",~Unit Type
GetUnitBuildTimeHint="Build time is in seconds."
GetUpgradeLevel="Current Upgrade Level"
GetUpgradeLevel="Upgrade level of ",~Upgrade Type
GetUpgradeGoldCost="Gold Cost of Upgrade"
GetUpgradeGoldCost="Gold cost of the next ",~Upgrade Type," upgrade"
GetUpgradeWoodCost="Lumber Cost of Upgrade"
GetUpgradeWoodCost="Lumber cost of the next ",~Upgrade Type," upgrade"
GetNextExpansion="Next Expansion Town"
GetNextExpansion="Next expansion town"
GetNextExpansionHint="Returns the town ID for the next expansion location"
FoodUsed="Food Used"
FoodUsed="Food used"
FoodUsedHint="The total amount of food currently being used by the AI player"
TotalFoodProduced="Food Produced"
TotalFoodProduced="Food produced"
TotalFoodProducedHint="The total amount of food currently produced by the AI player"
GetFoodMade="Food Produced By Unit"
GetFoodMade="Food produced by ",~Unit Type," units"
CommandsWaiting="Commands Waiting"
CommandsWaiting="Number of commands waiting"
CommandsWaitingHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommand="Last Command"
CheckLastCommand="Last command sent, ",~Option," the command"
CheckLastCommandHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommandData="Last Command Data"
CheckLastCommandData="Last command data sent, ",~Option," the command"
CheckLastCommandDataHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CaptainGroupSize="Attack Group Size"
CaptainGroupSize="Attack group size"
CaptainGroupSizeHint="The current number of units in the attack group."
CaptainReadinessHP="Attack Group Health Level"
CaptainReadinessHP="Attack group health level"
CaptainReadinessHPHint="The health level is an estimation of the average attack group health, with 100 being full."
CaptainReadinessMa="Attack Group Mana Level"
CaptainReadinessMa="Attack group mana level"
CaptainReadinessMaHint="The mana level is an estimation of the average attack group mana, with 100 being full."
CurrentAttackWave="Current Attack Wave"
CurrentAttackWave="Current attack wave"
CurrentAttackWaveHint="Attack waves are defined in the attack wave list in the Attacking tab."
MeleeDifficulty="Melee Difficulty Level"
MeleeDifficulty="Melee difficulty level"
